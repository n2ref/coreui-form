{"version":3,"sources":["coreui-form.min.js"],"names":["global","factory","exports","module","define","amd","CoreUI","form","this","f","window","self","ejs","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","fs","path","utils","scopeOptionWarned","_VERSION_STRING","version","_DEFAULT_LOCALS_NAME","_OPTS_PASSABLE_WITH_DATA","_OPTS_PASSABLE_WITH_DATA_EXPRESS","concat","_BOM","_JS_IDENTIFIER","resolvePaths","name","paths","filePath","some","v","resolveInclude","existsSync","handleCache","options","template","func","filename","hasTemplate","arguments","cache","get","fileLoader","toString","replace","compile","set","includeFile","opts","shallowCopy","createNullProtoObjWherePossible","includePath","views","match","exec","Array","isArray","root","includer","escapeFunction","includerResult","rethrow","err","str","flnm","lineno","esc","lines","split","start","Math","max","end","min","context","slice","map","line","curr","join","message","stripSemi","Template","text","templateText","mode","truncate","currentLine","source","client","escape","escapeXML","compileDebug","debug","openDelimiter","closeDelimiter","delimiter","strict","rmWhitespace","outputFunctionName","localsName","async","destructuredLocals","legacyInclude","_with","regex","createRegex","readFileSync","promiseImpl","Function","Promise","isDir","dirname","extname","resolve","scope","console","warn","render","d","data","shallowCopyFromList","renderFile","cb","result","args","prototype","shift","pop","settings","viewOpts","reject","clearCache","reset","modes","EVAL","ESCAPED","RAW","COMMENT","LITERAL","delim","escapeRegExpChars","open","close","RegExp","fn","prepended","appended","escapeFn","sanitizedFilename","JSON","stringify","generateSource","test","destructuring","src","log","ctor","SyntaxError","returnedFn","apply","includeData","Object","defineProperty","basename","value","writable","enumerable","configurable","matches","parseTemplateText","forEach","index","indexOf","closing","scanLine","firstPos","pat","arr","push","substring","_addOutput","newLineCount","lastIndexOf","__express","VERSION","../package.json","./utils","2","hasOwn","obj","key","hasOwnProperty","regExpChars","_ENCODE_HTML_RULES","string","String","&","<",">","\"","'","_MATCH_HTML","encode_char","escapeXMLToString","markup","undefined","to","from","list","_data","val","remove","hyphenToCamel","toUpperCase","create","__proto__","3","4","process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","resolvedPath","resolvedAbsolute","cwd","TypeError","charAt","normalize","isAbsolute","trailingSlash","substr","relative","trim","fromParts","toParts","samePartsLength","outputParts","sep","hasRoot","charCodeAt","matchedSlash","ext","startDot","startPart","preDotState","len","_process","5","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","marker","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","6","description","keywords","author","license","bin","main","jsdelivr","unpkg","repository","type","url","bugs","homepage","dependencies","jake","devDependencies","browserify","eslint","git-directory-deploy","jsdoc","lru-cache","mocha","uglify-js","engines","node","scripts","let","tpl","coreuiFormUtils$1","getFieldValue","formRecord","getRecord","fieldOptions","getFunctionByName","functionName","namespaces","mergeFieldOptions","defaultOptions","$","attr","mergeAttr","extend","width","_options","fieldWidth","unit","labelWidth","attr2","each","tryHandleCache","getAttacheFields","fields","field","instance","hash","_hash","direction","fieldsDirection","formatDate","templ","day","month","Date","date","getMonth","getDate","year","formatDateTime","getHours","getSeconds","formatDateMonth","lang","getFullYear","date_months","formatDateWeek","isNumeric","num","isNaN","hashCode","crc32","getTime","random","round","number","precision","pow","parseInt","coreuiFormInstance","id","save","method","minWidth","maxWidth","controlsOffset","readonly","validate","errorClass","layout","onSubmit","record","controls","_lock","_fieldsIndex","_groupsIndex","_controlsIndex","_groups","_fields","_controls","_events","_init","coreuiForm$1","getSetting","anonymous","include","initEvents","that","formContainer","_trigger","getId","element","widthSizes","formAttr","matchAll","columns","column","initGroup","initField","columnsContent","keys","fieldContents","initControl","control","show","content","_NAME","html","domElement","document","getElementById","HTMLElement","innerHTML","lock","controlOptions","unlock","getOptions","send","isValid","onsubmit","getData","eval","onSubmitResult","results","isStopSend","ajax","beforeSend","xhr","success","hideError","error","textStatus","errorThrown","errorMessage","getLang","send_error","parsedResponse","parse","responseText","error_message","complete","getValue","getFields","getControls","getGroups","getField","fieldInstance","isReadonly","hide","showControls","hideControls","showError","formError","find","class","dismiss","scroll","scrollOffset","animate","scrollTop","offset","eventName","callback","singleExec","destruct","_instances","renderContent","init","setValue","group","groupInstance","controlInstance","params","_renderControl","_settings","errorMessageScrollOffset","formId","setSettings","ru","modal_select","modal_loading","switch_yes","switch_no","dataset_add","date_week","required_field","repeat","change","cancel","en","button","_form","_index","href","onClick","week","attributes","duration","prepend","_initEvents","click","event","submit","removeAttr","coreuiFormUtils","checkbox","_id","_value","outContent","errorText","required","values","empty","selectedItems","option","prop","itemValue","container","inputs","removeClass","addClass","validText","lastInput","append","invalidText","attachFields","checkboxOptions","itemAttr","optionText","checked","color","label","attach","datalist","custom","input","is","_renderContentReadonly","_renderContent","datalistId","style","itemAttributes","datalistAttr","inline","alloyComponents","components","component","_renderOptions","items","valueY","valueN","serializeArray","item","_renderRowReadonly","_eventAdd","removeItems","removeItem","itemId","rows","headers","row","_renderRow","dataset","itemOptions","cellValue","cellItemValue","selected","rowOptions","hashItem","optionValue","showCollapsible","collapse","slideUp","expand","slideDown","jQuery","Zepto","Meteor","el","mask","regexMask","invalid","pos","cSelStart","ctrl","selectionStart","dSel","navigator","appVersion","sel","createRange","moveStart","setCaret","range","setSelectionRange","createTextRange","select","events","keyCode","which","getCaret","maskDigitPosMapOld","maskDigitPosMap","jMaskGlobals","useInput","behaviour","keydown","keyup","oldValue","trigger","selectOnFocus","target","clearIfNotMatch","getRegexMask","pattern","optional","recursive","oRecursive","maskChunks","translation","jMask","digit","destroyEvents","calculateCaretPosition","oldVal","newVal","oldValL","maskDigitsBeforeCaret","maskDigitsAfterCaret","maskDigitsBeforeCaretAll","maskDigitsBeforeCaretAllOld","caretPosNew","caretPosOld","caretPos","inArray","byPassKeys","getMasked","keyStrokeCompensation","callbacks","skipMaskChars","lastMaskChar","lastUntranslatedMaskChar","buf","isInput","m","valLen","addMethod","maskDigitPosArr","check","reverse","maskLen","newValL","maskDigit","valDigit","resetPos","fallback","maskDigitCount","lastMaskCharDigit","mapMaskdigitPositions","maskDiff","criteria","changed","defaultArgs","caret","placeholder","getCleanVal","getMaskedVal","onlyMask","maxlength","HTMLAttributes","prefix","Mask","notSameMaskObject","maskObject","maskFunction","selector","globals","interval","watchInterval","watchInputs","maskWatchers","setInterval","masked","clearInterval","dataMask","removeData","cleanVal","applyDataMask","maskElements","dataMaskAttr","userAgent","createElement","setAttribute","isSupported","eventSupported","#","A","unmask","$selector","watchDataMask","modal","onHidden","onClear","onChange","_text","elementText","elementValue","textAttr","onShow","modalId","size","modalLoading","Number","step","k","radioOptions","altKey","preventDefault","selectedItem","blur","selectOptions","renderAttr","groupAttr","_renderOption","groupOptions","selectedOptions","optionAttr","switchContainer","textarea","groupOption","wysiwyg","_editorHash","minHeight","maxHeight","_editor","getContent","switch","editorHash","tinyMceOptions","branding","plugins","toolbar","tinymce","then","_isChangeState","disabled","btn_text","attributes2","textCancel","height","setContent","than","textareaId","menubar","promotion","min_width","max_width","min_height","max_height","passwordRepeat","showBtn","eq","textChange"],"mappings":"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","file":"coreui-form.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.CoreUI = global.CoreUI || {}, global.CoreUI.form = factory());\n}(this, (function () { 'use strict';\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f();}else if(typeof define===\"function\"&&define.amd){define([],f);}else{var g;if(typeof window!==\"undefined\"){g=window;}else if(typeof global!==\"undefined\"){g=global;}else if(typeof self!==\"undefined\"){g=self;}else{g=this;}g.ejs=f();}})(function(){return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t);}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){\"use strict\";var fs=require(\"fs\");var path=require(\"path\");var utils=require(\"./utils\");var scopeOptionWarned=false;var _VERSION_STRING=require(\"../package.json\").version;var _DEFAULT_OPEN_DELIMITER=\"<\";var _DEFAULT_CLOSE_DELIMITER=\">\";var _DEFAULT_DELIMITER=\"%\";var _DEFAULT_LOCALS_NAME=\"locals\";var _NAME=\"ejs\";var _REGEX_STRING=\"(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)\";var _OPTS_PASSABLE_WITH_DATA=[\"delimiter\",\"scope\",\"context\",\"debug\",\"compileDebug\",\"client\",\"_with\",\"rmWhitespace\",\"strict\",\"filename\",\"async\"];var _OPTS_PASSABLE_WITH_DATA_EXPRESS=_OPTS_PASSABLE_WITH_DATA.concat(\"cache\");var _BOM=/^\\uFEFF/;var _JS_IDENTIFIER=/^[a-zA-Z_$][0-9a-zA-Z_$]*$/;exports.cache=utils.cache;exports.fileLoader=fs.readFileSync;exports.localsName=_DEFAULT_LOCALS_NAME;exports.promiseImpl=new Function(\"return this;\")().Promise;exports.resolveInclude=function(name,filename,isDir){var dirname=path.dirname;var extname=path.extname;var resolve=path.resolve;var includePath=resolve(isDir?filename:dirname(filename),name);var ext=extname(name);if(!ext){includePath+=\".ejs\";}return includePath};function resolvePaths(name,paths){var filePath;if(paths.some(function(v){filePath=exports.resolveInclude(name,v,true);return fs.existsSync(filePath)})){return filePath}}function getIncludePath(path,options){var includePath;var filePath;var views=options.views;var match=/^[A-Za-z]+:\\\\|^\\//.exec(path);if(match&&match.length){path=path.replace(/^\\/*/,\"\");if(Array.isArray(options.root)){includePath=resolvePaths(path,options.root);}else{includePath=exports.resolveInclude(path,options.root||\"/\",true);}}else{if(options.filename){filePath=exports.resolveInclude(path,options.filename);if(fs.existsSync(filePath)){includePath=filePath;}}if(!includePath&&Array.isArray(views)){includePath=resolvePaths(path,views);}if(!includePath&&typeof options.includer!==\"function\"){throw new Error('Could not find the include file \"'+options.escapeFunction(path)+'\"')}}return includePath}function handleCache(options,template){var func;var filename=options.filename;var hasTemplate=arguments.length>1;if(options.cache){if(!filename){throw new Error(\"cache option requires a filename\")}func=exports.cache.get(filename);if(func){return func}if(!hasTemplate){template=fileLoader(filename).toString().replace(_BOM,\"\");}}else if(!hasTemplate){if(!filename){throw new Error(\"Internal EJS error: no file name or template \"+\"provided\")}template=fileLoader(filename).toString().replace(_BOM,\"\");}func=exports.compile(template,options);if(options.cache){exports.cache.set(filename,func);}return func}function tryHandleCache(options,data,cb){var result;if(!cb){if(typeof exports.promiseImpl==\"function\"){return new exports.promiseImpl(function(resolve,reject){try{result=handleCache(options)(data);resolve(result);}catch(err){reject(err);}})}else{throw new Error(\"Please provide a callback function\")}}else{try{result=handleCache(options)(data);}catch(err){return cb(err)}cb(null,result);}}function fileLoader(filePath){return exports.fileLoader(filePath)}function includeFile(path,options){var opts=utils.shallowCopy(utils.createNullProtoObjWherePossible(),options);opts.filename=getIncludePath(path,opts);if(typeof options.includer===\"function\"){var includerResult=options.includer(path,opts.filename);if(includerResult){if(includerResult.filename){opts.filename=includerResult.filename;}if(includerResult.template){return handleCache(opts,includerResult.template)}}}return handleCache(opts)}function rethrow(err,str,flnm,lineno,esc){var lines=str.split(\"\\n\");var start=Math.max(lineno-3,0);var end=Math.min(lines.length,lineno+3);var filename=esc(flnm);var context=lines.slice(start,end).map(function(line,i){var curr=i+start+1;return(curr==lineno?\" >> \":\"    \")+curr+\"| \"+line}).join(\"\\n\");err.path=filename;err.message=(filename||\"ejs\")+\":\"+lineno+\"\\n\"+context+\"\\n\\n\"+err.message;throw err}function stripSemi(str){return str.replace(/;(\\s*$)/,\"$1\")}exports.compile=function compile(template,opts){var templ;if(opts&&opts.scope){if(!scopeOptionWarned){console.warn(\"`scope` option is deprecated and will be removed in EJS 3\");scopeOptionWarned=true;}if(!opts.context){opts.context=opts.scope;}delete opts.scope;}templ=new Template(template,opts);return templ.compile()};exports.render=function(template,d,o){var data=d||utils.createNullProtoObjWherePossible();var opts=o||utils.createNullProtoObjWherePossible();if(arguments.length==2){utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA);}return handleCache(opts,template)(data)};exports.renderFile=function(){var args=Array.prototype.slice.call(arguments);var filename=args.shift();var cb;var opts={filename:filename};var data;var viewOpts;if(typeof arguments[arguments.length-1]==\"function\"){cb=args.pop();}if(args.length){data=args.shift();if(args.length){utils.shallowCopy(opts,args.pop());}else{if(data.settings){if(data.settings.views){opts.views=data.settings.views;}if(data.settings[\"view cache\"]){opts.cache=true;}viewOpts=data.settings[\"view options\"];if(viewOpts){utils.shallowCopy(opts,viewOpts);}}utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA_EXPRESS);}opts.filename=filename;}else{data=utils.createNullProtoObjWherePossible();}return tryHandleCache(opts,data,cb)};exports.Template=Template;exports.clearCache=function(){exports.cache.reset();};function Template(text,opts){opts=opts||utils.createNullProtoObjWherePossible();var options=utils.createNullProtoObjWherePossible();this.templateText=text;this.mode=null;this.truncate=false;this.currentLine=1;this.source=\"\";options.client=opts.client||false;options.escapeFunction=opts.escape||opts.escapeFunction||utils.escapeXML;options.compileDebug=opts.compileDebug!==false;options.debug=!!opts.debug;options.filename=opts.filename;options.openDelimiter=opts.openDelimiter||exports.openDelimiter||_DEFAULT_OPEN_DELIMITER;options.closeDelimiter=opts.closeDelimiter||exports.closeDelimiter||_DEFAULT_CLOSE_DELIMITER;options.delimiter=opts.delimiter||exports.delimiter||_DEFAULT_DELIMITER;options.strict=opts.strict||false;options.context=opts.context;options.cache=opts.cache||false;options.rmWhitespace=opts.rmWhitespace;options.root=opts.root;options.includer=opts.includer;options.outputFunctionName=opts.outputFunctionName;options.localsName=opts.localsName||exports.localsName||_DEFAULT_LOCALS_NAME;options.views=opts.views;options.async=opts.async;options.destructuredLocals=opts.destructuredLocals;options.legacyInclude=typeof opts.legacyInclude!=\"undefined\"?!!opts.legacyInclude:true;if(options.strict){options._with=false;}else{options._with=typeof opts._with!=\"undefined\"?opts._with:true;}this.opts=options;this.regex=this.createRegex();}Template.modes={EVAL:\"eval\",ESCAPED:\"escaped\",RAW:\"raw\",COMMENT:\"comment\",LITERAL:\"literal\"};Template.prototype={createRegex:function(){var str=_REGEX_STRING;var delim=utils.escapeRegExpChars(this.opts.delimiter);var open=utils.escapeRegExpChars(this.opts.openDelimiter);var close=utils.escapeRegExpChars(this.opts.closeDelimiter);str=str.replace(/%/g,delim).replace(/</g,open).replace(/>/g,close);return new RegExp(str)},compile:function(){var src;var fn;var opts=this.opts;var prepended=\"\";var appended=\"\";var escapeFn=opts.escapeFunction;var ctor;var sanitizedFilename=opts.filename?JSON.stringify(opts.filename):\"undefined\";if(!this.source){this.generateSource();prepended+='  var __output = \"\";\\n'+\"  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n\";if(opts.outputFunctionName){if(!_JS_IDENTIFIER.test(opts.outputFunctionName)){throw new Error(\"outputFunctionName is not a valid JS identifier.\")}prepended+=\"  var \"+opts.outputFunctionName+\" = __append;\"+\"\\n\";}if(opts.localsName&&!_JS_IDENTIFIER.test(opts.localsName)){throw new Error(\"localsName is not a valid JS identifier.\")}if(opts.destructuredLocals&&opts.destructuredLocals.length){var destructuring=\"  var __locals = (\"+opts.localsName+\" || {}),\\n\";for(var i=0;i<opts.destructuredLocals.length;i++){var name=opts.destructuredLocals[i];if(!_JS_IDENTIFIER.test(name)){throw new Error(\"destructuredLocals[\"+i+\"] is not a valid JS identifier.\")}if(i>0){destructuring+=\",\\n  \";}destructuring+=name+\" = __locals.\"+name;}prepended+=destructuring+\";\\n\";}if(opts._with!==false){prepended+=\"  with (\"+opts.localsName+\" || {}) {\"+\"\\n\";appended+=\"  }\"+\"\\n\";}appended+=\"  return __output;\"+\"\\n\";this.source=prepended+this.source+appended;}if(opts.compileDebug){src=\"var __line = 1\"+\"\\n\"+\"  , __lines = \"+JSON.stringify(this.templateText)+\"\\n\"+\"  , __filename = \"+sanitizedFilename+\";\"+\"\\n\"+\"try {\"+\"\\n\"+this.source+\"} catch (e) {\"+\"\\n\"+\"  rethrow(e, __lines, __filename, __line, escapeFn);\"+\"\\n\"+\"}\"+\"\\n\";}else{src=this.source;}if(opts.client){src=\"escapeFn = escapeFn || \"+escapeFn.toString()+\";\"+\"\\n\"+src;if(opts.compileDebug){src=\"rethrow = rethrow || \"+rethrow.toString()+\";\"+\"\\n\"+src;}}if(opts.strict){src='\"use strict\";\\n'+src;}if(opts.debug){console.log(src);}if(opts.compileDebug&&opts.filename){src=src+\"\\n\"+\"//# sourceURL=\"+sanitizedFilename+\"\\n\";}try{if(opts.async){try{ctor=new Function(\"return (async function(){}).constructor;\")();}catch(e){if(e instanceof SyntaxError){throw new Error(\"This environment does not support async/await\")}else{throw e}}}else{ctor=Function;}fn=new ctor(opts.localsName+\", escapeFn, include, rethrow\",src);}catch(e){if(e instanceof SyntaxError){if(opts.filename){e.message+=\" in \"+opts.filename;}e.message+=\" while compiling ejs\\n\\n\";e.message+=\"If the above error is not helpful, you may want to try EJS-Lint:\\n\";e.message+=\"https://github.com/RyanZim/EJS-Lint\";if(!opts.async){e.message+=\"\\n\";e.message+=\"Or, if you meant to create an async function, pass `async: true` as an option.\";}}throw e}var returnedFn=opts.client?fn:function anonymous(data){var include=function(path,includeData){var d=utils.shallowCopy(utils.createNullProtoObjWherePossible(),data);if(includeData){d=utils.shallowCopy(d,includeData);}return includeFile(path,opts)(d)};return fn.apply(opts.context,[data||utils.createNullProtoObjWherePossible(),escapeFn,include,rethrow])};if(opts.filename&&typeof Object.defineProperty===\"function\"){var filename=opts.filename;var basename=path.basename(filename,path.extname(filename));try{Object.defineProperty(returnedFn,\"name\",{value:basename,writable:false,enumerable:false,configurable:true});}catch(e){}}return returnedFn},generateSource:function(){var opts=this.opts;if(opts.rmWhitespace){this.templateText=this.templateText.replace(/[\\r\\n]+/g,\"\\n\").replace(/^\\s+|\\s+$/gm,\"\");}this.templateText=this.templateText.replace(/[ \\t]*<%_/gm,\"<%_\").replace(/_%>[ \\t]*/gm,\"_%>\");var self=this;var matches=this.parseTemplateText();var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;if(matches&&matches.length){matches.forEach(function(line,index){var closing;if(line.indexOf(o+d)===0&&line.indexOf(o+d+d)!==0){closing=matches[index+2];if(!(closing==d+c||closing==\"-\"+d+c||closing==\"_\"+d+c)){throw new Error('Could not find matching close tag for \"'+line+'\".')}}self.scanLine(line);});}},parseTemplateText:function(){var str=this.templateText;var pat=this.regex;var result=pat.exec(str);var arr=[];var firstPos;while(result){firstPos=result.index;if(firstPos!==0){arr.push(str.substring(0,firstPos));str=str.slice(firstPos);}arr.push(result[0]);str=str.slice(result[0].length);result=pat.exec(str);}if(str){arr.push(str);}return arr},_addOutput:function(line){if(this.truncate){line=line.replace(/^(?:\\r\\n|\\r|\\n)/,\"\");this.truncate=false;}if(!line){return line}line=line.replace(/\\\\/g,\"\\\\\\\\\");line=line.replace(/\\n/g,\"\\\\n\");line=line.replace(/\\r/g,\"\\\\r\");line=line.replace(/\"/g,'\\\\\"');this.source+='    ; __append(\"'+line+'\")'+\"\\n\";},scanLine:function(line){var self=this;var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;var newLineCount=0;newLineCount=line.split(\"\\n\").length-1;switch(line){case o+d:case o+d+\"_\":this.mode=Template.modes.EVAL;break;case o+d+\"=\":this.mode=Template.modes.ESCAPED;break;case o+d+\"-\":this.mode=Template.modes.RAW;break;case o+d+\"#\":this.mode=Template.modes.COMMENT;break;case o+d+d:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(o+d+d,o+d)+'\")'+\"\\n\";break;case d+d+c:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(d+d+c,d+c)+'\")'+\"\\n\";break;case d+c:case\"-\"+d+c:case\"_\"+d+c:if(this.mode==Template.modes.LITERAL){this._addOutput(line);}this.mode=null;this.truncate=line.indexOf(\"-\")===0||line.indexOf(\"_\")===0;break;default:if(this.mode){switch(this.mode){case Template.modes.EVAL:case Template.modes.ESCAPED:case Template.modes.RAW:if(line.lastIndexOf(\"//\")>line.lastIndexOf(\"\\n\")){line+=\"\\n\";}}switch(this.mode){case Template.modes.EVAL:this.source+=\"    ; \"+line+\"\\n\";break;case Template.modes.ESCAPED:this.source+=\"    ; __append(escapeFn(\"+stripSemi(line)+\"))\"+\"\\n\";break;case Template.modes.RAW:this.source+=\"    ; __append(\"+stripSemi(line)+\")\"+\"\\n\";break;case Template.modes.COMMENT:break;case Template.modes.LITERAL:this._addOutput(line);break}}else{this._addOutput(line);}}if(self.opts.compileDebug&&newLineCount){this.currentLine+=newLineCount;this.source+=\"    ; __line = \"+this.currentLine+\"\\n\";}}};exports.escapeXML=utils.escapeXML;exports.__express=exports.renderFile;exports.VERSION=_VERSION_STRING;exports.name=_NAME;if(typeof window!=\"undefined\"){window.ejs=exports;}},{\"../package.json\":6,\"./utils\":2,fs:3,path:4}],2:[function(require,module,exports){\"use strict\";var regExpChars=/[|\\\\{}()[\\]^$+*?.]/g;var hasOwnProperty=Object.prototype.hasOwnProperty;var hasOwn=function(obj,key){return hasOwnProperty.apply(obj,[key])};exports.escapeRegExpChars=function(string){if(!string){return\"\"}return String(string).replace(regExpChars,\"\\\\$&\")};var _ENCODE_HTML_RULES={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&#34;\",\"'\":\"&#39;\"};var _MATCH_HTML=/[&<>'\"]/g;function encode_char(c){return _ENCODE_HTML_RULES[c]||c}var escapeFuncStr=\"var _ENCODE_HTML_RULES = {\\n\"+'      \"&\": \"&amp;\"\\n'+'    , \"<\": \"&lt;\"\\n'+'    , \">\": \"&gt;\"\\n'+'    , \\'\"\\': \"&#34;\"\\n'+'    , \"\\'\": \"&#39;\"\\n'+\"    }\\n\"+\"  , _MATCH_HTML = /[&<>'\\\"]/g;\\n\"+\"function encode_char(c) {\\n\"+\"  return _ENCODE_HTML_RULES[c] || c;\\n\"+\"};\\n\";exports.escapeXML=function(markup){return markup==undefined?\"\":String(markup).replace(_MATCH_HTML,encode_char)};function escapeXMLToString(){return Function.prototype.toString.call(this)+\";\\n\"+escapeFuncStr}try{if(typeof Object.defineProperty===\"function\"){Object.defineProperty(exports.escapeXML,\"toString\",{value:escapeXMLToString});}else{exports.escapeXML.toString=escapeXMLToString;}}catch(err){console.warn(\"Unable to set escapeXML.toString (is the Function prototype frozen?)\");}exports.shallowCopy=function(to,from){from=from||{};if(to!==null&&to!==undefined){for(var p in from){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}return to};exports.shallowCopyFromList=function(to,from,list){list=list||[];from=from||{};if(to!==null&&to!==undefined){for(var i=0;i<list.length;i++){var p=list[i];if(typeof from[p]!=\"undefined\"){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}}return to};exports.cache={_data:{},set:function(key,val){this._data[key]=val;},get:function(key){return this._data[key]},remove:function(key){delete this._data[key];},reset:function(){this._data={};}};exports.hyphenToCamel=function(str){return str.replace(/-[a-z]/g,function(match){return match[1].toUpperCase()})};exports.createNullProtoObjWherePossible=function(){if(typeof Object.create==\"function\"){return function(){return Object.create(null)}}if(!({__proto__:null}instanceof Object)){return function(){return{__proto__:null}}}return function(){return{}}}();},{}],3:[function(require,module,exports){},{}],4:[function(require,module,exports){(function(process){function normalizeArray(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1);}else if(last===\"..\"){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}if(allowAboveRoot){for(;up--;up){parts.unshift(\"..\");}}return parts}exports.resolve=function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){continue}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\";}resolvedPath=normalizeArray(filter(resolvedPath.split(\"/\"),function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"};exports.normalize=function(path){var isAbsolute=exports.isAbsolute(path),trailingSlash=substr(path,-1)===\"/\";path=normalizeArray(filter(path.split(\"/\"),function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\";}if(path&&trailingSlash){path+=\"/\";}return(isAbsolute?\"/\":\"\")+path};exports.isAbsolute=function(path){return path.charAt(0)===\"/\"};exports.join=function(){var paths=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(paths,function(p,index){if(typeof p!==\"string\"){throw new TypeError(\"Arguments to path.join must be strings\")}return p}).join(\"/\"))};exports.relative=function(from,to){from=exports.resolve(from).substr(1);to=exports.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\");}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")};exports.sep=\"/\";exports.delimiter=\":\";exports.dirname=function(path){if(typeof path!==\"string\")path=path+\"\";if(path.length===0)return\".\";var code=path.charCodeAt(0);var hasRoot=code===47;var end=-1;var matchedSlash=true;for(var i=path.length-1;i>=1;--i){code=path.charCodeAt(i);if(code===47){if(!matchedSlash){end=i;break}}else{matchedSlash=false;}}if(end===-1)return hasRoot?\"/\":\".\";if(hasRoot&&end===1){return\"/\"}return path.slice(0,end)};function basename(path){if(typeof path!==\"string\")path=path+\"\";var start=0;var end=-1;var matchedSlash=true;var i;for(i=path.length-1;i>=0;--i){if(path.charCodeAt(i)===47){if(!matchedSlash){start=i+1;break}}else if(end===-1){matchedSlash=false;end=i+1;}}if(end===-1)return\"\";return path.slice(start,end)}exports.basename=function(path,ext){var f=basename(path);if(ext&&f.substr(-1*ext.length)===ext){f=f.substr(0,f.length-ext.length);}return f};exports.extname=function(path){if(typeof path!==\"string\")path=path+\"\";var startDot=-1;var startPart=0;var end=-1;var matchedSlash=true;var preDotState=0;for(var i=path.length-1;i>=0;--i){var code=path.charCodeAt(i);if(code===47){if(!matchedSlash){startPart=i+1;break}continue}if(end===-1){matchedSlash=false;end=i+1;}if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){return\"\"}return path.slice(startDot,end)};function filter(xs,f){if(xs.filter)return xs.filter(f);var res=[];for(var i=0;i<xs.length;i++){if(f(xs[i],i,xs))res.push(xs[i]);}return res}var substr=\"ab\".substr(-1)===\"b\"?function(str,start,len){return str.substr(start,len)}:function(str,start,len){if(start<0)start=str.length+start;return str.substr(start,len)};}).call(this,require(\"_process\"));},{_process:5}],5:[function(require,module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout===\"function\"){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title=\"browser\";process.browser=true;process.env={};process.argv=[];process.version=\"\";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error(\"process.binding is not supported\")};process.cwd=function(){return\"/\"};process.chdir=function(dir){throw new Error(\"process.chdir is not supported\")};process.umask=function(){return 0};},{}],6:[function(require,module,exports){module.exports={name:\"ejs\",description:\"Embedded JavaScript templates\",keywords:[\"template\",\"engine\",\"ejs\"],version:\"3.1.8\",author:\"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)\",license:\"Apache-2.0\",bin:{ejs:\"./bin/cli.js\"},main:\"./lib/ejs.js\",jsdelivr:\"ejs.min.js\",unpkg:\"ejs.min.js\",repository:{type:\"git\",url:\"git://github.com/mde/ejs.git\"},bugs:\"https://github.com/mde/ejs/issues\",homepage:\"https://github.com/mde/ejs\",dependencies:{jake:\"^10.8.5\"},devDependencies:{browserify:\"^16.5.1\",eslint:\"^6.8.0\",\"git-directory-deploy\":\"^1.5.1\",jsdoc:\"^4.0.2\",\"lru-cache\":\"^4.0.1\",mocha:\"^10.2.0\",\"uglify-js\":\"^3.3.16\"},engines:{node:\">=0.10.0\"},scripts:{test:\"mocha -u tdd\"}};},{}]},{},[1])(1)});\n\nlet tpl = Object.create(null);\ntpl['form-error.html'] = '<div class=\"coreui-form__error alert alert-danger alert-dismissible fade show mb-3 <%= options.class %>\">\\n    <%- message %>\\n    <% if (options.dismiss) { %>\\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\\n    <% } %>\\n</div>';\ntpl['form-field-content.html'] = '<%- content %>';\ntpl['form-field-group.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__group_container mb-3\">\\n    <div class=\"coreui-form__group_label pe-2\">\\n        <h6 class=\"coreui-form__field_label_text col-form-label-sm\">\\n            <%- group.label %>\\n            <% if (group.showCollapsible) { %>\\n                <button type=\"button\" class=\"btn btn-sm btn-link btn-collapsible text-dark\">\\n                    <% if ( ! group.show) { %>\\n                    <i class=\"bi bi-chevron-right\"></i>\\n                    <% } else { %>\\n                    <i class=\"bi bi-chevron-down\"></i>\\n                    <% } %>\\n                </button>\\n            <% } %>\\n        </h6>\\n    </div>\\n    <div class=\"coreui-form__group_content\"<% if ( ! group.show) { %> style=\"display:none\"<% } %>>\\n        <%- content %>\\n    </div>\\n</div>';\ntpl['form-field-label.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__field_container d-flex flex-column flex-md-row mb-3\"\\n     <% if ( ! field.show) { %> style=\"display:none\"<% } %>>\\n    <% if (field.labelWidth !== 0 && field.labelWidth !== \\'0px\\') { %>\\n    <div class=\"coreui-form__field_label text-md-end text-sm-start pe-2\"<% if (field.labelWidth) { %> style=\"min-width:<%= field.labelWidth %>;width:<%= field.labelWidth %>\"<% } %>>\\n        <div class=\"coreui-form__field_label_content col-form-label-sm\">\\n            <% if (field.required) { %>\\n            <span class=\"coreui-form__field_label_req text-danger\">*</span>\\n            <% } %>\\n            <span class=\"coreui-form__field_label_text fw-medium\"><%- field.label %></span>\\n        </div>\\n\\n        <% if (field.description) { %>\\n        <div class=\"coreui-form__field_label_description text-muted\">\\n            <small><%- field.description %></small>\\n        </div>\\n        <% } %>\\n    </div>\\n    <% } %>\\n    <div class=\"coreui-form__field_content flex-fill pt-1\">\\n        <div class=\"d-inline-block content-<%= hash %>\">\\n            <%- content %>\\n        </div>\\n\\n        <% if (field.outContent) { %>\\n        <span class=\"coreui-form__field-content-out d-inline-block align-top pt-1 ps-1\">\\n            <%- field.outContent %>\\n        </span>\\n        <% } %>\\n\\n        <% if (attachFields && attachFields.length > 0) { %>\\n            <% $.each(attachFields, function(key, attachField) { %>\\n                <div class=\"<% if (attachField.hasOwnProperty(\\'direction\\') && attachField.direction === \\'column\\') { %>d-block mt-2<% } else { %>d-inline-block<% } %> content-<%= attachField.hash %>\">\\n                    <%- attachField.content %>\\n                </div>\\n            <% }); %>\\n        <% } %>\\n    </div>\\n</div>';\ntpl['form.html'] = '<div id=\"coreui-form-<%= form.id %>\" class=\"coreui-form mb-2\"\\n    <% if (widthSizes) { %>style=\"<%= widthSizes.join(\\';\\') %>\"<% } %>>\\n    <% if (form.title) { %>\\n    <h5 class=\"mb-4\"><%- form.title %></h5>\\n    <% } %>\\n\\n    <form action=\"<%= form.save.url %>\" method=\"<%= form.save.method %>\"<%- formAttr %>>\\n        <div class=\"coreui-form__fields d-flex justify-content-start flex-column flex-wrap\">\\n            <%- layout %>\\n        </div>\\n\\n        <% if (controls) { %>\\n        <div class=\"coreui-form__controls d-flex justify-content-start flex-sm-wrap flex-md-nowrap\">\\n            <% if (form.controlsOffset !== 0 && form.controlsOffset !== \\'0px\\') { %>\\n            <div class=\"d-none d-md-block\" style=\"width:<%= form.controlsOffset %>;min-width:<%= form.controlsOffset %>\"></div>\\n            <% } %>\\n\\n            <div class=\"d-flex justify-content-start flex-wrap gap-2\">\\n                <% $.each(controls, function(key, control) { %>\\n                <div id=\"coreui-form-<%= form.id %>-control-<%= control.index %>\" class=\"coreui-form__control_container\"\\n                     <% if ( ! control.show) { %>style=\"display:none\"<% } %>>\\n                    <%- control.content %>\\n                </div>\\n                <% }); %>\\n            </div>\\n        </div>\\n        <% } %>\\n    </form>\\n</div>';\ntpl['controls/button.html'] = '<button <%- render.attr %>><%- control.content %></button>';\ntpl['controls/link.html'] = '<a href=\"<%- control.href %>\"<%- render.attr %>><%- control.content %></a>';\ntpl['fields/checkbox.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItems.join(\\', \\') %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/color.html'] = '<% if (field.readonly) { %>\\n    <div class=\"rounded-1\" style=\"width: 14px;height: 14px;background-color: <%= value %>\"></div>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/custom.html'] = '<%- content %>';\ntpl['fields/dataset-row-readonly.html'] = '<tr class=\"coreui-form__field-dataset-item\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-2 pb-1\">\\n            <%- option.value %>\\n        </td>\\n    <% }); %>\\n</tr>';\ntpl['fields/dataset-row.html'] = '<tr class=\"coreui-form__field-dataset-item\" id=\"dataset-item-<%= hashItem %>\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-1 pb-1\">\\n        <% if (option.type === \\'select\\') { %>\\n            <select <%- option.attr %>>\\n                <% $.each(option.items, function(key, item) { %>\\n                <option <%- item.attr %>><%- item.title %></option>\\n                <% }); %>\\n            </select>\\n        <% } else if (option.type === \\'switch\\') { %>\\n            <div class=\"form-check form-switch\">\\n                <input <%- option.attr %>/>\\n            </div>\\n        <% } else { %>\\n            <input <%- option.attr %>>\\n        <% } %>\\n        </td>\\n    <% }); %>\\n\\n    <td class=\"pb-1\">\\n        <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-remove\" data-item-id=\"dataset-item-<%= hashItem %>\">\\n            <i class=\"bi bi-x text-muted\"></i>\\n        </button>\\n    </td>\\n</tr>';\ntpl['fields/dataset.html'] = '<% if (field.readonly) { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted pe-2\"><small><%= item.title %></small></td>\\n                <% }); %>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n            <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n<% } else { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted\"><small><%= item.title %></small></td>\\n                <% }); %>\\n                <td></td>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n                <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n    <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-add\"><%= lang.dataset_add %></button>\\n<% } %>';\ntpl['fields/hidden.html'] = '<% if ( ! field.readonly) { %>\\n    <input <%- render.attr %>/>\\n<% } %>';\ntpl['fields/input.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/modal-loading.html'] = '<div class=\"py-4 d-flex justify-content-center align-items-center gap-2\">\\n    <div class=\"spinner-border mr-2\"></div> <%= lang.modal_loading %>\\n</div>\\n';\ntpl['fields/modal.html'] = '<% if (field.readonly) { %>\\n    <%= text %>\\n<% } else { %>\\n    <div class=\"input-group\"<% if (render.width) { %> style=\"width:<%= render.width %>\"<% } %>>\\n        <input <%- render.attr %>/>\\n        <input type=\"hidden\" name=\"<%= field.name %>\" value=\"<%= value %>\" class=\"coreui-form-modal-value\"/>\\n        <% if ( ! field.required) { %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-clear border-secondary-subtle\" type=\"button\">\\n            <i class=\"bi bi-x\"></i>\\n        </button>\\n        <% } %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-select border-secondary-subtle\" type=\"button\"><%= lang.modal_select %></button>\\n    </div>\\n<% } %>';\ntpl['fields/passwordRepeat.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <div class=\"d-flex gap-1 align-items-center\">\\n        <input <%- render.attr %>/>\\n        <small class=\"password-text-repeat\"><%= lang.repeat %></small>\\n\\n        <% if (field.showBtn) { %>\\n            <div class=\"input-group flex-nowrap\">\\n                <input <%- render.attr2 %>/>\\n                <button class=\"btn btn-sm btn-outline-secondary border-secondary-subtle btn-password-change\" type=\"button\"\\n                        data-change=\"<%- lang.change %>\" data-cancel=\"<%- lang.cancel %>\"><%= btn_text %></button>\\n            </div>\\n        <% } else { %>\\n            <input <%- render.attr2 %>/>\\n        <% } %>\\n\\n    </div>\\n<% } %>';\ntpl['fields/radio.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItem %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/select.html'] = '<% if (field.readonly) { %>\\n    <%= render.selectedOptions.join(\\', \\') %>\\n<% } else { %>\\n    <select <%- render.attr %>>\\n        <% $.each(render.options, function(key, option) { %>\\n            <% if (option.type === \\'group\\') { %>\\n                <optgroup<%- option.attr %>/>\\n                <% $.each(option.options, function(key, groupOption) { %>\\n                    <option <%- groupOption.attr %>/><%= groupOption.text %></option>\\n                <% }); %>\\n                </optgroup>\\n            <% } else { %>\\n            <option <%- option.attr %>/><%= option.text %></option>\\n            <% } %>\\n        <% }); %>\\n    </select>\\n<% } %>';\ntpl['fields/switch.html'] = '<% if (field.readonly) { %>\\n    <%= field.valueY == value ? lang.switch_yes : lang.switch_no %>\\n<% } else { %>\\n    <div class=\"form-check form-switch\">\\n        <input <%- render.attr %>/>\\n    </div>\\n<% } %>';\ntpl['fields/textarea.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea <%- render.attr %>><%- value %></textarea>\\n<% } %>';\ntpl['fields/wysiwyg.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea name=\"<%= field.name %>\" id=\"editor-<%= editorHash %>\"><%- value %></textarea>\\n<% } %>';\n\nlet coreuiFormUtils$1 = {\r\n\r\n    /**\r\n     * Получение значения поля\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               fieldOptions\r\n     * @returns {string|number|null}\r\n     */\r\n    getFieldValue: function (form, fieldOptions) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        if (fieldOptions &&\r\n            formRecord &&\r\n            typeof fieldOptions.name === 'string' &&\r\n            typeof formRecord === 'object' &&\r\n            formRecord.hasOwnProperty(fieldOptions.name) &&\r\n            ['string', 'number', 'object'].indexOf(typeof formRecord[fieldOptions.name]) >= 0\r\n        ) {\r\n            return formRecord[fieldOptions.name];\r\n        }\r\n\r\n        return '';\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение функции из указанного текста\r\n     * @param functionName\r\n     * @param context\r\n     * @returns {null|Window}\r\n     * @private\r\n     */\r\n    getFunctionByName: function(functionName, context) {\r\n\r\n        let namespaces = functionName.split(\".\");\r\n        let func       = namespaces.pop();\r\n\r\n        context = context || window;\r\n\r\n        for (let i = 0; i < namespaces.length; i++) {\r\n            if (context.hasOwnProperty(namespaces[i])) {\r\n                context = context[namespaces[i]];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        if (typeof context[func] === 'function') {\r\n            return context[func];\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Обработка полей в полях\r\n     * @param form\r\n     * @param defaultOptions\r\n     * @param fieldOptions\r\n     */\r\n    mergeFieldOptions: function (form, defaultOptions, fieldOptions) {\r\n\r\n        let options = $.extend(true, {}, defaultOptions);\r\n\r\n        if (fieldOptions) {\r\n            if (options.hasOwnProperty('attr') && typeof options.attr === 'object' &&\r\n                fieldOptions.hasOwnProperty('attr') && typeof fieldOptions.attr === 'object'\r\n            ) {\r\n                fieldOptions.attr = this.mergeAttr(options.attr, fieldOptions.attr);\r\n            }\r\n\r\n            options = $.extend(true, {}, options, fieldOptions);\r\n        }\r\n\r\n        if (options.hasOwnProperty('width')) {\r\n            if (options.width) {\r\n                let unit = typeof options.width === 'number' ? 'px' : '';\r\n                options.width = options.width + unit;\r\n\r\n            } else if (form._options.fieldWidth && options.type !== 'color') {\r\n                let unit = typeof form._options.fieldWidth === 'number' ? 'px' : '';\r\n                options.width = form._options.fieldWidth + unit;\r\n            }\r\n        }\r\n\r\n        if (options.hasOwnProperty('labelWidth')) {\r\n            if (options.labelWidth >= 0 && options.labelWidth !== null) {\r\n                let unit = typeof options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = options.labelWidth + unit;\r\n\r\n            } else if (form._options.labelWidth) {\r\n                let unit = typeof form._options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = form._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        return options\r\n    },\r\n\r\n\r\n    /**\r\n     * Объединение атрибутов\r\n     * @param attr1\r\n     * @param attr2\r\n     * @returns {object}\r\n     */\r\n    mergeAttr: function (attr1, attr2) {\r\n\r\n        let mergeAttr = Object.assign({}, attr1);\r\n\r\n        if (typeof attr2 === 'object') {\r\n            $.each(attr2, function (name, value) {\r\n                if (mergeAttr.hasOwnProperty(name)) {\r\n                    if (name === 'class') {\r\n                        mergeAttr[name] += ' ' + value;\r\n\r\n                    } else if (name === 'style') {\r\n                        mergeAttr[name] += ';' + value;\r\n\r\n                    } else {\r\n                        mergeAttr[name] = value;\r\n                    }\r\n\r\n                } else {\r\n                    mergeAttr[name] = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return mergeAttr;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация и рендер дополнительных полей\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @returns {object}\r\n     * @private\r\n     */\r\n    getAttacheFields: function(form, options) {\r\n\r\n        let fields = [];\r\n\r\n        if (typeof options === 'object' &&\r\n            typeof(options.fields) === 'object' &&\r\n            Array.isArray(options.fields)\r\n        ) {\r\n            $.each(options.fields, function (key, field) {\r\n                let instance = form.initField(field);\r\n\r\n                if (typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                fields.push({\r\n                    hash: instance._hash,\r\n                    direction: options.hasOwnProperty('fieldsDirection') ? options.fieldsDirection : 'row',\r\n                    content: instance.renderContent()\r\n                });\r\n            });\r\n        }\r\n\r\n        return fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDate: function (value) {\r\n\r\n        if (value && value.length === 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDateTime: function (value) {\r\n\r\n        if (value && value.length >= 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n            let hour  = (\"00\" + date.getHours()).slice(-2);\r\n            let min   = (\"00\" + date.getMinutes()).slice(-2);\r\n            let sec   = (\"00\" + date.getSeconds()).slice(-2);\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year + ' ' + hour + ':' + min + ':' + sec;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateMonth: function (value, lang) {\r\n\r\n        if (value && value.length === 7) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth();\r\n\r\n            let monthLang = lang.date_months.hasOwnProperty(month) ? lang.date_months[month] : '';\r\n\r\n            value = monthLang + ' ' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateWeek: function (value, lang) {\r\n\r\n        if (value && value.length >= 7) {\r\n            let year = value.substring(0, 4);\r\n            let week = value.substring(6);\r\n\r\n            value = year + ' ' + lang.date_week + ' ' + week;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка на число\r\n     * @param num\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    isNumeric: function(num) {\r\n        return (typeof(num) === 'number' || typeof(num) === \"string\" && num.trim() !== '') && ! isNaN(num);\r\n    },\r\n\r\n\r\n    /**\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    hashCode: function() {\r\n        return this.crc32((new Date().getTime() + Math.random()).toString()).toString(16);\r\n    },\r\n\r\n\r\n    /**\r\n     * Hash crc32\r\n     * @param str\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    crc32: function (str) {\r\n\r\n        for (var a, o = [], c = 0; c < 256; c++) {\r\n            a = c;\r\n            for (var f = 0; f < 8; f++) {\r\n                a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;\r\n            }\r\n            o[c] = a;\r\n        }\r\n\r\n        for (var n = -1, t = 0; t < str.length; t++) {\r\n            n = n >>> 8 ^ o[255 & (n ^ str.charCodeAt(t))];\r\n        }\r\n\r\n        return (-1 ^ n) >>> 0;\r\n    },\r\n\r\n\r\n    /**\r\n     * Округление\r\n     * @param number\r\n     * @param precision\r\n     * @returns {number}\r\n     */\r\n    round: function (number, precision) {\r\n\r\n        precision = typeof precision !== 'undefined' ? parseInt(precision) : 0;\r\n\r\n        if (precision === 0) {\r\n            return Math.round(number);\r\n\r\n        } else if (precision > 0) {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number * pow) / pow;\r\n\r\n        } else {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number / pow) * pow;\r\n        }\r\n    }\r\n};\n\nlet coreuiFormInstance = {\r\n\r\n    _options: {\r\n        id: null,\r\n        title: '',\r\n        lang: 'en',\r\n        save: {\r\n            url: '',\r\n            method: 'POST'\r\n        },\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        labelWidth: 200,\r\n        controlsOffset: null,\r\n        readonly: false,\r\n        validate: false,\r\n        errorClass: '',\r\n        layout: '[column_default]',\r\n        onSubmit: null,\r\n        record: {},\r\n        fields: [],\r\n        controls: []\r\n    },\r\n\r\n    _lock: false,\r\n    _fieldsIndex: 0,\r\n    _groupsIndex: 0,\r\n    _controlsIndex: 0,\r\n    _groups: [],\r\n    _fields: [],\r\n    _controls: [],\r\n    _events: {},\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {object} options\r\n     * @private\r\n     */\r\n    _init: function (options) {\r\n\r\n        this._options.labelWidth = coreuiForm$1.getSetting('labelWidth');\r\n        this._options.lang       = coreuiForm$1.getSetting('lang');\r\n        this._options.errorClass = coreuiForm$1.getSetting('errorClass');\r\n\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        if ( ! this._options.id) {\r\n            this._options.id = coreuiFormUtils$1.hashCode();\r\n        }\r\n\r\n        if (this._options.hasOwnProperty('labelWidth')) {\r\n            if (this._options.labelWidth >= 0 && this._options.labelWidth !== null) {\r\n                let unit = typeof this._options.labelWidth === 'number' ? 'px' : '';\r\n                this._options.labelWidth = this._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        if ( ! this._options.hasOwnProperty('controlsOffset') || this._options.controlsOffset === null) {\r\n            this._options.controlsOffset = this._options.labelWidth;\r\n        } else {\r\n            if (this._options.controlsOffset >= 0) {\r\n                let unit = typeof this._options.controlsOffset === 'number' ? 'px' : '';\r\n                this._options.controlsOffset = this._options.controlsOffset + unit;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    initEvents: function () {\r\n\r\n        let that          = this;\r\n        let formContainer = '#coreui-form-' + this._options.id + ' > form';\r\n\r\n        $(formContainer).on('submit', function () {\r\n            that.send();\r\n\r\n            return false;\r\n        });\r\n\r\n        this._trigger('shown.coreui.form');\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение id формы\r\n     * @return {string|null}\r\n     */\r\n    getId: function () {\r\n\r\n        return this._options.hasOwnProperty('id') ? this._options.id : null;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    render: function(element) {\r\n\r\n        let that       = this;\r\n        let widthSizes = [];\r\n        let layout     = this._options.layout;\r\n        let controls   = [];\r\n        let formAttr   = [];\r\n\r\n\r\n\r\n        if (this._options.width) {\r\n            let unit = typeof this._options.width === 'number' ? 'px' : '';\r\n            widthSizes.push('width:' + this._options.width + unit);\r\n        }\r\n\r\n        if (this._options.minWidth) {\r\n            let unit = typeof this._options.minWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('min-width:' + this._options.minWidth + unit);\r\n        }\r\n\r\n        if (this._options.maxWidth) {\r\n            let unit = typeof this._options.maxWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('max-width:' + this._options.maxWidth + unit);\r\n        }\r\n\r\n\r\n\r\n        // Поля\r\n        if (typeof this._options.fields === 'object' &&\r\n            Array.isArray(this._options.fields) &&\r\n            this._options.fields.length > 0 &&\r\n            layout &&\r\n            typeof layout === 'string'\r\n        ) {\r\n            let matches        = Array.from(layout.matchAll(/\\[column_([\\w_\\d]+)\\]/g));\r\n            let columns        = [];\r\n            let columnsContent = {};\r\n\r\n            if (matches.length > 0) {\r\n                $.each(matches, function (key, match) {\r\n                    columns.push(match[1]);\r\n                });\r\n            }\r\n\r\n            if (columns.length > 0) {\r\n                $.each(this._options.fields, function (key, field) {\r\n                    let column = field.hasOwnProperty('column') && (typeof field.column === 'string' || typeof field.column === 'number')\r\n                        ? (columns.indexOf(field.column) >= 0 ? field.column : null)\r\n                        : 'default';\r\n\r\n                    if (typeof column !== 'string') {\r\n                        return;\r\n                    }\r\n\r\n                    let type     = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : '';\r\n                    let instance = null;\r\n\r\n                    if (type === 'group') {\r\n                        instance = that.initGroup(field);\r\n\r\n                    } else {\r\n                        instance = that.initField(field);\r\n                    }\r\n\r\n\r\n                    if ( ! instance || typeof instance !== 'object') {\r\n                        return;\r\n                    }\r\n\r\n                    if ( ! columnsContent.hasOwnProperty(column)) {\r\n                        columnsContent[column] = [];\r\n                    }\r\n                    columnsContent[column].push(instance.render());\r\n                });\r\n            }\r\n\r\n            if (Object.keys(columnsContent).length >= 0) {\r\n                $.each(columnsContent, function (name, fieldContents) {\r\n\r\n                    layout = layout.replace('[column_' + name + ']', fieldContents.join(''));\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        // Элементы управления\r\n        if (typeof this._options.controls === 'object' &&\r\n            Array.isArray(this._options.controls) &&\r\n            this._options.controls.length > 0\r\n        ) {\r\n            $.each(this._options.controls, function (key, control) {\r\n                let instance = that.initControl(control);\r\n\r\n                if ( ! instance || typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                controls.push({\r\n                    show: ! control.hasOwnProperty('show') || control.show,\r\n                    index: that._controlsIndex - 1,\r\n                    content: instance.render()\r\n                });\r\n            });\r\n        }\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            formAttr.push('novalidate');\r\n        }\r\n\r\n\r\n        let html = ejs.render(tpl['form.html'], {\r\n            form: this._options,\r\n            formAttr: formAttr ? ' ' + formAttr.join(' ') : '',\r\n            widthSizes: widthSizes,\r\n            layout: layout,\r\n            controls: controls,\r\n        });\r\n\r\n        if (element === undefined) {\r\n            return html;\r\n        }\r\n\r\n        // Dom element\r\n        let domElement = {};\r\n\r\n        if (typeof element === 'string') {\r\n            domElement = document.getElementById(element);\r\n\r\n            if ( ! domElement) {\r\n                return '';\r\n            }\r\n\r\n        } else if (element instanceof HTMLElement) {\r\n            domElement = element;\r\n        }\r\n\r\n\r\n        domElement.innerHTML = html;\r\n\r\n        this.initEvents();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        this._lock = true;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.lock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Разблокировка\r\n     */\r\n    unlock: function () {\r\n\r\n        this._lock = false;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.unlock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Отправка данных формы\r\n     */\r\n    send: function () {\r\n\r\n        if (this._lock) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            let isValid = this.validate();\r\n\r\n            if ( ! isValid) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let onsubmit = null;\r\n        let data     = this.getData();\r\n\r\n        if (typeof this._options.onSubmit === 'function') {\r\n            onsubmit = this._options.onSubmit;\r\n\r\n        } else if (typeof this._options.onSubmit === 'string') {\r\n            let func = coreuiFormUtils$1.getFunctionByName(this._options.onSubmit);\r\n            if (typeof func === 'function') {\r\n                onsubmit = func;\r\n            } else if (typeof func === 'string') {\r\n                eval(func);\r\n            }\r\n        }\r\n\r\n        if (typeof onsubmit === 'function') {\r\n            let onSubmitResult = onsubmit(this, data);\r\n\r\n            if (onSubmitResult === false) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let results    = this._trigger('send.coreui.form', this, [ this, data ]);\r\n        let isStopSend = false;\r\n\r\n        $.each(results, function(key, result) {\r\n            if (result === false) {\r\n                isStopSend = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        if (isStopSend) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.lock();\r\n\r\n        let that = this;\r\n\r\n        $.ajax({\r\n            url: this._options.save.url,\r\n            method: this._options.save.method,\r\n            data: data,\r\n            beforeSend: function(xhr) {\r\n                that._trigger('start-send.coreui.form', that, [ that, xhr ]);\r\n            },\r\n            success: function (result) {\r\n                that.hideError();\r\n\r\n                that._trigger('success-send.coreui.form', that, [ that, result ]);\r\n            },\r\n            error: function(xhr, textStatus, errorThrown) {\r\n                let errorMessage = that.getLang().send_error || '';\r\n                let data         = {};\r\n\r\n                try {\r\n                    let parsedResponse = JSON.parse(xhr.responseText);\r\n                    if (typeof parsedResponse === 'object' &&\r\n                        parsedResponse !== null &&\r\n                        ! Array.isArray(parsedResponse)\r\n                    ) {\r\n                        data = parsedResponse;\r\n                    }\r\n\r\n                } catch (e) {\r\n                    // ignore\r\n                }\r\n\r\n                if (data.hasOwnProperty('error_message') &&\r\n                    typeof data.error_message === 'string' &&\r\n                    data.error_message !== ''\r\n                ) {\r\n                    errorMessage = data.error_message;\r\n                }\r\n\r\n                that.showError(errorMessage);\r\n                that._trigger('error-send.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n            },\r\n            complete: function(xhr, textStatus) {\r\n                that.unlock();\r\n                that._trigger('end-send.coreui.form', that, [ that, xhr, textStatus ]);\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return this._options;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение записи\r\n     * @returns {object}\r\n     */\r\n    getRecord: function () {\r\n\r\n        if (this._options.hasOwnProperty('record') && typeof this._options.record === 'object') {\r\n            return this._options.record;\r\n        }\r\n\r\n        return {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение данных с формы\r\n     * @returns {object}\r\n     */\r\n    getData: function () {\r\n\r\n        let data = {};\r\n\r\n        $.each(this._fields, function (key, field) {\r\n            let fieldOptions = field.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name) {\r\n                data[fieldOptions.name] = field.getValue();\r\n            }\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение полей\r\n     * @returns {object}\r\n     */\r\n    getFields: function () {\r\n        return this._fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение элементов управления\r\n     * @returns {object}\r\n     */\r\n    getControls: function () {\r\n        return this._controls;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение групп полей\r\n     * @returns {object}\r\n     */\r\n    getGroups: function () {\r\n        return this._groups;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение поля\r\n     * @param {string} name\r\n     * @returns {object}\r\n     */\r\n    getField: function (name) {\r\n\r\n        let field = {};\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            let fieldOptions = fieldInstance.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name === name) {\r\n                field = fieldInstance;\r\n            }\r\n        });\r\n\r\n        return field;\r\n    },\r\n\r\n\r\n    /**\r\n     * Смена состояний полей формы\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            fieldInstance.readonly(isReadonly);\r\n        });\r\n\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                if (isReadonly) {\r\n                    control.hide();\r\n                } else {\r\n                    control.show();\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ всех элементов управления\r\n     */\r\n    showControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.show();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие всех элементов управления\r\n     */\r\n    hideControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.hide();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Валидация полей\r\n     * @return {boolean}\r\n     */\r\n    validate: function () {\r\n\r\n        let isValid = true;\r\n\r\n        $.each(this._fields, function (key, field) {\r\n\r\n            if (field.isValid() === false) {\r\n                field.validate(false);\r\n                isValid = false;\r\n\r\n            } else {\r\n                field.validate(null);\r\n            }\r\n        });\r\n\r\n        return isValid;\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ сообщения с ошибкой\r\n     * @param {string} message\r\n     * @param {object} options\r\n     */\r\n    showError: function (message, options) {\r\n\r\n        let formContainer = $('#coreui-form-' + this._options.id + ' > form');\r\n        let formError     = formContainer.find('> .coreui-form__error');\r\n\r\n        if (formError[0]) {\r\n            formError.remove();\r\n        }\r\n\r\n        options = typeof options === 'object' && ! Array.isArray(options) && options !== null ? options : {};\r\n\r\n        if (typeof this._options.errorClass === 'string' && this._options.errorClass !== '') {\r\n            options.class = options.hasOwnProperty('class') ? options.class : '';\r\n            options.class += ' ' + this._options.errorClass;\r\n        }\r\n\r\n        let errorOptions = {\r\n            class:   options.hasOwnProperty('class') && typeof options.class === 'string' ? options.class : '',\r\n            dismiss: options.hasOwnProperty('dismiss') ? !! options.dismiss : true,\r\n        };\r\n\r\n        formContainer.prepend(\r\n            ejs.render(tpl['form-error.html'], {\r\n                message: message,\r\n                options: errorOptions,\r\n            })\r\n        );\r\n\r\n\r\n        if ( ! options.hasOwnProperty('scroll') || options.scroll) {\r\n            let scrollOffset = coreuiForm$1.getSetting('errorMessageScrollOffset');\r\n\r\n            $('html,body').animate({\r\n                scrollTop : formContainer.offset().top - scrollOffset\r\n            }, 'fast');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие сообщения с ошибкой\r\n     */\r\n    hideError: function () {\r\n\r\n        $('#coreui-form-' + this._options.id + ' > form > .coreui-form__error').remove();\r\n    },\r\n\r\n\r\n    /**\r\n     * @param eventName\r\n     * @param callback\r\n     * @param context\r\n     * @param singleExec\r\n     */\r\n    on: function(eventName, callback, context, singleExec) {\r\n        if (typeof this._events[eventName] !== 'object') {\r\n            this._events[eventName] = [];\r\n        }\r\n        this._events[eventName].push({\r\n            context : context || this,\r\n            callback: callback,\r\n            singleExec: !! singleExec,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление формы\r\n     */\r\n    destruct: function () {\r\n\r\n        $('#coreui-form-' + this._options.id).remove();\r\n        delete coreuiForm$1._instances[this.getId()];\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация поля\r\n     * @param field\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initField: function (field) {\r\n\r\n        if (typeof field !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : 'input';\r\n\r\n        if (type === 'group') {\r\n            return null;\r\n        }\r\n\r\n        if ( ! coreuiForm$1.fields.hasOwnProperty(type)) {\r\n            type = 'input';\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            field.readonly = true;\r\n        }\r\n\r\n\r\n        let fieldInstance = $.extend(true, {\r\n            render:        function () {},\r\n            renderContent: function () {},\r\n            init:          function () {},\r\n            getValue:      function () {},\r\n            setValue:      function () {},\r\n            getOptions:    function () {},\r\n            show:          function () {},\r\n            hide:          function () {},\r\n            readonly:      function () {},\r\n            validate:      function () {},\r\n            isValid:       function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        fieldInstance.init(this, field, this._fieldsIndex++);\r\n\r\n        this._fields.push(fieldInstance);\r\n\r\n        return fieldInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация группы\r\n     * @param group\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initGroup: function (group) {\r\n\r\n        if (typeof group !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = group.hasOwnProperty('type') && typeof group.type === 'string' ? group.type : '';\r\n\r\n        if (type !== 'group') {\r\n            return null;\r\n        }\r\n\r\n        let groupInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            expand:     function () {},\r\n            collapse:   function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        groupInstance.init(this, group, this._groupsIndex++);\r\n\r\n        this._groups.push(groupInstance);\r\n\r\n        return groupInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация контролов\r\n     * @param control\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initControl: function (control) {\r\n\r\n        if (typeof control !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : null;\r\n\r\n        if ( ! type || ! coreuiForm$1.controls.hasOwnProperty(type)) {\r\n            return null;\r\n        }\r\n\r\n        if (type === 'submit' && this._options.readonly) {\r\n            control.show = false;\r\n        }\r\n\r\n\r\n        let controlInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            show:       function () {},\r\n            hide:       function () {},\r\n        }, coreuiForm$1.controls[type]);\r\n\r\n        controlInstance.init(this, control, this._controlsIndex++);\r\n\r\n        this._controls.push(controlInstance);\r\n\r\n        return controlInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение настроек языка\r\n     * @private\r\n     */\r\n    getLang: function () {\r\n\r\n        return coreuiForm$1.lang.hasOwnProperty(this._options.lang)\r\n            ? coreuiForm$1.lang[this._options.lang]\r\n            : coreuiForm$1.lang['ru'];\r\n    },\r\n\r\n\r\n    /**\r\n     * @param name\r\n     * @param context\r\n     * @param params\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _trigger: function(name, context, params) {\r\n\r\n        params = params || [];\r\n        let results = [];\r\n\r\n        if (this._events[name] instanceof Object && this._events[name].length > 0) {\r\n            for (var i = 0; i < this._events[name].length; i++) {\r\n                let callback = this._events[name][i].callback;\r\n\r\n                context = context || this._events[name][i].context;\r\n\r\n                results.push(\r\n                    callback.apply(context, params)\r\n                );\r\n\r\n                if (this._events[name][i].singleExec) {\r\n                    this._events[name].splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n\r\n    /**\r\n     * @param {object} control\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderControl: function (control) {\r\n\r\n        let content = '';\r\n        let type    = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : 'text';\r\n\r\n        if (coreuiForm$1.control.hasOwnProperty(type)) {\r\n            content = coreuiForm$1.control[type].render(control);\r\n        }\r\n\r\n        return content;\r\n    }\r\n};\n\nvar coreuiForm$1 = {\r\n\r\n    lang: {},\r\n    fields: {},\r\n    controls: {},\r\n\r\n    _instances: {},\r\n    _settings: {\r\n        labelWidth: 200,\r\n        lang: 'en',\r\n        class: '',\r\n        errorMessageScrollOffset: 70\r\n    },\r\n\r\n\r\n    /**\r\n     * Создание экземпляра формы\r\n     * @param {object} options\r\n     * @returns {coreuiFormInstance}\r\n     */\r\n    create: function (options) {\r\n\r\n        let instance = $.extend(true, {}, coreuiFormInstance);\r\n        instance._init(options instanceof Object ? options : {});\r\n\r\n        let formId = instance.getId();\r\n        this._instances[formId] = instance;\r\n\r\n        return instance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение экземпляра формы по id\r\n     * @param {string} id\r\n     * @returns {coreuiFormInstance|null}\r\n     */\r\n    get: function (id) {\r\n\r\n        if ( ! this._instances.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        if ($('#coreui-form-' + this._instances[id])[0]) {\r\n            delete this._instances[id];\r\n            return null;\r\n        }\r\n\r\n        return this._instances[id];\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка настроек\r\n     * @param {object} settings\r\n     */\r\n    setSettings: function(settings) {\r\n\r\n        this._settings = $.extend({}, this._settings, settings);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения настройки\r\n     * @param {string} name\r\n     */\r\n    getSetting: function(name) {\r\n\r\n        let value = null;\r\n\r\n        if (this._settings.hasOwnProperty(name)) {\r\n            value = this._settings[name];\r\n        }\r\n\r\n        return value;\r\n    }\r\n};\n\ncoreuiForm$1.lang.ru = {\r\n    \"modal_select\": \"Выбрать\",\r\n    \"modal_loading\": \"Загрузка...\",\r\n    \"switch_yes\": \"Да\",\r\n    \"switch_no\": \"Нет\",\r\n    \"dataset_add\": \"Добавить\",\r\n    \"date_months\": ['Январь','Февраль','Март','Апрель','Май','Июнь', 'Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\r\n    \"date_week\": \"неделя\",\r\n    \"send_error\": \"Произошла ошибка. Попробуйте снова или обратитесь к администратору\",\r\n    \"required_field\": \"Обязательное поле\",\r\n    \"repeat\": \"повторите\",\r\n    \"change\": \"изменить\",\r\n    \"cancel\": \"отмена\"\r\n};\n\ncoreuiForm$1.lang.en = {\r\n    \"modal_select\": \"Select\",\r\n    \"modal_loading\": \"Loading...\",\r\n    \"switch_yes\": \"Yes\",\r\n    \"switch_no\": \"No\",\r\n    \"dataset_add\": \"Add\",\r\n    \"date_months\": [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\r\n    \"date_week\": \"week\",\r\n    \"send_error\": \"An error has occurred. Please try again or contact your administrator\",\r\n    \"required_field\": \"Required field\",\r\n    \"repeat\": \"repeat\",\r\n    \"change\": \"change\",\r\n    \"cancel\": \"cancel\"\r\n};\n\ncoreuiForm$1.controls.button = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'button',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-secondary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'button';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils$1.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.custom = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'custom',\r\n        content: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form   = form;\r\n        this._index   = index;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return this._options.content;\r\n    }\r\n};\n\ncoreuiForm$1.controls.link = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'link',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-link'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/link.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > a')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.submit = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'submit',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        show: true,\r\n        attr: {\r\n            class: 'btn btn-sm btn-primary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    unlock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        button.find('.spinner-border').remove();\r\n        button.removeAttr('disabled');\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'submit';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.checkbox = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'checkbox',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: null,\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {object}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let values = [];\r\n\r\n            $('.content-' + this._hash + ' input[type=checkbox]:checked').each(function () {\r\n                values.push($(this).val());\r\n            });\r\n\r\n            return values;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значений в поле\r\n     * @param {object|null|string|number} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=radio]').prop('checked', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' input[type=radio]').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('checked', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that            = this;\r\n        let checkboxOptions = [];\r\n        let fieldOptions    = this.getOptions();\r\n        let selectedItems   = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'checkbox',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils$1.hashCode();\r\n\r\n                if (typeof(that._value) === 'object' &&\r\n                    Array.isArray(that._value)\r\n                ) {\r\n                    $.each(that._value, function (key, itemValue) {\r\n                        if (itemValue == option.value) {\r\n                            itemAttr.checked = 'checked';\r\n                            if (option.hasOwnProperty('text') && option.text) {\r\n                                selectedItems.push(option.text);\r\n                            }\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                } else if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItems.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                checkboxOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        let value = typeof this._value === 'object' && Array.isArray(this._value)\r\n            ? this._value.join(', ')\r\n            : this._value;\r\n\r\n        return ejs.render(tpl['fields/checkbox.html'], {\r\n            field: fieldOptions,\r\n            value: value,\r\n            render: {\r\n                options: checkboxOptions,\r\n                selectedItems: selectedItems\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.color = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'color',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-color d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            value: this._value\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.custom = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _options: {\r\n        type: 'custom',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        content: '',\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     */\r\n    getValue: function () {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options         = this.getOptions();\r\n        let content         = '';\r\n        let alloyComponents = [\r\n            'coreui.table',\r\n            'coreui.layout',\r\n            'coreui.panel',\r\n            'coreui.tabs',\r\n            'coreui.info',\r\n            'coreui.chart',\r\n        ];\r\n\r\n        if (typeof options.content === 'string') {\r\n            content = options.content;\r\n\r\n        } else if (options.content instanceof Object) {\r\n            if ( ! Array.isArray(options.content)) {\r\n                options.content = [ options.content ];\r\n            }\r\n\r\n            let components = [];\r\n\r\n            for (let i = 0; i < options.content.length; i++) {\r\n                if (typeof options.content[i] === 'string') {\r\n                    components.push(options.content[i]);\r\n\r\n                } else if ( ! Array.isArray(options.content[i]) &&\r\n                        options.content[i].hasOwnProperty('component') &&\r\n                        alloyComponents.indexOf(options.content[i].component) >= 0\r\n                ) {\r\n                    let name = options.content[i].component.split('.')[1];\r\n\r\n                    if (CoreUI.hasOwnProperty(name) &&\r\n                        typeof CoreUI[name] === \"object\" &&\r\n                        CoreUI[name] !== null &&\r\n                        ! Array.isArray(CoreUI[name])\r\n                    ) {\r\n                        let instance = CoreUI[name].create(options.content[i]);\r\n                        components.push(instance.render());\r\n\r\n                        this._form.on('shown.coreui.form', instance.initEvents, instance, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            content = components.join('');\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/custom.html'], {\r\n            content: content\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.dataset = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: [],\r\n    _renderOptions: [],\r\n    _options: {\r\n        type: 'dataset',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let name = option.hasOwnProperty('name') && ['string', 'number'].indexOf(typeof (option.name)) >= 0\r\n                    ? option.name\r\n                    : '';\r\n                let type = option.hasOwnProperty('type') && typeof (option.type) === 'string'\r\n                    ? option.type\r\n                    : 'text';\r\n                let attributes = option.hasOwnProperty('attr') && typeof (option.attr) === 'object' && ! Array.isArray(option.attr)\r\n                    ? option.attr\r\n                    : {};\r\n                let items = option.hasOwnProperty('items') && typeof (option.items) === 'object' && Array.isArray(option.items)\r\n                    ? option.items\r\n                    : [];\r\n                let valueY = option.hasOwnProperty('valueY') && ['string', 'numeric'].indexOf(typeof (option.valueY)) >= 0\r\n                    ? option.valueY\r\n                    : 'Y';\r\n                let valueN = option.hasOwnProperty('valueN') && ['string', 'numeric'].indexOf(typeof (option.valueN)) >= 0\r\n                    ? option.valueN\r\n                    : 'N';\r\n\r\n                if (name) {\r\n                    attributes.name = name;\r\n                }\r\n                if (options.required) {\r\n                    attributes.required = 'required';\r\n                }\r\n\r\n                if (type === 'select') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-select form-select-sm ' + attributes.class\r\n                        : 'form-select form-select-sm';\r\n\r\n                } else if (type === 'switch') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-check-input ' + attributes.class\r\n                        : 'form-check-input';\r\n\r\n                    attributes.type = 'checkbox';\r\n                    attributes.value = valueY;\r\n\r\n                } else {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-control form-control-sm ' + attributes.class\r\n                        : 'form-control form-control-sm';\r\n\r\n                    attributes.type = type;\r\n                }\r\n\r\n\r\n                that._renderOptions.push({\r\n                    type  : type,\r\n                    name  : name,\r\n                    attr  : attributes,\r\n                    items : items,\r\n                    valueY: valueY,\r\n                    valueN: valueN,\r\n                });\r\n            });\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {array}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let container = $('.content-' + this._hash);\r\n            let data      = [];\r\n\r\n            $('.coreui-form__field-dataset-list .coreui-form__field-dataset-item', container).each(function () {\r\n                let items = {};\r\n\r\n                $.each($(this).find('input, select').serializeArray(), function (key, item) {\r\n                    if (item.name) {\r\n                        items[item.name] = item.value;\r\n                    }\r\n                });\r\n\r\n                data.push(items);\r\n            });\r\n\r\n            return data;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (typeof value !== 'object' ||\r\n            Array.isArray(value) ||\r\n            value === null\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this._value.push(value);\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash + ' .coreui-form__field-dataset-list').append(\r\n                this._renderRowReadonly(value)\r\n            );\r\n        } else {\r\n            this._eventAdd(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление всех строк\r\n     */\r\n    removeItems: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' .coreui-form__field-dataset-list').empty();\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление строки по id\r\n     * @param {int} itemId\r\n     */\r\n    removeItem: function (itemId) {\r\n\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        $('#' + itemId).hide('fast', function () {\r\n            $('#' + itemId).remove();\r\n\r\n            if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n                $(element + ' .coreui-form__field-dataset-container').hide();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRow(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRowReadonly(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        // Кнопка удаления\r\n        $(element + ' .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n\r\n        // Кнопка добавления\r\n        $(element + ' .btn-dataset-add').click(function () {\r\n            that._eventAdd();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Событие добавления\r\n     */\r\n    _eventAdd: function (row) {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n        row = row || {};\r\n\r\n        if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n            $(element + ' .coreui-form__field-dataset-container').show();\r\n        }\r\n\r\n        $(element + ' .coreui-form__field-dataset-list').append(this._renderRow(row));\r\n        $(element + ' .coreui-form__field-dataset-item:last-child .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRow: function (row) {\r\n\r\n        let rowOptions  = [];\r\n        let itemOptions = [];\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let cellValue = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n                    let itemAttr = {};\r\n\r\n\r\n                    $.each(item, function (name, value) {\r\n                        if (name !== 'title') {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    });\r\n\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemAttr.selected = 'selected';\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemAttr.selected = 'selected';\r\n                    }\r\n\r\n                    let attributes = [];\r\n                    $.each(itemAttr, function (name, value) {\r\n                        attributes.push(name + '=\"' + value + '\"');\r\n                    });\r\n\r\n                    itemOptions.push({\r\n                        attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                        title: title\r\n                    });\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                if (cellValue == option.valueY) {\r\n                    option.attr.checked = 'checked';\r\n                }\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    option.attr.value = cellValue;\r\n                }\r\n            }\r\n\r\n            let attributes = [];\r\n\r\n            $.each(option.attr, function (name, value) {\r\n                attributes.push(name + '=\"' + value + '\"');\r\n            });\r\n\r\n            rowOptions.push({\r\n                type: option.type,\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                items: itemOptions\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row.html'], {\r\n            hashItem: coreuiFormUtils$1.hashCode(),\r\n            options: rowOptions,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRowReadonly: function (row) {\r\n\r\n        let rowOptions = [];\r\n        let lang       = this._form.getLang();\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let optionValue = '';\r\n            let cellValue   = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                let itemOptions = [];\r\n\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemOptions.push(itemValue);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemOptions.push(cellValue);\r\n                    }\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                let valueY = 'Y';\r\n\r\n                if (option.hasOwnProperty('valueY')) {\r\n                    valueY = option.valueY;\r\n                }\r\n\r\n                optionValue = cellValue == valueY\r\n                    ? lang.switch_yes\r\n                    : lang.switch_no;\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    optionValue = cellValue;\r\n\r\n                    switch (option.type) {\r\n                        case 'date':           optionValue = coreuiFormUtils$1.formatDate(optionValue); break;\r\n                        case 'datetime-local': optionValue = coreuiFormUtils$1.formatDateTime(optionValue); break;\r\n                        case 'month':          optionValue = coreuiFormUtils$1.formatDateMonth(optionValue, lang); break;\r\n                        case 'week':           optionValue = coreuiFormUtils$1.formatDateWeek(optionValue, lang); break;\r\n                        default: optionValue = cellValue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            rowOptions.push({\r\n                value: optionValue\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row-readonly.html'], {\r\n            options: rowOptions,\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.group = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _options: {\r\n        type: 'group',\r\n        label: '',\r\n        show: true,\r\n        showCollapsible: true,\r\n        fields: [],\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-group-\" + index;\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие группы\r\n     * @param {int} duration\r\n     */\r\n    collapse: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-down');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-right');\r\n\r\n        $(container + ' .coreui-form__group_content').slideUp(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ группы\r\n     * @param {int} duration\r\n     */\r\n    expand: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-right');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-down');\r\n\r\n        $(container + ' .coreui-form__group_content').slideDown(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-group.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            group: this._options,\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {string}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fields = [];\r\n        let that   = this;\r\n\r\n        $.each(this._options.fields, function (key, field) {\r\n\r\n            let fieldInstance = that._form.initField(field);\r\n\r\n            if (typeof fieldInstance !== 'object') {\r\n                return;\r\n            }\r\n\r\n            fields.push(fieldInstance.render());\r\n        });\r\n\r\n        return fields.join('');\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.showCollapsible) {\r\n            let that      = this;\r\n            let container = '#coreui-form-' + this._id;\r\n\r\n            $(container + ' > .coreui-form__group_label .btn-collapsible').click(function () {\r\n\r\n                if ($(container + ' > .coreui-form__group_content').is(':visible')) {\r\n                    that.collapse(80);\r\n                } else {\r\n                    that.expand(80);\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.hidden = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'hidden',\r\n        name: null,\r\n        attr: {},\r\n        required: null,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('#coreui-form-' + this._id).val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if ( ! this._options.readonly) {\r\n            $('#coreui-form-' + this._id).val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-content.html'], {\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n\r\n        options.attr.id = 'coreui-form-' + this._id;\r\n\r\n        if (options.name) {\r\n            options.attr.name = options.name;\r\n        }\r\n\r\n        options.attr.type  = 'hidden';\r\n        options.attr.value = this._value;\r\n\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/hidden.html'], {\r\n            value: this._value,\r\n            field: options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.input = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'text',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils$1.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils$1.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils$1.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils$1.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\n/**\n * jquery.mask.js\n * @version: v1.14.16\n * @author: Igor Escobar\n *\n * Created by Igor Escobar on 2012-03-10. Please report any bug at github.com/igorescobar/jQuery-Mask-Plugin\n *\n * Copyright (c) 2012 Igor Escobar http://igorescobar.com\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* jshint laxbreak: true */\n/* jshint maxcomplexity:17 */\n/* global define */\n\n// UMD (Universal Module Definition) patterns for JavaScript modules that work everywhere.\n// https://github.com/umdjs/umd/blob/master/templates/jqueryPlugin.js\n(function (factory, jQuery, Zepto) {\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object' && typeof Meteor === 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery || Zepto);\n    }\n\n}(function ($) {\n    'use strict';\n\n    var Mask = function (el, mask, options) {\n\n        var p = {\n            invalid: [],\n            getCaret: function () {\n                try {\n                    var sel,\n                        pos = 0,\n                        ctrl = el.get(0),\n                        dSel = document.selection,\n                        cSelStart = ctrl.selectionStart;\n\n                    // IE Support\n                    if (dSel && navigator.appVersion.indexOf('MSIE 10') === -1) {\n                        sel = dSel.createRange();\n                        sel.moveStart('character', -p.val().length);\n                        pos = sel.text.length;\n                    }\n                    // Firefox support\n                    else if (cSelStart || cSelStart === '0') {\n                        pos = cSelStart;\n                    }\n\n                    return pos;\n                } catch (e) {}\n            },\n            setCaret: function(pos) {\n                try {\n                    if (el.is(':focus')) {\n                        var range, ctrl = el.get(0);\n\n                        // Firefox, WebKit, etc..\n                        if (ctrl.setSelectionRange) {\n                            ctrl.setSelectionRange(pos, pos);\n                        } else { // IE\n                            range = ctrl.createTextRange();\n                            range.collapse(true);\n                            range.moveEnd('character', pos);\n                            range.moveStart('character', pos);\n                            range.select();\n                        }\n                    }\n                } catch (e) {}\n            },\n            events: function() {\n                el\n                .on('keydown.mask', function(e) {\n                    el.data('mask-keycode', e.keyCode || e.which);\n                    el.data('mask-previus-value', el.val());\n                    el.data('mask-previus-caret-pos', p.getCaret());\n                    p.maskDigitPosMapOld = p.maskDigitPosMap;\n                })\n                .on($.jMaskGlobals.useInput ? 'input.mask' : 'keyup.mask', p.behaviour)\n                .on('paste.mask drop.mask', function() {\n                    setTimeout(function() {\n                        el.keydown().keyup();\n                    }, 100);\n                })\n                .on('change.mask', function(){\n                    el.data('changed', true);\n                })\n                .on('blur.mask', function(){\n                    if (oldValue !== p.val() && !el.data('changed')) {\n                        el.trigger('change');\n                    }\n                    el.data('changed', false);\n                })\n                // it's very important that this callback remains in this position\n                // otherwhise oldValue it's going to work buggy\n                .on('blur.mask', function() {\n                    oldValue = p.val();\n                })\n                // select all text on focus\n                .on('focus.mask', function (e) {\n                    if (options.selectOnFocus === true) {\n                        $(e.target).select();\n                    }\n                })\n                // clear the value if it not complete the mask\n                .on('focusout.mask', function() {\n                    if (options.clearIfNotMatch && !regexMask.test(p.val())) {\n                       p.val('');\n                   }\n                });\n            },\n            getRegexMask: function() {\n                var maskChunks = [], translation, pattern, optional, recursive, oRecursive, r;\n\n                for (var i = 0; i < mask.length; i++) {\n                    translation = jMask.translation[mask.charAt(i)];\n\n                    if (translation) {\n\n                        pattern = translation.pattern.toString().replace(/.{1}$|^.{1}/g, '');\n                        optional = translation.optional;\n                        recursive = translation.recursive;\n\n                        if (recursive) {\n                            maskChunks.push(mask.charAt(i));\n                            oRecursive = {digit: mask.charAt(i), pattern: pattern};\n                        } else {\n                            maskChunks.push(!optional && !recursive ? pattern : (pattern + '?'));\n                        }\n\n                    } else {\n                        maskChunks.push(mask.charAt(i).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n                    }\n                }\n\n                r = maskChunks.join('');\n\n                if (oRecursive) {\n                    r = r.replace(new RegExp('(' + oRecursive.digit + '(.*' + oRecursive.digit + ')?)'), '($1)?')\n                         .replace(new RegExp(oRecursive.digit, 'g'), oRecursive.pattern);\n                }\n\n                return new RegExp(r);\n            },\n            destroyEvents: function() {\n                el.off(['input', 'keydown', 'keyup', 'paste', 'drop', 'blur', 'focusout', ''].join('.mask '));\n            },\n            val: function(v) {\n                var isInput = el.is('input'),\n                    method = isInput ? 'val' : 'text',\n                    r;\n\n                if (arguments.length > 0) {\n                    if (el[method]() !== v) {\n                        el[method](v);\n                    }\n                    r = el;\n                } else {\n                    r = el[method]();\n                }\n\n                return r;\n            },\n            calculateCaretPosition: function(oldVal) {\n                var newVal = p.getMasked(),\n                    caretPosNew = p.getCaret();\n                if (oldVal !== newVal) {\n                    var caretPosOld = el.data('mask-previus-caret-pos') || 0,\n                        newValL = newVal.length,\n                        oldValL = oldVal.length,\n                        maskDigitsBeforeCaret = 0,\n                        maskDigitsAfterCaret = 0,\n                        maskDigitsBeforeCaretAll = 0,\n                        maskDigitsBeforeCaretAllOld = 0,\n                        i = 0;\n\n                    for (i = caretPosNew; i < newValL; i++) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsAfterCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsBeforeCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMap[i]) {\n                            maskDigitsBeforeCaretAll++;\n                        }\n                    }\n\n                    for (i = caretPosOld - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMapOld[i]) {\n                            maskDigitsBeforeCaretAllOld++;\n                        }\n                    }\n\n                    // if the cursor is at the end keep it there\n                    if (caretPosNew > oldValL) {\n                      caretPosNew = newValL * 10;\n                    } else if (caretPosOld >= caretPosNew && caretPosOld !== oldValL) {\n                        if (!p.maskDigitPosMapOld[caretPosNew])  {\n                          var caretPos = caretPosNew;\n                          caretPosNew -= maskDigitsBeforeCaretAllOld - maskDigitsBeforeCaretAll;\n                          caretPosNew -= maskDigitsBeforeCaret;\n                          if (p.maskDigitPosMap[caretPosNew])  {\n                            caretPosNew = caretPos;\n                          }\n                        }\n                    }\n                    else if (caretPosNew > caretPosOld) {\n                        caretPosNew += maskDigitsBeforeCaretAll - maskDigitsBeforeCaretAllOld;\n                        caretPosNew += maskDigitsAfterCaret;\n                    }\n                }\n                return caretPosNew;\n            },\n            behaviour: function(e) {\n                e = e || window.event;\n                p.invalid = [];\n\n                var keyCode = el.data('mask-keycode');\n\n                if ($.inArray(keyCode, jMask.byPassKeys) === -1) {\n                    var newVal = p.getMasked(),\n                        caretPos = p.getCaret(),\n                        oldVal = el.data('mask-previus-value') || '';\n\n                    // this is a compensation to devices/browsers that don't compensate\n                    // caret positioning the right way\n                    setTimeout(function() {\n                      p.setCaret(p.calculateCaretPosition(oldVal));\n                    }, $.jMaskGlobals.keyStrokeCompensation);\n\n                    p.val(newVal);\n                    p.setCaret(caretPos);\n                    return p.callbacks(e);\n                }\n            },\n            getMasked: function(skipMaskChars, val) {\n                var buf = [],\n                    value = val === undefined ? p.val() : val + '',\n                    m = 0, maskLen = mask.length,\n                    v = 0, valLen = value.length,\n                    offset = 1, addMethod = 'push',\n                    resetPos = -1,\n                    maskDigitCount = 0,\n                    maskDigitPosArr = [],\n                    lastMaskChar,\n                    check;\n\n                if (options.reverse) {\n                    addMethod = 'unshift';\n                    offset = -1;\n                    lastMaskChar = 0;\n                    m = maskLen - 1;\n                    v = valLen - 1;\n                    check = function () {\n                        return m > -1 && v > -1;\n                    };\n                } else {\n                    lastMaskChar = maskLen - 1;\n                    check = function () {\n                        return m < maskLen && v < valLen;\n                    };\n                }\n\n                var lastUntranslatedMaskChar;\n                while (check()) {\n                    var maskDigit = mask.charAt(m),\n                        valDigit = value.charAt(v),\n                        translation = jMask.translation[maskDigit];\n\n                    if (translation) {\n                        if (valDigit.match(translation.pattern)) {\n                            buf[addMethod](valDigit);\n                             if (translation.recursive) {\n                                if (resetPos === -1) {\n                                    resetPos = m;\n                                } else if (m === lastMaskChar && m !== resetPos) {\n                                    m = resetPos - offset;\n                                }\n\n                                if (lastMaskChar === resetPos) {\n                                    m -= offset;\n                                }\n                            }\n                            m += offset;\n                        } else if (valDigit === lastUntranslatedMaskChar) {\n                            // matched the last untranslated (raw) mask character that we encountered\n                            // likely an insert offset the mask character from the last entry; fall\n                            // through and only increment v\n                            maskDigitCount--;\n                            lastUntranslatedMaskChar = undefined;\n                        } else if (translation.optional) {\n                            m += offset;\n                            v -= offset;\n                        } else if (translation.fallback) {\n                            buf[addMethod](translation.fallback);\n                            m += offset;\n                            v -= offset;\n                        } else {\n                          p.invalid.push({p: v, v: valDigit, e: translation.pattern});\n                        }\n                        v += offset;\n                    } else {\n                        if (!skipMaskChars) {\n                            buf[addMethod](maskDigit);\n                        }\n\n                        if (valDigit === maskDigit) {\n                            maskDigitPosArr.push(v);\n                            v += offset;\n                        } else {\n                            lastUntranslatedMaskChar = maskDigit;\n                            maskDigitPosArr.push(v + maskDigitCount);\n                            maskDigitCount++;\n                        }\n\n                        m += offset;\n                    }\n                }\n\n                var lastMaskCharDigit = mask.charAt(lastMaskChar);\n                if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {\n                    buf.push(lastMaskCharDigit);\n                }\n\n                var newVal = buf.join('');\n                p.mapMaskdigitPositions(newVal, maskDigitPosArr, valLen);\n                return newVal;\n            },\n            mapMaskdigitPositions: function(newVal, maskDigitPosArr, valLen) {\n              var maskDiff = options.reverse ? newVal.length - valLen : 0;\n              p.maskDigitPosMap = {};\n              for (var i = 0; i < maskDigitPosArr.length; i++) {\n                p.maskDigitPosMap[maskDigitPosArr[i] + maskDiff] = 1;\n              }\n            },\n            callbacks: function (e) {\n                var val = p.val(),\n                    changed = val !== oldValue,\n                    defaultArgs = [val, e, el, options],\n                    callback = function(name, criteria, args) {\n                        if (typeof options[name] === 'function' && criteria) {\n                            options[name].apply(this, args);\n                        }\n                    };\n\n                callback('onChange', changed === true, defaultArgs);\n                callback('onKeyPress', changed === true, defaultArgs);\n                callback('onComplete', val.length === mask.length, defaultArgs);\n                callback('onInvalid', p.invalid.length > 0, [val, e, el, p.invalid, options]);\n            }\n        };\n\n        el = $(el);\n        var jMask = this, oldValue = p.val(), regexMask;\n\n        mask = typeof mask === 'function' ? mask(p.val(), undefined, el,  options) : mask;\n\n        // public methods\n        jMask.mask = mask;\n        jMask.options = options;\n        jMask.remove = function() {\n            var caret = p.getCaret();\n            if (jMask.options.placeholder) {\n                el.removeAttr('placeholder');\n            }\n            if (el.data('mask-maxlength')) {\n                el.removeAttr('maxlength');\n            }\n            p.destroyEvents();\n            p.val(jMask.getCleanVal());\n            p.setCaret(caret);\n            return el;\n        };\n\n        // get value without mask\n        jMask.getCleanVal = function() {\n           return p.getMasked(true);\n        };\n\n        // get masked value without the value being in the input or element\n        jMask.getMaskedVal = function(val) {\n           return p.getMasked(false, val);\n        };\n\n       jMask.init = function(onlyMask) {\n            onlyMask = onlyMask || false;\n            options = options || {};\n\n            jMask.clearIfNotMatch  = $.jMaskGlobals.clearIfNotMatch;\n            jMask.byPassKeys       = $.jMaskGlobals.byPassKeys;\n            jMask.translation      = $.extend({}, $.jMaskGlobals.translation, options.translation);\n\n            jMask = $.extend(true, {}, jMask, options);\n\n            regexMask = p.getRegexMask();\n\n            if (onlyMask) {\n                p.events();\n                p.val(p.getMasked());\n            } else {\n                if (options.placeholder) {\n                    el.attr('placeholder' , options.placeholder);\n                }\n\n                // this is necessary, otherwise if the user submit the form\n                // and then press the \"back\" button, the autocomplete will erase\n                // the data. Works fine on IE9+, FF, Opera, Safari.\n                if (el.data('mask')) {\n                  el.attr('autocomplete', 'off');\n                }\n\n                // detect if is necessary let the user type freely.\n                // for is a lot faster than forEach.\n                for (var i = 0, maxlength = true; i < mask.length; i++) {\n                    var translation = jMask.translation[mask.charAt(i)];\n                    if (translation && translation.recursive) {\n                        maxlength = false;\n                        break;\n                    }\n                }\n\n                if (maxlength) {\n                    el.attr('maxlength', mask.length).data('mask-maxlength', true);\n                }\n\n                p.destroyEvents();\n                p.events();\n\n                var caret = p.getCaret();\n                p.val(p.getMasked());\n                p.setCaret(caret);\n            }\n        };\n\n        jMask.init(!el.is('input'));\n    };\n\n    $.maskWatchers = {};\n    var HTMLAttributes = function () {\n        var input = $(this),\n            options = {},\n            prefix = 'data-mask-',\n            mask = input.attr('data-mask');\n\n        if (input.attr(prefix + 'reverse')) {\n            options.reverse = true;\n        }\n\n        if (input.attr(prefix + 'clearifnotmatch')) {\n            options.clearIfNotMatch = true;\n        }\n\n        if (input.attr(prefix + 'selectonfocus') === 'true') {\n           options.selectOnFocus = true;\n        }\n\n        if (notSameMaskObject(input, mask, options)) {\n            return input.data('mask', new Mask(this, mask, options));\n        }\n    },\n    notSameMaskObject = function(field, mask, options) {\n        options = options || {};\n        var maskObject = $(field).data('mask'),\n            stringify = JSON.stringify,\n            value = $(field).val() || $(field).text();\n        try {\n            if (typeof mask === 'function') {\n                mask = mask(value);\n            }\n            return typeof maskObject !== 'object' || stringify(maskObject.options) !== stringify(options) || maskObject.mask !== mask;\n        } catch (e) {}\n    },\n    eventSupported = function(eventName) {\n        var el = document.createElement('div'), isSupported;\n\n        eventName = 'on' + eventName;\n        isSupported = (eventName in el);\n\n        if ( !isSupported ) {\n            el.setAttribute(eventName, 'return;');\n            isSupported = typeof el[eventName] === 'function';\n        }\n        el = null;\n\n        return isSupported;\n    };\n\n    $.fn.mask = function(mask, options) {\n        options = options || {};\n        var selector = this.selector,\n            globals = $.jMaskGlobals,\n            interval = globals.watchInterval,\n            watchInputs = options.watchInputs || globals.watchInputs,\n            maskFunction = function() {\n                if (notSameMaskObject(this, mask, options)) {\n                    return $(this).data('mask', new Mask(this, mask, options));\n                }\n            };\n\n        $(this).each(maskFunction);\n\n        if (selector && selector !== '' && watchInputs) {\n            clearInterval($.maskWatchers[selector]);\n            $.maskWatchers[selector] = setInterval(function(){\n                $(document).find(selector).each(maskFunction);\n            }, interval);\n        }\n        return this;\n    };\n\n    $.fn.masked = function(val) {\n        return this.data('mask').getMaskedVal(val);\n    };\n\n    $.fn.unmask = function() {\n        clearInterval($.maskWatchers[this.selector]);\n        delete $.maskWatchers[this.selector];\n        return this.each(function() {\n            var dataMask = $(this).data('mask');\n            if (dataMask) {\n                dataMask.remove().removeData('mask');\n            }\n        });\n    };\n\n    $.fn.cleanVal = function() {\n        return this.data('mask').getCleanVal();\n    };\n\n    $.applyDataMask = function(selector) {\n        selector = selector || $.jMaskGlobals.maskElements;\n        var $selector = (selector instanceof $) ? selector : $(selector);\n        $selector.filter($.jMaskGlobals.dataMaskAttr).each(HTMLAttributes);\n    };\n\n    var globals = {\n        maskElements: 'input,td,span,div',\n        dataMaskAttr: '*[data-mask]',\n        dataMask: true,\n        watchInterval: 300,\n        watchInputs: true,\n        keyStrokeCompensation: 10,\n        // old versions of chrome dont work great with input event\n        useInput: !/Chrome\\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && eventSupported('input'),\n        watchDataMask: false,\n        byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91],\n        translation: {\n            '0': {pattern: /\\d/},\n            '9': {pattern: /\\d/, optional: true},\n            '#': {pattern: /\\d/, recursive: true},\n            'A': {pattern: /[a-zA-Z0-9]/},\n            'S': {pattern: /[a-zA-Z]/}\n        }\n    };\n\n    $.jMaskGlobals = $.jMaskGlobals || {};\n    globals = $.jMaskGlobals = $.extend(true, {}, globals, $.jMaskGlobals);\n\n    // looking for inputs with data-mask attribute\n    if (globals.dataMask) {\n        $.applyDataMask();\n    }\n\n    setInterval(function() {\n        if ($.jMaskGlobals.watchDataMask) {\n            $.applyDataMask();\n        }\n    }, globals.watchInterval);\n}, window.jQuery, window.Zepto));\n\ncoreuiForm$1.fields.mask = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'mask',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        value = value.replace(/[^\\d\\w]/g, '');\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'text';\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: this._value\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' input')\r\n            .mask(this._options.mask, this._options.options);\r\n    }\r\n};\n\ncoreuiForm$1.fields.modal = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: '',\r\n    _text: '',\r\n    _options: {\r\n        type: 'modal',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        fields: [],\r\n        options: {\r\n            title: '',\r\n            size: 'lg',\r\n            url: '',\r\n            onHidden: null,\r\n            onClear: null,\r\n            onChange: null,\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n\r\n        if (typeof options.name === 'string' &&\r\n            formRecord.hasOwnProperty(options.name) &&\r\n            ['object'].indexOf(typeof formRecord[options.name]) >= 0\r\n        ) {\r\n            let record = formRecord[options.name];\r\n\r\n            this._value = record.hasOwnProperty('value') && ['number', 'string'].indexOf(typeof(record.value)) >= 0 ? record.value : '';\r\n            this._text  = record.hasOwnProperty('text') && ['number', 'string'].indexOf(typeof(record.text)) >= 0 ? record.text : '';\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input.coreui-form-modal-value').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     * @param {string} text\r\n     */\r\n    setValue: function (value, text) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(text);\r\n\r\n        } else {\r\n            let elementValue = $('.content-' + this._hash + ' .coreui-form-modal-value');\r\n            let elementText  = $('.content-' + this._hash + ' .coreui-form-modal-text');\r\n            let oldValue     = elementValue.val();\r\n\r\n            elementValue.val(value);\r\n            elementText.val(text);\r\n\r\n\r\n            if (oldValue != value) {\r\n                let modal = this._options.hasOwnProperty('options') && typeof (this._options.options) === 'object'\r\n                    ? this._options.options\r\n                    : {};\r\n\r\n                if (modal.hasOwnProperty('onChange')) {\r\n                    if (typeof(modal.onChange) === 'function') {\r\n                        modal.onChange(this);\r\n\r\n                    } else if (typeof(modal.onChange) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onChange);\r\n\r\n                        if (typeof func === 'function') {\r\n                            func(this);\r\n                        } else {\r\n                            eval(modal.onChange);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this._form._trigger('change-modal.coreui.form', this, [this]);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fieldOptions = this.getOptions();\r\n        let attributes   = [];\r\n        let textAttr     = {\r\n            type: 'text',\r\n            readonly: 'readonly',\r\n            class: 'form-control form-control-sm coreui-form-modal-text',\r\n            value: this._text\r\n        };\r\n\r\n        if (fieldOptions.required) {\r\n            textAttr.required = 'required';\r\n        }\r\n\r\n        if (fieldOptions.hasOwnProperty('attr') &&\r\n            typeof fieldOptions.attr === 'object' &&\r\n            Array.isArray(fieldOptions.attr)\r\n        ) {\r\n            textAttr = coreuiFormUtils$1.mergeAttr(textAttr, fieldOptions.attr);\r\n        }\r\n\r\n        $.each(textAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/modal.html'], {\r\n            field: fieldOptions,\r\n            value: this._value,\r\n            text: this._text,\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                width: this._options.width,\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that  = this;\r\n        let modal = this._options.hasOwnProperty('options') && typeof(this._options.options) === 'object'\r\n            ? this._options.options\r\n            : {};\r\n\r\n\r\n        // Очистка\r\n        $('.content-' + this._hash + ' .btn-modal-clear').click(function (e) {\r\n            if (modal.hasOwnProperty('onClear')) {\r\n                if (typeof(modal.onClear) === 'function') {\r\n                    modal.onClear(that);\r\n\r\n                } else if (typeof(modal.onClear) === 'string') {\r\n                    let func = coreuiFormUtils$1.getFunctionByName(modal.onClear);\r\n\r\n                    if (typeof func === 'function') {\r\n                        func(that);\r\n                    } else {\r\n                        eval(modal.onClear);\r\n                    }\r\n                }\r\n            }\r\n\r\n            that._form._trigger('clear-modal.coreui.form', that, [ that, e ]);\r\n\r\n            that.setValue('', '');\r\n        });\r\n\r\n        // Выбор\r\n        $('.content-' + this._hash + ' .btn-modal-select').click(function (e) {\r\n            let title = modal.hasOwnProperty('title') && typeof(modal.title) === 'string'\r\n                ? modal.title\r\n                : '';\r\n\r\n            let size = modal.hasOwnProperty('size') && typeof(modal.size) === 'string'\r\n                ? modal.size\r\n                : 'lg';\r\n\r\n            let url = modal.hasOwnProperty('url') && typeof(modal.url) === 'string'\r\n                ? modal.url\r\n                : '';\r\n\r\n            if ( ! url) {\r\n                return;\r\n            }\r\n\r\n\r\n            let modalId      = coreuiFormUtils$1.hashCode();\r\n            let modalLoading = ejs.render(tpl['fields/modal-loading.html'], {\r\n                lang: that._form.getLang(),\r\n            });\r\n\r\n\r\n            if (CoreUI.hasOwnProperty('modal')) {\r\n                let onShow   = null;\r\n                let onHidden = null;\r\n\r\n                if (modal.hasOwnProperty('onHidden')) {\r\n                    if (typeof(modal.onHidden) === 'function') {\r\n                        onHidden = modal.onHidden;\r\n\r\n                    } else if (typeof(modal.onHidden) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onHidden);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onHidden = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (modal.hasOwnProperty('onShow')) {\r\n                    if (typeof(modal.onShow) === 'function') {\r\n                        onShow = modal.onShow;\r\n\r\n                    } else if (typeof(modal.onShow) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onShow);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onShow = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                CoreUI.modal.show(title, modalLoading, {\r\n                    id: modalId,\r\n                    size: size,\r\n                    onShow: onShow,\r\n                    onHidden: onHidden\r\n                });\r\n            }\r\n\r\n            $.ajax({\r\n                url: url,\r\n                method: 'GET',\r\n                beforeSend: function(xhr) {\r\n                    that._form._trigger('before-load-modal.coreui.form', that, [ that, xhr ]);\r\n                },\r\n                success: function (result) {\r\n                    $('#modal-' + modalId + ' .modal-body').html(result);\r\n                    that._form._trigger('success-load-modal.coreui.form', that, [ that, result ]);\r\n                },\r\n                error: function(xhr, textStatus, errorThrown) {\r\n                    that._form._trigger('error-load-modal.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n                },\r\n                complete: function(xhr, textStatus) {\r\n                    that._form._trigger('complete-load-modal.coreui.form', that, [ that, xhr, textStatus ]);\r\n                },\r\n            });\r\n\r\n\r\n            that._form._trigger('select-modal.coreui.form', that, [ that, e ]);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.number = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'number',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block',\r\n            step: 'any'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null,\r\n        precision: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        // Установка точности\r\n        if (this._options.precision === null) {\r\n            let precision = 0;\r\n\r\n            if (this._options.attr.hasOwnProperty('step') &&\r\n                this._options.attr.step !== 'any' &&\r\n                ['string', 'number'].indexOf(typeof this._options.attr.step) >= 0\r\n            ) {\r\n                let match = $.trim(this._options.attr.step.toString()).match(/\\.(\\d+)$/);\r\n\r\n                if (match && match.hasOwnProperty(1)) {\r\n                    precision = match ? match[1].length : precision;\r\n                }\r\n            }\r\n\r\n            this._options.precision = precision;\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0 ||\r\n            ! value.toString().match(/^\\-?\\d+\\.?\\d*$/)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.precision >= 0) {\r\n            value = coreuiFormUtils$1.round(value, this._options.precision);\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('min')) {\r\n            value = value < Number(this._options.attr.min)\r\n                ? Number(this._options.attr.min)\r\n                : value;\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('max')) {\r\n            value = value > Number(this._options.attr.max)\r\n                ? Number(this._options.attr.max)\r\n                : value;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = $.extend(true, {}, this._options);\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'number';\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('.content-' + this._hash + ' input').keydown(function (e) {\r\n            let k = e.keyCode || e.which;\r\n            let ok = k >= 35 && k <= 40 ||      // arrows\r\n                k >= 96 && k <= 105 ||     // 0-9 numpad\r\n                k === 189 || k === 109 ||  // minus\r\n                k === 110 || k === 190 ||  // dot\r\n                k === 9 ||  //tab\r\n                k === 46 || //del\r\n                k === 8 ||  // backspaces\r\n                ( ! e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)\r\n\r\n            if ( ! ok || (e.ctrlKey && e.altKey)) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' input').blur(function (e) {\r\n            let value = $(this).val();\r\n\r\n            if (that._options.precision >= 0) {\r\n                value = coreuiFormUtils$1.round(value, that._options.precision);\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('min')) {\r\n                value = value < Number(that._options.attr.min)\r\n                    ? Number(that._options.attr.min)\r\n                    : value;\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('max')) {\r\n                value = value > Number(that._options.attr.max)\r\n                    ? Number(that._options.attr.max)\r\n                    : value;\r\n            }\r\n\r\n            $(this).val(value);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.radio = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'radio',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input[type=radio]:checked').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            let that         = this;\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options)\r\n            ) {\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value') && option.value == value) {\r\n                        let text = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                            ? option.text\r\n                            : '';\r\n\r\n                        $('.content-' + that._hash).text(text);\r\n                        that._value = value;\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n\r\n        } else {\r\n            let input = $('.content-' + this._hash + ' input[type=radio][value=\"' + value + '\"]');\r\n\r\n            if (input[0]) {\r\n                input.prop('checked', true);\r\n                this._value = value;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            let value = this.getValue();\r\n            return typeof value === 'string' && value !== '';\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that         = this;\r\n        let radioOptions = [];\r\n        let fieldOptions = this.getOptions();\r\n        let selectedItem = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'radio',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText   = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils$1.hashCode();\r\n\r\n                if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItem.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                radioOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        return ejs.render(tpl['fields/radio.html'], {\r\n            field: fieldOptions,\r\n            value: this._value,\r\n            render: {\r\n                options: radioOptions,\r\n                selectedItem: selectedItem\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.range = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'range',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-range d-inline-block pt-1'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'range';\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.select = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'select',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @returns {array|string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            if (this._options.hasOwnProperty('attr') &&\r\n                typeof this._options.attr === 'object' &&\r\n                this._options.attr !== null &&\r\n                ! Array.isArray(this._options.attr) &&\r\n                this._options.attr.hasOwnProperty('multiple')\r\n            ) {\r\n                let values = [];\r\n\r\n                $('.content-' + this._hash + ' select option:selected').each(function () {\r\n                    values.push($(this).val());\r\n                });\r\n\r\n                return values;\r\n\r\n            } else {\r\n                return $('.content-' + this._hash + ' select option:selected').val()\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' select > option').prop('selected', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' select > option').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('selected', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let select    = $('select', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            select.removeClass('is-invalid');\r\n            select.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            select.removeClass('is-invalid');\r\n            select.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            select.removeClass('is-valid');\r\n            select.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let that          = this;\r\n        let options       = this.getOptions();\r\n        let attributes    = [];\r\n        let selectOptions = [];\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                    ? option.type\r\n                    : 'option';\r\n\r\n                if (type === 'group') {\r\n                    let renderAttr   = [];\r\n                    let groupAttr    = {};\r\n                    let groupOptions = [];\r\n\r\n                    if (option.hasOwnProperty('attr') &&\r\n                        typeof option.attr === 'object' &&\r\n                        option.attr !== null &&\r\n                        ! Array.isArray(option.attr)\r\n                    ) {\r\n                        groupAttr = option.attr;\r\n                    }\r\n\r\n                    if (option.hasOwnProperty('label') && ['string', 'number'].indexOf(typeof(option.label)) >= 0) {\r\n                        groupAttr.label = option.label;\r\n                    }\r\n\r\n                    $.each(groupAttr, function (name, value) {\r\n                        renderAttr.push(name + '=\"' + value + '\"');\r\n                    });\r\n\r\n                    if (Array.isArray(option.options)) {\r\n                        $.each(option.options, function (key, groupOption) {\r\n                            groupOptions.push(that._renderOption(groupOption));\r\n                        });\r\n                    }\r\n\r\n                    selectOptions.push({\r\n                        type: 'group',\r\n                        attr: renderAttr.length > 0 ? (' ' + renderAttr.join(' ')) : '',\r\n                        options: groupOptions,\r\n                    });\r\n\r\n                } else {\r\n                    selectOptions.push(that._renderOption(option));\r\n                }\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                options: selectOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let that            = this;\r\n        let options         = this.getOptions();\r\n        let selectedOptions = [];\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                    ? option.type\r\n                    : 'option';\r\n\r\n                if (type === 'group') {\r\n                    if (Array.isArray(option.options)) {\r\n                        $.each(option.options, function (key, groupOption) {\r\n                            let optionText = groupOption.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(groupOption.text)) >= 0\r\n                                ? groupOption.text\r\n                                : '';\r\n\r\n                            if ( ! optionText || optionText === '') {\r\n                                return;\r\n                            }\r\n\r\n                            if (Array.isArray(that._value)) {\r\n                                $.each(that._value, function (key, itemValue) {\r\n                                    if (itemValue == groupOption.value) {\r\n                                        selectedOptions.push(optionText);\r\n                                        return false;\r\n                                    }\r\n                                });\r\n\r\n                            } else if (that._value == groupOption.value) {\r\n                                selectedOptions.push(optionText);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                } else {\r\n                    let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                        ? option.text\r\n                        : '';\r\n\r\n                    if ( ! optionText || optionText === '') {\r\n                        return;\r\n                    }\r\n\r\n                    if (Array.isArray(that._value)) {\r\n                        $.each(that._value, function (key, itemValue) {\r\n                            if (itemValue == option.value) {\r\n                                selectedOptions.push(optionText);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (that._value == option.value) {\r\n                        selectedOptions.push(optionText);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            render: {\r\n                selectedOptions: selectedOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Сборка опции\r\n     * @param option\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _renderOption: function (option) {\r\n\r\n        let optionAttr = [];\r\n        let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n            ? option.text\r\n            : '';\r\n\r\n        $.each(option, function (name, value) {\r\n            if (name !== 'text') {\r\n                optionAttr.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n\r\n        if (Array.isArray(this._value)) {\r\n            $.each(this._value, function (key, itemValue) {\r\n                if (itemValue == option.value) {\r\n                    optionAttr.push('selected=\"selected\"');\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        } else if (this._value == option.value) {\r\n            optionAttr.push('selected=\"selected\"');\r\n        }\r\n\r\n        return {\r\n            type: 'option',\r\n            text: optionText,\r\n            attr: optionAttr.length > 0 ? (' ' + optionAttr.join(' ')) : ''\r\n        };\r\n    }\r\n};\n\ncoreuiForm$1.fields.switch = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'switch',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        valueY: 'Y',\r\n        valueN: 'N',\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=checkbox]').prop('checked', value === this._options.valueY);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container       = $('.content-' + this._hash);\r\n        let switchContainer = $('.form-switch', container);\r\n        let inputs          = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n        let itemAttr   = {\r\n            type: 'checkbox',\r\n            class: 'form-check-input',\r\n            value: options.valueY\r\n        };\r\n\r\n\r\n        if (options.name) {\r\n            itemAttr.name = this._options.name;\r\n        }\r\n\r\n        if (options.required) {\r\n            itemAttr.required = 'required';\r\n        }\r\n\r\n        if (options.hasOwnProperty('attr') &&\r\n            typeof options.attr === 'object' &&\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            itemAttr = coreuiFormUtils$1.mergeAttr(itemAttr, options.attr);\r\n        }\r\n\r\n        if (this._value === options.valueY) {\r\n            itemAttr.checked = 'checked';\r\n        }\r\n\r\n        $.each(itemAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/switch.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.textarea = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'textarea',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' textarea').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' textarea').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let textarea  = $('textarea', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            textarea.removeClass('is-valid');\r\n            textarea.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' textarea');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/textarea.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.wysiwyg = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _editor: null,\r\n    _editorHash: null,\r\n    _options: {\r\n        type: 'wysiwyg',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        height: null,\r\n        minHeight: null,\r\n        maxHeight: null,\r\n        options: {},\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        readonly: false,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form       = form;\r\n        this._index      = index;\r\n        this._id         = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash       = coreuiFormUtils$1.hashCode();\r\n        this._editorHash = coreuiFormUtils$1.hashCode();\r\n        this._value      = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options    = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @return {string|null}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        } else {\r\n            return this._editor ? this._editor.getContent() : this._value;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            if (this._editor) {\r\n                this._editor.setContent(value);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/wysiwyg.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            editorHash: this._editorHash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let tinyMceOptions = {};\r\n        let than           = this;\r\n        let textareaId     = 'editor-' + this._editorHash;\r\n\r\n        if (typeof this._options.options === 'object' &&\r\n            ! Array.isArray(this._options.options) &&\r\n            Object.keys(this._options.options).length > 0\r\n        ) {\r\n            tinyMceOptions = this._options.options;\r\n\r\n        } else if (this._options.options === 'simple') {\r\n            tinyMceOptions = {\r\n                plugins: 'image lists anchor charmap',\r\n                toolbar: 'blocks | bold italic underline | alignleft aligncenter ' +\r\n                         'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                         'forecolor backcolor removeformat',\r\n                menubar: false,\r\n                branding: false\r\n            };\r\n\r\n        } else {\r\n            tinyMceOptions = {\r\n                promotion: false,\r\n                branding: false,\r\n                plugins: 'preview importcss searchreplace autolink autosave save directionality code ' +\r\n                         'visualblocks visualchars fullscreen image link media template codesample table ' +\r\n                         'charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',\r\n                menubar: 'file edit view insert format tools table help',\r\n                toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | ' +\r\n                         'alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | ' +\r\n                         'forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen ' +\r\n                         'preview save print | insertfile image media template link anchor codesample | ltr rtl',\r\n            };\r\n        }\r\n\r\n        tinyMceOptions.selector = '#editor-' + this._editorHash;\r\n\r\n        if (['string', 'number'].indexOf(typeof this._options.width) >= 0) {\r\n            tinyMceOptions.width = this._options.width;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minWidth) >= 0) {\r\n            tinyMceOptions.min_width = this._options.minWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxWidth) >= 0) {\r\n            tinyMceOptions.max_width = this._options.maxWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.height) >= 0) {\r\n            tinyMceOptions.height = this._options.height;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minHeight) >= 0) {\r\n            tinyMceOptions.min_height = this._options.minHeight;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxHeight) >= 0) {\r\n            tinyMceOptions.max_height = this._options.maxHeight;\r\n        }\r\n\r\n        tinymce.init(tinyMceOptions).then(function () {\r\n            than._editor = tinymce.get(textareaId);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.passwordRepeat = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _isChangeState: true,\r\n    _value: '',\r\n    _options: {\r\n        type: 'password',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            type: 'password',\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        showBtn: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input[type=\"password\"]').eq(0).val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value ? '******' : '');\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=\"password\"]').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input[type=\"password\"]', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        if ( ! this._isChangeState || this._options.readonly) {\r\n            return true;\r\n        }\r\n\r\n        let input = $('.content-' + this._hash + ' input[type=\"password\"]');\r\n\r\n        if (input.eq(0).val() !== input.eq(1).val()) {\r\n            return false;\r\n        }\r\n\r\n        if (input[0]) {\r\n            return input.eq(0).is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes  = [];\r\n        let attributes2 = [];\r\n        let datalist    = [];\r\n        let options     = this.getOptions();\r\n\r\n        this._isChangeState = ! options.showBtn\r\n            ? true\r\n            : ! this._value;\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if ( ! this._isChangeState) {\r\n            options.attr.disabled = '';\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.value = this._value ? '******' : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n        $.each(options.attr, function (name, value) {\r\n            if (['name', 'value'].indexOf(name) < 0) {\r\n                attributes2.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n        let lang = this._form.getLang();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            lang: lang,\r\n            btn_text: this._isChangeState ? lang.cancel : lang.change,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                attr2: attributes2.length > 0 ? (' ' + attributes2.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let value   = this._value;\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: value ? '******' : '',\r\n            hash: this._hash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' .btn-password-change').click(function (e) {\r\n            let textChange = $(this).data('change');\r\n            let textCancel = $(this).data('cancel');\r\n\r\n            if (that._isChangeState) {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').attr('disabled', 'disabled');\r\n                $(this).text(textChange);\r\n                that._isChangeState = false;\r\n\r\n            } else {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').removeAttr('disabled');\r\n                $(this).text(textCancel);\r\n                that._isChangeState = true;\r\n            }\r\n        });\r\n    }\r\n};\n\nreturn coreuiForm$1;\n\n})));\n"]}