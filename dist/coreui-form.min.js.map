{"version":3,"sources":["coreui-form.min.js"],"names":["global","factory","exports","module","define","amd","CoreUI","form","this","f","window","self","ejs","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","fs","path","utils","scopeOptionWarned","_VERSION_STRING","version","_DEFAULT_LOCALS_NAME","_OPTS_PASSABLE_WITH_DATA","_OPTS_PASSABLE_WITH_DATA_EXPRESS","concat","_BOM","_JS_IDENTIFIER","resolvePaths","name","paths","filePath","some","v","resolveInclude","existsSync","handleCache","options","template","func","filename","hasTemplate","arguments","cache","get","fileLoader","toString","replace","compile","set","includeFile","opts","shallowCopy","createNullProtoObjWherePossible","includePath","views","match","exec","Array","isArray","root","includer","escapeFunction","includerResult","rethrow","err","str","flnm","lineno","esc","lines","split","start","Math","max","end","min","context","slice","map","line","curr","join","message","stripSemi","Template","text","templateText","mode","truncate","currentLine","source","client","escape","escapeXML","compileDebug","debug","openDelimiter","closeDelimiter","delimiter","strict","rmWhitespace","outputFunctionName","localsName","async","destructuredLocals","legacyInclude","_with","regex","createRegex","readFileSync","promiseImpl","Function","Promise","isDir","dirname","extname","resolve","scope","console","warn","render","d","data","shallowCopyFromList","renderFile","cb","result","args","prototype","shift","pop","settings","viewOpts","reject","clearCache","reset","modes","EVAL","ESCAPED","RAW","COMMENT","LITERAL","delim","escapeRegExpChars","open","close","RegExp","fn","prepended","appended","escapeFn","sanitizedFilename","JSON","stringify","generateSource","test","destructuring","src","log","ctor","SyntaxError","returnedFn","apply","includeData","Object","defineProperty","basename","value","writable","enumerable","configurable","matches","parseTemplateText","forEach","index","indexOf","closing","scanLine","firstPos","pat","arr","push","substring","_addOutput","newLineCount","lastIndexOf","__express","VERSION","../package.json","./utils","2","hasOwn","obj","key","hasOwnProperty","regExpChars","_ENCODE_HTML_RULES","string","String","&","<",">","\"","'","_MATCH_HTML","encode_char","escapeXMLToString","markup","undefined","to","from","list","_data","val","remove","hyphenToCamel","toUpperCase","create","__proto__","3","4","process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","resolvedPath","resolvedAbsolute","cwd","TypeError","charAt","normalize","isAbsolute","trailingSlash","substr","relative","trim","fromParts","toParts","samePartsLength","outputParts","sep","hasRoot","charCodeAt","matchedSlash","ext","startDot","startPart","preDotState","len","_process","5","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","marker","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","6","description","keywords","author","license","bin","main","jsdelivr","unpkg","repository","type","url","bugs","homepage","dependencies","jake","devDependencies","browserify","eslint","git-directory-deploy","jsdoc","lru-cache","mocha","uglify-js","engines","node","scripts","let","tpl","coreuiFormUtils","getFieldValue","formRecord","getRecord","fieldOptions","getFunctionByName","functionName","namespaces","eval","getIncludePath","mergeFieldOptions","defaultOptions","attr","$","extend","width","unit","_options","fieldWidth","labelWidth","mergeAttr","attr1","attr2","each","getAttacheFields","fields","field","instance","hash","_hash","fieldsDirection","content","renderContent","formatDate","day","month","Date","date","year","formatDateTime","getFullYear","getMinutes","getSeconds","formatDateMonth","lang","getMonth","date_months","formatDateWeek","date_week","getObjValue","isNumeric","num","isNaN","hashCode","crc32","getTime","random","round","pow","precision","parseInt","number","coreuiFormInstance","id","send","method","format","minWidth","maxWidth","controlsOffset","readonly","validate","successLoadUrl","errorClass","layout","onSubmit","onSubmitSuccess","record","controls","_lock","_fieldsIndex","_groupsIndex","_controlsIndex","_groups","_fields","_controls","_events","_init","coreuiForm$1","getSetting","initEvents","that","formContainer","_trigger","getId","element","widthSizes","matchAll","columns","columnsContent","column","keys","_NAME","fieldContents","control","show","formAttr","html","escapeFuncStr","domElement","document","getElementById","innerHTML","lock","controlOptions","getOptions","unlock","onsubmit","getData","onSubmitText","results","isStopSend","sendFormat","dataFormat","contentType","FormData","File","FileList","file","append","ajax","processData","beforeSend","xhr","success","parsedResponse","parse","jsonResponse","script","loadUrl","href","regx","urlParams","param","location","equalHash","onhashchange","error","textStatus","errorThrown","getLang","send_error","responseText","error_message","errorMessage","complete","getValue","getFields","getControls","getGroups","getField","fieldInstance","isReadonly","hide","showControls","hideControls","isValid","showError","find","errorOptions","formError","class","dismiss","prepend","scroll","scrollOffset","animate","scrollTop","offset","top","hideError","eventName","callback","singleExec","destruct","_instances","init","setValue","initGroup","groupInstance","group","expand","collapse","initControl","controlInstance","params","monthLang","_renderControl","_settings","sendDataFormat","formId","setSettings","ru","modal_select","modal_loading","switch_yes","dataset_add","required_field","repeat","change","cancel","en","switch_no","button","_form","_index","onClick","attributes","duration","_initEvents","event","HTMLElement","link","click","submit","checkbox","_id","_value","label","inline","outContent","errorText","required","values","selectedItems","option","prop","itemValue","container","lastInput","inputs","removeClass","validText","addClass","invalidText","attachFields","optionText","itemAttr","checked","checkboxOptions","color","attach","datalist","input","is","_renderContentReadonly","_renderContent","datalistId","style","itemAttributes","datalistAttr","custom","alloyComponents","components","component","_renderOptions","items","valueY","valueN","item","removeItems","empty","removeItem","itemId","rows","headers","row","_eventAdd","_renderRow","rowOptions","itemOptions","cellValue","cellItemValue","selected","hashItem","optionValue","showCollapsible","_renderRowReadonly","slideUp","slideDown","initField","Meteor","Zepto","el","mask","maskDigit","invalid","getCaret","sel","pos","ctrl","dSel","selection","cSelStart","selectionStart","navigator","appVersion","createRange","moveStart","setCaret","range","setSelectionRange","createTextRange","moveEnd","select","events","keyCode","which","maskDigitPosMapOld","maskDigitPosMap","jQuery","jMaskGlobals","useInput","behaviour","keydown","keyup","oldValue","trigger","selectOnFocus","clearIfNotMatch","regexMask","getRegexMask","pattern","optional","recursive","oRecursive","maskChunks","translation","jMask","digit","destroyEvents","target","calculateCaretPosition","oldVal","getMasked","caretPosNew","newVal","caretPosOld","newValL","oldValL","maskDigitsBeforeCaret","maskDigitsAfterCaret","maskDigitsBeforeCaretAll","maskDigitsBeforeCaretAllOld","caretPos","byPassKeys","keyStrokeCompensation","skipMaskChars","buf","m","maskLen","valLen","resetPos","maskDigitCount","check","addMethod","lastMaskChar","valDigit","lastUntranslatedMaskChar","fallback","lastMaskCharDigit","mapMaskdigitPositions","maskDigitPosArr","maskDiff","callbacks","criteria","changed","defaultArgs","removeAttr","getCleanVal","reverse","getMaskedVal","onlyMask","placeholder","maxlength","caret","HTMLAttributes","prefix","notSameMaskObject","Mask","maskObject","maskWatchers","maskFunction","eventSupported","globals","interval","watchInterval","watchInputs","isSupported","clearInterval","selector","setAttribute","setInterval","dataMask","removeData","cleanVal","dataMaskAttr","maskElements","userAgent","createElement","watchDataMask","applyDataMask","$selector","#","onChange","_text","size","onHidden","onClear","elementValue","elementText","modal","textAttr","modalId","onShow","step","modalLoading","k","ok","ctrlKey","Number","selectedItem","radioOptions","shiftKey","altKey","preventDefault","blur","radio","groupAttr","selectOptions","_renderOption","selectedOptions","optionAttr","switch","textarea","renderAttr","groupOptions","groupOption","_editor","editorHash","_editorHash","tinyMceOptions","than","textareaId","toolbar","promotion","branding","plugins","menubar","tinymce","passwordRepeat","switchContainer","_isChangeState","attributes2","showBtn","btn_text","add","height","minHeight","maxHeight","getContent","setContent","min_width","max_width","min_height","max_height","then","pass","eq","disabled","textChange","textCancel","files","DataTransfer"],"mappings":"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","file":"coreui-form.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.CoreUI = global.CoreUI || {}, global.CoreUI.form = factory());\n}(this, (function () { 'use strict';\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f();}else if(typeof define===\"function\"&&define.amd){define([],f);}else{var g;if(typeof window!==\"undefined\"){g=window;}else if(typeof global!==\"undefined\"){g=global;}else if(typeof self!==\"undefined\"){g=self;}else{g=this;}g.ejs=f();}})(function(){return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t);}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){\"use strict\";var fs=require(\"fs\");var path=require(\"path\");var utils=require(\"./utils\");var scopeOptionWarned=false;var _VERSION_STRING=require(\"../package.json\").version;var _DEFAULT_OPEN_DELIMITER=\"<\";var _DEFAULT_CLOSE_DELIMITER=\">\";var _DEFAULT_DELIMITER=\"%\";var _DEFAULT_LOCALS_NAME=\"locals\";var _NAME=\"ejs\";var _REGEX_STRING=\"(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)\";var _OPTS_PASSABLE_WITH_DATA=[\"delimiter\",\"scope\",\"context\",\"debug\",\"compileDebug\",\"client\",\"_with\",\"rmWhitespace\",\"strict\",\"filename\",\"async\"];var _OPTS_PASSABLE_WITH_DATA_EXPRESS=_OPTS_PASSABLE_WITH_DATA.concat(\"cache\");var _BOM=/^\\uFEFF/;var _JS_IDENTIFIER=/^[a-zA-Z_$][0-9a-zA-Z_$]*$/;exports.cache=utils.cache;exports.fileLoader=fs.readFileSync;exports.localsName=_DEFAULT_LOCALS_NAME;exports.promiseImpl=new Function(\"return this;\")().Promise;exports.resolveInclude=function(name,filename,isDir){var dirname=path.dirname;var extname=path.extname;var resolve=path.resolve;var includePath=resolve(isDir?filename:dirname(filename),name);var ext=extname(name);if(!ext){includePath+=\".ejs\";}return includePath};function resolvePaths(name,paths){var filePath;if(paths.some(function(v){filePath=exports.resolveInclude(name,v,true);return fs.existsSync(filePath)})){return filePath}}function getIncludePath(path,options){var includePath;var filePath;var views=options.views;var match=/^[A-Za-z]+:\\\\|^\\//.exec(path);if(match&&match.length){path=path.replace(/^\\/*/,\"\");if(Array.isArray(options.root)){includePath=resolvePaths(path,options.root);}else{includePath=exports.resolveInclude(path,options.root||\"/\",true);}}else{if(options.filename){filePath=exports.resolveInclude(path,options.filename);if(fs.existsSync(filePath)){includePath=filePath;}}if(!includePath&&Array.isArray(views)){includePath=resolvePaths(path,views);}if(!includePath&&typeof options.includer!==\"function\"){throw new Error('Could not find the include file \"'+options.escapeFunction(path)+'\"')}}return includePath}function handleCache(options,template){var func;var filename=options.filename;var hasTemplate=arguments.length>1;if(options.cache){if(!filename){throw new Error(\"cache option requires a filename\")}func=exports.cache.get(filename);if(func){return func}if(!hasTemplate){template=fileLoader(filename).toString().replace(_BOM,\"\");}}else if(!hasTemplate){if(!filename){throw new Error(\"Internal EJS error: no file name or template \"+\"provided\")}template=fileLoader(filename).toString().replace(_BOM,\"\");}func=exports.compile(template,options);if(options.cache){exports.cache.set(filename,func);}return func}function tryHandleCache(options,data,cb){var result;if(!cb){if(typeof exports.promiseImpl==\"function\"){return new exports.promiseImpl(function(resolve,reject){try{result=handleCache(options)(data);resolve(result);}catch(err){reject(err);}})}else{throw new Error(\"Please provide a callback function\")}}else{try{result=handleCache(options)(data);}catch(err){return cb(err)}cb(null,result);}}function fileLoader(filePath){return exports.fileLoader(filePath)}function includeFile(path,options){var opts=utils.shallowCopy(utils.createNullProtoObjWherePossible(),options);opts.filename=getIncludePath(path,opts);if(typeof options.includer===\"function\"){var includerResult=options.includer(path,opts.filename);if(includerResult){if(includerResult.filename){opts.filename=includerResult.filename;}if(includerResult.template){return handleCache(opts,includerResult.template)}}}return handleCache(opts)}function rethrow(err,str,flnm,lineno,esc){var lines=str.split(\"\\n\");var start=Math.max(lineno-3,0);var end=Math.min(lines.length,lineno+3);var filename=esc(flnm);var context=lines.slice(start,end).map(function(line,i){var curr=i+start+1;return(curr==lineno?\" >> \":\"    \")+curr+\"| \"+line}).join(\"\\n\");err.path=filename;err.message=(filename||\"ejs\")+\":\"+lineno+\"\\n\"+context+\"\\n\\n\"+err.message;throw err}function stripSemi(str){return str.replace(/;(\\s*$)/,\"$1\")}exports.compile=function compile(template,opts){var templ;if(opts&&opts.scope){if(!scopeOptionWarned){console.warn(\"`scope` option is deprecated and will be removed in EJS 3\");scopeOptionWarned=true;}if(!opts.context){opts.context=opts.scope;}delete opts.scope;}templ=new Template(template,opts);return templ.compile()};exports.render=function(template,d,o){var data=d||utils.createNullProtoObjWherePossible();var opts=o||utils.createNullProtoObjWherePossible();if(arguments.length==2){utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA);}return handleCache(opts,template)(data)};exports.renderFile=function(){var args=Array.prototype.slice.call(arguments);var filename=args.shift();var cb;var opts={filename:filename};var data;var viewOpts;if(typeof arguments[arguments.length-1]==\"function\"){cb=args.pop();}if(args.length){data=args.shift();if(args.length){utils.shallowCopy(opts,args.pop());}else{if(data.settings){if(data.settings.views){opts.views=data.settings.views;}if(data.settings[\"view cache\"]){opts.cache=true;}viewOpts=data.settings[\"view options\"];if(viewOpts){utils.shallowCopy(opts,viewOpts);}}utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA_EXPRESS);}opts.filename=filename;}else{data=utils.createNullProtoObjWherePossible();}return tryHandleCache(opts,data,cb)};exports.Template=Template;exports.clearCache=function(){exports.cache.reset();};function Template(text,opts){opts=opts||utils.createNullProtoObjWherePossible();var options=utils.createNullProtoObjWherePossible();this.templateText=text;this.mode=null;this.truncate=false;this.currentLine=1;this.source=\"\";options.client=opts.client||false;options.escapeFunction=opts.escape||opts.escapeFunction||utils.escapeXML;options.compileDebug=opts.compileDebug!==false;options.debug=!!opts.debug;options.filename=opts.filename;options.openDelimiter=opts.openDelimiter||exports.openDelimiter||_DEFAULT_OPEN_DELIMITER;options.closeDelimiter=opts.closeDelimiter||exports.closeDelimiter||_DEFAULT_CLOSE_DELIMITER;options.delimiter=opts.delimiter||exports.delimiter||_DEFAULT_DELIMITER;options.strict=opts.strict||false;options.context=opts.context;options.cache=opts.cache||false;options.rmWhitespace=opts.rmWhitespace;options.root=opts.root;options.includer=opts.includer;options.outputFunctionName=opts.outputFunctionName;options.localsName=opts.localsName||exports.localsName||_DEFAULT_LOCALS_NAME;options.views=opts.views;options.async=opts.async;options.destructuredLocals=opts.destructuredLocals;options.legacyInclude=typeof opts.legacyInclude!=\"undefined\"?!!opts.legacyInclude:true;if(options.strict){options._with=false;}else{options._with=typeof opts._with!=\"undefined\"?opts._with:true;}this.opts=options;this.regex=this.createRegex();}Template.modes={EVAL:\"eval\",ESCAPED:\"escaped\",RAW:\"raw\",COMMENT:\"comment\",LITERAL:\"literal\"};Template.prototype={createRegex:function(){var str=_REGEX_STRING;var delim=utils.escapeRegExpChars(this.opts.delimiter);var open=utils.escapeRegExpChars(this.opts.openDelimiter);var close=utils.escapeRegExpChars(this.opts.closeDelimiter);str=str.replace(/%/g,delim).replace(/</g,open).replace(/>/g,close);return new RegExp(str)},compile:function(){var src;var fn;var opts=this.opts;var prepended=\"\";var appended=\"\";var escapeFn=opts.escapeFunction;var ctor;var sanitizedFilename=opts.filename?JSON.stringify(opts.filename):\"undefined\";if(!this.source){this.generateSource();prepended+='  var __output = \"\";\\n'+\"  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n\";if(opts.outputFunctionName){if(!_JS_IDENTIFIER.test(opts.outputFunctionName)){throw new Error(\"outputFunctionName is not a valid JS identifier.\")}prepended+=\"  var \"+opts.outputFunctionName+\" = __append;\"+\"\\n\";}if(opts.localsName&&!_JS_IDENTIFIER.test(opts.localsName)){throw new Error(\"localsName is not a valid JS identifier.\")}if(opts.destructuredLocals&&opts.destructuredLocals.length){var destructuring=\"  var __locals = (\"+opts.localsName+\" || {}),\\n\";for(var i=0;i<opts.destructuredLocals.length;i++){var name=opts.destructuredLocals[i];if(!_JS_IDENTIFIER.test(name)){throw new Error(\"destructuredLocals[\"+i+\"] is not a valid JS identifier.\")}if(i>0){destructuring+=\",\\n  \";}destructuring+=name+\" = __locals.\"+name;}prepended+=destructuring+\";\\n\";}if(opts._with!==false){prepended+=\"  with (\"+opts.localsName+\" || {}) {\"+\"\\n\";appended+=\"  }\"+\"\\n\";}appended+=\"  return __output;\"+\"\\n\";this.source=prepended+this.source+appended;}if(opts.compileDebug){src=\"var __line = 1\"+\"\\n\"+\"  , __lines = \"+JSON.stringify(this.templateText)+\"\\n\"+\"  , __filename = \"+sanitizedFilename+\";\"+\"\\n\"+\"try {\"+\"\\n\"+this.source+\"} catch (e) {\"+\"\\n\"+\"  rethrow(e, __lines, __filename, __line, escapeFn);\"+\"\\n\"+\"}\"+\"\\n\";}else{src=this.source;}if(opts.client){src=\"escapeFn = escapeFn || \"+escapeFn.toString()+\";\"+\"\\n\"+src;if(opts.compileDebug){src=\"rethrow = rethrow || \"+rethrow.toString()+\";\"+\"\\n\"+src;}}if(opts.strict){src='\"use strict\";\\n'+src;}if(opts.debug){console.log(src);}if(opts.compileDebug&&opts.filename){src=src+\"\\n\"+\"//# sourceURL=\"+sanitizedFilename+\"\\n\";}try{if(opts.async){try{ctor=new Function(\"return (async function(){}).constructor;\")();}catch(e){if(e instanceof SyntaxError){throw new Error(\"This environment does not support async/await\")}else{throw e}}}else{ctor=Function;}fn=new ctor(opts.localsName+\", escapeFn, include, rethrow\",src);}catch(e){if(e instanceof SyntaxError){if(opts.filename){e.message+=\" in \"+opts.filename;}e.message+=\" while compiling ejs\\n\\n\";e.message+=\"If the above error is not helpful, you may want to try EJS-Lint:\\n\";e.message+=\"https://github.com/RyanZim/EJS-Lint\";if(!opts.async){e.message+=\"\\n\";e.message+=\"Or, if you meant to create an async function, pass `async: true` as an option.\";}}throw e}var returnedFn=opts.client?fn:function anonymous(data){var include=function(path,includeData){var d=utils.shallowCopy(utils.createNullProtoObjWherePossible(),data);if(includeData){d=utils.shallowCopy(d,includeData);}return includeFile(path,opts)(d)};return fn.apply(opts.context,[data||utils.createNullProtoObjWherePossible(),escapeFn,include,rethrow])};if(opts.filename&&typeof Object.defineProperty===\"function\"){var filename=opts.filename;var basename=path.basename(filename,path.extname(filename));try{Object.defineProperty(returnedFn,\"name\",{value:basename,writable:false,enumerable:false,configurable:true});}catch(e){}}return returnedFn},generateSource:function(){var opts=this.opts;if(opts.rmWhitespace){this.templateText=this.templateText.replace(/[\\r\\n]+/g,\"\\n\").replace(/^\\s+|\\s+$/gm,\"\");}this.templateText=this.templateText.replace(/[ \\t]*<%_/gm,\"<%_\").replace(/_%>[ \\t]*/gm,\"_%>\");var self=this;var matches=this.parseTemplateText();var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;if(matches&&matches.length){matches.forEach(function(line,index){var closing;if(line.indexOf(o+d)===0&&line.indexOf(o+d+d)!==0){closing=matches[index+2];if(!(closing==d+c||closing==\"-\"+d+c||closing==\"_\"+d+c)){throw new Error('Could not find matching close tag for \"'+line+'\".')}}self.scanLine(line);});}},parseTemplateText:function(){var str=this.templateText;var pat=this.regex;var result=pat.exec(str);var arr=[];var firstPos;while(result){firstPos=result.index;if(firstPos!==0){arr.push(str.substring(0,firstPos));str=str.slice(firstPos);}arr.push(result[0]);str=str.slice(result[0].length);result=pat.exec(str);}if(str){arr.push(str);}return arr},_addOutput:function(line){if(this.truncate){line=line.replace(/^(?:\\r\\n|\\r|\\n)/,\"\");this.truncate=false;}if(!line){return line}line=line.replace(/\\\\/g,\"\\\\\\\\\");line=line.replace(/\\n/g,\"\\\\n\");line=line.replace(/\\r/g,\"\\\\r\");line=line.replace(/\"/g,'\\\\\"');this.source+='    ; __append(\"'+line+'\")'+\"\\n\";},scanLine:function(line){var self=this;var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;var newLineCount=0;newLineCount=line.split(\"\\n\").length-1;switch(line){case o+d:case o+d+\"_\":this.mode=Template.modes.EVAL;break;case o+d+\"=\":this.mode=Template.modes.ESCAPED;break;case o+d+\"-\":this.mode=Template.modes.RAW;break;case o+d+\"#\":this.mode=Template.modes.COMMENT;break;case o+d+d:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(o+d+d,o+d)+'\")'+\"\\n\";break;case d+d+c:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(d+d+c,d+c)+'\")'+\"\\n\";break;case d+c:case\"-\"+d+c:case\"_\"+d+c:if(this.mode==Template.modes.LITERAL){this._addOutput(line);}this.mode=null;this.truncate=line.indexOf(\"-\")===0||line.indexOf(\"_\")===0;break;default:if(this.mode){switch(this.mode){case Template.modes.EVAL:case Template.modes.ESCAPED:case Template.modes.RAW:if(line.lastIndexOf(\"//\")>line.lastIndexOf(\"\\n\")){line+=\"\\n\";}}switch(this.mode){case Template.modes.EVAL:this.source+=\"    ; \"+line+\"\\n\";break;case Template.modes.ESCAPED:this.source+=\"    ; __append(escapeFn(\"+stripSemi(line)+\"))\"+\"\\n\";break;case Template.modes.RAW:this.source+=\"    ; __append(\"+stripSemi(line)+\")\"+\"\\n\";break;case Template.modes.COMMENT:break;case Template.modes.LITERAL:this._addOutput(line);break}}else{this._addOutput(line);}}if(self.opts.compileDebug&&newLineCount){this.currentLine+=newLineCount;this.source+=\"    ; __line = \"+this.currentLine+\"\\n\";}}};exports.escapeXML=utils.escapeXML;exports.__express=exports.renderFile;exports.VERSION=_VERSION_STRING;exports.name=_NAME;if(typeof window!=\"undefined\"){window.ejs=exports;}},{\"../package.json\":6,\"./utils\":2,fs:3,path:4}],2:[function(require,module,exports){\"use strict\";var regExpChars=/[|\\\\{}()[\\]^$+*?.]/g;var hasOwnProperty=Object.prototype.hasOwnProperty;var hasOwn=function(obj,key){return hasOwnProperty.apply(obj,[key])};exports.escapeRegExpChars=function(string){if(!string){return\"\"}return String(string).replace(regExpChars,\"\\\\$&\")};var _ENCODE_HTML_RULES={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&#34;\",\"'\":\"&#39;\"};var _MATCH_HTML=/[&<>'\"]/g;function encode_char(c){return _ENCODE_HTML_RULES[c]||c}var escapeFuncStr=\"var _ENCODE_HTML_RULES = {\\n\"+'      \"&\": \"&amp;\"\\n'+'    , \"<\": \"&lt;\"\\n'+'    , \">\": \"&gt;\"\\n'+'    , \\'\"\\': \"&#34;\"\\n'+'    , \"\\'\": \"&#39;\"\\n'+\"    }\\n\"+\"  , _MATCH_HTML = /[&<>'\\\"]/g;\\n\"+\"function encode_char(c) {\\n\"+\"  return _ENCODE_HTML_RULES[c] || c;\\n\"+\"};\\n\";exports.escapeXML=function(markup){return markup==undefined?\"\":String(markup).replace(_MATCH_HTML,encode_char)};function escapeXMLToString(){return Function.prototype.toString.call(this)+\";\\n\"+escapeFuncStr}try{if(typeof Object.defineProperty===\"function\"){Object.defineProperty(exports.escapeXML,\"toString\",{value:escapeXMLToString});}else{exports.escapeXML.toString=escapeXMLToString;}}catch(err){console.warn(\"Unable to set escapeXML.toString (is the Function prototype frozen?)\");}exports.shallowCopy=function(to,from){from=from||{};if(to!==null&&to!==undefined){for(var p in from){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}return to};exports.shallowCopyFromList=function(to,from,list){list=list||[];from=from||{};if(to!==null&&to!==undefined){for(var i=0;i<list.length;i++){var p=list[i];if(typeof from[p]!=\"undefined\"){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}}return to};exports.cache={_data:{},set:function(key,val){this._data[key]=val;},get:function(key){return this._data[key]},remove:function(key){delete this._data[key];},reset:function(){this._data={};}};exports.hyphenToCamel=function(str){return str.replace(/-[a-z]/g,function(match){return match[1].toUpperCase()})};exports.createNullProtoObjWherePossible=function(){if(typeof Object.create==\"function\"){return function(){return Object.create(null)}}if(!({__proto__:null}instanceof Object)){return function(){return{__proto__:null}}}return function(){return{}}}();},{}],3:[function(require,module,exports){},{}],4:[function(require,module,exports){(function(process){function normalizeArray(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1);}else if(last===\"..\"){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}if(allowAboveRoot){for(;up--;up){parts.unshift(\"..\");}}return parts}exports.resolve=function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){continue}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\";}resolvedPath=normalizeArray(filter(resolvedPath.split(\"/\"),function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"};exports.normalize=function(path){var isAbsolute=exports.isAbsolute(path),trailingSlash=substr(path,-1)===\"/\";path=normalizeArray(filter(path.split(\"/\"),function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\";}if(path&&trailingSlash){path+=\"/\";}return(isAbsolute?\"/\":\"\")+path};exports.isAbsolute=function(path){return path.charAt(0)===\"/\"};exports.join=function(){var paths=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(paths,function(p,index){if(typeof p!==\"string\"){throw new TypeError(\"Arguments to path.join must be strings\")}return p}).join(\"/\"))};exports.relative=function(from,to){from=exports.resolve(from).substr(1);to=exports.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\");}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")};exports.sep=\"/\";exports.delimiter=\":\";exports.dirname=function(path){if(typeof path!==\"string\")path=path+\"\";if(path.length===0)return\".\";var code=path.charCodeAt(0);var hasRoot=code===47;var end=-1;var matchedSlash=true;for(var i=path.length-1;i>=1;--i){code=path.charCodeAt(i);if(code===47){if(!matchedSlash){end=i;break}}else{matchedSlash=false;}}if(end===-1)return hasRoot?\"/\":\".\";if(hasRoot&&end===1){return\"/\"}return path.slice(0,end)};function basename(path){if(typeof path!==\"string\")path=path+\"\";var start=0;var end=-1;var matchedSlash=true;var i;for(i=path.length-1;i>=0;--i){if(path.charCodeAt(i)===47){if(!matchedSlash){start=i+1;break}}else if(end===-1){matchedSlash=false;end=i+1;}}if(end===-1)return\"\";return path.slice(start,end)}exports.basename=function(path,ext){var f=basename(path);if(ext&&f.substr(-1*ext.length)===ext){f=f.substr(0,f.length-ext.length);}return f};exports.extname=function(path){if(typeof path!==\"string\")path=path+\"\";var startDot=-1;var startPart=0;var end=-1;var matchedSlash=true;var preDotState=0;for(var i=path.length-1;i>=0;--i){var code=path.charCodeAt(i);if(code===47){if(!matchedSlash){startPart=i+1;break}continue}if(end===-1){matchedSlash=false;end=i+1;}if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){return\"\"}return path.slice(startDot,end)};function filter(xs,f){if(xs.filter)return xs.filter(f);var res=[];for(var i=0;i<xs.length;i++){if(f(xs[i],i,xs))res.push(xs[i]);}return res}var substr=\"ab\".substr(-1)===\"b\"?function(str,start,len){return str.substr(start,len)}:function(str,start,len){if(start<0)start=str.length+start;return str.substr(start,len)};}).call(this,require(\"_process\"));},{_process:5}],5:[function(require,module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout===\"function\"){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title=\"browser\";process.browser=true;process.env={};process.argv=[];process.version=\"\";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error(\"process.binding is not supported\")};process.cwd=function(){return\"/\"};process.chdir=function(dir){throw new Error(\"process.chdir is not supported\")};process.umask=function(){return 0};},{}],6:[function(require,module,exports){module.exports={name:\"ejs\",description:\"Embedded JavaScript templates\",keywords:[\"template\",\"engine\",\"ejs\"],version:\"3.1.8\",author:\"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)\",license:\"Apache-2.0\",bin:{ejs:\"./bin/cli.js\"},main:\"./lib/ejs.js\",jsdelivr:\"ejs.min.js\",unpkg:\"ejs.min.js\",repository:{type:\"git\",url:\"git://github.com/mde/ejs.git\"},bugs:\"https://github.com/mde/ejs/issues\",homepage:\"https://github.com/mde/ejs\",dependencies:{jake:\"^10.8.5\"},devDependencies:{browserify:\"^16.5.1\",eslint:\"^6.8.0\",\"git-directory-deploy\":\"^1.5.1\",jsdoc:\"^4.0.2\",\"lru-cache\":\"^4.0.1\",mocha:\"^10.2.0\",\"uglify-js\":\"^3.3.16\"},engines:{node:\">=0.10.0\"},scripts:{test:\"mocha -u tdd\"}};},{}]},{},[1])(1)});\n\nlet tpl = Object.create(null);\ntpl['form-error.html'] = '<div class=\"coreui-form__error alert alert-danger alert-dismissible fade show mb-3 <%= options.class %>\">\\n    <%- message %>\\n    <% if (options.dismiss) { %>\\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\\n    <% } %>\\n</div>';\ntpl['form-field-content.html'] = '<%- content %>';\ntpl['form-field-group.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__group_container mb-3\">\\n    <div class=\"coreui-form__group_label pe-2\">\\n        <h6 class=\"coreui-form__field_label_text col-form-label-sm\">\\n            <%- group.label %>\\n            <% if (group.showCollapsible) { %>\\n                <button type=\"button\" class=\"btn btn-sm btn-link btn-collapsible text-dark\">\\n                    <% if ( ! group.show) { %>\\n                    <i class=\"bi bi-chevron-right\"></i>\\n                    <% } else { %>\\n                    <i class=\"bi bi-chevron-down\"></i>\\n                    <% } %>\\n                </button>\\n            <% } %>\\n        </h6>\\n    </div>\\n    <div class=\"coreui-form__group_content\"<% if ( ! group.show) { %> style=\"display:none\"<% } %>>\\n        <%- content %>\\n    </div>\\n</div>';\ntpl['form-field-label.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__field_container d-flex flex-column flex-md-row mb-3\"\\n     <% if ( ! field.show) { %> style=\"display:none\"<% } %>>\\n    <% if (field.labelWidth !== 0 && field.labelWidth !== \\'0px\\') { %>\\n    <div class=\"coreui-form__field_label text-md-end text-sm-start pe-2\"<% if (field.labelWidth) { %> style=\"min-width:<%= field.labelWidth %>;width:<%= field.labelWidth %>\"<% } %>>\\n        <div class=\"coreui-form__field_label_content col-form-label-sm\">\\n            <% if (field.required) { %>\\n            <span class=\"coreui-form__field_label_req text-danger\">*</span>\\n            <% } %>\\n            <span class=\"coreui-form__field_label_text fw-medium\"><%- field.label %></span>\\n        </div>\\n\\n        <% if (field.description) { %>\\n        <div class=\"coreui-form__field_label_description text-muted\">\\n            <small><%- field.description %></small>\\n        </div>\\n        <% } %>\\n    </div>\\n    <% } %>\\n    <div class=\"coreui-form__field_content flex-fill pt-1\">\\n        <div class=\"d-inline-block content-<%= hash %>\">\\n            <%- content %>\\n        </div>\\n\\n        <% if (field.outContent) { %>\\n        <span class=\"coreui-form__field-content-out d-inline-block align-top pt-1 ps-1\">\\n            <%- field.outContent %>\\n        </span>\\n        <% } %>\\n\\n        <% if (attachFields && attachFields.length > 0) { %>\\n            <% $.each(attachFields, function(key, attachField) { %>\\n                <div class=\"<% if (attachField.hasOwnProperty(\\'direction\\') && attachField.direction === \\'column\\') { %>d-block mt-2<% } else { %>d-inline-block<% } %> content-<%= attachField.hash %>\">\\n                    <%- attachField.content %>\\n                </div>\\n            <% }); %>\\n        <% } %>\\n    </div>\\n</div>';\ntpl['form.html'] = '<div id=\"coreui-form-<%= form.id %>\" class=\"coreui-form mb-2\"\\n    <% if (widthSizes) { %>style=\"<%= widthSizes.join(\\';\\') %>\"<% } %>>\\n    <% if (form.title) { %>\\n    <h5 class=\"mb-4\"><%- form.title %></h5>\\n    <% } %>\\n\\n    <form action=\"<%= form.send.url %>\" method=\"<%= form.send.method %>\"<%- formAttr %>>\\n        <div class=\"coreui-form__fields d-flex justify-content-start flex-column flex-wrap\">\\n            <%- layout %>\\n        </div>\\n\\n        <% if (controls) { %>\\n        <div class=\"coreui-form__controls d-flex justify-content-start flex-sm-wrap flex-md-nowrap\">\\n            <% if (form.controlsOffset !== 0 && form.controlsOffset !== \\'0px\\') { %>\\n            <div class=\"d-none d-md-block\" style=\"width:<%= form.controlsOffset %>;min-width:<%= form.controlsOffset %>\"></div>\\n            <% } %>\\n\\n            <div class=\"d-flex justify-content-start flex-wrap gap-2\">\\n                <% $.each(controls, function(key, control) { %>\\n                <div id=\"coreui-form-<%= form.id %>-control-<%= control.index %>\" class=\"coreui-form__control_container\"\\n                     <% if ( ! control.show) { %>style=\"display:none\"<% } %>>\\n                    <%- control.content %>\\n                </div>\\n                <% }); %>\\n            </div>\\n        </div>\\n        <% } %>\\n    </form>\\n</div>';\ntpl['controls/button.html'] = '<button <%- render.attr %>><%- control.content %></button>';\ntpl['controls/link.html'] = '<a href=\"<%- control.href %>\"<%- render.attr %>><%- control.content %></a>';\ntpl['fields/checkbox.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItems.join(\\', \\') %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/color.html'] = '<% if (field.readonly) { %>\\n    <div class=\"rounded-1\" style=\"width: 14px;height: 14px;background-color: <%= value %>\"></div>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/custom.html'] = '<%- content %>';\ntpl['fields/dataset-row-readonly.html'] = '<tr class=\"coreui-form__field-dataset-item\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-2 pb-1\">\\n            <%- option.value %>\\n        </td>\\n    <% }); %>\\n</tr>';\ntpl['fields/dataset-row.html'] = '<tr class=\"coreui-form__field-dataset-item\" id=\"dataset-item-<%= hashItem %>\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-1 pb-1\">\\n        <% if (option.type === \\'select\\') { %>\\n            <select <%- option.attr %>>\\n                <% $.each(option.items, function(key, item) { %>\\n                <option <%- item.attr %>><%- item.title %></option>\\n                <% }); %>\\n            </select>\\n        <% } else if (option.type === \\'switch\\') { %>\\n            <div class=\"form-check form-switch\">\\n                <input <%- option.attr %>/>\\n            </div>\\n        <% } else { %>\\n            <input <%- option.attr %>>\\n        <% } %>\\n        </td>\\n    <% }); %>\\n\\n    <td class=\"pb-1\">\\n        <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-remove\" data-item-id=\"dataset-item-<%= hashItem %>\">\\n            <i class=\"bi bi-x text-muted\"></i>\\n        </button>\\n    </td>\\n</tr>';\ntpl['fields/dataset.html'] = '<% if (field.readonly) { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted pe-2\"><small><%= item.title %></small></td>\\n                <% }); %>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n            <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n<% } else { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted\"><small><%= item.title %></small></td>\\n                <% }); %>\\n                <td></td>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n                <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n    <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-add\"><%= lang.dataset_add %></button>\\n<% } %>';\ntpl['fields/hidden.html'] = '<% if ( ! field.readonly) { %>\\n    <input <%- render.attr %>/>\\n<% } %>';\ntpl['fields/input.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/modal-loading.html'] = '<div class=\"py-4 d-flex justify-content-center align-items-center gap-2\">\\n    <div class=\"spinner-border mr-2\"></div> <%= lang.modal_loading %>\\n</div>\\n';\ntpl['fields/modal.html'] = '<% if (field.readonly) { %>\\n    <%= text %>\\n<% } else { %>\\n    <div class=\"input-group\"<% if (render.width) { %> style=\"width:<%= render.width %>\"<% } %>>\\n        <input <%- render.attr %>/>\\n        <input type=\"hidden\" name=\"<%= field.name %>\" value=\"<%= value %>\" class=\"coreui-form-modal-value\"/>\\n        <% if ( ! field.required) { %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-clear border-secondary-subtle\" type=\"button\">\\n            <i class=\"bi bi-x\"></i>\\n        </button>\\n        <% } %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-select border-secondary-subtle\" type=\"button\"><%= lang.modal_select %></button>\\n    </div>\\n<% } %>';\ntpl['fields/passwordRepeat.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <div class=\"d-flex gap-1 align-items-center\">\\n        <input <%- render.attr %>/>\\n        <small class=\"password-text-repeat\"><%= lang.repeat %></small>\\n\\n        <% if (field.showBtn) { %>\\n            <div class=\"input-group flex-nowrap\">\\n                <input <%- render.attr2 %>/>\\n                <button class=\"btn btn-sm btn-outline-secondary border-secondary-subtle btn-password-change\" type=\"button\"\\n                        data-change=\"<%- lang.change %>\" data-cancel=\"<%- lang.cancel %>\"><%= btn_text %></button>\\n            </div>\\n        <% } else { %>\\n            <input <%- render.attr2 %>/>\\n        <% } %>\\n\\n    </div>\\n<% } %>';\ntpl['fields/radio.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItem %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/select.html'] = '<% if (field.readonly) { %>\\n    <%= render.selectedOptions.join(\\', \\') %>\\n<% } else { %>\\n    <select <%- render.attr %>>\\n        <% $.each(render.options, function(key, option) { %>\\n            <% if (option.type === \\'group\\') { %>\\n                <optgroup<%- option.attr %>/>\\n                <% $.each(option.options, function(key, groupOption) { %>\\n                    <option <%- groupOption.attr %>/><%= groupOption.text %></option>\\n                <% }); %>\\n                </optgroup>\\n            <% } else { %>\\n            <option <%- option.attr %>/><%= option.text %></option>\\n            <% } %>\\n        <% }); %>\\n    </select>\\n<% } %>';\ntpl['fields/switch.html'] = '<% if (field.readonly) { %>\\n    <%= field.valueY == value ? lang.switch_yes : lang.switch_no %>\\n<% } else { %>\\n    <div class=\"form-check form-switch\">\\n        <input <%- render.attr %>/>\\n    </div>\\n<% } %>';\ntpl['fields/textarea.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea <%- render.attr %>><%- value %></textarea>\\n<% } %>';\ntpl['fields/wysiwyg.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea name=\"<%= field.name %>\" id=\"editor-<%= editorHash %>\"><%- value %></textarea>\\n<% } %>';\n\nlet coreuiFormUtils = {\r\n\r\n    /**\r\n     * Получение значения поля\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               fieldOptions\r\n     * @returns {string|number|null}\r\n     */\r\n    getFieldValue: function (form, fieldOptions) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        if (fieldOptions &&\r\n            formRecord &&\r\n            typeof fieldOptions.name === 'string' &&\r\n            typeof formRecord === 'object' &&\r\n            formRecord.hasOwnProperty(fieldOptions.name) &&\r\n            ['string', 'number', 'object'].indexOf(typeof formRecord[fieldOptions.name]) >= 0\r\n        ) {\r\n            return formRecord[fieldOptions.name];\r\n        }\r\n\r\n        return '';\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение функции из указанного текста\r\n     * @param functionName\r\n     * @param context\r\n     * @returns {null|Window}\r\n     * @private\r\n     */\r\n    getFunctionByName: function(functionName, context) {\r\n\r\n        let namespaces = functionName.split(\".\");\r\n        let func       = namespaces.pop();\r\n\r\n        context = context || window;\r\n\r\n        for (let i = 0; i < namespaces.length; i++) {\r\n            if (context.hasOwnProperty(namespaces[i])) {\r\n                context = context[namespaces[i]];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        if (typeof context[func] === 'function') {\r\n            return context[func];\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    eval: function (code) {\r\n\r\n        (function(){\r\n            eval(code);\r\n        })();\r\n    },\r\n\r\n\r\n    /**\r\n     * Обработка полей в полях\r\n     * @param form\r\n     * @param defaultOptions\r\n     * @param fieldOptions\r\n     */\r\n    mergeFieldOptions: function (form, defaultOptions, fieldOptions) {\r\n\r\n        let options = $.extend(true, {}, defaultOptions);\r\n\r\n        if (fieldOptions) {\r\n            if (options.hasOwnProperty('attr') && typeof options.attr === 'object' &&\r\n                fieldOptions.hasOwnProperty('attr') && typeof fieldOptions.attr === 'object'\r\n            ) {\r\n                fieldOptions.attr = this.mergeAttr(options.attr, fieldOptions.attr);\r\n            }\r\n\r\n            options = $.extend(true, {}, options, fieldOptions);\r\n        }\r\n\r\n        if (options.hasOwnProperty('width')) {\r\n            if (options.width) {\r\n                let unit = typeof options.width === 'number' ? 'px' : '';\r\n                options.width = options.width + unit;\r\n\r\n            } else if (form._options.fieldWidth && options.type !== 'color') {\r\n                let unit = typeof form._options.fieldWidth === 'number' ? 'px' : '';\r\n                options.width = form._options.fieldWidth + unit;\r\n            }\r\n        }\r\n\r\n        if (options.hasOwnProperty('labelWidth')) {\r\n            if (options.labelWidth >= 0 && options.labelWidth !== null) {\r\n                let unit = typeof options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = options.labelWidth + unit;\r\n\r\n            } else if (form._options.labelWidth) {\r\n                let unit = typeof form._options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = form._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        return options\r\n    },\r\n\r\n\r\n    /**\r\n     * Объединение атрибутов\r\n     * @param attr1\r\n     * @param attr2\r\n     * @returns {object}\r\n     */\r\n    mergeAttr: function (attr1, attr2) {\r\n\r\n        let mergeAttr = Object.assign({}, attr1);\r\n\r\n        if (typeof attr2 === 'object') {\r\n            $.each(attr2, function (name, value) {\r\n                if (mergeAttr.hasOwnProperty(name)) {\r\n                    if (name === 'class') {\r\n                        mergeAttr[name] += ' ' + value;\r\n\r\n                    } else if (name === 'style') {\r\n                        mergeAttr[name] += ';' + value;\r\n\r\n                    } else {\r\n                        mergeAttr[name] = value;\r\n                    }\r\n\r\n                } else {\r\n                    mergeAttr[name] = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return mergeAttr;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация и рендер дополнительных полей\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @returns {object}\r\n     * @private\r\n     */\r\n    getAttacheFields: function(form, options) {\r\n\r\n        let fields = [];\r\n\r\n        if (typeof options === 'object' &&\r\n            typeof(options.fields) === 'object' &&\r\n            Array.isArray(options.fields)\r\n        ) {\r\n            $.each(options.fields, function (key, field) {\r\n                let instance = form.initField(field);\r\n\r\n                if (typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                fields.push({\r\n                    hash: instance._hash,\r\n                    direction: options.hasOwnProperty('fieldsDirection') ? options.fieldsDirection : 'row',\r\n                    content: instance.renderContent()\r\n                });\r\n            });\r\n        }\r\n\r\n        return fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDate: function (value) {\r\n\r\n        if (value && value.length === 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDateTime: function (value) {\r\n\r\n        if (value && value.length >= 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n            let hour  = (\"00\" + date.getHours()).slice(-2);\r\n            let min   = (\"00\" + date.getMinutes()).slice(-2);\r\n            let sec   = (\"00\" + date.getSeconds()).slice(-2);\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year + ' ' + hour + ':' + min + ':' + sec;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateMonth: function (value, lang) {\r\n\r\n        if (value && value.length === 7) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth();\r\n\r\n            let monthLang = lang.date_months.hasOwnProperty(month) ? lang.date_months[month] : '';\r\n\r\n            value = monthLang + ' ' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateWeek: function (value, lang) {\r\n\r\n        if (value && value.length >= 7) {\r\n            let year = value.substring(0, 4);\r\n            let week = value.substring(6);\r\n\r\n            value = year + ' ' + lang.date_week + ' ' + week;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из объекта по указанному пути\r\n     * @param {object} obj\r\n     * @param {string} path\r\n     * @return {*}\r\n     */\r\n    getObjValue: function(obj, path) {\r\n\r\n        path = path.split('.');\r\n\r\n        for (let i = 0, len = path.length; i < len; i++){\r\n            obj = obj[path[i]];\r\n        }\r\n\r\n        return obj;\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка на число\r\n     * @param num\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    isNumeric: function(num) {\r\n        return (typeof(num) === 'number' || typeof(num) === \"string\" && num.trim() !== '') && ! isNaN(num);\r\n    },\r\n\r\n\r\n    /**\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    hashCode: function() {\r\n        return this.crc32((new Date().getTime() + Math.random()).toString()).toString(16);\r\n    },\r\n\r\n\r\n    /**\r\n     * Hash crc32\r\n     * @param str\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    crc32: function (str) {\r\n\r\n        for (var a, o = [], c = 0; c < 256; c++) {\r\n            a = c;\r\n            for (var f = 0; f < 8; f++) {\r\n                a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;\r\n            }\r\n            o[c] = a;\r\n        }\r\n\r\n        for (var n = -1, t = 0; t < str.length; t++) {\r\n            n = n >>> 8 ^ o[255 & (n ^ str.charCodeAt(t))];\r\n        }\r\n\r\n        return (-1 ^ n) >>> 0;\r\n    },\r\n\r\n\r\n    /**\r\n     * Округление\r\n     * @param number\r\n     * @param precision\r\n     * @returns {number}\r\n     */\r\n    round: function (number, precision) {\r\n\r\n        precision = typeof precision !== 'undefined' ? parseInt(precision) : 0;\r\n\r\n        if (precision === 0) {\r\n            return Math.round(number);\r\n\r\n        } else if (precision > 0) {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number * pow) / pow;\r\n\r\n        } else {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number / pow) * pow;\r\n        }\r\n    }\r\n};\n\nlet coreuiFormInstance = {\r\n\r\n    _options: {\r\n        id: null,\r\n        title: '',\r\n        lang: 'en',\r\n        send: {\r\n            url: '',\r\n            method: 'POST',\r\n            format: 'form',\r\n        },\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        labelWidth: 200,\r\n        controlsOffset: null,\r\n        readonly: false,\r\n        validate: false,\r\n        successLoadUrl: '',\r\n        errorClass: '',\r\n        layout: '[column_default]',\r\n        onSubmit: null,\r\n        onSubmitSuccess: null,\r\n        record: {},\r\n        fields: [],\r\n        controls: []\r\n    },\r\n\r\n    _lock: false,\r\n    _fieldsIndex: 0,\r\n    _groupsIndex: 0,\r\n    _controlsIndex: 0,\r\n    _groups: [],\r\n    _fields: [],\r\n    _controls: [],\r\n    _events: {},\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {object} options\r\n     * @private\r\n     */\r\n    _init: function (options) {\r\n\r\n        this._options.labelWidth    = coreuiForm$1.getSetting('labelWidth');\r\n        this._options.lang          = coreuiForm$1.getSetting('lang');\r\n        this._options.errorClass    = coreuiForm$1.getSetting('errorClass');\r\n        this._options.send.format = coreuiForm$1.getSetting('sendDataFormat');\r\n\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        if ( ! this._options.id) {\r\n            this._options.id = coreuiFormUtils.hashCode();\r\n        }\r\n\r\n        if (this._options.hasOwnProperty('labelWidth')) {\r\n            if (this._options.labelWidth >= 0 && this._options.labelWidth !== null) {\r\n                let unit = typeof this._options.labelWidth === 'number' ? 'px' : '';\r\n                this._options.labelWidth = this._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        if ( ! this._options.hasOwnProperty('controlsOffset') || this._options.controlsOffset === null) {\r\n            this._options.controlsOffset = this._options.labelWidth;\r\n        } else {\r\n            if (this._options.controlsOffset >= 0) {\r\n                let unit = typeof this._options.controlsOffset === 'number' ? 'px' : '';\r\n                this._options.controlsOffset = this._options.controlsOffset + unit;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    initEvents: function () {\r\n\r\n        let that          = this;\r\n        let formContainer = '#coreui-form-' + this._options.id + ' > form';\r\n\r\n        $(formContainer).on('submit', function () {\r\n            setTimeout(function () {\r\n                that.send.apply(that);\r\n            }, 0);\r\n            return false;\r\n        });\r\n\r\n        this._trigger('shown.coreui.form');\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение id формы\r\n     * @return {string|null}\r\n     */\r\n    getId: function () {\r\n\r\n        return this._options.hasOwnProperty('id') ? this._options.id : null;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    render: function(element) {\r\n\r\n        let that       = this;\r\n        let widthSizes = [];\r\n        let layout     = this._options.layout;\r\n        let controls   = [];\r\n        let formAttr   = [];\r\n\r\n\r\n\r\n        if (this._options.width) {\r\n            let unit = typeof this._options.width === 'number' ? 'px' : '';\r\n            widthSizes.push('width:' + this._options.width + unit);\r\n        }\r\n\r\n        if (this._options.minWidth) {\r\n            let unit = typeof this._options.minWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('min-width:' + this._options.minWidth + unit);\r\n        }\r\n\r\n        if (this._options.maxWidth) {\r\n            let unit = typeof this._options.maxWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('max-width:' + this._options.maxWidth + unit);\r\n        }\r\n\r\n\r\n\r\n        // Поля\r\n        if (typeof this._options.fields === 'object' &&\r\n            Array.isArray(this._options.fields) &&\r\n            this._options.fields.length > 0 &&\r\n            layout &&\r\n            typeof layout === 'string'\r\n        ) {\r\n            let matches        = Array.from(layout.matchAll(/\\[column_([\\w_\\d]+)\\]/g));\r\n            let columns        = [];\r\n            let columnsContent = {};\r\n\r\n            if (matches.length > 0) {\r\n                $.each(matches, function (key, match) {\r\n                    columns.push(match[1]);\r\n                });\r\n            }\r\n\r\n            if (columns.length > 0) {\r\n                $.each(this._options.fields, function (key, field) {\r\n                    let column = field.hasOwnProperty('column') && (typeof field.column === 'string' || typeof field.column === 'number')\r\n                        ? (columns.indexOf(field.column) >= 0 ? field.column : null)\r\n                        : 'default';\r\n\r\n                    if (typeof column !== 'string') {\r\n                        return;\r\n                    }\r\n\r\n                    let type     = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : '';\r\n                    let instance = null;\r\n\r\n                    if (type === 'group') {\r\n                        instance = that.initGroup(field);\r\n\r\n                    } else {\r\n                        instance = that.initField(field);\r\n                    }\r\n\r\n\r\n                    if ( ! instance || typeof instance !== 'object') {\r\n                        return;\r\n                    }\r\n\r\n                    if ( ! columnsContent.hasOwnProperty(column)) {\r\n                        columnsContent[column] = [];\r\n                    }\r\n                    columnsContent[column].push(instance.render());\r\n                });\r\n            }\r\n\r\n            if (Object.keys(columnsContent).length >= 0) {\r\n                $.each(columnsContent, function (name, fieldContents) {\r\n\r\n                    layout = layout.replace('[column_' + name + ']', fieldContents.join(''));\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        // Элементы управления\r\n        if (typeof this._options.controls === 'object' &&\r\n            Array.isArray(this._options.controls) &&\r\n            this._options.controls.length > 0\r\n        ) {\r\n            $.each(this._options.controls, function (key, control) {\r\n                let instance = that.initControl(control);\r\n\r\n                if ( ! instance || typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                controls.push({\r\n                    show: ! control.hasOwnProperty('show') || control.show,\r\n                    index: that._controlsIndex - 1,\r\n                    content: instance.render()\r\n                });\r\n            });\r\n        }\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            formAttr.push('novalidate');\r\n        }\r\n\r\n\r\n        let html = ejs.render(tpl['form.html'], {\r\n            form: this._options,\r\n            formAttr: formAttr ? ' ' + formAttr.join(' ') : '',\r\n            widthSizes: widthSizes,\r\n            layout: layout,\r\n            controls: controls,\r\n        });\r\n\r\n        if (element === undefined) {\r\n            return html;\r\n        }\r\n\r\n        // Dom element\r\n        let domElement = {};\r\n\r\n        if (typeof element === 'string') {\r\n            domElement = document.getElementById(element);\r\n\r\n            if ( ! domElement) {\r\n                return '';\r\n            }\r\n\r\n        } else if (element instanceof HTMLElement) {\r\n            domElement = element;\r\n        }\r\n\r\n\r\n        domElement.innerHTML = html;\r\n\r\n        this.initEvents();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        this._lock = true;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.lock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Разблокировка\r\n     */\r\n    unlock: function () {\r\n\r\n        this._lock = false;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.unlock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Отправка данных формы\r\n     */\r\n    send: function () {\r\n\r\n        if (this._lock) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            let isValid = this.validate();\r\n\r\n            if ( ! isValid) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let onsubmit = null;\r\n        let data     = this.getData();\r\n\r\n        if (typeof this._options.onSubmit === 'function') {\r\n            onsubmit = this._options.onSubmit;\r\n\r\n        } else if (typeof this._options.onSubmit === 'string' && this._options.onSubmit) {\r\n            let func = coreuiFormUtils.getFunctionByName(this._options.onSubmit);\r\n\r\n            if (typeof func === 'function') {\r\n                onsubmit = func;\r\n            } else if (typeof this._options.onSubmit === 'string') {\r\n                let onSubmitText = this._options.onSubmit;\r\n\r\n                onsubmit = function(form, data) {\r\n                    try {\r\n                        coreuiFormUtils.eval(onSubmitText);\r\n                    } catch (e) {\r\n                        throw Error('Incorrect onSubmit param: ' + e.message)\r\n                    }\r\n                };\r\n            }\r\n        }\r\n\r\n        if (typeof onsubmit === 'function') {\r\n            let onSubmitResult = onsubmit(this, data);\r\n\r\n            if (onSubmitResult === false) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let results    = this._trigger('send.coreui.form', this, [ this, data ]);\r\n        let isStopSend = false;\r\n\r\n        $.each(results, function(key, result) {\r\n            if (result === false) {\r\n                isStopSend = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        if (isStopSend) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.lock();\r\n\r\n        let that       = this;\r\n        let sendFormat = ['form', 'json'].indexOf(this._options.send.format) >= 0\r\n            ? this._options.send.format\r\n            : 'form';\r\n\r\n        let dataFormat  = null;\r\n        let contentType = null;\r\n\r\n        if (sendFormat === 'json') {\r\n            contentType = \"application/json; charset=utf-8\";\r\n            dataFormat  = JSON.stringify(data);\r\n\r\n        } else {\r\n            contentType = false;\r\n            dataFormat  = new FormData();\r\n\r\n            $.each(data, function (name, value) {\r\n                if (value instanceof File) {\r\n                    dataFormat.append(name, value, value.name);\r\n\r\n                } else if (value instanceof FileList) {\r\n                    $.each(value, function (key, file) {\r\n                        dataFormat.append(name, file, file.name);\r\n                    });\r\n\r\n                } else {\r\n                    dataFormat.append(name, value);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        $.ajax({\r\n            url: this._options.send.url,\r\n            method: this._options.send.method,\r\n            data: dataFormat,\r\n            contentType: contentType,\r\n            processData: false,\r\n            beforeSend: function(xhr) {\r\n                that._trigger('start-send.coreui.form', that, [ that, xhr ]);\r\n            },\r\n            success: function (result) {\r\n                that.hideError();\r\n\r\n                that._trigger('success-send.coreui.form', that, [ that, result ]);\r\n\r\n                let jsonResponse = null;\r\n\r\n                if (typeof result === 'string') {\r\n                    try {\r\n                        let parsedResponse = JSON.parse(result);\r\n                        if (typeof parsedResponse === 'object' &&\r\n                            parsedResponse !== null &&\r\n                            ! Array.isArray(parsedResponse)\r\n                        ) {\r\n                            jsonResponse = parsedResponse;\r\n                        }\r\n\r\n                    } catch (e) {\r\n                        // ignore\r\n                    }\r\n                } else {\r\n                    jsonResponse = result;\r\n                }\r\n\r\n                if (jsonResponse !== null && typeof jsonResponse === 'object') {\r\n                    if (jsonResponse.hasOwnProperty('scripts') &&\r\n                        Array.isArray(jsonResponse.scripts)\r\n                    ) {\r\n                        $.each(jsonResponse.scripts, function (key, script) {\r\n                            if (typeof script === 'string') {\r\n                                let func = coreuiFormUtils.getFunctionByName(script);\r\n\r\n                                if (typeof func === 'function') {\r\n                                    func();\r\n                                } else {\r\n                                    coreuiFormUtils.eval(script);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (jsonResponse.hasOwnProperty('loadUrl') &&\r\n                        typeof jsonResponse.loadUrl === 'string'\r\n                    ) {\r\n                        location.href = jsonResponse.loadUrl;\r\n                    }\r\n                }\r\n\r\n                if (that._options.hasOwnProperty('onSubmitSuccess')) {\r\n                    if (typeof that._options.onSubmitSuccess === 'function') {\r\n                        that._options.onSubmitSuccess();\r\n\r\n                    } else if (typeof that._options.onSubmitSuccess === 'string') {\r\n                        let func = coreuiFormUtils.getFunctionByName(that._options.onSubmitSuccess);\r\n\r\n                        if (typeof func === 'function') {\r\n                            func();\r\n                        } else {\r\n                            coreuiFormUtils.eval(that._options.onSubmitSuccess);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (that._options.hasOwnProperty('successLoadUrl') &&\r\n                    typeof that._options.successLoadUrl === 'string'\r\n                ) {\r\n                    let successLoadUrl = that._options.successLoadUrl;\r\n\r\n                    // Замена параметров\r\n                    if (jsonResponse !== null && typeof jsonResponse === 'object') {\r\n                        const regx      = new RegExp('\\\\[response\\\\.([\\\\d\\\\w\\\\.]+)\\\\]', 'uig');\r\n                        let   urlParams = {};\r\n\r\n                        while (result = regx.exec(successLoadUrl)) {\r\n                            urlParams[result[0]] = result[1];\r\n                        }\r\n\r\n                        if (Object.keys(urlParams).length > 0) {\r\n                            $.each(urlParams, function (param, path) {\r\n                                let value = coreuiFormUtils.getObjValue(jsonResponse, path);\r\n                                value = typeof value !== 'undefined' ? value : '';\r\n\r\n                                successLoadUrl = successLoadUrl.replace(\r\n                                    new RegExp(param.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'g'),\r\n                                    value\r\n                                );\r\n                            });\r\n                        }\r\n                    }\r\n\r\n\r\n                    let equalHash = location.hash === successLoadUrl;\r\n\r\n                    location.href = successLoadUrl;\r\n\r\n                    if (equalHash) {\r\n                        window.onhashchange();\r\n                    }\r\n                }\r\n            },\r\n            error: function(xhr, textStatus, errorThrown) {\r\n                let errorMessage = that.getLang().send_error || '';\r\n                let data         = {};\r\n\r\n                try {\r\n                    let parsedResponse = JSON.parse(xhr.responseText);\r\n                    if (typeof parsedResponse === 'object' &&\r\n                        parsedResponse !== null &&\r\n                        ! Array.isArray(parsedResponse)\r\n                    ) {\r\n                        data = parsedResponse;\r\n                    }\r\n\r\n                } catch (e) {\r\n                    // ignore\r\n                }\r\n\r\n                if (data.hasOwnProperty('error_message') &&\r\n                    typeof data.error_message === 'string' &&\r\n                    data.error_message !== ''\r\n                ) {\r\n                    errorMessage = data.error_message;\r\n                }\r\n\r\n                that.showError(errorMessage);\r\n                that._trigger('error-send.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n            },\r\n            complete: function(xhr, textStatus) {\r\n                that.unlock();\r\n                that._trigger('end-send.coreui.form', that, [ that, xhr, textStatus ]);\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return this._options;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение записи\r\n     * @returns {object}\r\n     */\r\n    getRecord: function () {\r\n\r\n        if (this._options.hasOwnProperty('record') && typeof this._options.record === 'object') {\r\n            return this._options.record;\r\n        }\r\n\r\n        return {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение данных с формы\r\n     * @returns {object}\r\n     */\r\n    getData: function () {\r\n\r\n        let data = {};\r\n\r\n        $.each(this._fields, function (key, field) {\r\n            let fieldOptions = field.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name) {\r\n                data[fieldOptions.name] = field.getValue();\r\n            }\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение полей\r\n     * @returns {object}\r\n     */\r\n    getFields: function () {\r\n        return this._fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение элементов управления\r\n     * @returns {object}\r\n     */\r\n    getControls: function () {\r\n        return this._controls;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение групп полей\r\n     * @returns {object}\r\n     */\r\n    getGroups: function () {\r\n        return this._groups;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение поля\r\n     * @param {string} name\r\n     * @returns {object}\r\n     */\r\n    getField: function (name) {\r\n\r\n        let field = {};\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            let fieldOptions = fieldInstance.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name === name) {\r\n                field = fieldInstance;\r\n            }\r\n        });\r\n\r\n        return field;\r\n    },\r\n\r\n\r\n    /**\r\n     * Смена состояний полей формы\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            fieldInstance.readonly(isReadonly);\r\n        });\r\n\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                if (isReadonly) {\r\n                    control.hide();\r\n                } else {\r\n                    control.show();\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ всех элементов управления\r\n     */\r\n    showControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.show();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие всех элементов управления\r\n     */\r\n    hideControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.hide();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Валидация полей\r\n     * @return {boolean}\r\n     */\r\n    validate: function () {\r\n\r\n        let isValid = true;\r\n\r\n        $.each(this._fields, function (key, field) {\r\n\r\n            if (field.isValid() === false) {\r\n                field.validate(false);\r\n                isValid = false;\r\n\r\n            } else {\r\n                field.validate(null);\r\n            }\r\n        });\r\n\r\n        return isValid;\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ сообщения с ошибкой\r\n     * @param {string} message\r\n     * @param {object} options\r\n     */\r\n    showError: function (message, options) {\r\n\r\n        let formContainer = $('#coreui-form-' + this._options.id + ' > form');\r\n        let formError     = formContainer.find('> .coreui-form__error');\r\n\r\n        if (formError[0]) {\r\n            formError.remove();\r\n        }\r\n\r\n        options = typeof options === 'object' && ! Array.isArray(options) && options !== null ? options : {};\r\n\r\n        if (typeof this._options.errorClass === 'string' && this._options.errorClass !== '') {\r\n            options.class = options.hasOwnProperty('class') ? options.class : '';\r\n            options.class += ' ' + this._options.errorClass;\r\n        }\r\n\r\n        let errorOptions = {\r\n            class:   options.hasOwnProperty('class') && typeof options.class === 'string' ? options.class : '',\r\n            dismiss: options.hasOwnProperty('dismiss') ? !! options.dismiss : true,\r\n        };\r\n\r\n        formContainer.prepend(\r\n            ejs.render(tpl['form-error.html'], {\r\n                message: message,\r\n                options: errorOptions,\r\n            })\r\n        );\r\n\r\n\r\n        if ( ! options.hasOwnProperty('scroll') || options.scroll) {\r\n            let scrollOffset = coreuiForm$1.getSetting('errorMessageScrollOffset');\r\n\r\n            $('html,body').animate({\r\n                scrollTop : formContainer.offset().top - scrollOffset\r\n            }, 'fast');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие сообщения с ошибкой\r\n     */\r\n    hideError: function () {\r\n\r\n        $('#coreui-form-' + this._options.id + ' > form > .coreui-form__error').remove();\r\n    },\r\n\r\n\r\n    /**\r\n     * @param eventName\r\n     * @param callback\r\n     * @param context\r\n     * @param singleExec\r\n     */\r\n    on: function(eventName, callback, context, singleExec) {\r\n        if (typeof this._events[eventName] !== 'object') {\r\n            this._events[eventName] = [];\r\n        }\r\n        this._events[eventName].push({\r\n            context : context || this,\r\n            callback: callback,\r\n            singleExec: !! singleExec,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление формы\r\n     */\r\n    destruct: function () {\r\n\r\n        $('#coreui-form-' + this._options.id).remove();\r\n        delete coreuiForm$1._instances[this.getId()];\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация поля\r\n     * @param field\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initField: function (field) {\r\n\r\n        if (typeof field !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : 'input';\r\n\r\n        if (type === 'group') {\r\n            return null;\r\n        }\r\n\r\n        if ( ! coreuiForm$1.fields.hasOwnProperty(type)) {\r\n            type = 'input';\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            field.readonly = true;\r\n        }\r\n\r\n\r\n        let fieldInstance = $.extend(true, {\r\n            render:        function () {},\r\n            renderContent: function () {},\r\n            init:          function () {},\r\n            getValue:      function () {},\r\n            setValue:      function () {},\r\n            getOptions:    function () {},\r\n            show:          function () {},\r\n            hide:          function () {},\r\n            readonly:      function () {},\r\n            validate:      function () {},\r\n            isValid:       function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        fieldInstance.init(this, field, this._fieldsIndex++);\r\n\r\n        this._fields.push(fieldInstance);\r\n\r\n        return fieldInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация группы\r\n     * @param group\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initGroup: function (group) {\r\n\r\n        if (typeof group !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = group.hasOwnProperty('type') && typeof group.type === 'string' ? group.type : '';\r\n\r\n        if (type !== 'group') {\r\n            return null;\r\n        }\r\n\r\n        let groupInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            expand:     function () {},\r\n            collapse:   function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        groupInstance.init(this, group, this._groupsIndex++);\r\n\r\n        this._groups.push(groupInstance);\r\n\r\n        return groupInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация контролов\r\n     * @param control\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initControl: function (control) {\r\n\r\n        if (typeof control !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : null;\r\n\r\n        if ( ! type || ! coreuiForm$1.controls.hasOwnProperty(type)) {\r\n            return null;\r\n        }\r\n\r\n        if (type === 'submit' && this._options.readonly) {\r\n            control.show = false;\r\n        }\r\n\r\n\r\n        let controlInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            show:       function () {},\r\n            hide:       function () {},\r\n        }, coreuiForm$1.controls[type]);\r\n\r\n        controlInstance.init(this, control, this._controlsIndex++);\r\n\r\n        this._controls.push(controlInstance);\r\n\r\n        return controlInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение настроек языка\r\n     * @private\r\n     */\r\n    getLang: function () {\r\n\r\n        return coreuiForm$1.lang.hasOwnProperty(this._options.lang)\r\n            ? coreuiForm$1.lang[this._options.lang]\r\n            : coreuiForm$1.lang['ru'];\r\n    },\r\n\r\n\r\n    /**\r\n     * @param name\r\n     * @param context\r\n     * @param params\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _trigger: function(name, context, params) {\r\n\r\n        params = params || [];\r\n        let results = [];\r\n\r\n        if (this._events[name] instanceof Object && this._events[name].length > 0) {\r\n            for (var i = 0; i < this._events[name].length; i++) {\r\n                let callback = this._events[name][i].callback;\r\n\r\n                context = context || this._events[name][i].context;\r\n\r\n                results.push(\r\n                    callback.apply(context, params)\r\n                );\r\n\r\n                if (this._events[name][i].singleExec) {\r\n                    this._events[name].splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n\r\n    /**\r\n     * @param {object} control\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderControl: function (control) {\r\n\r\n        let content = '';\r\n        let type    = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : 'text';\r\n\r\n        if (coreuiForm$1.control.hasOwnProperty(type)) {\r\n            content = coreuiForm$1.control[type].render(control);\r\n        }\r\n\r\n        return content;\r\n    }\r\n};\n\nvar coreuiForm$1 = {\r\n\r\n    lang: {},\r\n    fields: {},\r\n    controls: {},\r\n\r\n    _instances: {},\r\n    _settings: {\r\n        labelWidth: 200,\r\n        lang: 'en',\r\n        class: '',\r\n        sendDataFormat: 'form',\r\n        errorMessageScrollOffset: 70\r\n    },\r\n\r\n\r\n    /**\r\n     * Создание экземпляра формы\r\n     * @param {object} options\r\n     * @returns {coreuiFormInstance}\r\n     */\r\n    create: function (options) {\r\n\r\n        let instance = $.extend(true, {}, coreuiFormInstance);\r\n        instance._init(options instanceof Object ? options : {});\r\n\r\n        let formId = instance.getId();\r\n        this._instances[formId] = instance;\r\n\r\n        return instance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение экземпляра формы по id\r\n     * @param {string} id\r\n     * @returns {coreuiFormInstance|null}\r\n     */\r\n    get: function (id) {\r\n\r\n        if ( ! this._instances.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        if ($('#coreui-form-' + this._instances[id])[0]) {\r\n            delete this._instances[id];\r\n            return null;\r\n        }\r\n\r\n        return this._instances[id];\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка настроек\r\n     * @param {object} settings\r\n     */\r\n    setSettings: function(settings) {\r\n\r\n        this._settings = $.extend({}, this._settings, settings);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения настройки\r\n     * @param {string} name\r\n     */\r\n    getSetting: function(name) {\r\n\r\n        let value = null;\r\n\r\n        if (this._settings.hasOwnProperty(name)) {\r\n            value = this._settings[name];\r\n        }\r\n\r\n        return value;\r\n    }\r\n};\n\ncoreuiForm$1.lang.ru = {\r\n    \"modal_select\": \"Выбрать\",\r\n    \"modal_loading\": \"Загрузка...\",\r\n    \"switch_yes\": \"Да\",\r\n    \"switch_no\": \"Нет\",\r\n    \"dataset_add\": \"Добавить\",\r\n    \"date_months\": ['Январь','Февраль','Март','Апрель','Май','Июнь', 'Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\r\n    \"date_week\": \"неделя\",\r\n    \"send_error\": \"Произошла ошибка. Попробуйте снова или обратитесь к администратору\",\r\n    \"required_field\": \"Обязательное поле\",\r\n    \"repeat\": \"повторите\",\r\n    \"change\": \"изменить\",\r\n    \"cancel\": \"отмена\"\r\n};\n\ncoreuiForm$1.lang.en = {\r\n    \"modal_select\": \"Select\",\r\n    \"modal_loading\": \"Loading...\",\r\n    \"switch_yes\": \"Yes\",\r\n    \"switch_no\": \"No\",\r\n    \"dataset_add\": \"Add\",\r\n    \"date_months\": [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\r\n    \"date_week\": \"week\",\r\n    \"send_error\": \"An error has occurred. Please try again or contact your administrator\",\r\n    \"required_field\": \"Required field\",\r\n    \"repeat\": \"repeat\",\r\n    \"change\": \"change\",\r\n    \"cancel\": \"cancel\"\r\n};\n\ncoreuiForm$1.controls.button = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'button',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-secondary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'button';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            coreuiFormUtils.eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.custom = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'custom',\r\n        content: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form   = form;\r\n        this._index   = index;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return this._options.content;\r\n    }\r\n};\n\ncoreuiForm$1.controls.link = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'link',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-link'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/link.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > a')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            coreuiFormUtils.eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.submit = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'submit',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        show: true,\r\n        attr: {\r\n            class: 'btn btn-sm btn-primary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    unlock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        button.find('.spinner-border').remove();\r\n        button.removeAttr('disabled');\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'submit';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            coreuiFormUtils.eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.checkbox = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'checkbox',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: null,\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {object}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let values = [];\r\n\r\n            $('.content-' + this._hash + ' input[type=checkbox]:checked').each(function () {\r\n                values.push($(this).val());\r\n            });\r\n\r\n            return values;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значений в поле\r\n     * @param {object|null|string|number} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=radio]').prop('checked', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' input[type=radio]').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('checked', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that            = this;\r\n        let checkboxOptions = [];\r\n        let fieldOptions    = this.getOptions();\r\n        let selectedItems   = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'checkbox',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils.hashCode();\r\n\r\n                if (typeof(that._value) === 'object' &&\r\n                    Array.isArray(that._value)\r\n                ) {\r\n                    $.each(that._value, function (key, itemValue) {\r\n                        if (itemValue == option.value) {\r\n                            itemAttr.checked = 'checked';\r\n                            if (option.hasOwnProperty('text') && option.text) {\r\n                                selectedItems.push(option.text);\r\n                            }\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                } else if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItems.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                checkboxOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        let value = typeof this._value === 'object' && Array.isArray(this._value)\r\n            ? this._value.join(', ')\r\n            : this._value;\r\n\r\n        return ejs.render(tpl['fields/checkbox.html'], {\r\n            field: fieldOptions,\r\n            value: value,\r\n            render: {\r\n                options: checkboxOptions,\r\n                selectedItems: selectedItems\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.color = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'color',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-color d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            value: this._value\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.custom = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _options: {\r\n        type: 'custom',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        content: '',\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     */\r\n    getValue: function () {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options         = this.getOptions();\r\n        let content         = '';\r\n        let alloyComponents = [\r\n            'coreui.table',\r\n            'coreui.layout',\r\n            'coreui.panel',\r\n            'coreui.tabs',\r\n            'coreui.info',\r\n            'coreui.chart',\r\n        ];\r\n\r\n        if (typeof options.content === 'string') {\r\n            content = options.content;\r\n\r\n        } else if (options.content instanceof Object) {\r\n            if ( ! Array.isArray(options.content)) {\r\n                options.content = [ options.content ];\r\n            }\r\n\r\n            let components = [];\r\n\r\n            for (let i = 0; i < options.content.length; i++) {\r\n                if (typeof options.content[i] === 'string') {\r\n                    components.push(options.content[i]);\r\n\r\n                } else if ( ! Array.isArray(options.content[i]) &&\r\n                        options.content[i].hasOwnProperty('component') &&\r\n                        alloyComponents.indexOf(options.content[i].component) >= 0\r\n                ) {\r\n                    let name = options.content[i].component.split('.')[1];\r\n\r\n                    if (CoreUI.hasOwnProperty(name) &&\r\n                        typeof CoreUI[name] === \"object\" &&\r\n                        CoreUI[name] !== null &&\r\n                        ! Array.isArray(CoreUI[name])\r\n                    ) {\r\n                        let instance = CoreUI[name].create(options.content[i]);\r\n                        components.push(instance.render());\r\n\r\n                        this._form.on('shown.coreui.form', instance.initEvents, instance, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            content = components.join('');\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/custom.html'], {\r\n            content: content\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.dataset = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: [],\r\n    _renderOptions: [],\r\n    _options: {\r\n        type: 'dataset',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let name = option.hasOwnProperty('name') && ['string', 'number'].indexOf(typeof (option.name)) >= 0\r\n                    ? option.name\r\n                    : '';\r\n                let type = option.hasOwnProperty('type') && typeof (option.type) === 'string'\r\n                    ? option.type\r\n                    : 'text';\r\n                let attributes = option.hasOwnProperty('attr') && typeof (option.attr) === 'object' && ! Array.isArray(option.attr)\r\n                    ? option.attr\r\n                    : {};\r\n                let items = option.hasOwnProperty('items') && typeof (option.items) === 'object' && Array.isArray(option.items)\r\n                    ? option.items\r\n                    : [];\r\n                let valueY = option.hasOwnProperty('valueY') && ['string', 'numeric'].indexOf(typeof (option.valueY)) >= 0\r\n                    ? option.valueY\r\n                    : 'Y';\r\n                let valueN = option.hasOwnProperty('valueN') && ['string', 'numeric'].indexOf(typeof (option.valueN)) >= 0\r\n                    ? option.valueN\r\n                    : 'N';\r\n\r\n                if (name) {\r\n                    attributes.name = name;\r\n                }\r\n                if (options.required) {\r\n                    attributes.required = 'required';\r\n                }\r\n\r\n                if (type === 'select') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-select form-select-sm ' + attributes.class\r\n                        : 'form-select form-select-sm';\r\n\r\n                } else if (type === 'switch') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-check-input ' + attributes.class\r\n                        : 'form-check-input';\r\n\r\n                    attributes.type = 'checkbox';\r\n                    attributes.value = valueY;\r\n\r\n                } else {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-control form-control-sm ' + attributes.class\r\n                        : 'form-control form-control-sm';\r\n\r\n                    attributes.type = type;\r\n                }\r\n\r\n\r\n                that._renderOptions.push({\r\n                    type  : type,\r\n                    name  : name,\r\n                    attr  : attributes,\r\n                    items : items,\r\n                    valueY: valueY,\r\n                    valueN: valueN,\r\n                });\r\n            });\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {array}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let container = $('.content-' + this._hash);\r\n            let data      = [];\r\n\r\n            $('.coreui-form__field-dataset-list .coreui-form__field-dataset-item', container).each(function () {\r\n                let items = {};\r\n\r\n                $.each($(this).find('input, select').serializeArray(), function (key, item) {\r\n                    if (item.name) {\r\n                        items[item.name] = item.value;\r\n                    }\r\n                });\r\n\r\n                data.push(items);\r\n            });\r\n\r\n            return data;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (typeof value !== 'object' ||\r\n            Array.isArray(value) ||\r\n            value === null\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this._value.push(value);\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash + ' .coreui-form__field-dataset-list').append(\r\n                this._renderRowReadonly(value)\r\n            );\r\n        } else {\r\n            this._eventAdd(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление всех строк\r\n     */\r\n    removeItems: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' .coreui-form__field-dataset-list').empty();\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление строки по id\r\n     * @param {int} itemId\r\n     */\r\n    removeItem: function (itemId) {\r\n\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        $('#' + itemId).hide('fast', function () {\r\n            $('#' + itemId).remove();\r\n\r\n            if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n                $(element + ' .coreui-form__field-dataset-container').hide();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRow(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRowReadonly(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        // Кнопка удаления\r\n        $(element + ' .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n\r\n        // Кнопка добавления\r\n        $(element + ' .btn-dataset-add').click(function () {\r\n            that._eventAdd();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Событие добавления\r\n     */\r\n    _eventAdd: function (row) {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n        row = row || {};\r\n\r\n        if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n            $(element + ' .coreui-form__field-dataset-container').show();\r\n        }\r\n\r\n        $(element + ' .coreui-form__field-dataset-list').append(this._renderRow(row));\r\n        $(element + ' .coreui-form__field-dataset-item:last-child .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRow: function (row) {\r\n\r\n        let rowOptions  = [];\r\n        let itemOptions = [];\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let cellValue = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n                    let itemAttr = {};\r\n\r\n\r\n                    $.each(item, function (name, value) {\r\n                        if (name !== 'title') {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    });\r\n\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemAttr.selected = 'selected';\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemAttr.selected = 'selected';\r\n                    }\r\n\r\n                    let attributes = [];\r\n                    $.each(itemAttr, function (name, value) {\r\n                        attributes.push(name + '=\"' + value + '\"');\r\n                    });\r\n\r\n                    itemOptions.push({\r\n                        attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                        title: title\r\n                    });\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                if (cellValue == option.valueY) {\r\n                    option.attr.checked = 'checked';\r\n                }\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    option.attr.value = cellValue !== null ? cellValue : '';\r\n                }\r\n            }\r\n\r\n            let attributes = [];\r\n\r\n            $.each(option.attr, function (name, value) {\r\n                attributes.push(name + '=\"' + value + '\"');\r\n            });\r\n\r\n            rowOptions.push({\r\n                type: option.type,\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                items: itemOptions\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row.html'], {\r\n            hashItem: coreuiFormUtils.hashCode(),\r\n            options: rowOptions,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRowReadonly: function (row) {\r\n\r\n        let rowOptions = [];\r\n        let lang       = this._form.getLang();\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let optionValue = '';\r\n            let cellValue   = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                let itemOptions = [];\r\n\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemOptions.push(itemValue);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemOptions.push(cellValue);\r\n                    }\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                let valueY = 'Y';\r\n\r\n                if (option.hasOwnProperty('valueY')) {\r\n                    valueY = option.valueY;\r\n                }\r\n\r\n                optionValue = cellValue == valueY\r\n                    ? lang.switch_yes\r\n                    : lang.switch_no;\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    optionValue = cellValue;\r\n\r\n                    switch (option.type) {\r\n                        case 'date':           optionValue = coreuiFormUtils.formatDate(optionValue); break;\r\n                        case 'datetime-local': optionValue = coreuiFormUtils.formatDateTime(optionValue); break;\r\n                        case 'month':          optionValue = coreuiFormUtils.formatDateMonth(optionValue, lang); break;\r\n                        case 'week':           optionValue = coreuiFormUtils.formatDateWeek(optionValue, lang); break;\r\n                        default: optionValue = cellValue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            rowOptions.push({\r\n                value: optionValue\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row-readonly.html'], {\r\n            options: rowOptions,\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.group = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _options: {\r\n        type: 'group',\r\n        label: '',\r\n        show: true,\r\n        showCollapsible: true,\r\n        fields: [],\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-group-\" + index;\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие группы\r\n     * @param {int} duration\r\n     */\r\n    collapse: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-down');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-right');\r\n\r\n        $(container + ' .coreui-form__group_content').slideUp(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ группы\r\n     * @param {int} duration\r\n     */\r\n    expand: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-right');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-down');\r\n\r\n        $(container + ' .coreui-form__group_content').slideDown(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-group.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            group: this._options,\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {string}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fields = [];\r\n        let that   = this;\r\n\r\n        $.each(this._options.fields, function (key, field) {\r\n\r\n            let fieldInstance = that._form.initField(field);\r\n\r\n            if (typeof fieldInstance !== 'object') {\r\n                return;\r\n            }\r\n\r\n            fields.push(fieldInstance.render());\r\n        });\r\n\r\n        return fields.join('');\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.showCollapsible) {\r\n            let that      = this;\r\n            let container = '#coreui-form-' + this._id;\r\n\r\n            $(container + ' > .coreui-form__group_label .btn-collapsible').click(function () {\r\n\r\n                if ($(container + ' > .coreui-form__group_content').is(':visible')) {\r\n                    that.collapse(80);\r\n                } else {\r\n                    that.expand(80);\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.hidden = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'hidden',\r\n        name: null,\r\n        attr: {},\r\n        required: null,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('#coreui-form-' + this._id).val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if ( ! this._options.readonly) {\r\n            $('#coreui-form-' + this._id).val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-content.html'], {\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n\r\n        options.attr.id = 'coreui-form-' + this._id;\r\n\r\n        if (options.name) {\r\n            options.attr.name = options.name;\r\n        }\r\n\r\n        options.attr.type  = 'hidden';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/hidden.html'], {\r\n            value: this._value !== null ? this._value : '',\r\n            field: options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.input = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'text',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\n/**\n * jquery.mask.js\n * @version: v1.14.16\n * @author: Igor Escobar\n *\n * Created by Igor Escobar on 2012-03-10. Please report any bug at github.com/igorescobar/jQuery-Mask-Plugin\n *\n * Copyright (c) 2012 Igor Escobar http://igorescobar.com\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* jshint laxbreak: true */\n/* jshint maxcomplexity:17 */\n/* global define */\n\n// UMD (Universal Module Definition) patterns for JavaScript modules that work everywhere.\n// https://github.com/umdjs/umd/blob/master/templates/jqueryPlugin.js\n(function (factory, jQuery, Zepto) {\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object' && typeof Meteor === 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery || Zepto);\n    }\n\n}(function ($) {\n    'use strict';\n\n    var Mask = function (el, mask, options) {\n\n        var p = {\n            invalid: [],\n            getCaret: function () {\n                try {\n                    var sel,\n                        pos = 0,\n                        ctrl = el.get(0),\n                        dSel = document.selection,\n                        cSelStart = ctrl.selectionStart;\n\n                    // IE Support\n                    if (dSel && navigator.appVersion.indexOf('MSIE 10') === -1) {\n                        sel = dSel.createRange();\n                        sel.moveStart('character', -p.val().length);\n                        pos = sel.text.length;\n                    }\n                    // Firefox support\n                    else if (cSelStart || cSelStart === '0') {\n                        pos = cSelStart;\n                    }\n\n                    return pos;\n                } catch (e) {}\n            },\n            setCaret: function(pos) {\n                try {\n                    if (el.is(':focus')) {\n                        var range, ctrl = el.get(0);\n\n                        // Firefox, WebKit, etc..\n                        if (ctrl.setSelectionRange) {\n                            ctrl.setSelectionRange(pos, pos);\n                        } else { // IE\n                            range = ctrl.createTextRange();\n                            range.collapse(true);\n                            range.moveEnd('character', pos);\n                            range.moveStart('character', pos);\n                            range.select();\n                        }\n                    }\n                } catch (e) {}\n            },\n            events: function() {\n                el\n                .on('keydown.mask', function(e) {\n                    el.data('mask-keycode', e.keyCode || e.which);\n                    el.data('mask-previus-value', el.val());\n                    el.data('mask-previus-caret-pos', p.getCaret());\n                    p.maskDigitPosMapOld = p.maskDigitPosMap;\n                })\n                .on($.jMaskGlobals.useInput ? 'input.mask' : 'keyup.mask', p.behaviour)\n                .on('paste.mask drop.mask', function() {\n                    setTimeout(function() {\n                        el.keydown().keyup();\n                    }, 100);\n                })\n                .on('change.mask', function(){\n                    el.data('changed', true);\n                })\n                .on('blur.mask', function(){\n                    if (oldValue !== p.val() && !el.data('changed')) {\n                        el.trigger('change');\n                    }\n                    el.data('changed', false);\n                })\n                // it's very important that this callback remains in this position\n                // otherwhise oldValue it's going to work buggy\n                .on('blur.mask', function() {\n                    oldValue = p.val();\n                })\n                // select all text on focus\n                .on('focus.mask', function (e) {\n                    if (options.selectOnFocus === true) {\n                        $(e.target).select();\n                    }\n                })\n                // clear the value if it not complete the mask\n                .on('focusout.mask', function() {\n                    if (options.clearIfNotMatch && !regexMask.test(p.val())) {\n                       p.val('');\n                   }\n                });\n            },\n            getRegexMask: function() {\n                var maskChunks = [], translation, pattern, optional, recursive, oRecursive, r;\n\n                for (var i = 0; i < mask.length; i++) {\n                    translation = jMask.translation[mask.charAt(i)];\n\n                    if (translation) {\n\n                        pattern = translation.pattern.toString().replace(/.{1}$|^.{1}/g, '');\n                        optional = translation.optional;\n                        recursive = translation.recursive;\n\n                        if (recursive) {\n                            maskChunks.push(mask.charAt(i));\n                            oRecursive = {digit: mask.charAt(i), pattern: pattern};\n                        } else {\n                            maskChunks.push(!optional && !recursive ? pattern : (pattern + '?'));\n                        }\n\n                    } else {\n                        maskChunks.push(mask.charAt(i).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n                    }\n                }\n\n                r = maskChunks.join('');\n\n                if (oRecursive) {\n                    r = r.replace(new RegExp('(' + oRecursive.digit + '(.*' + oRecursive.digit + ')?)'), '($1)?')\n                         .replace(new RegExp(oRecursive.digit, 'g'), oRecursive.pattern);\n                }\n\n                return new RegExp(r);\n            },\n            destroyEvents: function() {\n                el.off(['input', 'keydown', 'keyup', 'paste', 'drop', 'blur', 'focusout', ''].join('.mask '));\n            },\n            val: function(v) {\n                var isInput = el.is('input'),\n                    method = isInput ? 'val' : 'text',\n                    r;\n\n                if (arguments.length > 0) {\n                    if (el[method]() !== v) {\n                        el[method](v);\n                    }\n                    r = el;\n                } else {\n                    r = el[method]();\n                }\n\n                return r;\n            },\n            calculateCaretPosition: function(oldVal) {\n                var newVal = p.getMasked(),\n                    caretPosNew = p.getCaret();\n                if (oldVal !== newVal) {\n                    var caretPosOld = el.data('mask-previus-caret-pos') || 0,\n                        newValL = newVal.length,\n                        oldValL = oldVal.length,\n                        maskDigitsBeforeCaret = 0,\n                        maskDigitsAfterCaret = 0,\n                        maskDigitsBeforeCaretAll = 0,\n                        maskDigitsBeforeCaretAllOld = 0,\n                        i = 0;\n\n                    for (i = caretPosNew; i < newValL; i++) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsAfterCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsBeforeCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMap[i]) {\n                            maskDigitsBeforeCaretAll++;\n                        }\n                    }\n\n                    for (i = caretPosOld - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMapOld[i]) {\n                            maskDigitsBeforeCaretAllOld++;\n                        }\n                    }\n\n                    // if the cursor is at the end keep it there\n                    if (caretPosNew > oldValL) {\n                      caretPosNew = newValL * 10;\n                    } else if (caretPosOld >= caretPosNew && caretPosOld !== oldValL) {\n                        if (!p.maskDigitPosMapOld[caretPosNew])  {\n                          var caretPos = caretPosNew;\n                          caretPosNew -= maskDigitsBeforeCaretAllOld - maskDigitsBeforeCaretAll;\n                          caretPosNew -= maskDigitsBeforeCaret;\n                          if (p.maskDigitPosMap[caretPosNew])  {\n                            caretPosNew = caretPos;\n                          }\n                        }\n                    }\n                    else if (caretPosNew > caretPosOld) {\n                        caretPosNew += maskDigitsBeforeCaretAll - maskDigitsBeforeCaretAllOld;\n                        caretPosNew += maskDigitsAfterCaret;\n                    }\n                }\n                return caretPosNew;\n            },\n            behaviour: function(e) {\n                e = e || window.event;\n                p.invalid = [];\n\n                var keyCode = el.data('mask-keycode');\n\n                if ($.inArray(keyCode, jMask.byPassKeys) === -1) {\n                    var newVal = p.getMasked(),\n                        caretPos = p.getCaret(),\n                        oldVal = el.data('mask-previus-value') || '';\n\n                    // this is a compensation to devices/browsers that don't compensate\n                    // caret positioning the right way\n                    setTimeout(function() {\n                      p.setCaret(p.calculateCaretPosition(oldVal));\n                    }, $.jMaskGlobals.keyStrokeCompensation);\n\n                    p.val(newVal);\n                    p.setCaret(caretPos);\n                    return p.callbacks(e);\n                }\n            },\n            getMasked: function(skipMaskChars, val) {\n                var buf = [],\n                    value = val === undefined ? p.val() : val + '',\n                    m = 0, maskLen = mask.length,\n                    v = 0, valLen = value.length,\n                    offset = 1, addMethod = 'push',\n                    resetPos = -1,\n                    maskDigitCount = 0,\n                    maskDigitPosArr = [],\n                    lastMaskChar,\n                    check;\n\n                if (options.reverse) {\n                    addMethod = 'unshift';\n                    offset = -1;\n                    lastMaskChar = 0;\n                    m = maskLen - 1;\n                    v = valLen - 1;\n                    check = function () {\n                        return m > -1 && v > -1;\n                    };\n                } else {\n                    lastMaskChar = maskLen - 1;\n                    check = function () {\n                        return m < maskLen && v < valLen;\n                    };\n                }\n\n                var lastUntranslatedMaskChar;\n                while (check()) {\n                    var maskDigit = mask.charAt(m),\n                        valDigit = value.charAt(v),\n                        translation = jMask.translation[maskDigit];\n\n                    if (translation) {\n                        if (valDigit.match(translation.pattern)) {\n                            buf[addMethod](valDigit);\n                             if (translation.recursive) {\n                                if (resetPos === -1) {\n                                    resetPos = m;\n                                } else if (m === lastMaskChar && m !== resetPos) {\n                                    m = resetPos - offset;\n                                }\n\n                                if (lastMaskChar === resetPos) {\n                                    m -= offset;\n                                }\n                            }\n                            m += offset;\n                        } else if (valDigit === lastUntranslatedMaskChar) {\n                            // matched the last untranslated (raw) mask character that we encountered\n                            // likely an insert offset the mask character from the last entry; fall\n                            // through and only increment v\n                            maskDigitCount--;\n                            lastUntranslatedMaskChar = undefined;\n                        } else if (translation.optional) {\n                            m += offset;\n                            v -= offset;\n                        } else if (translation.fallback) {\n                            buf[addMethod](translation.fallback);\n                            m += offset;\n                            v -= offset;\n                        } else {\n                          p.invalid.push({p: v, v: valDigit, e: translation.pattern});\n                        }\n                        v += offset;\n                    } else {\n                        if (!skipMaskChars) {\n                            buf[addMethod](maskDigit);\n                        }\n\n                        if (valDigit === maskDigit) {\n                            maskDigitPosArr.push(v);\n                            v += offset;\n                        } else {\n                            lastUntranslatedMaskChar = maskDigit;\n                            maskDigitPosArr.push(v + maskDigitCount);\n                            maskDigitCount++;\n                        }\n\n                        m += offset;\n                    }\n                }\n\n                var lastMaskCharDigit = mask.charAt(lastMaskChar);\n                if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {\n                    buf.push(lastMaskCharDigit);\n                }\n\n                var newVal = buf.join('');\n                p.mapMaskdigitPositions(newVal, maskDigitPosArr, valLen);\n                return newVal;\n            },\n            mapMaskdigitPositions: function(newVal, maskDigitPosArr, valLen) {\n              var maskDiff = options.reverse ? newVal.length - valLen : 0;\n              p.maskDigitPosMap = {};\n              for (var i = 0; i < maskDigitPosArr.length; i++) {\n                p.maskDigitPosMap[maskDigitPosArr[i] + maskDiff] = 1;\n              }\n            },\n            callbacks: function (e) {\n                var val = p.val(),\n                    changed = val !== oldValue,\n                    defaultArgs = [val, e, el, options],\n                    callback = function(name, criteria, args) {\n                        if (typeof options[name] === 'function' && criteria) {\n                            options[name].apply(this, args);\n                        }\n                    };\n\n                callback('onChange', changed === true, defaultArgs);\n                callback('onKeyPress', changed === true, defaultArgs);\n                callback('onComplete', val.length === mask.length, defaultArgs);\n                callback('onInvalid', p.invalid.length > 0, [val, e, el, p.invalid, options]);\n            }\n        };\n\n        el = $(el);\n        var jMask = this, oldValue = p.val(), regexMask;\n\n        mask = typeof mask === 'function' ? mask(p.val(), undefined, el,  options) : mask;\n\n        // public methods\n        jMask.mask = mask;\n        jMask.options = options;\n        jMask.remove = function() {\n            var caret = p.getCaret();\n            if (jMask.options.placeholder) {\n                el.removeAttr('placeholder');\n            }\n            if (el.data('mask-maxlength')) {\n                el.removeAttr('maxlength');\n            }\n            p.destroyEvents();\n            p.val(jMask.getCleanVal());\n            p.setCaret(caret);\n            return el;\n        };\n\n        // get value without mask\n        jMask.getCleanVal = function() {\n           return p.getMasked(true);\n        };\n\n        // get masked value without the value being in the input or element\n        jMask.getMaskedVal = function(val) {\n           return p.getMasked(false, val);\n        };\n\n       jMask.init = function(onlyMask) {\n            onlyMask = onlyMask || false;\n            options = options || {};\n\n            jMask.clearIfNotMatch  = $.jMaskGlobals.clearIfNotMatch;\n            jMask.byPassKeys       = $.jMaskGlobals.byPassKeys;\n            jMask.translation      = $.extend({}, $.jMaskGlobals.translation, options.translation);\n\n            jMask = $.extend(true, {}, jMask, options);\n\n            regexMask = p.getRegexMask();\n\n            if (onlyMask) {\n                p.events();\n                p.val(p.getMasked());\n            } else {\n                if (options.placeholder) {\n                    el.attr('placeholder' , options.placeholder);\n                }\n\n                // this is necessary, otherwise if the user submit the form\n                // and then press the \"back\" button, the autocomplete will erase\n                // the data. Works fine on IE9+, FF, Opera, Safari.\n                if (el.data('mask')) {\n                  el.attr('autocomplete', 'off');\n                }\n\n                // detect if is necessary let the user type freely.\n                // for is a lot faster than forEach.\n                for (var i = 0, maxlength = true; i < mask.length; i++) {\n                    var translation = jMask.translation[mask.charAt(i)];\n                    if (translation && translation.recursive) {\n                        maxlength = false;\n                        break;\n                    }\n                }\n\n                if (maxlength) {\n                    el.attr('maxlength', mask.length).data('mask-maxlength', true);\n                }\n\n                p.destroyEvents();\n                p.events();\n\n                var caret = p.getCaret();\n                p.val(p.getMasked());\n                p.setCaret(caret);\n            }\n        };\n\n        jMask.init(!el.is('input'));\n    };\n\n    $.maskWatchers = {};\n    var HTMLAttributes = function () {\n        var input = $(this),\n            options = {},\n            prefix = 'data-mask-',\n            mask = input.attr('data-mask');\n\n        if (input.attr(prefix + 'reverse')) {\n            options.reverse = true;\n        }\n\n        if (input.attr(prefix + 'clearifnotmatch')) {\n            options.clearIfNotMatch = true;\n        }\n\n        if (input.attr(prefix + 'selectonfocus') === 'true') {\n           options.selectOnFocus = true;\n        }\n\n        if (notSameMaskObject(input, mask, options)) {\n            return input.data('mask', new Mask(this, mask, options));\n        }\n    },\n    notSameMaskObject = function(field, mask, options) {\n        options = options || {};\n        var maskObject = $(field).data('mask'),\n            stringify = JSON.stringify,\n            value = $(field).val() || $(field).text();\n        try {\n            if (typeof mask === 'function') {\n                mask = mask(value);\n            }\n            return typeof maskObject !== 'object' || stringify(maskObject.options) !== stringify(options) || maskObject.mask !== mask;\n        } catch (e) {}\n    },\n    eventSupported = function(eventName) {\n        var el = document.createElement('div'), isSupported;\n\n        eventName = 'on' + eventName;\n        isSupported = (eventName in el);\n\n        if ( !isSupported ) {\n            el.setAttribute(eventName, 'return;');\n            isSupported = typeof el[eventName] === 'function';\n        }\n        el = null;\n\n        return isSupported;\n    };\n\n    $.fn.mask = function(mask, options) {\n        options = options || {};\n        var selector = this.selector,\n            globals = $.jMaskGlobals,\n            interval = globals.watchInterval,\n            watchInputs = options.watchInputs || globals.watchInputs,\n            maskFunction = function() {\n                if (notSameMaskObject(this, mask, options)) {\n                    return $(this).data('mask', new Mask(this, mask, options));\n                }\n            };\n\n        $(this).each(maskFunction);\n\n        if (selector && selector !== '' && watchInputs) {\n            clearInterval($.maskWatchers[selector]);\n            $.maskWatchers[selector] = setInterval(function(){\n                $(document).find(selector).each(maskFunction);\n            }, interval);\n        }\n        return this;\n    };\n\n    $.fn.masked = function(val) {\n        return this.data('mask').getMaskedVal(val);\n    };\n\n    $.fn.unmask = function() {\n        clearInterval($.maskWatchers[this.selector]);\n        delete $.maskWatchers[this.selector];\n        return this.each(function() {\n            var dataMask = $(this).data('mask');\n            if (dataMask) {\n                dataMask.remove().removeData('mask');\n            }\n        });\n    };\n\n    $.fn.cleanVal = function() {\n        return this.data('mask').getCleanVal();\n    };\n\n    $.applyDataMask = function(selector) {\n        selector = selector || $.jMaskGlobals.maskElements;\n        var $selector = (selector instanceof $) ? selector : $(selector);\n        $selector.filter($.jMaskGlobals.dataMaskAttr).each(HTMLAttributes);\n    };\n\n    var globals = {\n        maskElements: 'input,td,span,div',\n        dataMaskAttr: '*[data-mask]',\n        dataMask: true,\n        watchInterval: 300,\n        watchInputs: true,\n        keyStrokeCompensation: 10,\n        // old versions of chrome dont work great with input event\n        useInput: !/Chrome\\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && eventSupported('input'),\n        watchDataMask: false,\n        byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91],\n        translation: {\n            '0': {pattern: /\\d/},\n            '9': {pattern: /\\d/, optional: true},\n            '#': {pattern: /\\d/, recursive: true},\n            'A': {pattern: /[a-zA-Z0-9]/},\n            'S': {pattern: /[a-zA-Z]/}\n        }\n    };\n\n    $.jMaskGlobals = $.jMaskGlobals || {};\n    globals = $.jMaskGlobals = $.extend(true, {}, globals, $.jMaskGlobals);\n\n    // looking for inputs with data-mask attribute\n    if (globals.dataMask) {\n        $.applyDataMask();\n    }\n\n    setInterval(function() {\n        if ($.jMaskGlobals.watchDataMask) {\n            $.applyDataMask();\n        }\n    }, globals.watchInterval);\n}, window.jQuery, window.Zepto));\n\ncoreuiForm$1.fields.mask = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'mask',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        value = value.replace(/[^\\d\\w]/g, '');\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'text';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : ''\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' input')\r\n            .mask(this._options.mask, this._options.options);\r\n    }\r\n};\n\ncoreuiForm$1.fields.modal = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: '',\r\n    _text: '',\r\n    _options: {\r\n        type: 'modal',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        fields: [],\r\n        options: {\r\n            title: '',\r\n            size: 'lg',\r\n            url: '',\r\n            onHidden: null,\r\n            onClear: null,\r\n            onChange: null,\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n\r\n        if (typeof options.name === 'string' &&\r\n            formRecord.hasOwnProperty(options.name) &&\r\n            ['object'].indexOf(typeof formRecord[options.name]) >= 0\r\n        ) {\r\n            let record = formRecord[options.name];\r\n\r\n            this._value = record.hasOwnProperty('value') && ['number', 'string'].indexOf(typeof(record.value)) >= 0 ? record.value : '';\r\n            this._text  = record.hasOwnProperty('text') && ['number', 'string'].indexOf(typeof(record.text)) >= 0 ? record.text : '';\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input.coreui-form-modal-value').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     * @param {string} text\r\n     */\r\n    setValue: function (value, text) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(text);\r\n\r\n        } else {\r\n            let elementValue = $('.content-' + this._hash + ' .coreui-form-modal-value');\r\n            let elementText  = $('.content-' + this._hash + ' .coreui-form-modal-text');\r\n            let oldValue     = elementValue.val();\r\n\r\n            elementValue.val(value);\r\n            elementText.val(text);\r\n\r\n\r\n            if (oldValue != value) {\r\n                let modal = this._options.hasOwnProperty('options') && typeof (this._options.options) === 'object'\r\n                    ? this._options.options\r\n                    : {};\r\n\r\n                if (modal.hasOwnProperty('onChange')) {\r\n                    if (typeof(modal.onChange) === 'function') {\r\n                        modal.onChange(this);\r\n\r\n                    } else if (typeof(modal.onChange) === 'string') {\r\n                        let func = coreuiFormUtils.getFunctionByName(modal.onChange);\r\n\r\n                        if (typeof func === 'function') {\r\n                            func(this);\r\n                        } else {\r\n                            coreuiFormUtils.eval(modal.onChange);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this._form._trigger('change-modal.coreui.form', this, [this]);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fieldOptions = this.getOptions();\r\n        let attributes   = [];\r\n        let textAttr     = {\r\n            type: 'text',\r\n            readonly: 'readonly',\r\n            class: 'form-control form-control-sm coreui-form-modal-text',\r\n            value: this._text !== null ? this._text : ''\r\n        };\r\n\r\n        if (fieldOptions.required) {\r\n            textAttr.required = 'required';\r\n        }\r\n\r\n        if (fieldOptions.hasOwnProperty('attr') &&\r\n            typeof fieldOptions.attr === 'object' &&\r\n            Array.isArray(fieldOptions.attr)\r\n        ) {\r\n            textAttr = coreuiFormUtils.mergeAttr(textAttr, fieldOptions.attr);\r\n        }\r\n\r\n        $.each(textAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/modal.html'], {\r\n            field: fieldOptions,\r\n            value: this._value !== null ? this._value : '',\r\n            text: this._text !== null ? this._text : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                width: this._options.width,\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that  = this;\r\n        let modal = this._options.hasOwnProperty('options') && typeof(this._options.options) === 'object'\r\n            ? this._options.options\r\n            : {};\r\n\r\n\r\n        // Очистка\r\n        $('.content-' + this._hash + ' .btn-modal-clear').click(function (e) {\r\n            if (modal.hasOwnProperty('onClear')) {\r\n                if (typeof(modal.onClear) === 'function') {\r\n                    modal.onClear(that);\r\n\r\n                } else if (typeof(modal.onClear) === 'string') {\r\n                    let func = coreuiFormUtils.getFunctionByName(modal.onClear);\r\n\r\n                    if (typeof func === 'function') {\r\n                        func(that);\r\n                    } else {\r\n                        coreuiFormUtils.eval(modal.onClear);\r\n                    }\r\n                }\r\n            }\r\n\r\n            that._form._trigger('clear-modal.coreui.form', that, [ that, e ]);\r\n\r\n            that.setValue('', '');\r\n        });\r\n\r\n        // Выбор\r\n        $('.content-' + this._hash + ' .btn-modal-select').click(function (e) {\r\n            let title = modal.hasOwnProperty('title') && typeof(modal.title) === 'string'\r\n                ? modal.title\r\n                : '';\r\n\r\n            let size = modal.hasOwnProperty('size') && typeof(modal.size) === 'string'\r\n                ? modal.size\r\n                : 'lg';\r\n\r\n            let url = modal.hasOwnProperty('url') && typeof(modal.url) === 'string'\r\n                ? modal.url\r\n                : '';\r\n\r\n            if ( ! url) {\r\n                return;\r\n            }\r\n\r\n\r\n            let modalId      = coreuiFormUtils.hashCode();\r\n            let modalLoading = ejs.render(tpl['fields/modal-loading.html'], {\r\n                lang: that._form.getLang(),\r\n            });\r\n\r\n\r\n            if (CoreUI.hasOwnProperty('modal')) {\r\n                let onShow   = null;\r\n                let onHidden = null;\r\n\r\n                if (modal.hasOwnProperty('onHidden')) {\r\n                    if (typeof(modal.onHidden) === 'function') {\r\n                        onHidden = modal.onHidden;\r\n\r\n                    } else if (typeof(modal.onHidden) === 'string') {\r\n                        let func = coreuiFormUtils.getFunctionByName(modal.onHidden);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onHidden = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (modal.hasOwnProperty('onShow')) {\r\n                    if (typeof(modal.onShow) === 'function') {\r\n                        onShow = modal.onShow;\r\n\r\n                    } else if (typeof(modal.onShow) === 'string') {\r\n                        let func = coreuiFormUtils.getFunctionByName(modal.onShow);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onShow = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                CoreUI.modal.show(title, modalLoading, {\r\n                    id: modalId,\r\n                    size: size,\r\n                    onShow: onShow,\r\n                    onHidden: onHidden\r\n                });\r\n            }\r\n\r\n            $.ajax({\r\n                url: url,\r\n                method: 'GET',\r\n                beforeSend: function(xhr) {\r\n                    that._form._trigger('before-load-modal.coreui.form', that, [ that, xhr ]);\r\n                },\r\n                success: function (result) {\r\n                    $('#modal-' + modalId + ' .modal-body').html(result);\r\n                    that._form._trigger('success-load-modal.coreui.form', that, [ that, result ]);\r\n                },\r\n                error: function(xhr, textStatus, errorThrown) {\r\n                    that._form._trigger('error-load-modal.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n                },\r\n                complete: function(xhr, textStatus) {\r\n                    that._form._trigger('complete-load-modal.coreui.form', that, [ that, xhr, textStatus ]);\r\n                },\r\n            });\r\n\r\n\r\n            that._form._trigger('select-modal.coreui.form', that, [ that, e ]);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.number = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'number',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block',\r\n            step: 'any'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null,\r\n        precision: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        // Установка точности\r\n        if (this._options.precision === null) {\r\n            let precision = 0;\r\n\r\n            if (this._options.attr.hasOwnProperty('step') &&\r\n                this._options.attr.step !== 'any' &&\r\n                ['string', 'number'].indexOf(typeof this._options.attr.step) >= 0\r\n            ) {\r\n                let match = $.trim(this._options.attr.step.toString()).match(/\\.(\\d+)$/);\r\n\r\n                if (match && match.hasOwnProperty(1)) {\r\n                    precision = match ? match[1].length : precision;\r\n                }\r\n            }\r\n\r\n            this._options.precision = precision;\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0 ||\r\n            ! value.toString().match(/^\\-?\\d+\\.?\\d*$/)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.precision >= 0) {\r\n            value = coreuiFormUtils.round(value, this._options.precision);\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('min')) {\r\n            value = value < Number(this._options.attr.min)\r\n                ? Number(this._options.attr.min)\r\n                : value;\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('max')) {\r\n            value = value > Number(this._options.attr.max)\r\n                ? Number(this._options.attr.max)\r\n                : value;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = $.extend(true, {}, this._options);\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils.hashCode();\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'number';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('.content-' + this._hash + ' input').keydown(function (e) {\r\n            let k = e.keyCode || e.which;\r\n            let ok = k >= 35 && k <= 40 ||      // arrows\r\n                k >= 96 && k <= 105 ||     // 0-9 numpad\r\n                k === 189 || k === 109 ||  // minus\r\n                k === 110 || k === 190 ||  // dot\r\n                k === 9 ||  //tab\r\n                k === 46 || //del\r\n                k === 8 ||  // backspaces\r\n                ( ! e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)\r\n\r\n            if ( ! ok || (e.ctrlKey && e.altKey)) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' input').blur(function (e) {\r\n            let value = $(this).val();\r\n\r\n            if (that._options.precision >= 0) {\r\n                value = coreuiFormUtils.round(value, that._options.precision);\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('min')) {\r\n                value = value < Number(that._options.attr.min)\r\n                    ? Number(that._options.attr.min)\r\n                    : value;\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('max')) {\r\n                value = value > Number(that._options.attr.max)\r\n                    ? Number(that._options.attr.max)\r\n                    : value;\r\n            }\r\n\r\n            $(this).val(value);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.radio = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'radio',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input[type=radio]:checked').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            let that         = this;\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options)\r\n            ) {\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value') && option.value == value) {\r\n                        let text = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                            ? option.text\r\n                            : '';\r\n\r\n                        $('.content-' + that._hash).text(text);\r\n                        that._value = value;\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n\r\n        } else {\r\n            let input = $('.content-' + this._hash + ' input[type=radio][value=\"' + value + '\"]');\r\n\r\n            if (input[0]) {\r\n                input.prop('checked', true);\r\n                this._value = value;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            let value = this.getValue();\r\n            return typeof value === 'string' && value !== '';\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that         = this;\r\n        let radioOptions = [];\r\n        let fieldOptions = this.getOptions();\r\n        let selectedItem = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'radio',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText   = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils.hashCode();\r\n\r\n                if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItem.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                radioOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        return ejs.render(tpl['fields/radio.html'], {\r\n            field: fieldOptions,\r\n            value: this._value,\r\n            render: {\r\n                options: radioOptions,\r\n                selectedItem: selectedItem\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.range = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'range',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-range d-inline-block pt-1'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'range';\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.select = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'select',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @returns {array|string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            if (this._options.hasOwnProperty('attr') &&\r\n                typeof this._options.attr === 'object' &&\r\n                this._options.attr !== null &&\r\n                ! Array.isArray(this._options.attr) &&\r\n                this._options.attr.hasOwnProperty('multiple')\r\n            ) {\r\n                let values = [];\r\n\r\n                $('.content-' + this._hash + ' select option:selected').each(function () {\r\n                    values.push($(this).val());\r\n                });\r\n\r\n                return values;\r\n\r\n            } else {\r\n                return $('.content-' + this._hash + ' select option:selected').val()\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' select > option').prop('selected', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' select > option').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('selected', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let select    = $('select', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            select.removeClass('is-invalid');\r\n            select.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            select.removeClass('is-invalid');\r\n            select.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            select.removeClass('is-valid');\r\n            select.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let select = $('.content-' + this._hash + ' select');\r\n\r\n        if (this._options.required && select.val() === '') {\r\n            return false;\r\n        }\r\n\r\n        if (select[0]) {\r\n            return select.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let that          = this;\r\n        let options       = this.getOptions();\r\n        let attributes    = [];\r\n        let selectOptions = [];\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            options.options !== null\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n\r\n                if (typeof option === 'string' || typeof option === 'number') {\r\n                    selectOptions.push(that._renderOption({\r\n                        type: 'option',\r\n                        value: key,\r\n                        text: option\r\n                    }));\r\n\r\n                } else if (typeof option === 'object') {\r\n                    let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                        ? option.type\r\n                        : 'option';\r\n\r\n                    if (type === 'group') {\r\n                        let renderAttr   = [];\r\n                        let groupAttr    = {};\r\n                        let groupOptions = [];\r\n\r\n                        if (option.hasOwnProperty('attr') &&\r\n                            typeof option.attr === 'object' &&\r\n                            option.attr !== null &&\r\n                            ! Array.isArray(option.attr)\r\n                        ) {\r\n                            groupAttr = option.attr;\r\n                        }\r\n\r\n                        if (option.hasOwnProperty('label') && ['string', 'number'].indexOf(typeof(option.label)) >= 0) {\r\n                            groupAttr.label = option.label;\r\n                        }\r\n\r\n                        $.each(groupAttr, function (name, value) {\r\n                            renderAttr.push(name + '=\"' + value + '\"');\r\n                        });\r\n\r\n                        if (Array.isArray(option.options)) {\r\n                            $.each(option.options, function (key, groupOption) {\r\n                                groupOptions.push(that._renderOption(groupOption));\r\n                            });\r\n                        }\r\n\r\n                        selectOptions.push({\r\n                            type: 'group',\r\n                            attr: renderAttr.length > 0 ? (' ' + renderAttr.join(' ')) : '',\r\n                            options: groupOptions,\r\n                        });\r\n\r\n                    } else {\r\n                        selectOptions.push(that._renderOption(option));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                options: selectOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let that            = this;\r\n        let options         = this.getOptions();\r\n        let selectedOptions = [];\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                    ? option.type\r\n                    : 'option';\r\n\r\n                if (type === 'group') {\r\n                    if (Array.isArray(option.options)) {\r\n                        $.each(option.options, function (key, groupOption) {\r\n                            let optionText = groupOption.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(groupOption.text)) >= 0\r\n                                ? groupOption.text\r\n                                : '';\r\n\r\n                            if ( ! optionText || optionText === '') {\r\n                                return;\r\n                            }\r\n\r\n                            if (Array.isArray(that._value)) {\r\n                                $.each(that._value, function (key, itemValue) {\r\n                                    if (itemValue == groupOption.value) {\r\n                                        selectedOptions.push(optionText);\r\n                                        return false;\r\n                                    }\r\n                                });\r\n\r\n                            } else if (that._value == groupOption.value) {\r\n                                selectedOptions.push(optionText);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                } else {\r\n                    let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                        ? option.text\r\n                        : '';\r\n\r\n                    if ( ! optionText || optionText === '') {\r\n                        return;\r\n                    }\r\n\r\n                    if (Array.isArray(that._value)) {\r\n                        $.each(that._value, function (key, itemValue) {\r\n                            if (itemValue == option.value) {\r\n                                selectedOptions.push(optionText);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (that._value == option.value) {\r\n                        selectedOptions.push(optionText);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            render: {\r\n                selectedOptions: selectedOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Сборка опции\r\n     * @param option\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _renderOption: function (option) {\r\n\r\n        let optionAttr = [];\r\n        let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n            ? option.text\r\n            : '';\r\n\r\n        $.each(option, function (name, value) {\r\n            if (name !== 'text') {\r\n                optionAttr.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n\r\n        if (Array.isArray(this._value)) {\r\n            $.each(this._value, function (key, itemValue) {\r\n                if (itemValue == option.value) {\r\n                    optionAttr.push('selected=\"selected\"');\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        } else if (this._value == option.value) {\r\n            optionAttr.push('selected=\"selected\"');\r\n        }\r\n\r\n        return {\r\n            type: 'option',\r\n            text: optionText,\r\n            attr: optionAttr.length > 0 ? (' ' + optionAttr.join(' ')) : ''\r\n        };\r\n    }\r\n};\n\ncoreuiForm$1.fields.switch = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'switch',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        valueY: 'Y',\r\n        valueN: 'N',\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=checkbox]').prop('checked', value === this._options.valueY);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container       = $('.content-' + this._hash);\r\n        let switchContainer = $('.form-switch', container);\r\n        let inputs          = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n        let itemAttr   = {\r\n            type: 'checkbox',\r\n            class: 'form-check-input',\r\n            value: options.valueY\r\n        };\r\n\r\n\r\n        if (options.name) {\r\n            itemAttr.name = this._options.name;\r\n        }\r\n\r\n        if (options.required) {\r\n            itemAttr.required = 'required';\r\n        }\r\n\r\n        if (options.hasOwnProperty('attr') &&\r\n            typeof options.attr === 'object' &&\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            itemAttr = coreuiFormUtils.mergeAttr(itemAttr, options.attr);\r\n        }\r\n\r\n        if (this._value === options.valueY) {\r\n            itemAttr.checked = 'checked';\r\n        }\r\n\r\n        $.each(itemAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/switch.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.textarea = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'textarea',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' textarea').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' textarea').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let textarea  = $('textarea', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            textarea.removeClass('is-valid');\r\n            textarea.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' textarea');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/textarea.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.wysiwyg = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _editor: null,\r\n    _editorHash: null,\r\n    _options: {\r\n        type: 'wysiwyg',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        height: null,\r\n        minHeight: null,\r\n        maxHeight: null,\r\n        options: {},\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        readonly: false,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form       = form;\r\n        this._index      = index;\r\n        this._id         = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash       = coreuiFormUtils.hashCode();\r\n        this._editorHash = coreuiFormUtils.hashCode();\r\n        this._value      = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options    = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @return {string|null}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        } else {\r\n            return this._editor ? this._editor.getContent() : this._value;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            if (this._editor) {\r\n                this._editor.setContent(value);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/wysiwyg.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            editorHash: this._editorHash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let tinyMceOptions = {};\r\n        let than           = this;\r\n        let textareaId     = 'editor-' + this._editorHash;\r\n\r\n        if (typeof this._options.options === 'object' &&\r\n            ! Array.isArray(this._options.options) &&\r\n            Object.keys(this._options.options).length > 0\r\n        ) {\r\n            tinyMceOptions = this._options.options;\r\n\r\n        } else if (this._options.options === 'simple') {\r\n            tinyMceOptions = {\r\n                plugins: 'image lists anchor charmap',\r\n                toolbar: 'blocks | bold italic underline | alignleft aligncenter ' +\r\n                         'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                         'forecolor backcolor removeformat',\r\n                menubar: false,\r\n                branding: false\r\n            };\r\n\r\n        } else {\r\n            tinyMceOptions = {\r\n                promotion: false,\r\n                branding: false,\r\n                plugins: 'preview importcss searchreplace autolink autosave save directionality code ' +\r\n                         'visualblocks visualchars fullscreen image link media template codesample table ' +\r\n                         'charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',\r\n                menubar: 'file edit view insert format tools table help',\r\n                toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | ' +\r\n                         'alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | ' +\r\n                         'forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen ' +\r\n                         'preview save print | insertfile image media template link anchor codesample | ltr rtl',\r\n            };\r\n        }\r\n\r\n        tinyMceOptions.selector = '#editor-' + this._editorHash;\r\n\r\n        if (['string', 'number'].indexOf(typeof this._options.width) >= 0) {\r\n            tinyMceOptions.width = this._options.width;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minWidth) >= 0) {\r\n            tinyMceOptions.min_width = this._options.minWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxWidth) >= 0) {\r\n            tinyMceOptions.max_width = this._options.maxWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.height) >= 0) {\r\n            tinyMceOptions.height = this._options.height;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minHeight) >= 0) {\r\n            tinyMceOptions.min_height = this._options.minHeight;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxHeight) >= 0) {\r\n            tinyMceOptions.max_height = this._options.maxHeight;\r\n        }\r\n\r\n        tinymce.init(tinyMceOptions).then(function () {\r\n            than._editor = tinymce.get(textareaId);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.passwordRepeat = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _isChangeState: true,\r\n    _value: '',\r\n    _options: {\r\n        type: 'password',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            type: 'password',\r\n            class: 'form-control form-control-sm d-inline-block flex-shrink-0'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        showBtn: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        }\r\n\r\n        let pass = $('.content-' + this._hash + ' input[type=\"password\"]').eq(0);\r\n\r\n        if (typeof pass.attr('disabled') !== 'undefined' && pass.attr('disabled') !== false) {\r\n            return '';\r\n        }\r\n\r\n        return pass.val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value ? '******' : '');\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=\"password\"]').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input[type=\"password\"]', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        if ( ! this._isChangeState || this._options.readonly) {\r\n            return true;\r\n        }\r\n\r\n        let input = $('.content-' + this._hash + ' input[type=\"password\"]');\r\n\r\n        if (input.eq(0).val() !== input.eq(1).val()) {\r\n            return false;\r\n        }\r\n\r\n        if (input[0]) {\r\n            return input.eq(0).is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes  = [];\r\n        let attributes2 = [];\r\n        let datalist    = [];\r\n        let options     = this.getOptions();\r\n\r\n        this._isChangeState = ! options.showBtn\r\n            ? true\r\n            : ! this._value;\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if ( ! this._isChangeState) {\r\n            options.attr.disabled = '';\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.value = this._value ? '******' : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n        $.each(options.attr, function (name, value) {\r\n            if (['name', 'value'].indexOf(name) < 0) {\r\n                attributes2.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n        let lang = this._form.getLang();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: lang,\r\n            btn_text: this._isChangeState ? lang.cancel : lang.change,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                attr2: attributes2.length > 0 ? (' ' + attributes2.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value ? '******' : '',\r\n            hash: this._hash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' .btn-password-change').click(function (e) {\r\n            let textChange = $(this).data('change');\r\n            let textCancel = $(this).data('cancel');\r\n\r\n            if (that._isChangeState) {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').attr('disabled', 'disabled');\r\n                $(this).text(textChange);\r\n                that._isChangeState = false;\r\n\r\n            } else {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').removeAttr('disabled');\r\n                $(this).text(textCancel);\r\n                that._isChangeState = true;\r\n            }\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.file = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'file',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {File[]}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input')[0].files;\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {File|File[]} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if ( ! (value instanceof File) &&  ! (value instanceof FileList)) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text('');\r\n        } else {\r\n            let container = new DataTransfer();\r\n\r\n            if (value instanceof File) {\r\n                container.items.add(value);\r\n\r\n            } else {\r\n                $.each(value, function (key, file) {\r\n                    if (value instanceof File) {\r\n                        container.items.add(file);\r\n                    }\r\n                });\r\n            }\r\n\r\n            $('.content-' + this._hash + ' input')[0].files = container.files;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\nreturn coreuiForm$1;\n\n})));\n"]}