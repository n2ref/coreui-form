{"version":3,"sources":["coreui-form.min.js"],"names":["global","factory","exports","module","define","amd","CoreUI","form","this","f","window","self","ejs","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","fs","path","utils","scopeOptionWarned","_VERSION_STRING","version","_DEFAULT_LOCALS_NAME","_OPTS_PASSABLE_WITH_DATA","_OPTS_PASSABLE_WITH_DATA_EXPRESS","concat","_BOM","_JS_IDENTIFIER","resolvePaths","name","paths","filePath","some","v","resolveInclude","existsSync","handleCache","options","template","func","filename","hasTemplate","arguments","cache","get","fileLoader","toString","replace","compile","set","includeFile","opts","shallowCopy","createNullProtoObjWherePossible","includePath","views","match","exec","Array","isArray","root","includer","escapeFunction","includerResult","rethrow","err","str","flnm","lineno","esc","lines","split","start","Math","max","end","min","context","slice","map","line","curr","join","message","stripSemi","Template","text","templateText","mode","truncate","currentLine","source","client","escape","escapeXML","compileDebug","debug","openDelimiter","closeDelimiter","delimiter","strict","rmWhitespace","outputFunctionName","localsName","async","destructuredLocals","legacyInclude","_with","regex","createRegex","readFileSync","promiseImpl","Function","Promise","isDir","dirname","extname","resolve","scope","console","warn","render","d","data","shallowCopyFromList","renderFile","cb","result","args","prototype","shift","pop","settings","viewOpts","reject","clearCache","reset","modes","EVAL","ESCAPED","RAW","COMMENT","LITERAL","delim","escapeRegExpChars","open","close","RegExp","fn","prepended","appended","escapeFn","sanitizedFilename","JSON","stringify","generateSource","test","destructuring","src","log","ctor","SyntaxError","returnedFn","apply","includeData","Object","defineProperty","basename","value","writable","enumerable","configurable","matches","parseTemplateText","forEach","index","indexOf","closing","scanLine","firstPos","pat","arr","push","substring","_addOutput","newLineCount","lastIndexOf","__express","VERSION","../package.json","./utils","2","hasOwn","obj","key","hasOwnProperty","regExpChars","_ENCODE_HTML_RULES","string","String","&","<",">","\"","'","_MATCH_HTML","encode_char","escapeXMLToString","markup","undefined","to","from","list","_data","val","remove","hyphenToCamel","toUpperCase","create","__proto__","3","4","process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","resolvedPath","resolvedAbsolute","cwd","TypeError","charAt","normalize","isAbsolute","trailingSlash","substr","relative","trim","fromParts","toParts","samePartsLength","outputParts","sep","hasRoot","charCodeAt","matchedSlash","ext","startDot","startPart","preDotState","len","_process","5","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","marker","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","6","description","keywords","author","license","bin","main","jsdelivr","unpkg","repository","type","url","bugs","homepage","dependencies","jake","devDependencies","browserify","eslint","git-directory-deploy","jsdoc","lru-cache","mocha","uglify-js","engines","node","scripts","let","tpl","coreuiFormUtils","getFieldValue","formRecord","getRecord","fieldOptions","getFunctionByName","functionName","namespaces","eval","getIncludePath","mergeFieldOptions","defaultOptions","attr","$","extend","width","unit","_options","fieldWidth","labelWidth","mergeAttr","attr1","attr2","each","getAttacheFields","fields","field","instance","hash","_hash","fieldsDirection","content","renderContent","formatDate","day","month","Date","date","year","formatDateTime","getFullYear","getMinutes","getSeconds","formatDateMonth","lang","getMonth","date_months","formatDateWeek","date_week","getObjValue","isNumeric","num","isNaN","hashCode","crc32","getTime","random","round","pow","precision","parseInt","number","coreuiFormInstance","id","send","method","format","minWidth","maxWidth","controlsOffset","readonly","validate","successLoadUrl","errorClass","layout","onSubmit","onSubmitSuccess","record","controls","_lock","_fieldsIndex","_groupsIndex","_controlsIndex","_groups","_fields","_controls","_events","_init","coreuiForm$1","getSetting","initEvents","that","formContainer","_trigger","getId","element","widthSizes","matchAll","columns","columnsContent","column","keys","_NAME","fieldContents","control","show","formAttr","html","escapeFuncStr","domElement","document","getElementById","innerHTML","lock","controlOptions","getOptions","unlock","onsubmit","getData","onSubmitText","results","isStopSend","sendFormat","dataFormat","contentType","FormData","File","FileList","file","append","ajax","processData","beforeSend","xhr","success","parsedResponse","parse","jsonResponse","script","loadUrl","href","regx","urlParams","param","equalHash","location","onhashchange","error","textStatus","errorThrown","send_error","responseText","error_message","showError","errorMessage","complete","getFields","getControls","getGroups","getField","fieldInstance","isReadonly","hide","showControls","hideControls","isValid","formError","find","errorOptions","class","dismiss","prepend","scroll","scrollOffset","animate","scrollTop","offset","top","hideError","eventName","callback","singleExec","destruct","_instances","initField","getValue","setValue","init","initGroup","group","groupInstance","expand","collapse","initControl","controlInstance","getLang","monthLang","params","_renderControl","_settings","errorMessageScrollOffset","formId","setSettings","ru","modal_select","modal_loading","switch_no","dataset_add","required_field","repeat","change","cancel","switch_yes","button","_form","_index","onClick","attributes","duration","_initEvents","event","custom","link","submit","removeAttr","click","checkbox","_id","_value","label","inline","outContent","errorText","required","values","empty","option","selectedItems","prop","itemValue","container","lastInput","inputs","removeClass","addClass","validText","invalidText","attachFields","itemAttr","optionText","checked","checkboxOptions","color","attach","datalist","input","_renderContent","style","datalistId","itemAttributes","datalistAttr","alloyComponents","components","component","_renderOptions","items","valueY","valueN","serializeArray","item","_renderRowReadonly","_eventAdd","removeItems","removeItem","itemId","row","rows","_renderRow","headers","_renderContentReadonly","rowOptions","itemOptions","cellValue","cellItemValue","selected","hashItem","optionValue","showCollapsible","slideUp","slideDown","is","jQuery","Zepto","Meteor","maskDigitCount","invalid","getCaret","sel","pos","ctrl","el","dSel","selection","cSelStart","selectionStart","navigator","appVersion","createRange","moveStart","setCaret","range","setSelectionRange","createTextRange","moveEnd","select","events","keyCode","which","maskDigitPosMapOld","maskDigitPosMap","jMaskGlobals","useInput","behaviour","Mask","keydown","selectOnFocus","target","clearIfNotMatch","regexMask","getRegexMask","pattern","optional","recursive","oRecursive","mask","translation","jMask","maskChunks","digit","oldValue","destroyEvents","oldVal","newVal","getMasked","caretPosNew","caretPosOld","newValL","oldValL","maskDigitsBeforeCaret","maskDigitsBeforeCaretAllOld","maskDigitsAfterCaret","caretPos","maskDigitsBeforeCaretAll","calculateCaretPosition","inArray","byPassKeys","skipMaskChars","lastUntranslatedMaskChar","buf","maskLen","valLen","resetPos","check","reverse","addMethod","m","maskDigit","valDigit","lastMaskChar","fallback","lastMaskCharDigit","mapMaskdigitPositions","maskDigitPosArr","maskDiff","callbacks","criteria","defaultArgs","changed","placeholder","caret","getMaskedVal","onlyMask","getCleanVal","maxlength","HTMLAttributes","prefix","notSameMaskObject","maskObject","maskWatchers","maskFunction","selector","globals","watchInterval","watchInputs","clearInterval","isSupported","interval","masked","dataMask","removeData","cleanVal","applyDataMask","maskElements","dataMaskAttr","keyStrokeCompensation","userAgent","createElement","setAttribute","$selector","9","setInterval","watchDataMask","modal","onHidden","_text","size","onClear","onChange","elementText","elementValue","textAttr","modalId","modalLoading","onShow","step","preventDefault","Number","radioOptions","selectedItem","k","shiftKey","ctrlKey","altKey","blur","radio","selectOptions","groupOptions","groupAttr","renderAttr","_renderOption","selectedOptions","optionAttr","switch","textarea","_editorHash","groupOption","_editor","editorHash","textareaId","tinyMceOptions","menubar","promotion","branding","plugins","toolbar","tinymce","then","passwordRepeat","switchContainer","pass","_isChangeState","attributes2","disabled","btn_text","height","minHeight","maxHeight","getContent","setContent","than","min_width","max_width","min_height","max_height","showBtn","eq","textChange","textCancel","files","DataTransfer","add"],"mappings":"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","file":"coreui-form.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.CoreUI = global.CoreUI || {}, global.CoreUI.form = factory());\n}(this, (function () { 'use strict';\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f();}else if(typeof define===\"function\"&&define.amd){define([],f);}else{var g;if(typeof window!==\"undefined\"){g=window;}else if(typeof global!==\"undefined\"){g=global;}else if(typeof self!==\"undefined\"){g=self;}else{g=this;}g.ejs=f();}})(function(){return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t);}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){\"use strict\";var fs=require(\"fs\");var path=require(\"path\");var utils=require(\"./utils\");var scopeOptionWarned=false;var _VERSION_STRING=require(\"../package.json\").version;var _DEFAULT_OPEN_DELIMITER=\"<\";var _DEFAULT_CLOSE_DELIMITER=\">\";var _DEFAULT_DELIMITER=\"%\";var _DEFAULT_LOCALS_NAME=\"locals\";var _NAME=\"ejs\";var _REGEX_STRING=\"(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)\";var _OPTS_PASSABLE_WITH_DATA=[\"delimiter\",\"scope\",\"context\",\"debug\",\"compileDebug\",\"client\",\"_with\",\"rmWhitespace\",\"strict\",\"filename\",\"async\"];var _OPTS_PASSABLE_WITH_DATA_EXPRESS=_OPTS_PASSABLE_WITH_DATA.concat(\"cache\");var _BOM=/^\\uFEFF/;var _JS_IDENTIFIER=/^[a-zA-Z_$][0-9a-zA-Z_$]*$/;exports.cache=utils.cache;exports.fileLoader=fs.readFileSync;exports.localsName=_DEFAULT_LOCALS_NAME;exports.promiseImpl=new Function(\"return this;\")().Promise;exports.resolveInclude=function(name,filename,isDir){var dirname=path.dirname;var extname=path.extname;var resolve=path.resolve;var includePath=resolve(isDir?filename:dirname(filename),name);var ext=extname(name);if(!ext){includePath+=\".ejs\";}return includePath};function resolvePaths(name,paths){var filePath;if(paths.some(function(v){filePath=exports.resolveInclude(name,v,true);return fs.existsSync(filePath)})){return filePath}}function getIncludePath(path,options){var includePath;var filePath;var views=options.views;var match=/^[A-Za-z]+:\\\\|^\\//.exec(path);if(match&&match.length){path=path.replace(/^\\/*/,\"\");if(Array.isArray(options.root)){includePath=resolvePaths(path,options.root);}else{includePath=exports.resolveInclude(path,options.root||\"/\",true);}}else{if(options.filename){filePath=exports.resolveInclude(path,options.filename);if(fs.existsSync(filePath)){includePath=filePath;}}if(!includePath&&Array.isArray(views)){includePath=resolvePaths(path,views);}if(!includePath&&typeof options.includer!==\"function\"){throw new Error('Could not find the include file \"'+options.escapeFunction(path)+'\"')}}return includePath}function handleCache(options,template){var func;var filename=options.filename;var hasTemplate=arguments.length>1;if(options.cache){if(!filename){throw new Error(\"cache option requires a filename\")}func=exports.cache.get(filename);if(func){return func}if(!hasTemplate){template=fileLoader(filename).toString().replace(_BOM,\"\");}}else if(!hasTemplate){if(!filename){throw new Error(\"Internal EJS error: no file name or template \"+\"provided\")}template=fileLoader(filename).toString().replace(_BOM,\"\");}func=exports.compile(template,options);if(options.cache){exports.cache.set(filename,func);}return func}function tryHandleCache(options,data,cb){var result;if(!cb){if(typeof exports.promiseImpl==\"function\"){return new exports.promiseImpl(function(resolve,reject){try{result=handleCache(options)(data);resolve(result);}catch(err){reject(err);}})}else{throw new Error(\"Please provide a callback function\")}}else{try{result=handleCache(options)(data);}catch(err){return cb(err)}cb(null,result);}}function fileLoader(filePath){return exports.fileLoader(filePath)}function includeFile(path,options){var opts=utils.shallowCopy(utils.createNullProtoObjWherePossible(),options);opts.filename=getIncludePath(path,opts);if(typeof options.includer===\"function\"){var includerResult=options.includer(path,opts.filename);if(includerResult){if(includerResult.filename){opts.filename=includerResult.filename;}if(includerResult.template){return handleCache(opts,includerResult.template)}}}return handleCache(opts)}function rethrow(err,str,flnm,lineno,esc){var lines=str.split(\"\\n\");var start=Math.max(lineno-3,0);var end=Math.min(lines.length,lineno+3);var filename=esc(flnm);var context=lines.slice(start,end).map(function(line,i){var curr=i+start+1;return(curr==lineno?\" >> \":\"    \")+curr+\"| \"+line}).join(\"\\n\");err.path=filename;err.message=(filename||\"ejs\")+\":\"+lineno+\"\\n\"+context+\"\\n\\n\"+err.message;throw err}function stripSemi(str){return str.replace(/;(\\s*$)/,\"$1\")}exports.compile=function compile(template,opts){var templ;if(opts&&opts.scope){if(!scopeOptionWarned){console.warn(\"`scope` option is deprecated and will be removed in EJS 3\");scopeOptionWarned=true;}if(!opts.context){opts.context=opts.scope;}delete opts.scope;}templ=new Template(template,opts);return templ.compile()};exports.render=function(template,d,o){var data=d||utils.createNullProtoObjWherePossible();var opts=o||utils.createNullProtoObjWherePossible();if(arguments.length==2){utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA);}return handleCache(opts,template)(data)};exports.renderFile=function(){var args=Array.prototype.slice.call(arguments);var filename=args.shift();var cb;var opts={filename:filename};var data;var viewOpts;if(typeof arguments[arguments.length-1]==\"function\"){cb=args.pop();}if(args.length){data=args.shift();if(args.length){utils.shallowCopy(opts,args.pop());}else{if(data.settings){if(data.settings.views){opts.views=data.settings.views;}if(data.settings[\"view cache\"]){opts.cache=true;}viewOpts=data.settings[\"view options\"];if(viewOpts){utils.shallowCopy(opts,viewOpts);}}utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA_EXPRESS);}opts.filename=filename;}else{data=utils.createNullProtoObjWherePossible();}return tryHandleCache(opts,data,cb)};exports.Template=Template;exports.clearCache=function(){exports.cache.reset();};function Template(text,opts){opts=opts||utils.createNullProtoObjWherePossible();var options=utils.createNullProtoObjWherePossible();this.templateText=text;this.mode=null;this.truncate=false;this.currentLine=1;this.source=\"\";options.client=opts.client||false;options.escapeFunction=opts.escape||opts.escapeFunction||utils.escapeXML;options.compileDebug=opts.compileDebug!==false;options.debug=!!opts.debug;options.filename=opts.filename;options.openDelimiter=opts.openDelimiter||exports.openDelimiter||_DEFAULT_OPEN_DELIMITER;options.closeDelimiter=opts.closeDelimiter||exports.closeDelimiter||_DEFAULT_CLOSE_DELIMITER;options.delimiter=opts.delimiter||exports.delimiter||_DEFAULT_DELIMITER;options.strict=opts.strict||false;options.context=opts.context;options.cache=opts.cache||false;options.rmWhitespace=opts.rmWhitespace;options.root=opts.root;options.includer=opts.includer;options.outputFunctionName=opts.outputFunctionName;options.localsName=opts.localsName||exports.localsName||_DEFAULT_LOCALS_NAME;options.views=opts.views;options.async=opts.async;options.destructuredLocals=opts.destructuredLocals;options.legacyInclude=typeof opts.legacyInclude!=\"undefined\"?!!opts.legacyInclude:true;if(options.strict){options._with=false;}else{options._with=typeof opts._with!=\"undefined\"?opts._with:true;}this.opts=options;this.regex=this.createRegex();}Template.modes={EVAL:\"eval\",ESCAPED:\"escaped\",RAW:\"raw\",COMMENT:\"comment\",LITERAL:\"literal\"};Template.prototype={createRegex:function(){var str=_REGEX_STRING;var delim=utils.escapeRegExpChars(this.opts.delimiter);var open=utils.escapeRegExpChars(this.opts.openDelimiter);var close=utils.escapeRegExpChars(this.opts.closeDelimiter);str=str.replace(/%/g,delim).replace(/</g,open).replace(/>/g,close);return new RegExp(str)},compile:function(){var src;var fn;var opts=this.opts;var prepended=\"\";var appended=\"\";var escapeFn=opts.escapeFunction;var ctor;var sanitizedFilename=opts.filename?JSON.stringify(opts.filename):\"undefined\";if(!this.source){this.generateSource();prepended+='  var __output = \"\";\\n'+\"  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n\";if(opts.outputFunctionName){if(!_JS_IDENTIFIER.test(opts.outputFunctionName)){throw new Error(\"outputFunctionName is not a valid JS identifier.\")}prepended+=\"  var \"+opts.outputFunctionName+\" = __append;\"+\"\\n\";}if(opts.localsName&&!_JS_IDENTIFIER.test(opts.localsName)){throw new Error(\"localsName is not a valid JS identifier.\")}if(opts.destructuredLocals&&opts.destructuredLocals.length){var destructuring=\"  var __locals = (\"+opts.localsName+\" || {}),\\n\";for(var i=0;i<opts.destructuredLocals.length;i++){var name=opts.destructuredLocals[i];if(!_JS_IDENTIFIER.test(name)){throw new Error(\"destructuredLocals[\"+i+\"] is not a valid JS identifier.\")}if(i>0){destructuring+=\",\\n  \";}destructuring+=name+\" = __locals.\"+name;}prepended+=destructuring+\";\\n\";}if(opts._with!==false){prepended+=\"  with (\"+opts.localsName+\" || {}) {\"+\"\\n\";appended+=\"  }\"+\"\\n\";}appended+=\"  return __output;\"+\"\\n\";this.source=prepended+this.source+appended;}if(opts.compileDebug){src=\"var __line = 1\"+\"\\n\"+\"  , __lines = \"+JSON.stringify(this.templateText)+\"\\n\"+\"  , __filename = \"+sanitizedFilename+\";\"+\"\\n\"+\"try {\"+\"\\n\"+this.source+\"} catch (e) {\"+\"\\n\"+\"  rethrow(e, __lines, __filename, __line, escapeFn);\"+\"\\n\"+\"}\"+\"\\n\";}else{src=this.source;}if(opts.client){src=\"escapeFn = escapeFn || \"+escapeFn.toString()+\";\"+\"\\n\"+src;if(opts.compileDebug){src=\"rethrow = rethrow || \"+rethrow.toString()+\";\"+\"\\n\"+src;}}if(opts.strict){src='\"use strict\";\\n'+src;}if(opts.debug){console.log(src);}if(opts.compileDebug&&opts.filename){src=src+\"\\n\"+\"//# sourceURL=\"+sanitizedFilename+\"\\n\";}try{if(opts.async){try{ctor=new Function(\"return (async function(){}).constructor;\")();}catch(e){if(e instanceof SyntaxError){throw new Error(\"This environment does not support async/await\")}else{throw e}}}else{ctor=Function;}fn=new ctor(opts.localsName+\", escapeFn, include, rethrow\",src);}catch(e){if(e instanceof SyntaxError){if(opts.filename){e.message+=\" in \"+opts.filename;}e.message+=\" while compiling ejs\\n\\n\";e.message+=\"If the above error is not helpful, you may want to try EJS-Lint:\\n\";e.message+=\"https://github.com/RyanZim/EJS-Lint\";if(!opts.async){e.message+=\"\\n\";e.message+=\"Or, if you meant to create an async function, pass `async: true` as an option.\";}}throw e}var returnedFn=opts.client?fn:function anonymous(data){var include=function(path,includeData){var d=utils.shallowCopy(utils.createNullProtoObjWherePossible(),data);if(includeData){d=utils.shallowCopy(d,includeData);}return includeFile(path,opts)(d)};return fn.apply(opts.context,[data||utils.createNullProtoObjWherePossible(),escapeFn,include,rethrow])};if(opts.filename&&typeof Object.defineProperty===\"function\"){var filename=opts.filename;var basename=path.basename(filename,path.extname(filename));try{Object.defineProperty(returnedFn,\"name\",{value:basename,writable:false,enumerable:false,configurable:true});}catch(e){}}return returnedFn},generateSource:function(){var opts=this.opts;if(opts.rmWhitespace){this.templateText=this.templateText.replace(/[\\r\\n]+/g,\"\\n\").replace(/^\\s+|\\s+$/gm,\"\");}this.templateText=this.templateText.replace(/[ \\t]*<%_/gm,\"<%_\").replace(/_%>[ \\t]*/gm,\"_%>\");var self=this;var matches=this.parseTemplateText();var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;if(matches&&matches.length){matches.forEach(function(line,index){var closing;if(line.indexOf(o+d)===0&&line.indexOf(o+d+d)!==0){closing=matches[index+2];if(!(closing==d+c||closing==\"-\"+d+c||closing==\"_\"+d+c)){throw new Error('Could not find matching close tag for \"'+line+'\".')}}self.scanLine(line);});}},parseTemplateText:function(){var str=this.templateText;var pat=this.regex;var result=pat.exec(str);var arr=[];var firstPos;while(result){firstPos=result.index;if(firstPos!==0){arr.push(str.substring(0,firstPos));str=str.slice(firstPos);}arr.push(result[0]);str=str.slice(result[0].length);result=pat.exec(str);}if(str){arr.push(str);}return arr},_addOutput:function(line){if(this.truncate){line=line.replace(/^(?:\\r\\n|\\r|\\n)/,\"\");this.truncate=false;}if(!line){return line}line=line.replace(/\\\\/g,\"\\\\\\\\\");line=line.replace(/\\n/g,\"\\\\n\");line=line.replace(/\\r/g,\"\\\\r\");line=line.replace(/\"/g,'\\\\\"');this.source+='    ; __append(\"'+line+'\")'+\"\\n\";},scanLine:function(line){var self=this;var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;var newLineCount=0;newLineCount=line.split(\"\\n\").length-1;switch(line){case o+d:case o+d+\"_\":this.mode=Template.modes.EVAL;break;case o+d+\"=\":this.mode=Template.modes.ESCAPED;break;case o+d+\"-\":this.mode=Template.modes.RAW;break;case o+d+\"#\":this.mode=Template.modes.COMMENT;break;case o+d+d:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(o+d+d,o+d)+'\")'+\"\\n\";break;case d+d+c:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(d+d+c,d+c)+'\")'+\"\\n\";break;case d+c:case\"-\"+d+c:case\"_\"+d+c:if(this.mode==Template.modes.LITERAL){this._addOutput(line);}this.mode=null;this.truncate=line.indexOf(\"-\")===0||line.indexOf(\"_\")===0;break;default:if(this.mode){switch(this.mode){case Template.modes.EVAL:case Template.modes.ESCAPED:case Template.modes.RAW:if(line.lastIndexOf(\"//\")>line.lastIndexOf(\"\\n\")){line+=\"\\n\";}}switch(this.mode){case Template.modes.EVAL:this.source+=\"    ; \"+line+\"\\n\";break;case Template.modes.ESCAPED:this.source+=\"    ; __append(escapeFn(\"+stripSemi(line)+\"))\"+\"\\n\";break;case Template.modes.RAW:this.source+=\"    ; __append(\"+stripSemi(line)+\")\"+\"\\n\";break;case Template.modes.COMMENT:break;case Template.modes.LITERAL:this._addOutput(line);break}}else{this._addOutput(line);}}if(self.opts.compileDebug&&newLineCount){this.currentLine+=newLineCount;this.source+=\"    ; __line = \"+this.currentLine+\"\\n\";}}};exports.escapeXML=utils.escapeXML;exports.__express=exports.renderFile;exports.VERSION=_VERSION_STRING;exports.name=_NAME;if(typeof window!=\"undefined\"){window.ejs=exports;}},{\"../package.json\":6,\"./utils\":2,fs:3,path:4}],2:[function(require,module,exports){\"use strict\";var regExpChars=/[|\\\\{}()[\\]^$+*?.]/g;var hasOwnProperty=Object.prototype.hasOwnProperty;var hasOwn=function(obj,key){return hasOwnProperty.apply(obj,[key])};exports.escapeRegExpChars=function(string){if(!string){return\"\"}return String(string).replace(regExpChars,\"\\\\$&\")};var _ENCODE_HTML_RULES={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&#34;\",\"'\":\"&#39;\"};var _MATCH_HTML=/[&<>'\"]/g;function encode_char(c){return _ENCODE_HTML_RULES[c]||c}var escapeFuncStr=\"var _ENCODE_HTML_RULES = {\\n\"+'      \"&\": \"&amp;\"\\n'+'    , \"<\": \"&lt;\"\\n'+'    , \">\": \"&gt;\"\\n'+'    , \\'\"\\': \"&#34;\"\\n'+'    , \"\\'\": \"&#39;\"\\n'+\"    }\\n\"+\"  , _MATCH_HTML = /[&<>'\\\"]/g;\\n\"+\"function encode_char(c) {\\n\"+\"  return _ENCODE_HTML_RULES[c] || c;\\n\"+\"};\\n\";exports.escapeXML=function(markup){return markup==undefined?\"\":String(markup).replace(_MATCH_HTML,encode_char)};function escapeXMLToString(){return Function.prototype.toString.call(this)+\";\\n\"+escapeFuncStr}try{if(typeof Object.defineProperty===\"function\"){Object.defineProperty(exports.escapeXML,\"toString\",{value:escapeXMLToString});}else{exports.escapeXML.toString=escapeXMLToString;}}catch(err){console.warn(\"Unable to set escapeXML.toString (is the Function prototype frozen?)\");}exports.shallowCopy=function(to,from){from=from||{};if(to!==null&&to!==undefined){for(var p in from){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}return to};exports.shallowCopyFromList=function(to,from,list){list=list||[];from=from||{};if(to!==null&&to!==undefined){for(var i=0;i<list.length;i++){var p=list[i];if(typeof from[p]!=\"undefined\"){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}}return to};exports.cache={_data:{},set:function(key,val){this._data[key]=val;},get:function(key){return this._data[key]},remove:function(key){delete this._data[key];},reset:function(){this._data={};}};exports.hyphenToCamel=function(str){return str.replace(/-[a-z]/g,function(match){return match[1].toUpperCase()})};exports.createNullProtoObjWherePossible=function(){if(typeof Object.create==\"function\"){return function(){return Object.create(null)}}if(!({__proto__:null}instanceof Object)){return function(){return{__proto__:null}}}return function(){return{}}}();},{}],3:[function(require,module,exports){},{}],4:[function(require,module,exports){(function(process){function normalizeArray(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1);}else if(last===\"..\"){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}if(allowAboveRoot){for(;up--;up){parts.unshift(\"..\");}}return parts}exports.resolve=function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){continue}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\";}resolvedPath=normalizeArray(filter(resolvedPath.split(\"/\"),function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"};exports.normalize=function(path){var isAbsolute=exports.isAbsolute(path),trailingSlash=substr(path,-1)===\"/\";path=normalizeArray(filter(path.split(\"/\"),function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\";}if(path&&trailingSlash){path+=\"/\";}return(isAbsolute?\"/\":\"\")+path};exports.isAbsolute=function(path){return path.charAt(0)===\"/\"};exports.join=function(){var paths=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(paths,function(p,index){if(typeof p!==\"string\"){throw new TypeError(\"Arguments to path.join must be strings\")}return p}).join(\"/\"))};exports.relative=function(from,to){from=exports.resolve(from).substr(1);to=exports.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\");}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")};exports.sep=\"/\";exports.delimiter=\":\";exports.dirname=function(path){if(typeof path!==\"string\")path=path+\"\";if(path.length===0)return\".\";var code=path.charCodeAt(0);var hasRoot=code===47;var end=-1;var matchedSlash=true;for(var i=path.length-1;i>=1;--i){code=path.charCodeAt(i);if(code===47){if(!matchedSlash){end=i;break}}else{matchedSlash=false;}}if(end===-1)return hasRoot?\"/\":\".\";if(hasRoot&&end===1){return\"/\"}return path.slice(0,end)};function basename(path){if(typeof path!==\"string\")path=path+\"\";var start=0;var end=-1;var matchedSlash=true;var i;for(i=path.length-1;i>=0;--i){if(path.charCodeAt(i)===47){if(!matchedSlash){start=i+1;break}}else if(end===-1){matchedSlash=false;end=i+1;}}if(end===-1)return\"\";return path.slice(start,end)}exports.basename=function(path,ext){var f=basename(path);if(ext&&f.substr(-1*ext.length)===ext){f=f.substr(0,f.length-ext.length);}return f};exports.extname=function(path){if(typeof path!==\"string\")path=path+\"\";var startDot=-1;var startPart=0;var end=-1;var matchedSlash=true;var preDotState=0;for(var i=path.length-1;i>=0;--i){var code=path.charCodeAt(i);if(code===47){if(!matchedSlash){startPart=i+1;break}continue}if(end===-1){matchedSlash=false;end=i+1;}if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){return\"\"}return path.slice(startDot,end)};function filter(xs,f){if(xs.filter)return xs.filter(f);var res=[];for(var i=0;i<xs.length;i++){if(f(xs[i],i,xs))res.push(xs[i]);}return res}var substr=\"ab\".substr(-1)===\"b\"?function(str,start,len){return str.substr(start,len)}:function(str,start,len){if(start<0)start=str.length+start;return str.substr(start,len)};}).call(this,require(\"_process\"));},{_process:5}],5:[function(require,module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout===\"function\"){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title=\"browser\";process.browser=true;process.env={};process.argv=[];process.version=\"\";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error(\"process.binding is not supported\")};process.cwd=function(){return\"/\"};process.chdir=function(dir){throw new Error(\"process.chdir is not supported\")};process.umask=function(){return 0};},{}],6:[function(require,module,exports){module.exports={name:\"ejs\",description:\"Embedded JavaScript templates\",keywords:[\"template\",\"engine\",\"ejs\"],version:\"3.1.8\",author:\"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)\",license:\"Apache-2.0\",bin:{ejs:\"./bin/cli.js\"},main:\"./lib/ejs.js\",jsdelivr:\"ejs.min.js\",unpkg:\"ejs.min.js\",repository:{type:\"git\",url:\"git://github.com/mde/ejs.git\"},bugs:\"https://github.com/mde/ejs/issues\",homepage:\"https://github.com/mde/ejs\",dependencies:{jake:\"^10.8.5\"},devDependencies:{browserify:\"^16.5.1\",eslint:\"^6.8.0\",\"git-directory-deploy\":\"^1.5.1\",jsdoc:\"^4.0.2\",\"lru-cache\":\"^4.0.1\",mocha:\"^10.2.0\",\"uglify-js\":\"^3.3.16\"},engines:{node:\">=0.10.0\"},scripts:{test:\"mocha -u tdd\"}};},{}]},{},[1])(1)});\n\nlet tpl = Object.create(null);\ntpl['form-error.html'] = '<div class=\"coreui-form__error alert alert-danger alert-dismissible fade show mb-3 <%= options.class %>\">\\n    <%- message %>\\n    <% if (options.dismiss) { %>\\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\\n    <% } %>\\n</div>';\ntpl['form-field-content.html'] = '<%- content %>';\ntpl['form-field-group.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__group_container mb-3\">\\n    <div class=\"coreui-form__group_label pe-2\">\\n        <h6 class=\"coreui-form__field_label_text col-form-label-sm\">\\n            <%- group.label %>\\n            <% if (group.showCollapsible) { %>\\n                <button type=\"button\" class=\"btn btn-sm btn-link btn-collapsible text-dark\">\\n                    <% if ( ! group.show) { %>\\n                    <i class=\"bi bi-chevron-right\"></i>\\n                    <% } else { %>\\n                    <i class=\"bi bi-chevron-down\"></i>\\n                    <% } %>\\n                </button>\\n            <% } %>\\n        </h6>\\n    </div>\\n    <div class=\"coreui-form__group_content\"<% if ( ! group.show) { %> style=\"display:none\"<% } %>>\\n        <%- content %>\\n    </div>\\n</div>';\ntpl['form-field-label.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__field_container d-flex flex-column flex-md-row mb-3\"\\n     <% if ( ! field.show) { %> style=\"display:none\"<% } %>>\\n    <% if (field.labelWidth !== 0 && field.labelWidth !== \\'0px\\') { %>\\n    <div class=\"coreui-form__field_label text-md-end text-sm-start pe-2\"<% if (field.labelWidth) { %> style=\"min-width:<%= field.labelWidth %>;width:<%= field.labelWidth %>\"<% } %>>\\n        <div class=\"coreui-form__field_label_content col-form-label-sm\">\\n            <% if (field.required) { %>\\n            <span class=\"coreui-form__field_label_req text-danger\">*</span>\\n            <% } %>\\n            <span class=\"coreui-form__field_label_text fw-medium\"><%- field.label %></span>\\n        </div>\\n\\n        <% if (field.description) { %>\\n        <div class=\"coreui-form__field_label_description text-muted\">\\n            <small><%- field.description %></small>\\n        </div>\\n        <% } %>\\n    </div>\\n    <% } %>\\n    <div class=\"coreui-form__field_content flex-fill pt-1\">\\n        <div class=\"d-inline-block content-<%= hash %>\">\\n            <%- content %>\\n        </div>\\n\\n        <% if (field.outContent) { %>\\n        <span class=\"coreui-form__field-content-out d-inline-block align-top pt-1 ps-1\">\\n            <%- field.outContent %>\\n        </span>\\n        <% } %>\\n\\n        <% if (attachFields && attachFields.length > 0) { %>\\n            <% $.each(attachFields, function(key, attachField) { %>\\n                <div class=\"<% if (attachField.hasOwnProperty(\\'direction\\') && attachField.direction === \\'column\\') { %>d-block mt-2<% } else { %>d-inline-block<% } %> content-<%= attachField.hash %>\">\\n                    <%- attachField.content %>\\n                </div>\\n            <% }); %>\\n        <% } %>\\n    </div>\\n</div>';\ntpl['form.html'] = '<div id=\"coreui-form-<%= form.id %>\" class=\"coreui-form mb-2\"\\n    <% if (widthSizes) { %>style=\"<%= widthSizes.join(\\';\\') %>\"<% } %>>\\n    <% if (form.title) { %>\\n    <h5 class=\"mb-4\"><%- form.title %></h5>\\n    <% } %>\\n\\n    <form action=\"<%= form.send.url %>\" method=\"<%= form.send.method %>\"<%- formAttr %>>\\n        <div class=\"coreui-form__fields d-flex justify-content-start flex-column flex-wrap\">\\n            <%- layout %>\\n        </div>\\n\\n        <% if (controls) { %>\\n        <div class=\"coreui-form__controls d-flex justify-content-start flex-sm-wrap flex-md-nowrap\">\\n            <% if (form.controlsOffset !== 0 && form.controlsOffset !== \\'0px\\') { %>\\n            <div class=\"d-none d-md-block\" style=\"width:<%= form.controlsOffset %>;min-width:<%= form.controlsOffset %>\"></div>\\n            <% } %>\\n\\n            <div class=\"d-flex justify-content-start flex-wrap gap-2\">\\n                <% $.each(controls, function(key, control) { %>\\n                <div id=\"coreui-form-<%= form.id %>-control-<%= control.index %>\" class=\"coreui-form__control_container\"\\n                     <% if ( ! control.show) { %>style=\"display:none\"<% } %>>\\n                    <%- control.content %>\\n                </div>\\n                <% }); %>\\n            </div>\\n        </div>\\n        <% } %>\\n    </form>\\n</div>';\ntpl['controls/button.html'] = '<button <%- render.attr %>><%- control.content %></button>';\ntpl['controls/link.html'] = '<a href=\"<%- control.href %>\"<%- render.attr %>><%- control.content %></a>';\ntpl['fields/checkbox.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItems.join(\\', \\') %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/color.html'] = '<% if (field.readonly) { %>\\n    <div class=\"rounded-1\" style=\"width: 14px;height: 14px;background-color: <%= value %>\"></div>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/custom.html'] = '<%- content %>';\ntpl['fields/dataset-row-readonly.html'] = '<tr class=\"coreui-form__field-dataset-item\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-2 pb-1\">\\n            <%- option.value %>\\n        </td>\\n    <% }); %>\\n</tr>';\ntpl['fields/dataset-row.html'] = '<tr class=\"coreui-form__field-dataset-item\" id=\"dataset-item-<%= hashItem %>\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-1 pb-1\">\\n        <% if (option.type === \\'select\\') { %>\\n            <select <%- option.attr %>>\\n                <% $.each(option.items, function(key, item) { %>\\n                <option <%- item.attr %>><%- item.title %></option>\\n                <% }); %>\\n            </select>\\n        <% } else if (option.type === \\'switch\\') { %>\\n            <div class=\"form-check form-switch\">\\n                <input <%- option.attr %>/>\\n            </div>\\n        <% } else { %>\\n            <input <%- option.attr %>>\\n        <% } %>\\n        </td>\\n    <% }); %>\\n\\n    <td class=\"pb-1\">\\n        <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-remove\" data-item-id=\"dataset-item-<%= hashItem %>\">\\n            <i class=\"bi bi-x text-muted\"></i>\\n        </button>\\n    </td>\\n</tr>';\ntpl['fields/dataset.html'] = '<% if (field.readonly) { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted pe-2\"><small><%= item.title %></small></td>\\n                <% }); %>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n            <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n<% } else { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted\"><small><%= item.title %></small></td>\\n                <% }); %>\\n                <td></td>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n                <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n    <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-add\"><%= lang.dataset_add %></button>\\n<% } %>';\ntpl['fields/hidden.html'] = '<% if ( ! field.readonly) { %>\\n    <input <%- render.attr %>/>\\n<% } %>';\ntpl['fields/input.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/modal-loading.html'] = '<div class=\"py-4 d-flex justify-content-center align-items-center gap-2\">\\n    <div class=\"spinner-border mr-2\"></div> <%= lang.modal_loading %>\\n</div>\\n';\ntpl['fields/modal.html'] = '<% if (field.readonly) { %>\\n    <%= text %>\\n<% } else { %>\\n    <div class=\"input-group\"<% if (render.width) { %> style=\"width:<%= render.width %>\"<% } %>>\\n        <input <%- render.attr %>/>\\n        <input type=\"hidden\" name=\"<%= field.name %>\" value=\"<%= value %>\" class=\"coreui-form-modal-value\"/>\\n        <% if ( ! field.required) { %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-clear border-secondary-subtle\" type=\"button\">\\n            <i class=\"bi bi-x\"></i>\\n        </button>\\n        <% } %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-select border-secondary-subtle\" type=\"button\"><%= lang.modal_select %></button>\\n    </div>\\n<% } %>';\ntpl['fields/passwordRepeat.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <div class=\"d-flex gap-1 align-items-center\">\\n        <input <%- render.attr %>/>\\n        <small class=\"password-text-repeat\"><%= lang.repeat %></small>\\n\\n        <% if (field.showBtn) { %>\\n            <div class=\"input-group flex-nowrap\">\\n                <input <%- render.attr2 %>/>\\n                <button class=\"btn btn-sm btn-outline-secondary border-secondary-subtle btn-password-change\" type=\"button\"\\n                        data-change=\"<%- lang.change %>\" data-cancel=\"<%- lang.cancel %>\"><%= btn_text %></button>\\n            </div>\\n        <% } else { %>\\n            <input <%- render.attr2 %>/>\\n        <% } %>\\n\\n    </div>\\n<% } %>';\ntpl['fields/radio.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItem %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/select.html'] = '<% if (field.readonly) { %>\\n    <%= render.selectedOptions.join(\\', \\') %>\\n<% } else { %>\\n    <select <%- render.attr %>>\\n        <% $.each(render.options, function(key, option) { %>\\n            <% if (option.type === \\'group\\') { %>\\n                <optgroup<%- option.attr %>/>\\n                <% $.each(option.options, function(key, groupOption) { %>\\n                    <option <%- groupOption.attr %>/><%= groupOption.text %></option>\\n                <% }); %>\\n                </optgroup>\\n            <% } else { %>\\n            <option <%- option.attr %>/><%= option.text %></option>\\n            <% } %>\\n        <% }); %>\\n    </select>\\n<% } %>';\ntpl['fields/switch.html'] = '<% if (field.readonly) { %>\\n    <%= field.valueY == value ? lang.switch_yes : lang.switch_no %>\\n<% } else { %>\\n    <div class=\"form-check form-switch\">\\n        <input <%- render.attr %>/>\\n    </div>\\n<% } %>';\ntpl['fields/textarea.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea <%- render.attr %>><%- value %></textarea>\\n<% } %>';\ntpl['fields/wysiwyg.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea name=\"<%= field.name %>\" id=\"editor-<%= editorHash %>\"><%- value %></textarea>\\n<% } %>';\n\nlet coreuiFormUtils = {\r\n\r\n    /**\r\n     * Получение значения поля\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               fieldOptions\r\n     * @returns {string|number|null}\r\n     */\r\n    getFieldValue: function (form, fieldOptions) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        if (fieldOptions &&\r\n            formRecord &&\r\n            typeof fieldOptions.name === 'string' &&\r\n            typeof formRecord === 'object' &&\r\n            formRecord.hasOwnProperty(fieldOptions.name) &&\r\n            ['string', 'number', 'object'].indexOf(typeof formRecord[fieldOptions.name]) >= 0\r\n        ) {\r\n            return formRecord[fieldOptions.name];\r\n        }\r\n\r\n        return '';\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение функции из указанного текста\r\n     * @param functionName\r\n     * @param context\r\n     * @returns {null|Window}\r\n     * @private\r\n     */\r\n    getFunctionByName: function(functionName, context) {\r\n\r\n        let namespaces = functionName.split(\".\");\r\n        let func       = namespaces.pop();\r\n\r\n        context = context || window;\r\n\r\n        for (let i = 0; i < namespaces.length; i++) {\r\n            if (context.hasOwnProperty(namespaces[i])) {\r\n                context = context[namespaces[i]];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        if (typeof context[func] === 'function') {\r\n            return context[func];\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    eval: function (code) {\r\n\r\n        (function(){\r\n            eval(code);\r\n        })();\r\n    },\r\n\r\n\r\n    /**\r\n     * Обработка полей в полях\r\n     * @param form\r\n     * @param defaultOptions\r\n     * @param fieldOptions\r\n     */\r\n    mergeFieldOptions: function (form, defaultOptions, fieldOptions) {\r\n\r\n        let options = $.extend(true, {}, defaultOptions);\r\n\r\n        if (fieldOptions) {\r\n            if (options.hasOwnProperty('attr') && typeof options.attr === 'object' &&\r\n                fieldOptions.hasOwnProperty('attr') && typeof fieldOptions.attr === 'object'\r\n            ) {\r\n                fieldOptions.attr = this.mergeAttr(options.attr, fieldOptions.attr);\r\n            }\r\n\r\n            options = $.extend(true, {}, options, fieldOptions);\r\n        }\r\n\r\n        if (options.hasOwnProperty('width')) {\r\n            if (options.width) {\r\n                let unit = typeof options.width === 'number' ? 'px' : '';\r\n                options.width = options.width + unit;\r\n\r\n            } else if (form._options.fieldWidth && options.type !== 'color') {\r\n                let unit = typeof form._options.fieldWidth === 'number' ? 'px' : '';\r\n                options.width = form._options.fieldWidth + unit;\r\n            }\r\n        }\r\n\r\n        if (options.hasOwnProperty('labelWidth')) {\r\n            if (options.labelWidth >= 0 && options.labelWidth !== null) {\r\n                let unit = typeof options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = options.labelWidth + unit;\r\n\r\n            } else if (form._options.labelWidth) {\r\n                let unit = typeof form._options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = form._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        return options\r\n    },\r\n\r\n\r\n    /**\r\n     * Объединение атрибутов\r\n     * @param attr1\r\n     * @param attr2\r\n     * @returns {object}\r\n     */\r\n    mergeAttr: function (attr1, attr2) {\r\n\r\n        let mergeAttr = Object.assign({}, attr1);\r\n\r\n        if (typeof attr2 === 'object') {\r\n            $.each(attr2, function (name, value) {\r\n                if (mergeAttr.hasOwnProperty(name)) {\r\n                    if (name === 'class') {\r\n                        mergeAttr[name] += ' ' + value;\r\n\r\n                    } else if (name === 'style') {\r\n                        mergeAttr[name] += ';' + value;\r\n\r\n                    } else {\r\n                        mergeAttr[name] = value;\r\n                    }\r\n\r\n                } else {\r\n                    mergeAttr[name] = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return mergeAttr;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация и рендер дополнительных полей\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @returns {object}\r\n     * @private\r\n     */\r\n    getAttacheFields: function(form, options) {\r\n\r\n        let fields = [];\r\n\r\n        if (typeof options === 'object' &&\r\n            typeof(options.fields) === 'object' &&\r\n            Array.isArray(options.fields)\r\n        ) {\r\n            $.each(options.fields, function (key, field) {\r\n                let instance = form.initField(field);\r\n\r\n                if (typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                fields.push({\r\n                    hash: instance._hash,\r\n                    direction: options.hasOwnProperty('fieldsDirection') ? options.fieldsDirection : 'row',\r\n                    content: instance.renderContent()\r\n                });\r\n            });\r\n        }\r\n\r\n        return fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDate: function (value) {\r\n\r\n        if (value && value.length === 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDateTime: function (value) {\r\n\r\n        if (value && value.length >= 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n            let hour  = (\"00\" + date.getHours()).slice(-2);\r\n            let min   = (\"00\" + date.getMinutes()).slice(-2);\r\n            let sec   = (\"00\" + date.getSeconds()).slice(-2);\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year + ' ' + hour + ':' + min + ':' + sec;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateMonth: function (value, lang) {\r\n\r\n        if (value && value.length === 7) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth();\r\n\r\n            let monthLang = lang.date_months.hasOwnProperty(month) ? lang.date_months[month] : '';\r\n\r\n            value = monthLang + ' ' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateWeek: function (value, lang) {\r\n\r\n        if (value && value.length >= 7) {\r\n            let year = value.substring(0, 4);\r\n            let week = value.substring(6);\r\n\r\n            value = year + ' ' + lang.date_week + ' ' + week;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из объекта по указанному пути\r\n     * @param {object} obj\r\n     * @param {string} path\r\n     * @return {*}\r\n     */\r\n    getObjValue: function(obj, path) {\r\n\r\n        path = path.split('.');\r\n\r\n        for (let i = 0, len = path.length; i < len; i++){\r\n            obj = obj[path[i]];\r\n        }\r\n\r\n        return obj;\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка на число\r\n     * @param num\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    isNumeric: function(num) {\r\n        return (typeof(num) === 'number' || typeof(num) === \"string\" && num.trim() !== '') && ! isNaN(num);\r\n    },\r\n\r\n\r\n    /**\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    hashCode: function() {\r\n        return this.crc32((new Date().getTime() + Math.random()).toString()).toString(16);\r\n    },\r\n\r\n\r\n    /**\r\n     * Hash crc32\r\n     * @param str\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    crc32: function (str) {\r\n\r\n        for (var a, o = [], c = 0; c < 256; c++) {\r\n            a = c;\r\n            for (var f = 0; f < 8; f++) {\r\n                a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;\r\n            }\r\n            o[c] = a;\r\n        }\r\n\r\n        for (var n = -1, t = 0; t < str.length; t++) {\r\n            n = n >>> 8 ^ o[255 & (n ^ str.charCodeAt(t))];\r\n        }\r\n\r\n        return (-1 ^ n) >>> 0;\r\n    },\r\n\r\n\r\n    /**\r\n     * Округление\r\n     * @param number\r\n     * @param precision\r\n     * @returns {number}\r\n     */\r\n    round: function (number, precision) {\r\n\r\n        precision = typeof precision !== 'undefined' ? parseInt(precision) : 0;\r\n\r\n        if (precision === 0) {\r\n            return Math.round(number);\r\n\r\n        } else if (precision > 0) {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number * pow) / pow;\r\n\r\n        } else {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number / pow) * pow;\r\n        }\r\n    }\r\n};\n\nlet coreuiFormInstance = {\r\n\r\n    _options: {\r\n        id: null,\r\n        title: '',\r\n        lang: 'en',\r\n        send: {\r\n            url: '',\r\n            method: 'POST',\r\n            format: 'form',\r\n        },\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        labelWidth: 200,\r\n        controlsOffset: null,\r\n        readonly: false,\r\n        validate: false,\r\n        successLoadUrl: '',\r\n        errorClass: '',\r\n        layout: '[column_default]',\r\n        onSubmit: null,\r\n        onSubmitSuccess: null,\r\n        record: {},\r\n        fields: [],\r\n        controls: []\r\n    },\r\n\r\n    _lock: false,\r\n    _fieldsIndex: 0,\r\n    _groupsIndex: 0,\r\n    _controlsIndex: 0,\r\n    _groups: [],\r\n    _fields: [],\r\n    _controls: [],\r\n    _events: {},\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {object} options\r\n     * @private\r\n     */\r\n    _init: function (options) {\r\n\r\n        this._options.labelWidth    = coreuiForm$1.getSetting('labelWidth');\r\n        this._options.lang          = coreuiForm$1.getSetting('lang');\r\n        this._options.errorClass    = coreuiForm$1.getSetting('errorClass');\r\n        this._options.send.format = coreuiForm$1.getSetting('sendDataFormat');\r\n\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        if ( ! this._options.id) {\r\n            this._options.id = coreuiFormUtils.hashCode();\r\n        }\r\n\r\n        if (this._options.hasOwnProperty('labelWidth')) {\r\n            if (this._options.labelWidth >= 0 && this._options.labelWidth !== null) {\r\n                let unit = typeof this._options.labelWidth === 'number' ? 'px' : '';\r\n                this._options.labelWidth = this._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        if ( ! this._options.hasOwnProperty('controlsOffset') || this._options.controlsOffset === null) {\r\n            this._options.controlsOffset = this._options.labelWidth;\r\n        } else {\r\n            if (this._options.controlsOffset >= 0) {\r\n                let unit = typeof this._options.controlsOffset === 'number' ? 'px' : '';\r\n                this._options.controlsOffset = this._options.controlsOffset + unit;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    initEvents: function () {\r\n\r\n        let that          = this;\r\n        let formContainer = '#coreui-form-' + this._options.id + ' > form';\r\n\r\n        $(formContainer).on('submit', function () {\r\n            setTimeout(function () {\r\n                that.send.apply(that);\r\n            }, 0);\r\n            return false;\r\n        });\r\n\r\n        this._trigger('shown.coreui.form');\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение id формы\r\n     * @return {string|null}\r\n     */\r\n    getId: function () {\r\n\r\n        return this._options.hasOwnProperty('id') ? this._options.id : null;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    render: function(element) {\r\n\r\n        let that       = this;\r\n        let widthSizes = [];\r\n        let layout     = this._options.layout;\r\n        let controls   = [];\r\n        let formAttr   = [];\r\n\r\n\r\n\r\n        if (this._options.width) {\r\n            let unit = typeof this._options.width === 'number' ? 'px' : '';\r\n            widthSizes.push('width:' + this._options.width + unit);\r\n        }\r\n\r\n        if (this._options.minWidth) {\r\n            let unit = typeof this._options.minWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('min-width:' + this._options.minWidth + unit);\r\n        }\r\n\r\n        if (this._options.maxWidth) {\r\n            let unit = typeof this._options.maxWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('max-width:' + this._options.maxWidth + unit);\r\n        }\r\n\r\n\r\n\r\n        // Поля\r\n        if (typeof this._options.fields === 'object' &&\r\n            Array.isArray(this._options.fields) &&\r\n            this._options.fields.length > 0 &&\r\n            layout &&\r\n            typeof layout === 'string'\r\n        ) {\r\n            let matches        = Array.from(layout.matchAll(/\\[column_([\\w_\\d]+)\\]/g));\r\n            let columns        = [];\r\n            let columnsContent = {};\r\n\r\n            if (matches.length > 0) {\r\n                $.each(matches, function (key, match) {\r\n                    columns.push(match[1]);\r\n                });\r\n            }\r\n\r\n            if (columns.length > 0) {\r\n                $.each(this._options.fields, function (key, field) {\r\n                    let column = field.hasOwnProperty('column') && (typeof field.column === 'string' || typeof field.column === 'number')\r\n                        ? (columns.indexOf(field.column) >= 0 ? field.column : null)\r\n                        : 'default';\r\n\r\n                    if (typeof column !== 'string') {\r\n                        return;\r\n                    }\r\n\r\n                    let type     = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : '';\r\n                    let instance = null;\r\n\r\n                    if (type === 'group') {\r\n                        instance = that.initGroup(field);\r\n\r\n                    } else {\r\n                        instance = that.initField(field);\r\n                    }\r\n\r\n\r\n                    if ( ! instance || typeof instance !== 'object') {\r\n                        return;\r\n                    }\r\n\r\n                    if ( ! columnsContent.hasOwnProperty(column)) {\r\n                        columnsContent[column] = [];\r\n                    }\r\n                    columnsContent[column].push(instance.render());\r\n                });\r\n            }\r\n\r\n            if (Object.keys(columnsContent).length >= 0) {\r\n                $.each(columnsContent, function (name, fieldContents) {\r\n\r\n                    layout = layout.replace('[column_' + name + ']', fieldContents.join(''));\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        // Элементы управления\r\n        if (typeof this._options.controls === 'object' &&\r\n            Array.isArray(this._options.controls) &&\r\n            this._options.controls.length > 0\r\n        ) {\r\n            $.each(this._options.controls, function (key, control) {\r\n                let instance = that.initControl(control);\r\n\r\n                if ( ! instance || typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                controls.push({\r\n                    show: ! control.hasOwnProperty('show') || control.show,\r\n                    index: that._controlsIndex - 1,\r\n                    content: instance.render()\r\n                });\r\n            });\r\n        }\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            formAttr.push('novalidate');\r\n        }\r\n\r\n\r\n        let html = ejs.render(tpl['form.html'], {\r\n            form: this._options,\r\n            formAttr: formAttr ? ' ' + formAttr.join(' ') : '',\r\n            widthSizes: widthSizes,\r\n            layout: layout,\r\n            controls: controls,\r\n        });\r\n\r\n        if (element === undefined) {\r\n            return html;\r\n        }\r\n\r\n        // Dom element\r\n        let domElement = {};\r\n\r\n        if (typeof element === 'string') {\r\n            domElement = document.getElementById(element);\r\n\r\n            if ( ! domElement) {\r\n                return '';\r\n            }\r\n\r\n        } else if (element instanceof HTMLElement) {\r\n            domElement = element;\r\n        }\r\n\r\n\r\n        domElement.innerHTML = html;\r\n\r\n        this.initEvents();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        this._lock = true;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.lock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Разблокировка\r\n     */\r\n    unlock: function () {\r\n\r\n        this._lock = false;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.unlock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Отправка данных формы\r\n     */\r\n    send: function () {\r\n\r\n        if (this._lock) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            let isValid = this.validate();\r\n\r\n            if ( ! isValid) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let onsubmit = null;\r\n        let data     = this.getData();\r\n\r\n        if (typeof this._options.onSubmit === 'function') {\r\n            onsubmit = this._options.onSubmit;\r\n\r\n        } else if (typeof this._options.onSubmit === 'string' && this._options.onSubmit) {\r\n            let func = coreuiFormUtils.getFunctionByName(this._options.onSubmit);\r\n\r\n            if (typeof func === 'function') {\r\n                onsubmit = func;\r\n            } else if (typeof this._options.onSubmit === 'string') {\r\n                let onSubmitText = this._options.onSubmit;\r\n\r\n                onsubmit = function(form, data) {\r\n                    try {\r\n                        coreuiFormUtils.eval(onSubmitText);\r\n                    } catch (e) {\r\n                        throw Error('Incorrect onSubmit param: ' + e.message)\r\n                    }\r\n                };\r\n            }\r\n        }\r\n\r\n        if (typeof onsubmit === 'function') {\r\n            let onSubmitResult = onsubmit(this, data);\r\n\r\n            if (onSubmitResult === false) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let results    = this._trigger('send.coreui.form', this, [ this, data ]);\r\n        let isStopSend = false;\r\n\r\n        $.each(results, function(key, result) {\r\n            if (result === false) {\r\n                isStopSend = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        if (isStopSend) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.lock();\r\n\r\n        let that       = this;\r\n        let sendFormat = ['form', 'json'].indexOf(this._options.send.format) >= 0\r\n            ? this._options.send.format\r\n            : 'form';\r\n\r\n        let dataFormat  = null;\r\n        let contentType = null;\r\n\r\n        if (sendFormat === 'json') {\r\n            contentType = \"application/json; charset=utf-8\";\r\n            dataFormat  = JSON.stringify(data);\r\n\r\n        } else {\r\n            contentType = false;\r\n            dataFormat  = new FormData();\r\n\r\n            $.each(data, function (name, value) {\r\n                if (value instanceof File) {\r\n                    dataFormat.append(name, value, value.name);\r\n\r\n                } else if (value instanceof FileList) {\r\n                    $.each(value, function (key, file) {\r\n                        dataFormat.append(name, file, file.name);\r\n                    });\r\n\r\n                } else {\r\n                    dataFormat.append(name, value);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        $.ajax({\r\n            url: this._options.send.url,\r\n            method: this._options.send.method,\r\n            data: dataFormat,\r\n            contentType: contentType,\r\n            processData: false,\r\n            beforeSend: function(xhr) {\r\n                that._trigger('start-send.coreui.form', that, [ that, xhr ]);\r\n            },\r\n            success: function (result) {\r\n                that.hideError();\r\n\r\n                that._trigger('success-send.coreui.form', that, [ that, result ]);\r\n\r\n                let jsonResponse = null;\r\n\r\n                if (typeof result === 'string') {\r\n                    try {\r\n                        let parsedResponse = JSON.parse(result);\r\n                        if (typeof parsedResponse === 'object' &&\r\n                            parsedResponse !== null &&\r\n                            ! Array.isArray(parsedResponse)\r\n                        ) {\r\n                            jsonResponse = parsedResponse;\r\n                        }\r\n\r\n                    } catch (e) {\r\n                        // ignore\r\n                    }\r\n                } else {\r\n                    jsonResponse = result;\r\n                }\r\n\r\n                if (jsonResponse !== null && typeof jsonResponse === 'object') {\r\n                    if (jsonResponse.hasOwnProperty('scripts') &&\r\n                        Array.isArray(jsonResponse.scripts)\r\n                    ) {\r\n                        $.each(jsonResponse.scripts, function (key, script) {\r\n                            if (typeof script === 'string') {\r\n                                let func = coreuiFormUtils.getFunctionByName(script);\r\n\r\n                                if (typeof func === 'function') {\r\n                                    func();\r\n                                } else {\r\n                                    coreuiFormUtils.eval(script);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (jsonResponse.hasOwnProperty('loadUrl') &&\r\n                        typeof jsonResponse.loadUrl === 'string'\r\n                    ) {\r\n                        location.href = jsonResponse.loadUrl;\r\n                    }\r\n                }\r\n\r\n                if (that._options.hasOwnProperty('onSubmitSuccess')) {\r\n                    if (typeof that._options.onSubmitSuccess === 'function') {\r\n                        that._options.onSubmitSuccess();\r\n\r\n                    } else if (typeof that._options.onSubmitSuccess === 'string') {\r\n                        let func = coreuiFormUtils.getFunctionByName(that._options.onSubmitSuccess);\r\n\r\n                        if (typeof func === 'function') {\r\n                            func();\r\n                        } else {\r\n                            coreuiFormUtils.eval(that._options.onSubmitSuccess);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (that._options.hasOwnProperty('successLoadUrl') &&\r\n                    typeof that._options.successLoadUrl === 'string' &&\r\n                    that._options.successLoadUrl !== ''\r\n                ) {\r\n                    let successLoadUrl = that._options.successLoadUrl;\r\n\r\n                    // Замена параметров\r\n                    if (jsonResponse !== null && typeof jsonResponse === 'object') {\r\n                        const regx      = new RegExp('\\\\[response\\\\.([\\\\d\\\\w\\\\.]+)\\\\]', 'uig');\r\n                        let   urlParams = {};\r\n\r\n                        while (result = regx.exec(successLoadUrl)) {\r\n                            urlParams[result[0]] = result[1];\r\n                        }\r\n\r\n                        if (Object.keys(urlParams).length > 0) {\r\n                            $.each(urlParams, function (param, path) {\r\n                                let value = coreuiFormUtils.getObjValue(jsonResponse, path);\r\n                                value = typeof value !== 'undefined' ? value : '';\r\n\r\n                                successLoadUrl = successLoadUrl.replace(\r\n                                    new RegExp(param.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'g'),\r\n                                    value\r\n                                );\r\n                            });\r\n                        }\r\n                    }\r\n\r\n\r\n                    let equalHash = location.hash === successLoadUrl;\r\n\r\n                    location.href = successLoadUrl;\r\n\r\n                    if (equalHash) {\r\n                        window.onhashchange();\r\n                    }\r\n                }\r\n            },\r\n            error: function(xhr, textStatus, errorThrown) {\r\n                let errorMessage = that.getLang().send_error || '';\r\n                let data         = {};\r\n\r\n                try {\r\n                    let parsedResponse = JSON.parse(xhr.responseText);\r\n                    if (typeof parsedResponse === 'object' &&\r\n                        parsedResponse !== null &&\r\n                        ! Array.isArray(parsedResponse)\r\n                    ) {\r\n                        data = parsedResponse;\r\n                    }\r\n\r\n                } catch (e) {\r\n                    // ignore\r\n                }\r\n\r\n                if (data.hasOwnProperty('error_message') &&\r\n                    typeof data.error_message === 'string' &&\r\n                    data.error_message !== ''\r\n                ) {\r\n                    errorMessage = data.error_message;\r\n                }\r\n\r\n                that.showError(errorMessage);\r\n                that._trigger('error-send.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n            },\r\n            complete: function(xhr, textStatus) {\r\n                that.unlock();\r\n                that._trigger('end-send.coreui.form', that, [ that, xhr, textStatus ]);\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return this._options;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение записи\r\n     * @returns {object}\r\n     */\r\n    getRecord: function () {\r\n\r\n        if (this._options.hasOwnProperty('record') && typeof this._options.record === 'object') {\r\n            return this._options.record;\r\n        }\r\n\r\n        return {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение данных с формы\r\n     * @returns {object}\r\n     */\r\n    getData: function () {\r\n\r\n        let data = {};\r\n\r\n        $.each(this._fields, function (key, field) {\r\n            let fieldOptions = field.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name) {\r\n                data[fieldOptions.name] = field.getValue();\r\n            }\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение полей\r\n     * @returns {object}\r\n     */\r\n    getFields: function () {\r\n        return this._fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение элементов управления\r\n     * @returns {object}\r\n     */\r\n    getControls: function () {\r\n        return this._controls;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение групп полей\r\n     * @returns {object}\r\n     */\r\n    getGroups: function () {\r\n        return this._groups;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение поля\r\n     * @param {string} name\r\n     * @returns {object}\r\n     */\r\n    getField: function (name) {\r\n\r\n        let field = {};\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            let fieldOptions = fieldInstance.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name === name) {\r\n                field = fieldInstance;\r\n            }\r\n        });\r\n\r\n        return field;\r\n    },\r\n\r\n\r\n    /**\r\n     * Смена состояний полей формы\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            fieldInstance.readonly(isReadonly);\r\n        });\r\n\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                if (isReadonly) {\r\n                    control.hide();\r\n                } else {\r\n                    control.show();\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ всех элементов управления\r\n     */\r\n    showControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.show();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие всех элементов управления\r\n     */\r\n    hideControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.hide();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Валидация полей\r\n     * @return {boolean}\r\n     */\r\n    validate: function () {\r\n\r\n        let isValid = true;\r\n\r\n        $.each(this._fields, function (key, field) {\r\n\r\n            if (field.isValid() === false) {\r\n                field.validate(false);\r\n                isValid = false;\r\n\r\n            } else {\r\n                field.validate(null);\r\n            }\r\n        });\r\n\r\n        return isValid;\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ сообщения с ошибкой\r\n     * @param {string} message\r\n     * @param {object} options\r\n     */\r\n    showError: function (message, options) {\r\n\r\n        let formContainer = $('#coreui-form-' + this._options.id + ' > form');\r\n        let formError     = formContainer.find('> .coreui-form__error');\r\n\r\n        if (formError[0]) {\r\n            formError.remove();\r\n        }\r\n\r\n        options = typeof options === 'object' && ! Array.isArray(options) && options !== null ? options : {};\r\n\r\n        if (typeof this._options.errorClass === 'string' && this._options.errorClass !== '') {\r\n            options.class = options.hasOwnProperty('class') ? options.class : '';\r\n            options.class += ' ' + this._options.errorClass;\r\n        }\r\n\r\n        let errorOptions = {\r\n            class:   options.hasOwnProperty('class') && typeof options.class === 'string' ? options.class : '',\r\n            dismiss: options.hasOwnProperty('dismiss') ? !! options.dismiss : true,\r\n        };\r\n\r\n        formContainer.prepend(\r\n            ejs.render(tpl['form-error.html'], {\r\n                message: message,\r\n                options: errorOptions,\r\n            })\r\n        );\r\n\r\n\r\n        if ( ! options.hasOwnProperty('scroll') || options.scroll) {\r\n            let scrollOffset = coreuiForm$1.getSetting('errorMessageScrollOffset');\r\n\r\n            $('html,body').animate({\r\n                scrollTop : formContainer.offset().top - scrollOffset\r\n            }, 'fast');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие сообщения с ошибкой\r\n     */\r\n    hideError: function () {\r\n\r\n        $('#coreui-form-' + this._options.id + ' > form > .coreui-form__error').remove();\r\n    },\r\n\r\n\r\n    /**\r\n     * @param eventName\r\n     * @param callback\r\n     * @param context\r\n     * @param singleExec\r\n     */\r\n    on: function(eventName, callback, context, singleExec) {\r\n        if (typeof this._events[eventName] !== 'object') {\r\n            this._events[eventName] = [];\r\n        }\r\n        this._events[eventName].push({\r\n            context : context || this,\r\n            callback: callback,\r\n            singleExec: !! singleExec,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление формы\r\n     */\r\n    destruct: function () {\r\n\r\n        $('#coreui-form-' + this._options.id).remove();\r\n        delete coreuiForm$1._instances[this.getId()];\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация поля\r\n     * @param field\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initField: function (field) {\r\n\r\n        if (typeof field !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : 'input';\r\n\r\n        if (type === 'group') {\r\n            return null;\r\n        }\r\n\r\n        if ( ! coreuiForm$1.fields.hasOwnProperty(type)) {\r\n            type = 'input';\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            field.readonly = true;\r\n        }\r\n\r\n\r\n        let fieldInstance = $.extend(true, {\r\n            render:        function () {},\r\n            renderContent: function () {},\r\n            init:          function () {},\r\n            getValue:      function () {},\r\n            setValue:      function () {},\r\n            getOptions:    function () {},\r\n            show:          function () {},\r\n            hide:          function () {},\r\n            readonly:      function () {},\r\n            validate:      function () {},\r\n            isValid:       function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        fieldInstance.init(this, field, this._fieldsIndex++);\r\n\r\n        this._fields.push(fieldInstance);\r\n\r\n        return fieldInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация группы\r\n     * @param group\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initGroup: function (group) {\r\n\r\n        if (typeof group !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = group.hasOwnProperty('type') && typeof group.type === 'string' ? group.type : '';\r\n\r\n        if (type !== 'group') {\r\n            return null;\r\n        }\r\n\r\n        let groupInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            expand:     function () {},\r\n            collapse:   function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        groupInstance.init(this, group, this._groupsIndex++);\r\n\r\n        this._groups.push(groupInstance);\r\n\r\n        return groupInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация контролов\r\n     * @param control\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initControl: function (control) {\r\n\r\n        if (typeof control !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : null;\r\n\r\n        if ( ! type || ! coreuiForm$1.controls.hasOwnProperty(type)) {\r\n            return null;\r\n        }\r\n\r\n        if (type === 'submit' && this._options.readonly) {\r\n            control.show = false;\r\n        }\r\n\r\n\r\n        let controlInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            show:       function () {},\r\n            hide:       function () {},\r\n        }, coreuiForm$1.controls[type]);\r\n\r\n        controlInstance.init(this, control, this._controlsIndex++);\r\n\r\n        this._controls.push(controlInstance);\r\n\r\n        return controlInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение настроек языка\r\n     * @private\r\n     */\r\n    getLang: function () {\r\n\r\n        return coreuiForm$1.lang.hasOwnProperty(this._options.lang)\r\n            ? coreuiForm$1.lang[this._options.lang]\r\n            : coreuiForm$1.lang['ru'];\r\n    },\r\n\r\n\r\n    /**\r\n     * @param name\r\n     * @param context\r\n     * @param params\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _trigger: function(name, context, params) {\r\n\r\n        params = params || [];\r\n        let results = [];\r\n\r\n        if (this._events[name] instanceof Object && this._events[name].length > 0) {\r\n            for (var i = 0; i < this._events[name].length; i++) {\r\n                let callback = this._events[name][i].callback;\r\n\r\n                context = context || this._events[name][i].context;\r\n\r\n                results.push(\r\n                    callback.apply(context, params)\r\n                );\r\n\r\n                if (this._events[name][i].singleExec) {\r\n                    this._events[name].splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n\r\n    /**\r\n     * @param {object} control\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderControl: function (control) {\r\n\r\n        let content = '';\r\n        let type    = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : 'text';\r\n\r\n        if (coreuiForm$1.control.hasOwnProperty(type)) {\r\n            content = coreuiForm$1.control[type].render(control);\r\n        }\r\n\r\n        return content;\r\n    }\r\n};\n\nvar coreuiForm$1 = {\r\n\r\n    lang: {},\r\n    fields: {},\r\n    controls: {},\r\n\r\n    _instances: {},\r\n    _settings: {\r\n        labelWidth: 200,\r\n        lang: 'en',\r\n        class: '',\r\n        sendDataFormat: 'form',\r\n        errorMessageScrollOffset: 70\r\n    },\r\n\r\n\r\n    /**\r\n     * Создание экземпляра формы\r\n     * @param {object} options\r\n     * @returns {coreuiFormInstance}\r\n     */\r\n    create: function (options) {\r\n\r\n        let instance = $.extend(true, {}, coreuiFormInstance);\r\n        instance._init(options instanceof Object ? options : {});\r\n\r\n        let formId = instance.getId();\r\n        this._instances[formId] = instance;\r\n\r\n        return instance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение экземпляра формы по id\r\n     * @param {string} id\r\n     * @returns {coreuiFormInstance|null}\r\n     */\r\n    get: function (id) {\r\n\r\n        if ( ! this._instances.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        if ($('#coreui-form-' + this._instances[id])[0]) {\r\n            delete this._instances[id];\r\n            return null;\r\n        }\r\n\r\n        return this._instances[id];\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка настроек\r\n     * @param {object} settings\r\n     */\r\n    setSettings: function(settings) {\r\n\r\n        this._settings = $.extend({}, this._settings, settings);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения настройки\r\n     * @param {string} name\r\n     */\r\n    getSetting: function(name) {\r\n\r\n        let value = null;\r\n\r\n        if (this._settings.hasOwnProperty(name)) {\r\n            value = this._settings[name];\r\n        }\r\n\r\n        return value;\r\n    }\r\n};\n\ncoreuiForm$1.lang.ru = {\r\n    \"modal_select\": \"Выбрать\",\r\n    \"modal_loading\": \"Загрузка...\",\r\n    \"switch_yes\": \"Да\",\r\n    \"switch_no\": \"Нет\",\r\n    \"dataset_add\": \"Добавить\",\r\n    \"date_months\": ['Январь','Февраль','Март','Апрель','Май','Июнь', 'Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\r\n    \"date_week\": \"неделя\",\r\n    \"send_error\": \"Произошла ошибка. Попробуйте снова или обратитесь к администратору\",\r\n    \"required_field\": \"Обязательное поле\",\r\n    \"repeat\": \"повторите\",\r\n    \"change\": \"изменить\",\r\n    \"cancel\": \"отмена\"\r\n};\n\ncoreuiForm$1.lang.en = {\r\n    \"modal_select\": \"Select\",\r\n    \"modal_loading\": \"Loading...\",\r\n    \"switch_yes\": \"Yes\",\r\n    \"switch_no\": \"No\",\r\n    \"dataset_add\": \"Add\",\r\n    \"date_months\": [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\r\n    \"date_week\": \"week\",\r\n    \"send_error\": \"An error has occurred. Please try again or contact your administrator\",\r\n    \"required_field\": \"Required field\",\r\n    \"repeat\": \"repeat\",\r\n    \"change\": \"change\",\r\n    \"cancel\": \"cancel\"\r\n};\n\ncoreuiForm$1.controls.button = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'button',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-secondary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'button';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            coreuiFormUtils.eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.custom = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'custom',\r\n        content: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form   = form;\r\n        this._index   = index;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return this._options.content;\r\n    }\r\n};\n\ncoreuiForm$1.controls.link = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'link',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-link'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/link.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > a')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            coreuiFormUtils.eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.submit = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'submit',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        show: true,\r\n        attr: {\r\n            class: 'btn btn-sm btn-primary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    unlock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        button.find('.spinner-border').remove();\r\n        button.removeAttr('disabled');\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'submit';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            coreuiFormUtils.eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.checkbox = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'checkbox',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: null,\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {object}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let values = [];\r\n\r\n            $('.content-' + this._hash + ' input[type=checkbox]:checked').each(function () {\r\n                values.push($(this).val());\r\n            });\r\n\r\n            return values;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значений в поле\r\n     * @param {object|null|string|number} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=radio]').prop('checked', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' input[type=radio]').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('checked', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that            = this;\r\n        let checkboxOptions = [];\r\n        let fieldOptions    = this.getOptions();\r\n        let selectedItems   = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'checkbox',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils.hashCode();\r\n\r\n                if (typeof(that._value) === 'object' &&\r\n                    Array.isArray(that._value)\r\n                ) {\r\n                    $.each(that._value, function (key, itemValue) {\r\n                        if (itemValue == option.value) {\r\n                            itemAttr.checked = 'checked';\r\n                            if (option.hasOwnProperty('text') && option.text) {\r\n                                selectedItems.push(option.text);\r\n                            }\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                } else if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItems.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                checkboxOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        let value = typeof this._value === 'object' && Array.isArray(this._value)\r\n            ? this._value.join(', ')\r\n            : this._value;\r\n\r\n        return ejs.render(tpl['fields/checkbox.html'], {\r\n            field: fieldOptions,\r\n            value: value,\r\n            render: {\r\n                options: checkboxOptions,\r\n                selectedItems: selectedItems\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.color = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'color',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-color d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            value: this._value\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.custom = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _options: {\r\n        type: 'custom',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        content: '',\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     */\r\n    getValue: function () {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options         = this.getOptions();\r\n        let content         = '';\r\n        let alloyComponents = [\r\n            'coreui.table',\r\n            'coreui.layout',\r\n            'coreui.panel',\r\n            'coreui.tabs',\r\n            'coreui.info',\r\n            'coreui.chart',\r\n        ];\r\n\r\n        if (typeof options.content === 'string') {\r\n            content = options.content;\r\n\r\n        } else if (options.content instanceof Object) {\r\n            if ( ! Array.isArray(options.content)) {\r\n                options.content = [ options.content ];\r\n            }\r\n\r\n            let components = [];\r\n\r\n            for (let i = 0; i < options.content.length; i++) {\r\n                if (typeof options.content[i] === 'string') {\r\n                    components.push(options.content[i]);\r\n\r\n                } else if ( ! Array.isArray(options.content[i]) &&\r\n                        options.content[i].hasOwnProperty('component') &&\r\n                        alloyComponents.indexOf(options.content[i].component) >= 0\r\n                ) {\r\n                    let name = options.content[i].component.split('.')[1];\r\n\r\n                    if (CoreUI.hasOwnProperty(name) &&\r\n                        typeof CoreUI[name] === \"object\" &&\r\n                        CoreUI[name] !== null &&\r\n                        ! Array.isArray(CoreUI[name])\r\n                    ) {\r\n                        let instance = CoreUI[name].create(options.content[i]);\r\n                        components.push(instance.render());\r\n\r\n                        this._form.on('shown.coreui.form', instance.initEvents, instance, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            content = components.join('');\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/custom.html'], {\r\n            content: content\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.dataset = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: [],\r\n    _renderOptions: [],\r\n    _options: {\r\n        type: 'dataset',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let name = option.hasOwnProperty('name') && ['string', 'number'].indexOf(typeof (option.name)) >= 0\r\n                    ? option.name\r\n                    : '';\r\n                let type = option.hasOwnProperty('type') && typeof (option.type) === 'string'\r\n                    ? option.type\r\n                    : 'text';\r\n                let attributes = option.hasOwnProperty('attr') && typeof (option.attr) === 'object' && ! Array.isArray(option.attr)\r\n                    ? option.attr\r\n                    : {};\r\n                let items = option.hasOwnProperty('items') && typeof (option.items) === 'object' && Array.isArray(option.items)\r\n                    ? option.items\r\n                    : [];\r\n                let valueY = option.hasOwnProperty('valueY') && ['string', 'numeric'].indexOf(typeof (option.valueY)) >= 0\r\n                    ? option.valueY\r\n                    : 'Y';\r\n                let valueN = option.hasOwnProperty('valueN') && ['string', 'numeric'].indexOf(typeof (option.valueN)) >= 0\r\n                    ? option.valueN\r\n                    : 'N';\r\n\r\n                if (name) {\r\n                    attributes.name = name;\r\n                }\r\n                if (options.required) {\r\n                    attributes.required = 'required';\r\n                }\r\n\r\n                if (type === 'select') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-select form-select-sm ' + attributes.class\r\n                        : 'form-select form-select-sm';\r\n\r\n                } else if (type === 'switch') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-check-input ' + attributes.class\r\n                        : 'form-check-input';\r\n\r\n                    attributes.type = 'checkbox';\r\n                    attributes.value = valueY;\r\n\r\n                } else {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-control form-control-sm ' + attributes.class\r\n                        : 'form-control form-control-sm';\r\n\r\n                    attributes.type = type;\r\n                }\r\n\r\n\r\n                that._renderOptions.push({\r\n                    type  : type,\r\n                    name  : name,\r\n                    attr  : attributes,\r\n                    items : items,\r\n                    valueY: valueY,\r\n                    valueN: valueN,\r\n                });\r\n            });\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {array}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let container = $('.content-' + this._hash);\r\n            let data      = [];\r\n\r\n            $('.coreui-form__field-dataset-list .coreui-form__field-dataset-item', container).each(function () {\r\n                let items = {};\r\n\r\n                $.each($(this).find('input, select').serializeArray(), function (key, item) {\r\n                    if (item.name) {\r\n                        items[item.name] = item.value;\r\n                    }\r\n                });\r\n\r\n                data.push(items);\r\n            });\r\n\r\n            return data;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (typeof value !== 'object' ||\r\n            Array.isArray(value) ||\r\n            value === null\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this._value.push(value);\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash + ' .coreui-form__field-dataset-list').append(\r\n                this._renderRowReadonly(value)\r\n            );\r\n        } else {\r\n            this._eventAdd(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление всех строк\r\n     */\r\n    removeItems: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' .coreui-form__field-dataset-list').empty();\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление строки по id\r\n     * @param {int} itemId\r\n     */\r\n    removeItem: function (itemId) {\r\n\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        $('#' + itemId).hide('fast', function () {\r\n            $('#' + itemId).remove();\r\n\r\n            if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n                $(element + ' .coreui-form__field-dataset-container').hide();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRow(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRowReadonly(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        // Кнопка удаления\r\n        $(element + ' .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n\r\n        // Кнопка добавления\r\n        $(element + ' .btn-dataset-add').click(function () {\r\n            that._eventAdd();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Событие добавления\r\n     */\r\n    _eventAdd: function (row) {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n        row = row || {};\r\n\r\n        if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n            $(element + ' .coreui-form__field-dataset-container').show();\r\n        }\r\n\r\n        $(element + ' .coreui-form__field-dataset-list').append(this._renderRow(row));\r\n        $(element + ' .coreui-form__field-dataset-item:last-child .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRow: function (row) {\r\n\r\n        let rowOptions  = [];\r\n        let itemOptions = [];\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let cellValue = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n                    let itemAttr = {};\r\n\r\n\r\n                    $.each(item, function (name, value) {\r\n                        if (name !== 'title') {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    });\r\n\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemAttr.selected = 'selected';\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemAttr.selected = 'selected';\r\n                    }\r\n\r\n                    let attributes = [];\r\n                    $.each(itemAttr, function (name, value) {\r\n                        attributes.push(name + '=\"' + value + '\"');\r\n                    });\r\n\r\n                    itemOptions.push({\r\n                        attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                        title: title\r\n                    });\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                if (cellValue == option.valueY) {\r\n                    option.attr.checked = 'checked';\r\n                }\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    option.attr.value = cellValue !== null ? cellValue : '';\r\n                }\r\n            }\r\n\r\n            let attributes = [];\r\n\r\n            $.each(option.attr, function (name, value) {\r\n                attributes.push(name + '=\"' + value + '\"');\r\n            });\r\n\r\n            rowOptions.push({\r\n                type: option.type,\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                items: itemOptions\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row.html'], {\r\n            hashItem: coreuiFormUtils.hashCode(),\r\n            options: rowOptions,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRowReadonly: function (row) {\r\n\r\n        let rowOptions = [];\r\n        let lang       = this._form.getLang();\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let optionValue = '';\r\n            let cellValue   = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                let itemOptions = [];\r\n\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemOptions.push(itemValue);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemOptions.push(cellValue);\r\n                    }\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                let valueY = 'Y';\r\n\r\n                if (option.hasOwnProperty('valueY')) {\r\n                    valueY = option.valueY;\r\n                }\r\n\r\n                optionValue = cellValue == valueY\r\n                    ? lang.switch_yes\r\n                    : lang.switch_no;\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    optionValue = cellValue;\r\n\r\n                    switch (option.type) {\r\n                        case 'date':           optionValue = coreuiFormUtils.formatDate(optionValue); break;\r\n                        case 'datetime-local': optionValue = coreuiFormUtils.formatDateTime(optionValue); break;\r\n                        case 'month':          optionValue = coreuiFormUtils.formatDateMonth(optionValue, lang); break;\r\n                        case 'week':           optionValue = coreuiFormUtils.formatDateWeek(optionValue, lang); break;\r\n                        default: optionValue = cellValue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            rowOptions.push({\r\n                value: optionValue\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row-readonly.html'], {\r\n            options: rowOptions,\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.group = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _options: {\r\n        type: 'group',\r\n        label: '',\r\n        show: true,\r\n        showCollapsible: true,\r\n        fields: [],\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-group-\" + index;\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие группы\r\n     * @param {int} duration\r\n     */\r\n    collapse: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-down');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-right');\r\n\r\n        $(container + ' .coreui-form__group_content').slideUp(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ группы\r\n     * @param {int} duration\r\n     */\r\n    expand: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-right');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-down');\r\n\r\n        $(container + ' .coreui-form__group_content').slideDown(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-group.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            group: this._options,\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {string}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fields = [];\r\n        let that   = this;\r\n\r\n        $.each(this._options.fields, function (key, field) {\r\n\r\n            let fieldInstance = that._form.initField(field);\r\n\r\n            if (typeof fieldInstance !== 'object') {\r\n                return;\r\n            }\r\n\r\n            fields.push(fieldInstance.render());\r\n        });\r\n\r\n        return fields.join('');\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.showCollapsible) {\r\n            let that      = this;\r\n            let container = '#coreui-form-' + this._id;\r\n\r\n            $(container + ' > .coreui-form__group_label .btn-collapsible').click(function () {\r\n\r\n                if ($(container + ' > .coreui-form__group_content').is(':visible')) {\r\n                    that.collapse(80);\r\n                } else {\r\n                    that.expand(80);\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.hidden = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'hidden',\r\n        name: null,\r\n        attr: {},\r\n        required: null,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('#coreui-form-' + this._id).val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if ( ! this._options.readonly) {\r\n            $('#coreui-form-' + this._id).val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-content.html'], {\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n\r\n        options.attr.id = 'coreui-form-' + this._id;\r\n\r\n        if (options.name) {\r\n            options.attr.name = options.name;\r\n        }\r\n\r\n        options.attr.type  = 'hidden';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/hidden.html'], {\r\n            value: this._value !== null ? this._value : '',\r\n            field: options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.input = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'text',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\n/**\n * jquery.mask.js\n * @version: v1.14.16\n * @author: Igor Escobar\n *\n * Created by Igor Escobar on 2012-03-10. Please report any bug at github.com/igorescobar/jQuery-Mask-Plugin\n *\n * Copyright (c) 2012 Igor Escobar http://igorescobar.com\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* jshint laxbreak: true */\n/* jshint maxcomplexity:17 */\n/* global define */\n\n// UMD (Universal Module Definition) patterns for JavaScript modules that work everywhere.\n// https://github.com/umdjs/umd/blob/master/templates/jqueryPlugin.js\n(function (factory, jQuery, Zepto) {\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object' && typeof Meteor === 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery || Zepto);\n    }\n\n}(function ($) {\n    'use strict';\n\n    var Mask = function (el, mask, options) {\n\n        var p = {\n            invalid: [],\n            getCaret: function () {\n                try {\n                    var sel,\n                        pos = 0,\n                        ctrl = el.get(0),\n                        dSel = document.selection,\n                        cSelStart = ctrl.selectionStart;\n\n                    // IE Support\n                    if (dSel && navigator.appVersion.indexOf('MSIE 10') === -1) {\n                        sel = dSel.createRange();\n                        sel.moveStart('character', -p.val().length);\n                        pos = sel.text.length;\n                    }\n                    // Firefox support\n                    else if (cSelStart || cSelStart === '0') {\n                        pos = cSelStart;\n                    }\n\n                    return pos;\n                } catch (e) {}\n            },\n            setCaret: function(pos) {\n                try {\n                    if (el.is(':focus')) {\n                        var range, ctrl = el.get(0);\n\n                        // Firefox, WebKit, etc..\n                        if (ctrl.setSelectionRange) {\n                            ctrl.setSelectionRange(pos, pos);\n                        } else { // IE\n                            range = ctrl.createTextRange();\n                            range.collapse(true);\n                            range.moveEnd('character', pos);\n                            range.moveStart('character', pos);\n                            range.select();\n                        }\n                    }\n                } catch (e) {}\n            },\n            events: function() {\n                el\n                .on('keydown.mask', function(e) {\n                    el.data('mask-keycode', e.keyCode || e.which);\n                    el.data('mask-previus-value', el.val());\n                    el.data('mask-previus-caret-pos', p.getCaret());\n                    p.maskDigitPosMapOld = p.maskDigitPosMap;\n                })\n                .on($.jMaskGlobals.useInput ? 'input.mask' : 'keyup.mask', p.behaviour)\n                .on('paste.mask drop.mask', function() {\n                    setTimeout(function() {\n                        el.keydown().keyup();\n                    }, 100);\n                })\n                .on('change.mask', function(){\n                    el.data('changed', true);\n                })\n                .on('blur.mask', function(){\n                    if (oldValue !== p.val() && !el.data('changed')) {\n                        el.trigger('change');\n                    }\n                    el.data('changed', false);\n                })\n                // it's very important that this callback remains in this position\n                // otherwhise oldValue it's going to work buggy\n                .on('blur.mask', function() {\n                    oldValue = p.val();\n                })\n                // select all text on focus\n                .on('focus.mask', function (e) {\n                    if (options.selectOnFocus === true) {\n                        $(e.target).select();\n                    }\n                })\n                // clear the value if it not complete the mask\n                .on('focusout.mask', function() {\n                    if (options.clearIfNotMatch && !regexMask.test(p.val())) {\n                       p.val('');\n                   }\n                });\n            },\n            getRegexMask: function() {\n                var maskChunks = [], translation, pattern, optional, recursive, oRecursive, r;\n\n                for (var i = 0; i < mask.length; i++) {\n                    translation = jMask.translation[mask.charAt(i)];\n\n                    if (translation) {\n\n                        pattern = translation.pattern.toString().replace(/.{1}$|^.{1}/g, '');\n                        optional = translation.optional;\n                        recursive = translation.recursive;\n\n                        if (recursive) {\n                            maskChunks.push(mask.charAt(i));\n                            oRecursive = {digit: mask.charAt(i), pattern: pattern};\n                        } else {\n                            maskChunks.push(!optional && !recursive ? pattern : (pattern + '?'));\n                        }\n\n                    } else {\n                        maskChunks.push(mask.charAt(i).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n                    }\n                }\n\n                r = maskChunks.join('');\n\n                if (oRecursive) {\n                    r = r.replace(new RegExp('(' + oRecursive.digit + '(.*' + oRecursive.digit + ')?)'), '($1)?')\n                         .replace(new RegExp(oRecursive.digit, 'g'), oRecursive.pattern);\n                }\n\n                return new RegExp(r);\n            },\n            destroyEvents: function() {\n                el.off(['input', 'keydown', 'keyup', 'paste', 'drop', 'blur', 'focusout', ''].join('.mask '));\n            },\n            val: function(v) {\n                var isInput = el.is('input'),\n                    method = isInput ? 'val' : 'text',\n                    r;\n\n                if (arguments.length > 0) {\n                    if (el[method]() !== v) {\n                        el[method](v);\n                    }\n                    r = el;\n                } else {\n                    r = el[method]();\n                }\n\n                return r;\n            },\n            calculateCaretPosition: function(oldVal) {\n                var newVal = p.getMasked(),\n                    caretPosNew = p.getCaret();\n                if (oldVal !== newVal) {\n                    var caretPosOld = el.data('mask-previus-caret-pos') || 0,\n                        newValL = newVal.length,\n                        oldValL = oldVal.length,\n                        maskDigitsBeforeCaret = 0,\n                        maskDigitsAfterCaret = 0,\n                        maskDigitsBeforeCaretAll = 0,\n                        maskDigitsBeforeCaretAllOld = 0,\n                        i = 0;\n\n                    for (i = caretPosNew; i < newValL; i++) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsAfterCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsBeforeCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMap[i]) {\n                            maskDigitsBeforeCaretAll++;\n                        }\n                    }\n\n                    for (i = caretPosOld - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMapOld[i]) {\n                            maskDigitsBeforeCaretAllOld++;\n                        }\n                    }\n\n                    // if the cursor is at the end keep it there\n                    if (caretPosNew > oldValL) {\n                      caretPosNew = newValL * 10;\n                    } else if (caretPosOld >= caretPosNew && caretPosOld !== oldValL) {\n                        if (!p.maskDigitPosMapOld[caretPosNew])  {\n                          var caretPos = caretPosNew;\n                          caretPosNew -= maskDigitsBeforeCaretAllOld - maskDigitsBeforeCaretAll;\n                          caretPosNew -= maskDigitsBeforeCaret;\n                          if (p.maskDigitPosMap[caretPosNew])  {\n                            caretPosNew = caretPos;\n                          }\n                        }\n                    }\n                    else if (caretPosNew > caretPosOld) {\n                        caretPosNew += maskDigitsBeforeCaretAll - maskDigitsBeforeCaretAllOld;\n                        caretPosNew += maskDigitsAfterCaret;\n                    }\n                }\n                return caretPosNew;\n            },\n            behaviour: function(e) {\n                e = e || window.event;\n                p.invalid = [];\n\n                var keyCode = el.data('mask-keycode');\n\n                if ($.inArray(keyCode, jMask.byPassKeys) === -1) {\n                    var newVal = p.getMasked(),\n                        caretPos = p.getCaret(),\n                        oldVal = el.data('mask-previus-value') || '';\n\n                    // this is a compensation to devices/browsers that don't compensate\n                    // caret positioning the right way\n                    setTimeout(function() {\n                      p.setCaret(p.calculateCaretPosition(oldVal));\n                    }, $.jMaskGlobals.keyStrokeCompensation);\n\n                    p.val(newVal);\n                    p.setCaret(caretPos);\n                    return p.callbacks(e);\n                }\n            },\n            getMasked: function(skipMaskChars, val) {\n                var buf = [],\n                    value = val === undefined ? p.val() : val + '',\n                    m = 0, maskLen = mask.length,\n                    v = 0, valLen = value.length,\n                    offset = 1, addMethod = 'push',\n                    resetPos = -1,\n                    maskDigitCount = 0,\n                    maskDigitPosArr = [],\n                    lastMaskChar,\n                    check;\n\n                if (options.reverse) {\n                    addMethod = 'unshift';\n                    offset = -1;\n                    lastMaskChar = 0;\n                    m = maskLen - 1;\n                    v = valLen - 1;\n                    check = function () {\n                        return m > -1 && v > -1;\n                    };\n                } else {\n                    lastMaskChar = maskLen - 1;\n                    check = function () {\n                        return m < maskLen && v < valLen;\n                    };\n                }\n\n                var lastUntranslatedMaskChar;\n                while (check()) {\n                    var maskDigit = mask.charAt(m),\n                        valDigit = value.charAt(v),\n                        translation = jMask.translation[maskDigit];\n\n                    if (translation) {\n                        if (valDigit.match(translation.pattern)) {\n                            buf[addMethod](valDigit);\n                             if (translation.recursive) {\n                                if (resetPos === -1) {\n                                    resetPos = m;\n                                } else if (m === lastMaskChar && m !== resetPos) {\n                                    m = resetPos - offset;\n                                }\n\n                                if (lastMaskChar === resetPos) {\n                                    m -= offset;\n                                }\n                            }\n                            m += offset;\n                        } else if (valDigit === lastUntranslatedMaskChar) {\n                            // matched the last untranslated (raw) mask character that we encountered\n                            // likely an insert offset the mask character from the last entry; fall\n                            // through and only increment v\n                            maskDigitCount--;\n                            lastUntranslatedMaskChar = undefined;\n                        } else if (translation.optional) {\n                            m += offset;\n                            v -= offset;\n                        } else if (translation.fallback) {\n                            buf[addMethod](translation.fallback);\n                            m += offset;\n                            v -= offset;\n                        } else {\n                          p.invalid.push({p: v, v: valDigit, e: translation.pattern});\n                        }\n                        v += offset;\n                    } else {\n                        if (!skipMaskChars) {\n                            buf[addMethod](maskDigit);\n                        }\n\n                        if (valDigit === maskDigit) {\n                            maskDigitPosArr.push(v);\n                            v += offset;\n                        } else {\n                            lastUntranslatedMaskChar = maskDigit;\n                            maskDigitPosArr.push(v + maskDigitCount);\n                            maskDigitCount++;\n                        }\n\n                        m += offset;\n                    }\n                }\n\n                var lastMaskCharDigit = mask.charAt(lastMaskChar);\n                if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {\n                    buf.push(lastMaskCharDigit);\n                }\n\n                var newVal = buf.join('');\n                p.mapMaskdigitPositions(newVal, maskDigitPosArr, valLen);\n                return newVal;\n            },\n            mapMaskdigitPositions: function(newVal, maskDigitPosArr, valLen) {\n              var maskDiff = options.reverse ? newVal.length - valLen : 0;\n              p.maskDigitPosMap = {};\n              for (var i = 0; i < maskDigitPosArr.length; i++) {\n                p.maskDigitPosMap[maskDigitPosArr[i] + maskDiff] = 1;\n              }\n            },\n            callbacks: function (e) {\n                var val = p.val(),\n                    changed = val !== oldValue,\n                    defaultArgs = [val, e, el, options],\n                    callback = function(name, criteria, args) {\n                        if (typeof options[name] === 'function' && criteria) {\n                            options[name].apply(this, args);\n                        }\n                    };\n\n                callback('onChange', changed === true, defaultArgs);\n                callback('onKeyPress', changed === true, defaultArgs);\n                callback('onComplete', val.length === mask.length, defaultArgs);\n                callback('onInvalid', p.invalid.length > 0, [val, e, el, p.invalid, options]);\n            }\n        };\n\n        el = $(el);\n        var jMask = this, oldValue = p.val(), regexMask;\n\n        mask = typeof mask === 'function' ? mask(p.val(), undefined, el,  options) : mask;\n\n        // public methods\n        jMask.mask = mask;\n        jMask.options = options;\n        jMask.remove = function() {\n            var caret = p.getCaret();\n            if (jMask.options.placeholder) {\n                el.removeAttr('placeholder');\n            }\n            if (el.data('mask-maxlength')) {\n                el.removeAttr('maxlength');\n            }\n            p.destroyEvents();\n            p.val(jMask.getCleanVal());\n            p.setCaret(caret);\n            return el;\n        };\n\n        // get value without mask\n        jMask.getCleanVal = function() {\n           return p.getMasked(true);\n        };\n\n        // get masked value without the value being in the input or element\n        jMask.getMaskedVal = function(val) {\n           return p.getMasked(false, val);\n        };\n\n       jMask.init = function(onlyMask) {\n            onlyMask = onlyMask || false;\n            options = options || {};\n\n            jMask.clearIfNotMatch  = $.jMaskGlobals.clearIfNotMatch;\n            jMask.byPassKeys       = $.jMaskGlobals.byPassKeys;\n            jMask.translation      = $.extend({}, $.jMaskGlobals.translation, options.translation);\n\n            jMask = $.extend(true, {}, jMask, options);\n\n            regexMask = p.getRegexMask();\n\n            if (onlyMask) {\n                p.events();\n                p.val(p.getMasked());\n            } else {\n                if (options.placeholder) {\n                    el.attr('placeholder' , options.placeholder);\n                }\n\n                // this is necessary, otherwise if the user submit the form\n                // and then press the \"back\" button, the autocomplete will erase\n                // the data. Works fine on IE9+, FF, Opera, Safari.\n                if (el.data('mask')) {\n                  el.attr('autocomplete', 'off');\n                }\n\n                // detect if is necessary let the user type freely.\n                // for is a lot faster than forEach.\n                for (var i = 0, maxlength = true; i < mask.length; i++) {\n                    var translation = jMask.translation[mask.charAt(i)];\n                    if (translation && translation.recursive) {\n                        maxlength = false;\n                        break;\n                    }\n                }\n\n                if (maxlength) {\n                    el.attr('maxlength', mask.length).data('mask-maxlength', true);\n                }\n\n                p.destroyEvents();\n                p.events();\n\n                var caret = p.getCaret();\n                p.val(p.getMasked());\n                p.setCaret(caret);\n            }\n        };\n\n        jMask.init(!el.is('input'));\n    };\n\n    $.maskWatchers = {};\n    var HTMLAttributes = function () {\n        var input = $(this),\n            options = {},\n            prefix = 'data-mask-',\n            mask = input.attr('data-mask');\n\n        if (input.attr(prefix + 'reverse')) {\n            options.reverse = true;\n        }\n\n        if (input.attr(prefix + 'clearifnotmatch')) {\n            options.clearIfNotMatch = true;\n        }\n\n        if (input.attr(prefix + 'selectonfocus') === 'true') {\n           options.selectOnFocus = true;\n        }\n\n        if (notSameMaskObject(input, mask, options)) {\n            return input.data('mask', new Mask(this, mask, options));\n        }\n    },\n    notSameMaskObject = function(field, mask, options) {\n        options = options || {};\n        var maskObject = $(field).data('mask'),\n            stringify = JSON.stringify,\n            value = $(field).val() || $(field).text();\n        try {\n            if (typeof mask === 'function') {\n                mask = mask(value);\n            }\n            return typeof maskObject !== 'object' || stringify(maskObject.options) !== stringify(options) || maskObject.mask !== mask;\n        } catch (e) {}\n    },\n    eventSupported = function(eventName) {\n        var el = document.createElement('div'), isSupported;\n\n        eventName = 'on' + eventName;\n        isSupported = (eventName in el);\n\n        if ( !isSupported ) {\n            el.setAttribute(eventName, 'return;');\n            isSupported = typeof el[eventName] === 'function';\n        }\n        el = null;\n\n        return isSupported;\n    };\n\n    $.fn.mask = function(mask, options) {\n        options = options || {};\n        var selector = this.selector,\n            globals = $.jMaskGlobals,\n            interval = globals.watchInterval,\n            watchInputs = options.watchInputs || globals.watchInputs,\n            maskFunction = function() {\n                if (notSameMaskObject(this, mask, options)) {\n                    return $(this).data('mask', new Mask(this, mask, options));\n                }\n            };\n\n        $(this).each(maskFunction);\n\n        if (selector && selector !== '' && watchInputs) {\n            clearInterval($.maskWatchers[selector]);\n            $.maskWatchers[selector] = setInterval(function(){\n                $(document).find(selector).each(maskFunction);\n            }, interval);\n        }\n        return this;\n    };\n\n    $.fn.masked = function(val) {\n        return this.data('mask').getMaskedVal(val);\n    };\n\n    $.fn.unmask = function() {\n        clearInterval($.maskWatchers[this.selector]);\n        delete $.maskWatchers[this.selector];\n        return this.each(function() {\n            var dataMask = $(this).data('mask');\n            if (dataMask) {\n                dataMask.remove().removeData('mask');\n            }\n        });\n    };\n\n    $.fn.cleanVal = function() {\n        return this.data('mask').getCleanVal();\n    };\n\n    $.applyDataMask = function(selector) {\n        selector = selector || $.jMaskGlobals.maskElements;\n        var $selector = (selector instanceof $) ? selector : $(selector);\n        $selector.filter($.jMaskGlobals.dataMaskAttr).each(HTMLAttributes);\n    };\n\n    var globals = {\n        maskElements: 'input,td,span,div',\n        dataMaskAttr: '*[data-mask]',\n        dataMask: true,\n        watchInterval: 300,\n        watchInputs: true,\n        keyStrokeCompensation: 10,\n        // old versions of chrome dont work great with input event\n        useInput: !/Chrome\\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && eventSupported('input'),\n        watchDataMask: false,\n        byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91],\n        translation: {\n            '0': {pattern: /\\d/},\n            '9': {pattern: /\\d/, optional: true},\n            '#': {pattern: /\\d/, recursive: true},\n            'A': {pattern: /[a-zA-Z0-9]/},\n            'S': {pattern: /[a-zA-Z]/}\n        }\n    };\n\n    $.jMaskGlobals = $.jMaskGlobals || {};\n    globals = $.jMaskGlobals = $.extend(true, {}, globals, $.jMaskGlobals);\n\n    // looking for inputs with data-mask attribute\n    if (globals.dataMask) {\n        $.applyDataMask();\n    }\n\n    setInterval(function() {\n        if ($.jMaskGlobals.watchDataMask) {\n            $.applyDataMask();\n        }\n    }, globals.watchInterval);\n}, window.jQuery, window.Zepto));\n\ncoreuiForm$1.fields.mask = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'mask',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        value = value.replace(/[^\\d\\w]/g, '');\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'text';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : ''\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' input')\r\n            .mask(this._options.mask, this._options.options);\r\n    }\r\n};\n\ncoreuiForm$1.fields.modal = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: '',\r\n    _text: '',\r\n    _options: {\r\n        type: 'modal',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        fields: [],\r\n        options: {\r\n            title: '',\r\n            size: 'lg',\r\n            url: '',\r\n            onHidden: null,\r\n            onClear: null,\r\n            onChange: null,\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n\r\n        if (typeof options.name === 'string' &&\r\n            formRecord.hasOwnProperty(options.name) &&\r\n            ['object'].indexOf(typeof formRecord[options.name]) >= 0\r\n        ) {\r\n            let record = formRecord[options.name];\r\n\r\n            this._value = record.hasOwnProperty('value') && ['number', 'string'].indexOf(typeof(record.value)) >= 0 ? record.value : '';\r\n            this._text  = record.hasOwnProperty('text') && ['number', 'string'].indexOf(typeof(record.text)) >= 0 ? record.text : '';\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input.coreui-form-modal-value').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     * @param {string} text\r\n     */\r\n    setValue: function (value, text) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(text);\r\n\r\n        } else {\r\n            let elementValue = $('.content-' + this._hash + ' .coreui-form-modal-value');\r\n            let elementText  = $('.content-' + this._hash + ' .coreui-form-modal-text');\r\n            let oldValue     = elementValue.val();\r\n\r\n            elementValue.val(value);\r\n            elementText.val(text);\r\n\r\n\r\n            if (oldValue != value) {\r\n                let modal = this._options.hasOwnProperty('options') && typeof (this._options.options) === 'object'\r\n                    ? this._options.options\r\n                    : {};\r\n\r\n                if (modal.hasOwnProperty('onChange')) {\r\n                    if (typeof(modal.onChange) === 'function') {\r\n                        modal.onChange(this);\r\n\r\n                    } else if (typeof(modal.onChange) === 'string') {\r\n                        let func = coreuiFormUtils.getFunctionByName(modal.onChange);\r\n\r\n                        if (typeof func === 'function') {\r\n                            func(this);\r\n                        } else {\r\n                            coreuiFormUtils.eval(modal.onChange);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this._form._trigger('change-modal.coreui.form', this, [this]);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fieldOptions = this.getOptions();\r\n        let attributes   = [];\r\n        let textAttr     = {\r\n            type: 'text',\r\n            readonly: 'readonly',\r\n            class: 'form-control form-control-sm coreui-form-modal-text',\r\n            value: this._text !== null ? this._text : ''\r\n        };\r\n\r\n        if (fieldOptions.required) {\r\n            textAttr.required = 'required';\r\n        }\r\n\r\n        if (fieldOptions.hasOwnProperty('attr') &&\r\n            typeof fieldOptions.attr === 'object' &&\r\n            Array.isArray(fieldOptions.attr)\r\n        ) {\r\n            textAttr = coreuiFormUtils.mergeAttr(textAttr, fieldOptions.attr);\r\n        }\r\n\r\n        $.each(textAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/modal.html'], {\r\n            field: fieldOptions,\r\n            value: this._value !== null ? this._value : '',\r\n            text: this._text !== null ? this._text : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                width: this._options.width,\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that  = this;\r\n        let modal = this._options.hasOwnProperty('options') && typeof(this._options.options) === 'object'\r\n            ? this._options.options\r\n            : {};\r\n\r\n\r\n        // Очистка\r\n        $('.content-' + this._hash + ' .btn-modal-clear').click(function (e) {\r\n            if (modal.hasOwnProperty('onClear')) {\r\n                if (typeof(modal.onClear) === 'function') {\r\n                    modal.onClear(that);\r\n\r\n                } else if (typeof(modal.onClear) === 'string') {\r\n                    let func = coreuiFormUtils.getFunctionByName(modal.onClear);\r\n\r\n                    if (typeof func === 'function') {\r\n                        func(that);\r\n                    } else {\r\n                        coreuiFormUtils.eval(modal.onClear);\r\n                    }\r\n                }\r\n            }\r\n\r\n            that._form._trigger('clear-modal.coreui.form', that, [ that, e ]);\r\n\r\n            that.setValue('', '');\r\n        });\r\n\r\n        // Выбор\r\n        $('.content-' + this._hash + ' .btn-modal-select').click(function (e) {\r\n            let title = modal.hasOwnProperty('title') && typeof(modal.title) === 'string'\r\n                ? modal.title\r\n                : '';\r\n\r\n            let size = modal.hasOwnProperty('size') && typeof(modal.size) === 'string'\r\n                ? modal.size\r\n                : 'lg';\r\n\r\n            let url = modal.hasOwnProperty('url') && typeof(modal.url) === 'string'\r\n                ? modal.url\r\n                : '';\r\n\r\n            if ( ! url) {\r\n                return;\r\n            }\r\n\r\n\r\n            let modalId      = coreuiFormUtils.hashCode();\r\n            let modalLoading = ejs.render(tpl['fields/modal-loading.html'], {\r\n                lang: that._form.getLang(),\r\n            });\r\n\r\n\r\n            if (CoreUI.hasOwnProperty('modal')) {\r\n                let onShow   = null;\r\n                let onHidden = null;\r\n\r\n                if (modal.hasOwnProperty('onHidden')) {\r\n                    if (typeof(modal.onHidden) === 'function') {\r\n                        onHidden = modal.onHidden;\r\n\r\n                    } else if (typeof(modal.onHidden) === 'string') {\r\n                        let func = coreuiFormUtils.getFunctionByName(modal.onHidden);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onHidden = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (modal.hasOwnProperty('onShow')) {\r\n                    if (typeof(modal.onShow) === 'function') {\r\n                        onShow = modal.onShow;\r\n\r\n                    } else if (typeof(modal.onShow) === 'string') {\r\n                        let func = coreuiFormUtils.getFunctionByName(modal.onShow);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onShow = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                CoreUI.modal.show(title, modalLoading, {\r\n                    id: modalId,\r\n                    size: size,\r\n                    onShow: onShow,\r\n                    onHidden: onHidden\r\n                });\r\n            }\r\n\r\n            $.ajax({\r\n                url: url,\r\n                method: 'GET',\r\n                beforeSend: function(xhr) {\r\n                    that._form._trigger('before-load-modal.coreui.form', that, [ that, xhr ]);\r\n                },\r\n                success: function (result) {\r\n                    $('#modal-' + modalId + ' .modal-body').html(result);\r\n                    that._form._trigger('success-load-modal.coreui.form', that, [ that, result ]);\r\n                },\r\n                error: function(xhr, textStatus, errorThrown) {\r\n                    that._form._trigger('error-load-modal.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n                },\r\n                complete: function(xhr, textStatus) {\r\n                    that._form._trigger('complete-load-modal.coreui.form', that, [ that, xhr, textStatus ]);\r\n                },\r\n            });\r\n\r\n\r\n            that._form._trigger('select-modal.coreui.form', that, [ that, e ]);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.number = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'number',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block',\r\n            step: 'any'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null,\r\n        precision: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        // Установка точности\r\n        if (this._options.precision === null) {\r\n            let precision = 0;\r\n\r\n            if (this._options.attr.hasOwnProperty('step') &&\r\n                this._options.attr.step !== 'any' &&\r\n                ['string', 'number'].indexOf(typeof this._options.attr.step) >= 0\r\n            ) {\r\n                let match = $.trim(this._options.attr.step.toString()).match(/\\.(\\d+)$/);\r\n\r\n                if (match && match.hasOwnProperty(1)) {\r\n                    precision = match ? match[1].length : precision;\r\n                }\r\n            }\r\n\r\n            this._options.precision = precision;\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0 ||\r\n            ! value.toString().match(/^\\-?\\d+\\.?\\d*$/)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.precision >= 0) {\r\n            value = coreuiFormUtils.round(value, this._options.precision);\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('min')) {\r\n            value = value < Number(this._options.attr.min)\r\n                ? Number(this._options.attr.min)\r\n                : value;\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('max')) {\r\n            value = value > Number(this._options.attr.max)\r\n                ? Number(this._options.attr.max)\r\n                : value;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = $.extend(true, {}, this._options);\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils.hashCode();\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'number';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('.content-' + this._hash + ' input').keydown(function (e) {\r\n            let k = e.keyCode || e.which;\r\n            let ok = k >= 35 && k <= 40 ||      // arrows\r\n                k >= 96 && k <= 105 ||     // 0-9 numpad\r\n                k === 189 || k === 109 ||  // minus\r\n                k === 110 || k === 190 ||  // dot\r\n                k === 9 ||  //tab\r\n                k === 46 || //del\r\n                k === 8 ||  // backspaces\r\n                ( ! e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)\r\n\r\n            if ( ! ok || (e.ctrlKey && e.altKey)) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' input').blur(function (e) {\r\n            let value = $(this).val();\r\n\r\n            if (that._options.precision >= 0) {\r\n                value = coreuiFormUtils.round(value, that._options.precision);\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('min')) {\r\n                value = value < Number(that._options.attr.min)\r\n                    ? Number(that._options.attr.min)\r\n                    : value;\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('max')) {\r\n                value = value > Number(that._options.attr.max)\r\n                    ? Number(that._options.attr.max)\r\n                    : value;\r\n            }\r\n\r\n            $(this).val(value);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.radio = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'radio',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input[type=radio]:checked').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            let that         = this;\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options)\r\n            ) {\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value') && option.value == value) {\r\n                        let text = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                            ? option.text\r\n                            : '';\r\n\r\n                        $('.content-' + that._hash).text(text);\r\n                        that._value = value;\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n\r\n        } else {\r\n            let input = $('.content-' + this._hash + ' input[type=radio][value=\"' + value + '\"]');\r\n\r\n            if (input[0]) {\r\n                input.prop('checked', true);\r\n                this._value = value;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            let value = this.getValue();\r\n            return typeof value === 'string' && value !== '';\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that         = this;\r\n        let radioOptions = [];\r\n        let fieldOptions = this.getOptions();\r\n        let selectedItem = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'radio',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText   = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils.hashCode();\r\n\r\n                if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItem.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                radioOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        return ejs.render(tpl['fields/radio.html'], {\r\n            field: fieldOptions,\r\n            value: this._value,\r\n            render: {\r\n                options: radioOptions,\r\n                selectedItem: selectedItem\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.range = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'range',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-range d-inline-block pt-1'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'range';\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.select = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'select',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @returns {array|string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            if (this._options.hasOwnProperty('attr') &&\r\n                typeof this._options.attr === 'object' &&\r\n                this._options.attr !== null &&\r\n                ! Array.isArray(this._options.attr) &&\r\n                this._options.attr.hasOwnProperty('multiple')\r\n            ) {\r\n                let values = [];\r\n\r\n                $('.content-' + this._hash + ' select option:selected').each(function () {\r\n                    values.push($(this).val());\r\n                });\r\n\r\n                return values;\r\n\r\n            } else {\r\n                return $('.content-' + this._hash + ' select option:selected').val()\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' select > option').prop('selected', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' select > option').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('selected', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let select    = $('select', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            select.removeClass('is-invalid');\r\n            select.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            select.removeClass('is-invalid');\r\n            select.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            select.removeClass('is-valid');\r\n            select.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let select = $('.content-' + this._hash + ' select');\r\n\r\n        if (this._options.required && select.val() === '') {\r\n            return false;\r\n        }\r\n\r\n        if (select[0]) {\r\n            return select.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let that          = this;\r\n        let options       = this.getOptions();\r\n        let attributes    = [];\r\n        let selectOptions = [];\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            options.options !== null\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n\r\n                if (typeof option === 'string' || typeof option === 'number') {\r\n                    selectOptions.push(that._renderOption({\r\n                        type: 'option',\r\n                        value: key,\r\n                        text: option\r\n                    }));\r\n\r\n                } else if (typeof option === 'object') {\r\n                    let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                        ? option.type\r\n                        : 'option';\r\n\r\n                    if (type === 'group') {\r\n                        let renderAttr   = [];\r\n                        let groupAttr    = {};\r\n                        let groupOptions = [];\r\n\r\n                        if (option.hasOwnProperty('attr') &&\r\n                            typeof option.attr === 'object' &&\r\n                            option.attr !== null &&\r\n                            ! Array.isArray(option.attr)\r\n                        ) {\r\n                            groupAttr = option.attr;\r\n                        }\r\n\r\n                        if (option.hasOwnProperty('label') && ['string', 'number'].indexOf(typeof(option.label)) >= 0) {\r\n                            groupAttr.label = option.label;\r\n                        }\r\n\r\n                        $.each(groupAttr, function (name, value) {\r\n                            renderAttr.push(name + '=\"' + value + '\"');\r\n                        });\r\n\r\n                        if (Array.isArray(option.options)) {\r\n                            $.each(option.options, function (key, groupOption) {\r\n                                groupOptions.push(that._renderOption(groupOption));\r\n                            });\r\n                        }\r\n\r\n                        selectOptions.push({\r\n                            type: 'group',\r\n                            attr: renderAttr.length > 0 ? (' ' + renderAttr.join(' ')) : '',\r\n                            options: groupOptions,\r\n                        });\r\n\r\n                    } else {\r\n                        selectOptions.push(that._renderOption(option));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                options: selectOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let that            = this;\r\n        let options         = this.getOptions();\r\n        let selectedOptions = [];\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                    ? option.type\r\n                    : 'option';\r\n\r\n                if (type === 'group') {\r\n                    if (Array.isArray(option.options)) {\r\n                        $.each(option.options, function (key, groupOption) {\r\n                            let optionText = groupOption.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(groupOption.text)) >= 0\r\n                                ? groupOption.text\r\n                                : '';\r\n\r\n                            if ( ! optionText || optionText === '') {\r\n                                return;\r\n                            }\r\n\r\n                            if (Array.isArray(that._value)) {\r\n                                $.each(that._value, function (key, itemValue) {\r\n                                    if (itemValue == groupOption.value) {\r\n                                        selectedOptions.push(optionText);\r\n                                        return false;\r\n                                    }\r\n                                });\r\n\r\n                            } else if (that._value == groupOption.value) {\r\n                                selectedOptions.push(optionText);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                } else {\r\n                    let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                        ? option.text\r\n                        : '';\r\n\r\n                    if ( ! optionText || optionText === '') {\r\n                        return;\r\n                    }\r\n\r\n                    if (Array.isArray(that._value)) {\r\n                        $.each(that._value, function (key, itemValue) {\r\n                            if (itemValue == option.value) {\r\n                                selectedOptions.push(optionText);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (that._value == option.value) {\r\n                        selectedOptions.push(optionText);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            render: {\r\n                selectedOptions: selectedOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Сборка опции\r\n     * @param option\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _renderOption: function (option) {\r\n\r\n        let optionAttr = [];\r\n        let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n            ? option.text\r\n            : '';\r\n\r\n        $.each(option, function (name, value) {\r\n            if (name !== 'text') {\r\n                optionAttr.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n\r\n        if (Array.isArray(this._value)) {\r\n            $.each(this._value, function (key, itemValue) {\r\n                if (itemValue == option.value) {\r\n                    optionAttr.push('selected=\"selected\"');\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        } else if (this._value == option.value) {\r\n            optionAttr.push('selected=\"selected\"');\r\n        }\r\n\r\n        return {\r\n            type: 'option',\r\n            text: optionText,\r\n            attr: optionAttr.length > 0 ? (' ' + optionAttr.join(' ')) : ''\r\n        };\r\n    }\r\n};\n\ncoreuiForm$1.fields.switch = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'switch',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        valueY: 'Y',\r\n        valueN: 'N',\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=checkbox]').prop('checked', value === this._options.valueY);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container       = $('.content-' + this._hash);\r\n        let switchContainer = $('.form-switch', container);\r\n        let inputs          = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n        let itemAttr   = {\r\n            type: 'checkbox',\r\n            class: 'form-check-input',\r\n            value: options.valueY\r\n        };\r\n\r\n\r\n        if (options.name) {\r\n            itemAttr.name = this._options.name;\r\n        }\r\n\r\n        if (options.required) {\r\n            itemAttr.required = 'required';\r\n        }\r\n\r\n        if (options.hasOwnProperty('attr') &&\r\n            typeof options.attr === 'object' &&\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            itemAttr = coreuiFormUtils.mergeAttr(itemAttr, options.attr);\r\n        }\r\n\r\n        if (this._value === options.valueY) {\r\n            itemAttr.checked = 'checked';\r\n        }\r\n\r\n        $.each(itemAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/switch.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.textarea = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'textarea',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' textarea').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' textarea').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let textarea  = $('textarea', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            textarea.removeClass('is-valid');\r\n            textarea.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' textarea');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/textarea.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.wysiwyg = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _editor: null,\r\n    _editorHash: null,\r\n    _options: {\r\n        type: 'wysiwyg',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        height: null,\r\n        minHeight: null,\r\n        maxHeight: null,\r\n        options: {},\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        readonly: false,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form       = form;\r\n        this._index      = index;\r\n        this._id         = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash       = coreuiFormUtils.hashCode();\r\n        this._editorHash = coreuiFormUtils.hashCode();\r\n        this._value      = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options    = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @return {string|null}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        } else {\r\n            return this._editor ? this._editor.getContent() : this._value;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            if (this._editor) {\r\n                this._editor.setContent(value);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/wysiwyg.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            editorHash: this._editorHash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let tinyMceOptions = {};\r\n        let than           = this;\r\n        let textareaId     = 'editor-' + this._editorHash;\r\n\r\n        if (typeof this._options.options === 'object' &&\r\n            ! Array.isArray(this._options.options) &&\r\n            Object.keys(this._options.options).length > 0\r\n        ) {\r\n            tinyMceOptions = this._options.options;\r\n\r\n        } else if (this._options.options === 'simple') {\r\n            tinyMceOptions = {\r\n                plugins: 'image lists anchor charmap',\r\n                toolbar: 'blocks | bold italic underline | alignleft aligncenter ' +\r\n                         'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                         'forecolor backcolor removeformat',\r\n                menubar: false,\r\n                branding: false\r\n            };\r\n\r\n        } else {\r\n            tinyMceOptions = {\r\n                promotion: false,\r\n                branding: false,\r\n                plugins: 'preview importcss searchreplace autolink autosave save directionality code ' +\r\n                         'visualblocks visualchars fullscreen image link media template codesample table ' +\r\n                         'charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',\r\n                menubar: 'file edit view insert format tools table help',\r\n                toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | ' +\r\n                         'alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | ' +\r\n                         'forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen ' +\r\n                         'preview save print | insertfile image media template link anchor codesample | ltr rtl',\r\n            };\r\n        }\r\n\r\n        tinyMceOptions.selector = '#editor-' + this._editorHash;\r\n\r\n        if (['string', 'number'].indexOf(typeof this._options.width) >= 0) {\r\n            tinyMceOptions.width = this._options.width;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minWidth) >= 0) {\r\n            tinyMceOptions.min_width = this._options.minWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxWidth) >= 0) {\r\n            tinyMceOptions.max_width = this._options.maxWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.height) >= 0) {\r\n            tinyMceOptions.height = this._options.height;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minHeight) >= 0) {\r\n            tinyMceOptions.min_height = this._options.minHeight;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxHeight) >= 0) {\r\n            tinyMceOptions.max_height = this._options.maxHeight;\r\n        }\r\n\r\n        tinymce.init(tinyMceOptions).then(function () {\r\n            than._editor = tinymce.get(textareaId);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.passwordRepeat = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _isChangeState: true,\r\n    _value: '',\r\n    _options: {\r\n        type: 'password',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            type: 'password',\r\n            class: 'form-control form-control-sm d-inline-block flex-shrink-0'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        showBtn: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        }\r\n\r\n        let pass = $('.content-' + this._hash + ' input[type=\"password\"]').eq(0);\r\n\r\n        if (typeof pass.attr('disabled') !== 'undefined' && pass.attr('disabled') !== false) {\r\n            return '';\r\n        }\r\n\r\n        return pass.val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value ? '******' : '');\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=\"password\"]').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input[type=\"password\"]', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        if ( ! this._isChangeState || this._options.readonly) {\r\n            return true;\r\n        }\r\n\r\n        let input = $('.content-' + this._hash + ' input[type=\"password\"]');\r\n\r\n        if (input.eq(0).val() !== input.eq(1).val()) {\r\n            return false;\r\n        }\r\n\r\n        if (input[0]) {\r\n            return input.eq(0).is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes  = [];\r\n        let attributes2 = [];\r\n        let datalist    = [];\r\n        let options     = this.getOptions();\r\n\r\n        this._isChangeState = ! options.showBtn\r\n            ? true\r\n            : ! this._value;\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if ( ! this._isChangeState) {\r\n            options.attr.disabled = '';\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.value = this._value ? '******' : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n        $.each(options.attr, function (name, value) {\r\n            if (['name', 'value'].indexOf(name) < 0) {\r\n                attributes2.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n        let lang = this._form.getLang();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: lang,\r\n            btn_text: this._isChangeState ? lang.cancel : lang.change,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                attr2: attributes2.length > 0 ? (' ' + attributes2.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value ? '******' : '',\r\n            hash: this._hash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' .btn-password-change').click(function (e) {\r\n            let textChange = $(this).data('change');\r\n            let textCancel = $(this).data('cancel');\r\n\r\n            if (that._isChangeState) {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').attr('disabled', 'disabled');\r\n                $(this).text(textChange);\r\n                that._isChangeState = false;\r\n\r\n            } else {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').removeAttr('disabled');\r\n                $(this).text(textCancel);\r\n                that._isChangeState = true;\r\n            }\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.file = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'file',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {File[]}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input')[0].files;\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {File|File[]} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if ( ! (value instanceof File) &&  ! (value instanceof FileList)) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text('');\r\n        } else {\r\n            let container = new DataTransfer();\r\n\r\n            if (value instanceof File) {\r\n                container.items.add(value);\r\n\r\n            } else {\r\n                $.each(value, function (key, file) {\r\n                    if (value instanceof File) {\r\n                        container.items.add(file);\r\n                    }\r\n                });\r\n            }\r\n\r\n            $('.content-' + this._hash + ' input')[0].files = container.files;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\nreturn coreuiForm$1;\n\n})));\n"]}