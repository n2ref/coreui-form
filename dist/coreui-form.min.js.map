{"version":3,"sources":["coreui-form.min.js"],"names":["global","factory","exports","module","define","amd","CoreUI","form","this","f","window","self","ejs","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","fs","path","utils","scopeOptionWarned","_VERSION_STRING","version","_DEFAULT_LOCALS_NAME","_OPTS_PASSABLE_WITH_DATA","_OPTS_PASSABLE_WITH_DATA_EXPRESS","concat","_BOM","_JS_IDENTIFIER","resolvePaths","name","paths","filePath","some","v","resolveInclude","existsSync","handleCache","options","template","func","filename","hasTemplate","arguments","cache","get","fileLoader","toString","replace","compile","set","includeFile","opts","shallowCopy","createNullProtoObjWherePossible","includePath","views","match","exec","Array","isArray","root","includer","escapeFunction","includerResult","rethrow","err","str","flnm","lineno","esc","lines","split","start","Math","max","end","min","context","slice","map","line","curr","join","message","stripSemi","Template","text","templateText","mode","truncate","currentLine","source","client","escape","escapeXML","compileDebug","debug","openDelimiter","closeDelimiter","delimiter","strict","rmWhitespace","outputFunctionName","localsName","async","destructuredLocals","legacyInclude","_with","regex","createRegex","readFileSync","promiseImpl","Function","Promise","isDir","dirname","extname","resolve","scope","console","warn","render","d","data","shallowCopyFromList","renderFile","cb","result","args","prototype","shift","pop","settings","viewOpts","reject","clearCache","reset","modes","EVAL","ESCAPED","RAW","COMMENT","LITERAL","delim","escapeRegExpChars","open","close","RegExp","fn","prepended","appended","escapeFn","sanitizedFilename","JSON","stringify","generateSource","test","destructuring","src","log","ctor","SyntaxError","returnedFn","apply","includeData","Object","defineProperty","basename","value","writable","enumerable","configurable","matches","parseTemplateText","forEach","index","indexOf","closing","scanLine","firstPos","pat","arr","push","substring","_addOutput","newLineCount","lastIndexOf","__express","VERSION","../package.json","./utils","2","hasOwn","obj","key","hasOwnProperty","regExpChars","_ENCODE_HTML_RULES","string","String","&","<",">","\"","'","_MATCH_HTML","encode_char","escapeXMLToString","markup","undefined","to","from","list","_data","val","remove","hyphenToCamel","toUpperCase","create","__proto__","3","4","process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","resolvedPath","resolvedAbsolute","cwd","TypeError","charAt","normalize","isAbsolute","trailingSlash","substr","relative","trim","fromParts","toParts","samePartsLength","outputParts","sep","hasRoot","charCodeAt","matchedSlash","ext","startDot","startPart","preDotState","len","_process","5","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","marker","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","6","description","keywords","author","license","bin","main","jsdelivr","unpkg","repository","type","url","bugs","homepage","dependencies","jake","devDependencies","browserify","eslint","git-directory-deploy","jsdoc","lru-cache","mocha","uglify-js","engines","node","scripts","let","tpl","coreuiFormUtils$1","getFieldValue","formRecord","getRecord","fieldOptions","getFunctionByName","functionName","namespaces","mergeFieldOptions","defaultOptions","$","attr","mergeAttr","extend","width","_options","fieldWidth","unit","labelWidth","attr2","each","tryHandleCache","getAttacheFields","fields","field","instance","hash","_hash","direction","fieldsDirection","formatDate","templ","day","month","Date","date","getMonth","getDate","year","formatDateTime","getHours","getSeconds","formatDateMonth","lang","getFullYear","date_months","formatDateWeek","getObjValue","isNumeric","num","isNaN","hashCode","getTime","random","crc32","round","number","precision","pow","coreuiFormInstance","id","send","method","format","minWidth","maxWidth","controlsOffset","readonly","validate","successLoadUrl","errorClass","layout","onSubmit","record","controls","_lock","_fieldsIndex","_groupsIndex","_controlsIndex","_groups","_fields","_controls","_events","_init","getSetting","coreuiForm$1","initEvents","that","formContainer","_trigger","getId","widthSizes","matchAll","columns","columnsContent","column","initGroup","keys","fieldContents","control","initControl","show","content","formAttr","html","element","domElement","document","innerHTML","lock","controlOptions","getOptions","unlock","isValid","onsubmit","onSubmitText","eval","onSubmitResult","results","isStopSend","sendFormat","dataFormat","contentType","File","FileList","file","append","ajax","processData","xhr","success","parse","parsedResponse","jsonResponse","script","loadUrl","location","href","urlParams","regx","param","equalUrl","onhashchange","error","textStatus","errorThrown","errorMessage","getLang","send_error","responseText","error_message","showError","complete","getData","getFields","getControls","getGroups","getField","fieldInstance","isReadonly","showControls","hideControls","hide","formError","class","dismiss","prepend","errorOptions","scroll","animate","scrollTop","offset","top","scrollOffset","hideError","eventName","callback","singleExec","destruct","_instances","initField","renderContent","init","getValue","setValue","group","groupInstance","collapse","controlInstance","hour","params","sec","_renderControl","week","_settings","sendDataFormat","errorMessageScrollOffset","formId","setSettings","ru","modal_select","modal_loading","switch_yes","switch_no","dataset_add","date_week","en","required_field","repeat","change","cancel","button","_form","_index","onClick","_initEvents","attributes","duration","click","event","link","submit","find","removeAttr","_id","_value","label","inline","outContent","errorText","required","expand","values","empty","selectedItems","option","prop","itemValue","container","inputs","removeClass","addClass","validText","lastInput","invalidText","attachFields","checkboxOptions","itemAttr","optionText","checked","color","attach","datalist","input","coreuiFormUtils","_renderContentReadonly","_renderContent","datalistId","style","checkbox","itemAttributes","datalistAttr","custom","alloyComponents","components","component","dataset","_renderOptions","items","valueY","valueN","serializeArray","item","_renderRowReadonly","removeItems","removeItem","itemId","headers","row","rows","_renderRow","_eventAdd","rowOptions","itemOptions","cellValue","cellItemValue","selected","optionValue","showCollapsible","slideUp","slideDown","is","hashItem","Meteor","jQuery","Zepto","el","mask","regexMask","invalid","getCaret","sel","ctrl","dSel","selection","cSelStart","selectionStart","navigator","appVersion","createRange","moveStart","pos","setCaret","range","setSelectionRange","createTextRange","moveEnd","select","events","keyCode","which","maskDigitPosMapOld","maskDigitPosMap","jMaskGlobals","useInput","behaviour","Mask","trigger","oldValue","clearIfNotMatch","getRegexMask","pattern","optional","recursive","oRecursive","maskChunks","jMask","translation","digit","destroyEvents","calculateCaretPosition","newVal","getMasked","caretPosNew","oldVal","caretPosOld","newValL","oldValL","maskDigitsBeforeCaret","maskDigitsAfterCaret","maskDigitsBeforeCaretAll","maskDigitsBeforeCaretAllOld","caretPos","byPassKeys","keyStrokeCompensation","callbacks","lastMaskChar","lastUntranslatedMaskChar","buf","m","resetPos","maskDigitCount","maskDigitPosArr","addMethod","maskLen","valLen","maskDigit","valDigit","fallback","reverse","check","lastMaskCharDigit","mapMaskdigitPositions","maskDiff","criteria","changed","defaultArgs","placeholder","getCleanVal","getMaskedVal","onlyMask","maxlength","caret","HTMLAttributes","prefix","notSameMaskObject","maskObject","maskWatchers","selector","globals","watchInterval","watchInputs","isSupported","maskFunction","clearInterval","eventSupported","createElement","masked","unmask","dataMask","cleanVal","applyDataMask","dataMaskAttr","maskElements","userAgent","watchDataMask","0","#","A","setInterval","onHidden","size","onClear","onChange","modal","_text","elementText","elementValue","textAttr","modalId","onShow","modalLoading","step","Number","beforeSend","k","radioOptions","selectedItem","keydown","shiftKey","ctrlKey","altKey","preventDefault","blur","radio","renderAttr","selectOptions","groupOptions","_renderOption","selectedOptions","optionAttr","switchContainer","textarea","groupAttr","groupOption","setContent","textareaId","switch","tinyMceOptions","plugins","toolbar","menubar","branding","min_height","maxHeight","max_height","tinymce","_isChangeState","showBtn","pass","attributes2","btn_text","DataTransfer","add","wysiwyg","_editor","_editorHash","height","getContent","editorHash","than","promotion","min_width","max_width","minHeight","then","passwordRepeat","eq","disabled","textChange","textCancel","files"],"mappings":"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","file":"coreui-form.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.CoreUI = global.CoreUI || {}, global.CoreUI.form = factory());\n}(this, (function () { 'use strict';\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f();}else if(typeof define===\"function\"&&define.amd){define([],f);}else{var g;if(typeof window!==\"undefined\"){g=window;}else if(typeof global!==\"undefined\"){g=global;}else if(typeof self!==\"undefined\"){g=self;}else{g=this;}g.ejs=f();}})(function(){return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t);}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){\"use strict\";var fs=require(\"fs\");var path=require(\"path\");var utils=require(\"./utils\");var scopeOptionWarned=false;var _VERSION_STRING=require(\"../package.json\").version;var _DEFAULT_OPEN_DELIMITER=\"<\";var _DEFAULT_CLOSE_DELIMITER=\">\";var _DEFAULT_DELIMITER=\"%\";var _DEFAULT_LOCALS_NAME=\"locals\";var _NAME=\"ejs\";var _REGEX_STRING=\"(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)\";var _OPTS_PASSABLE_WITH_DATA=[\"delimiter\",\"scope\",\"context\",\"debug\",\"compileDebug\",\"client\",\"_with\",\"rmWhitespace\",\"strict\",\"filename\",\"async\"];var _OPTS_PASSABLE_WITH_DATA_EXPRESS=_OPTS_PASSABLE_WITH_DATA.concat(\"cache\");var _BOM=/^\\uFEFF/;var _JS_IDENTIFIER=/^[a-zA-Z_$][0-9a-zA-Z_$]*$/;exports.cache=utils.cache;exports.fileLoader=fs.readFileSync;exports.localsName=_DEFAULT_LOCALS_NAME;exports.promiseImpl=new Function(\"return this;\")().Promise;exports.resolveInclude=function(name,filename,isDir){var dirname=path.dirname;var extname=path.extname;var resolve=path.resolve;var includePath=resolve(isDir?filename:dirname(filename),name);var ext=extname(name);if(!ext){includePath+=\".ejs\";}return includePath};function resolvePaths(name,paths){var filePath;if(paths.some(function(v){filePath=exports.resolveInclude(name,v,true);return fs.existsSync(filePath)})){return filePath}}function getIncludePath(path,options){var includePath;var filePath;var views=options.views;var match=/^[A-Za-z]+:\\\\|^\\//.exec(path);if(match&&match.length){path=path.replace(/^\\/*/,\"\");if(Array.isArray(options.root)){includePath=resolvePaths(path,options.root);}else{includePath=exports.resolveInclude(path,options.root||\"/\",true);}}else{if(options.filename){filePath=exports.resolveInclude(path,options.filename);if(fs.existsSync(filePath)){includePath=filePath;}}if(!includePath&&Array.isArray(views)){includePath=resolvePaths(path,views);}if(!includePath&&typeof options.includer!==\"function\"){throw new Error('Could not find the include file \"'+options.escapeFunction(path)+'\"')}}return includePath}function handleCache(options,template){var func;var filename=options.filename;var hasTemplate=arguments.length>1;if(options.cache){if(!filename){throw new Error(\"cache option requires a filename\")}func=exports.cache.get(filename);if(func){return func}if(!hasTemplate){template=fileLoader(filename).toString().replace(_BOM,\"\");}}else if(!hasTemplate){if(!filename){throw new Error(\"Internal EJS error: no file name or template \"+\"provided\")}template=fileLoader(filename).toString().replace(_BOM,\"\");}func=exports.compile(template,options);if(options.cache){exports.cache.set(filename,func);}return func}function tryHandleCache(options,data,cb){var result;if(!cb){if(typeof exports.promiseImpl==\"function\"){return new exports.promiseImpl(function(resolve,reject){try{result=handleCache(options)(data);resolve(result);}catch(err){reject(err);}})}else{throw new Error(\"Please provide a callback function\")}}else{try{result=handleCache(options)(data);}catch(err){return cb(err)}cb(null,result);}}function fileLoader(filePath){return exports.fileLoader(filePath)}function includeFile(path,options){var opts=utils.shallowCopy(utils.createNullProtoObjWherePossible(),options);opts.filename=getIncludePath(path,opts);if(typeof options.includer===\"function\"){var includerResult=options.includer(path,opts.filename);if(includerResult){if(includerResult.filename){opts.filename=includerResult.filename;}if(includerResult.template){return handleCache(opts,includerResult.template)}}}return handleCache(opts)}function rethrow(err,str,flnm,lineno,esc){var lines=str.split(\"\\n\");var start=Math.max(lineno-3,0);var end=Math.min(lines.length,lineno+3);var filename=esc(flnm);var context=lines.slice(start,end).map(function(line,i){var curr=i+start+1;return(curr==lineno?\" >> \":\"    \")+curr+\"| \"+line}).join(\"\\n\");err.path=filename;err.message=(filename||\"ejs\")+\":\"+lineno+\"\\n\"+context+\"\\n\\n\"+err.message;throw err}function stripSemi(str){return str.replace(/;(\\s*$)/,\"$1\")}exports.compile=function compile(template,opts){var templ;if(opts&&opts.scope){if(!scopeOptionWarned){console.warn(\"`scope` option is deprecated and will be removed in EJS 3\");scopeOptionWarned=true;}if(!opts.context){opts.context=opts.scope;}delete opts.scope;}templ=new Template(template,opts);return templ.compile()};exports.render=function(template,d,o){var data=d||utils.createNullProtoObjWherePossible();var opts=o||utils.createNullProtoObjWherePossible();if(arguments.length==2){utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA);}return handleCache(opts,template)(data)};exports.renderFile=function(){var args=Array.prototype.slice.call(arguments);var filename=args.shift();var cb;var opts={filename:filename};var data;var viewOpts;if(typeof arguments[arguments.length-1]==\"function\"){cb=args.pop();}if(args.length){data=args.shift();if(args.length){utils.shallowCopy(opts,args.pop());}else{if(data.settings){if(data.settings.views){opts.views=data.settings.views;}if(data.settings[\"view cache\"]){opts.cache=true;}viewOpts=data.settings[\"view options\"];if(viewOpts){utils.shallowCopy(opts,viewOpts);}}utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA_EXPRESS);}opts.filename=filename;}else{data=utils.createNullProtoObjWherePossible();}return tryHandleCache(opts,data,cb)};exports.Template=Template;exports.clearCache=function(){exports.cache.reset();};function Template(text,opts){opts=opts||utils.createNullProtoObjWherePossible();var options=utils.createNullProtoObjWherePossible();this.templateText=text;this.mode=null;this.truncate=false;this.currentLine=1;this.source=\"\";options.client=opts.client||false;options.escapeFunction=opts.escape||opts.escapeFunction||utils.escapeXML;options.compileDebug=opts.compileDebug!==false;options.debug=!!opts.debug;options.filename=opts.filename;options.openDelimiter=opts.openDelimiter||exports.openDelimiter||_DEFAULT_OPEN_DELIMITER;options.closeDelimiter=opts.closeDelimiter||exports.closeDelimiter||_DEFAULT_CLOSE_DELIMITER;options.delimiter=opts.delimiter||exports.delimiter||_DEFAULT_DELIMITER;options.strict=opts.strict||false;options.context=opts.context;options.cache=opts.cache||false;options.rmWhitespace=opts.rmWhitespace;options.root=opts.root;options.includer=opts.includer;options.outputFunctionName=opts.outputFunctionName;options.localsName=opts.localsName||exports.localsName||_DEFAULT_LOCALS_NAME;options.views=opts.views;options.async=opts.async;options.destructuredLocals=opts.destructuredLocals;options.legacyInclude=typeof opts.legacyInclude!=\"undefined\"?!!opts.legacyInclude:true;if(options.strict){options._with=false;}else{options._with=typeof opts._with!=\"undefined\"?opts._with:true;}this.opts=options;this.regex=this.createRegex();}Template.modes={EVAL:\"eval\",ESCAPED:\"escaped\",RAW:\"raw\",COMMENT:\"comment\",LITERAL:\"literal\"};Template.prototype={createRegex:function(){var str=_REGEX_STRING;var delim=utils.escapeRegExpChars(this.opts.delimiter);var open=utils.escapeRegExpChars(this.opts.openDelimiter);var close=utils.escapeRegExpChars(this.opts.closeDelimiter);str=str.replace(/%/g,delim).replace(/</g,open).replace(/>/g,close);return new RegExp(str)},compile:function(){var src;var fn;var opts=this.opts;var prepended=\"\";var appended=\"\";var escapeFn=opts.escapeFunction;var ctor;var sanitizedFilename=opts.filename?JSON.stringify(opts.filename):\"undefined\";if(!this.source){this.generateSource();prepended+='  var __output = \"\";\\n'+\"  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n\";if(opts.outputFunctionName){if(!_JS_IDENTIFIER.test(opts.outputFunctionName)){throw new Error(\"outputFunctionName is not a valid JS identifier.\")}prepended+=\"  var \"+opts.outputFunctionName+\" = __append;\"+\"\\n\";}if(opts.localsName&&!_JS_IDENTIFIER.test(opts.localsName)){throw new Error(\"localsName is not a valid JS identifier.\")}if(opts.destructuredLocals&&opts.destructuredLocals.length){var destructuring=\"  var __locals = (\"+opts.localsName+\" || {}),\\n\";for(var i=0;i<opts.destructuredLocals.length;i++){var name=opts.destructuredLocals[i];if(!_JS_IDENTIFIER.test(name)){throw new Error(\"destructuredLocals[\"+i+\"] is not a valid JS identifier.\")}if(i>0){destructuring+=\",\\n  \";}destructuring+=name+\" = __locals.\"+name;}prepended+=destructuring+\";\\n\";}if(opts._with!==false){prepended+=\"  with (\"+opts.localsName+\" || {}) {\"+\"\\n\";appended+=\"  }\"+\"\\n\";}appended+=\"  return __output;\"+\"\\n\";this.source=prepended+this.source+appended;}if(opts.compileDebug){src=\"var __line = 1\"+\"\\n\"+\"  , __lines = \"+JSON.stringify(this.templateText)+\"\\n\"+\"  , __filename = \"+sanitizedFilename+\";\"+\"\\n\"+\"try {\"+\"\\n\"+this.source+\"} catch (e) {\"+\"\\n\"+\"  rethrow(e, __lines, __filename, __line, escapeFn);\"+\"\\n\"+\"}\"+\"\\n\";}else{src=this.source;}if(opts.client){src=\"escapeFn = escapeFn || \"+escapeFn.toString()+\";\"+\"\\n\"+src;if(opts.compileDebug){src=\"rethrow = rethrow || \"+rethrow.toString()+\";\"+\"\\n\"+src;}}if(opts.strict){src='\"use strict\";\\n'+src;}if(opts.debug){console.log(src);}if(opts.compileDebug&&opts.filename){src=src+\"\\n\"+\"//# sourceURL=\"+sanitizedFilename+\"\\n\";}try{if(opts.async){try{ctor=new Function(\"return (async function(){}).constructor;\")();}catch(e){if(e instanceof SyntaxError){throw new Error(\"This environment does not support async/await\")}else{throw e}}}else{ctor=Function;}fn=new ctor(opts.localsName+\", escapeFn, include, rethrow\",src);}catch(e){if(e instanceof SyntaxError){if(opts.filename){e.message+=\" in \"+opts.filename;}e.message+=\" while compiling ejs\\n\\n\";e.message+=\"If the above error is not helpful, you may want to try EJS-Lint:\\n\";e.message+=\"https://github.com/RyanZim/EJS-Lint\";if(!opts.async){e.message+=\"\\n\";e.message+=\"Or, if you meant to create an async function, pass `async: true` as an option.\";}}throw e}var returnedFn=opts.client?fn:function anonymous(data){var include=function(path,includeData){var d=utils.shallowCopy(utils.createNullProtoObjWherePossible(),data);if(includeData){d=utils.shallowCopy(d,includeData);}return includeFile(path,opts)(d)};return fn.apply(opts.context,[data||utils.createNullProtoObjWherePossible(),escapeFn,include,rethrow])};if(opts.filename&&typeof Object.defineProperty===\"function\"){var filename=opts.filename;var basename=path.basename(filename,path.extname(filename));try{Object.defineProperty(returnedFn,\"name\",{value:basename,writable:false,enumerable:false,configurable:true});}catch(e){}}return returnedFn},generateSource:function(){var opts=this.opts;if(opts.rmWhitespace){this.templateText=this.templateText.replace(/[\\r\\n]+/g,\"\\n\").replace(/^\\s+|\\s+$/gm,\"\");}this.templateText=this.templateText.replace(/[ \\t]*<%_/gm,\"<%_\").replace(/_%>[ \\t]*/gm,\"_%>\");var self=this;var matches=this.parseTemplateText();var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;if(matches&&matches.length){matches.forEach(function(line,index){var closing;if(line.indexOf(o+d)===0&&line.indexOf(o+d+d)!==0){closing=matches[index+2];if(!(closing==d+c||closing==\"-\"+d+c||closing==\"_\"+d+c)){throw new Error('Could not find matching close tag for \"'+line+'\".')}}self.scanLine(line);});}},parseTemplateText:function(){var str=this.templateText;var pat=this.regex;var result=pat.exec(str);var arr=[];var firstPos;while(result){firstPos=result.index;if(firstPos!==0){arr.push(str.substring(0,firstPos));str=str.slice(firstPos);}arr.push(result[0]);str=str.slice(result[0].length);result=pat.exec(str);}if(str){arr.push(str);}return arr},_addOutput:function(line){if(this.truncate){line=line.replace(/^(?:\\r\\n|\\r|\\n)/,\"\");this.truncate=false;}if(!line){return line}line=line.replace(/\\\\/g,\"\\\\\\\\\");line=line.replace(/\\n/g,\"\\\\n\");line=line.replace(/\\r/g,\"\\\\r\");line=line.replace(/\"/g,'\\\\\"');this.source+='    ; __append(\"'+line+'\")'+\"\\n\";},scanLine:function(line){var self=this;var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;var newLineCount=0;newLineCount=line.split(\"\\n\").length-1;switch(line){case o+d:case o+d+\"_\":this.mode=Template.modes.EVAL;break;case o+d+\"=\":this.mode=Template.modes.ESCAPED;break;case o+d+\"-\":this.mode=Template.modes.RAW;break;case o+d+\"#\":this.mode=Template.modes.COMMENT;break;case o+d+d:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(o+d+d,o+d)+'\")'+\"\\n\";break;case d+d+c:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(d+d+c,d+c)+'\")'+\"\\n\";break;case d+c:case\"-\"+d+c:case\"_\"+d+c:if(this.mode==Template.modes.LITERAL){this._addOutput(line);}this.mode=null;this.truncate=line.indexOf(\"-\")===0||line.indexOf(\"_\")===0;break;default:if(this.mode){switch(this.mode){case Template.modes.EVAL:case Template.modes.ESCAPED:case Template.modes.RAW:if(line.lastIndexOf(\"//\")>line.lastIndexOf(\"\\n\")){line+=\"\\n\";}}switch(this.mode){case Template.modes.EVAL:this.source+=\"    ; \"+line+\"\\n\";break;case Template.modes.ESCAPED:this.source+=\"    ; __append(escapeFn(\"+stripSemi(line)+\"))\"+\"\\n\";break;case Template.modes.RAW:this.source+=\"    ; __append(\"+stripSemi(line)+\")\"+\"\\n\";break;case Template.modes.COMMENT:break;case Template.modes.LITERAL:this._addOutput(line);break}}else{this._addOutput(line);}}if(self.opts.compileDebug&&newLineCount){this.currentLine+=newLineCount;this.source+=\"    ; __line = \"+this.currentLine+\"\\n\";}}};exports.escapeXML=utils.escapeXML;exports.__express=exports.renderFile;exports.VERSION=_VERSION_STRING;exports.name=_NAME;if(typeof window!=\"undefined\"){window.ejs=exports;}},{\"../package.json\":6,\"./utils\":2,fs:3,path:4}],2:[function(require,module,exports){\"use strict\";var regExpChars=/[|\\\\{}()[\\]^$+*?.]/g;var hasOwnProperty=Object.prototype.hasOwnProperty;var hasOwn=function(obj,key){return hasOwnProperty.apply(obj,[key])};exports.escapeRegExpChars=function(string){if(!string){return\"\"}return String(string).replace(regExpChars,\"\\\\$&\")};var _ENCODE_HTML_RULES={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&#34;\",\"'\":\"&#39;\"};var _MATCH_HTML=/[&<>'\"]/g;function encode_char(c){return _ENCODE_HTML_RULES[c]||c}var escapeFuncStr=\"var _ENCODE_HTML_RULES = {\\n\"+'      \"&\": \"&amp;\"\\n'+'    , \"<\": \"&lt;\"\\n'+'    , \">\": \"&gt;\"\\n'+'    , \\'\"\\': \"&#34;\"\\n'+'    , \"\\'\": \"&#39;\"\\n'+\"    }\\n\"+\"  , _MATCH_HTML = /[&<>'\\\"]/g;\\n\"+\"function encode_char(c) {\\n\"+\"  return _ENCODE_HTML_RULES[c] || c;\\n\"+\"};\\n\";exports.escapeXML=function(markup){return markup==undefined?\"\":String(markup).replace(_MATCH_HTML,encode_char)};function escapeXMLToString(){return Function.prototype.toString.call(this)+\";\\n\"+escapeFuncStr}try{if(typeof Object.defineProperty===\"function\"){Object.defineProperty(exports.escapeXML,\"toString\",{value:escapeXMLToString});}else{exports.escapeXML.toString=escapeXMLToString;}}catch(err){console.warn(\"Unable to set escapeXML.toString (is the Function prototype frozen?)\");}exports.shallowCopy=function(to,from){from=from||{};if(to!==null&&to!==undefined){for(var p in from){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}return to};exports.shallowCopyFromList=function(to,from,list){list=list||[];from=from||{};if(to!==null&&to!==undefined){for(var i=0;i<list.length;i++){var p=list[i];if(typeof from[p]!=\"undefined\"){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}}return to};exports.cache={_data:{},set:function(key,val){this._data[key]=val;},get:function(key){return this._data[key]},remove:function(key){delete this._data[key];},reset:function(){this._data={};}};exports.hyphenToCamel=function(str){return str.replace(/-[a-z]/g,function(match){return match[1].toUpperCase()})};exports.createNullProtoObjWherePossible=function(){if(typeof Object.create==\"function\"){return function(){return Object.create(null)}}if(!({__proto__:null}instanceof Object)){return function(){return{__proto__:null}}}return function(){return{}}}();},{}],3:[function(require,module,exports){},{}],4:[function(require,module,exports){(function(process){function normalizeArray(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1);}else if(last===\"..\"){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}if(allowAboveRoot){for(;up--;up){parts.unshift(\"..\");}}return parts}exports.resolve=function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){continue}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\";}resolvedPath=normalizeArray(filter(resolvedPath.split(\"/\"),function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"};exports.normalize=function(path){var isAbsolute=exports.isAbsolute(path),trailingSlash=substr(path,-1)===\"/\";path=normalizeArray(filter(path.split(\"/\"),function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\";}if(path&&trailingSlash){path+=\"/\";}return(isAbsolute?\"/\":\"\")+path};exports.isAbsolute=function(path){return path.charAt(0)===\"/\"};exports.join=function(){var paths=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(paths,function(p,index){if(typeof p!==\"string\"){throw new TypeError(\"Arguments to path.join must be strings\")}return p}).join(\"/\"))};exports.relative=function(from,to){from=exports.resolve(from).substr(1);to=exports.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\");}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")};exports.sep=\"/\";exports.delimiter=\":\";exports.dirname=function(path){if(typeof path!==\"string\")path=path+\"\";if(path.length===0)return\".\";var code=path.charCodeAt(0);var hasRoot=code===47;var end=-1;var matchedSlash=true;for(var i=path.length-1;i>=1;--i){code=path.charCodeAt(i);if(code===47){if(!matchedSlash){end=i;break}}else{matchedSlash=false;}}if(end===-1)return hasRoot?\"/\":\".\";if(hasRoot&&end===1){return\"/\"}return path.slice(0,end)};function basename(path){if(typeof path!==\"string\")path=path+\"\";var start=0;var end=-1;var matchedSlash=true;var i;for(i=path.length-1;i>=0;--i){if(path.charCodeAt(i)===47){if(!matchedSlash){start=i+1;break}}else if(end===-1){matchedSlash=false;end=i+1;}}if(end===-1)return\"\";return path.slice(start,end)}exports.basename=function(path,ext){var f=basename(path);if(ext&&f.substr(-1*ext.length)===ext){f=f.substr(0,f.length-ext.length);}return f};exports.extname=function(path){if(typeof path!==\"string\")path=path+\"\";var startDot=-1;var startPart=0;var end=-1;var matchedSlash=true;var preDotState=0;for(var i=path.length-1;i>=0;--i){var code=path.charCodeAt(i);if(code===47){if(!matchedSlash){startPart=i+1;break}continue}if(end===-1){matchedSlash=false;end=i+1;}if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){return\"\"}return path.slice(startDot,end)};function filter(xs,f){if(xs.filter)return xs.filter(f);var res=[];for(var i=0;i<xs.length;i++){if(f(xs[i],i,xs))res.push(xs[i]);}return res}var substr=\"ab\".substr(-1)===\"b\"?function(str,start,len){return str.substr(start,len)}:function(str,start,len){if(start<0)start=str.length+start;return str.substr(start,len)};}).call(this,require(\"_process\"));},{_process:5}],5:[function(require,module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout===\"function\"){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title=\"browser\";process.browser=true;process.env={};process.argv=[];process.version=\"\";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error(\"process.binding is not supported\")};process.cwd=function(){return\"/\"};process.chdir=function(dir){throw new Error(\"process.chdir is not supported\")};process.umask=function(){return 0};},{}],6:[function(require,module,exports){module.exports={name:\"ejs\",description:\"Embedded JavaScript templates\",keywords:[\"template\",\"engine\",\"ejs\"],version:\"3.1.8\",author:\"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)\",license:\"Apache-2.0\",bin:{ejs:\"./bin/cli.js\"},main:\"./lib/ejs.js\",jsdelivr:\"ejs.min.js\",unpkg:\"ejs.min.js\",repository:{type:\"git\",url:\"git://github.com/mde/ejs.git\"},bugs:\"https://github.com/mde/ejs/issues\",homepage:\"https://github.com/mde/ejs\",dependencies:{jake:\"^10.8.5\"},devDependencies:{browserify:\"^16.5.1\",eslint:\"^6.8.0\",\"git-directory-deploy\":\"^1.5.1\",jsdoc:\"^4.0.2\",\"lru-cache\":\"^4.0.1\",mocha:\"^10.2.0\",\"uglify-js\":\"^3.3.16\"},engines:{node:\">=0.10.0\"},scripts:{test:\"mocha -u tdd\"}};},{}]},{},[1])(1)});\n\nlet tpl = Object.create(null);\ntpl['form-error.html'] = '<div class=\"coreui-form__error alert alert-danger alert-dismissible fade show mb-3 <%= options.class %>\">\\n    <%- message %>\\n    <% if (options.dismiss) { %>\\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\\n    <% } %>\\n</div>';\ntpl['form-field-content.html'] = '<%- content %>';\ntpl['form-field-group.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__group_container mb-3\">\\n    <div class=\"coreui-form__group_label pe-2\">\\n        <h6 class=\"coreui-form__field_label_text col-form-label-sm\">\\n            <%- group.label %>\\n            <% if (group.showCollapsible) { %>\\n                <button type=\"button\" class=\"btn btn-sm btn-link btn-collapsible text-dark\">\\n                    <% if ( ! group.show) { %>\\n                    <i class=\"bi bi-chevron-right\"></i>\\n                    <% } else { %>\\n                    <i class=\"bi bi-chevron-down\"></i>\\n                    <% } %>\\n                </button>\\n            <% } %>\\n        </h6>\\n    </div>\\n    <div class=\"coreui-form__group_content\"<% if ( ! group.show) { %> style=\"display:none\"<% } %>>\\n        <%- content %>\\n    </div>\\n</div>';\ntpl['form-field-label.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__field_container d-flex flex-column flex-md-row mb-3\"\\n     <% if ( ! field.show) { %> style=\"display:none\"<% } %>>\\n    <% if (field.labelWidth !== 0 && field.labelWidth !== \\'0px\\') { %>\\n    <div class=\"coreui-form__field_label text-md-end text-sm-start pe-2\"<% if (field.labelWidth) { %> style=\"min-width:<%= field.labelWidth %>;width:<%= field.labelWidth %>\"<% } %>>\\n        <div class=\"coreui-form__field_label_content col-form-label-sm\">\\n            <% if (field.required) { %>\\n            <span class=\"coreui-form__field_label_req text-danger\">*</span>\\n            <% } %>\\n            <span class=\"coreui-form__field_label_text fw-medium\"><%- field.label %></span>\\n        </div>\\n\\n        <% if (field.description) { %>\\n        <div class=\"coreui-form__field_label_description text-muted\">\\n            <small><%- field.description %></small>\\n        </div>\\n        <% } %>\\n    </div>\\n    <% } %>\\n    <div class=\"coreui-form__field_content flex-fill pt-1\">\\n        <div class=\"d-inline-block content-<%= hash %>\">\\n            <%- content %>\\n        </div>\\n\\n        <% if (field.outContent) { %>\\n        <span class=\"coreui-form__field-content-out d-inline-block align-top pt-1 ps-1\">\\n            <%- field.outContent %>\\n        </span>\\n        <% } %>\\n\\n        <% if (attachFields && attachFields.length > 0) { %>\\n            <% $.each(attachFields, function(key, attachField) { %>\\n                <div class=\"<% if (attachField.hasOwnProperty(\\'direction\\') && attachField.direction === \\'column\\') { %>d-block mt-2<% } else { %>d-inline-block<% } %> content-<%= attachField.hash %>\">\\n                    <%- attachField.content %>\\n                </div>\\n            <% }); %>\\n        <% } %>\\n    </div>\\n</div>';\ntpl['form.html'] = '<div id=\"coreui-form-<%= form.id %>\" class=\"coreui-form mb-2\"\\n    <% if (widthSizes) { %>style=\"<%= widthSizes.join(\\';\\') %>\"<% } %>>\\n    <% if (form.title) { %>\\n    <h5 class=\"mb-4\"><%- form.title %></h5>\\n    <% } %>\\n\\n    <form action=\"<%= form.send.url %>\" method=\"<%= form.send.method %>\"<%- formAttr %>>\\n        <div class=\"coreui-form__fields d-flex justify-content-start flex-column flex-wrap\">\\n            <%- layout %>\\n        </div>\\n\\n        <% if (controls) { %>\\n        <div class=\"coreui-form__controls d-flex justify-content-start flex-sm-wrap flex-md-nowrap\">\\n            <% if (form.controlsOffset !== 0 && form.controlsOffset !== \\'0px\\') { %>\\n            <div class=\"d-none d-md-block\" style=\"width:<%= form.controlsOffset %>;min-width:<%= form.controlsOffset %>\"></div>\\n            <% } %>\\n\\n            <div class=\"d-flex justify-content-start flex-wrap gap-2\">\\n                <% $.each(controls, function(key, control) { %>\\n                <div id=\"coreui-form-<%= form.id %>-control-<%= control.index %>\" class=\"coreui-form__control_container\"\\n                     <% if ( ! control.show) { %>style=\"display:none\"<% } %>>\\n                    <%- control.content %>\\n                </div>\\n                <% }); %>\\n            </div>\\n        </div>\\n        <% } %>\\n    </form>\\n</div>';\ntpl['controls/button.html'] = '<button <%- render.attr %>><%- control.content %></button>';\ntpl['controls/link.html'] = '<a href=\"<%- control.href %>\"<%- render.attr %>><%- control.content %></a>';\ntpl['fields/checkbox.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItems.join(\\', \\') %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/color.html'] = '<% if (field.readonly) { %>\\n    <div class=\"rounded-1\" style=\"width: 14px;height: 14px;background-color: <%= value %>\"></div>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/custom.html'] = '<%- content %>';\ntpl['fields/dataset-row-readonly.html'] = '<tr class=\"coreui-form__field-dataset-item\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-2 pb-1\">\\n            <%- option.value %>\\n        </td>\\n    <% }); %>\\n</tr>';\ntpl['fields/dataset-row.html'] = '<tr class=\"coreui-form__field-dataset-item\" id=\"dataset-item-<%= hashItem %>\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-1 pb-1\">\\n        <% if (option.type === \\'select\\') { %>\\n            <select <%- option.attr %>>\\n                <% $.each(option.items, function(key, item) { %>\\n                <option <%- item.attr %>><%- item.title %></option>\\n                <% }); %>\\n            </select>\\n        <% } else if (option.type === \\'switch\\') { %>\\n            <div class=\"form-check form-switch\">\\n                <input <%- option.attr %>/>\\n            </div>\\n        <% } else { %>\\n            <input <%- option.attr %>>\\n        <% } %>\\n        </td>\\n    <% }); %>\\n\\n    <td class=\"pb-1\">\\n        <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-remove\" data-item-id=\"dataset-item-<%= hashItem %>\">\\n            <i class=\"bi bi-x text-muted\"></i>\\n        </button>\\n    </td>\\n</tr>';\ntpl['fields/dataset.html'] = '<% if (field.readonly) { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted pe-2\"><small><%= item.title %></small></td>\\n                <% }); %>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n            <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n<% } else { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted\"><small><%= item.title %></small></td>\\n                <% }); %>\\n                <td></td>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n                <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n    <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-add\"><%= lang.dataset_add %></button>\\n<% } %>';\ntpl['fields/hidden.html'] = '<% if ( ! field.readonly) { %>\\n    <input <%- render.attr %>/>\\n<% } %>';\ntpl['fields/input.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/modal-loading.html'] = '<div class=\"py-4 d-flex justify-content-center align-items-center gap-2\">\\n    <div class=\"spinner-border mr-2\"></div> <%= lang.modal_loading %>\\n</div>\\n';\ntpl['fields/modal.html'] = '<% if (field.readonly) { %>\\n    <%= text %>\\n<% } else { %>\\n    <div class=\"input-group\"<% if (render.width) { %> style=\"width:<%= render.width %>\"<% } %>>\\n        <input <%- render.attr %>/>\\n        <input type=\"hidden\" name=\"<%= field.name %>\" value=\"<%= value %>\" class=\"coreui-form-modal-value\"/>\\n        <% if ( ! field.required) { %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-clear border-secondary-subtle\" type=\"button\">\\n            <i class=\"bi bi-x\"></i>\\n        </button>\\n        <% } %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-select border-secondary-subtle\" type=\"button\"><%= lang.modal_select %></button>\\n    </div>\\n<% } %>';\ntpl['fields/passwordRepeat.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <div class=\"d-flex gap-1 align-items-center\">\\n        <input <%- render.attr %>/>\\n        <small class=\"password-text-repeat\"><%= lang.repeat %></small>\\n\\n        <% if (field.showBtn) { %>\\n            <div class=\"input-group flex-nowrap\">\\n                <input <%- render.attr2 %>/>\\n                <button class=\"btn btn-sm btn-outline-secondary border-secondary-subtle btn-password-change\" type=\"button\"\\n                        data-change=\"<%- lang.change %>\" data-cancel=\"<%- lang.cancel %>\"><%= btn_text %></button>\\n            </div>\\n        <% } else { %>\\n            <input <%- render.attr2 %>/>\\n        <% } %>\\n\\n    </div>\\n<% } %>';\ntpl['fields/radio.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItem %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/select.html'] = '<% if (field.readonly) { %>\\n    <%= render.selectedOptions.join(\\', \\') %>\\n<% } else { %>\\n    <select <%- render.attr %>>\\n        <% $.each(render.options, function(key, option) { %>\\n            <% if (option.type === \\'group\\') { %>\\n                <optgroup<%- option.attr %>/>\\n                <% $.each(option.options, function(key, groupOption) { %>\\n                    <option <%- groupOption.attr %>/><%= groupOption.text %></option>\\n                <% }); %>\\n                </optgroup>\\n            <% } else { %>\\n            <option <%- option.attr %>/><%= option.text %></option>\\n            <% } %>\\n        <% }); %>\\n    </select>\\n<% } %>';\ntpl['fields/switch.html'] = '<% if (field.readonly) { %>\\n    <%= field.valueY == value ? lang.switch_yes : lang.switch_no %>\\n<% } else { %>\\n    <div class=\"form-check form-switch\">\\n        <input <%- render.attr %>/>\\n    </div>\\n<% } %>';\ntpl['fields/textarea.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea <%- render.attr %>><%- value %></textarea>\\n<% } %>';\ntpl['fields/wysiwyg.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea name=\"<%= field.name %>\" id=\"editor-<%= editorHash %>\"><%- value %></textarea>\\n<% } %>';\n\nlet coreuiFormUtils$1 = {\r\n\r\n    /**\r\n     * Получение значения поля\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               fieldOptions\r\n     * @returns {string|number|null}\r\n     */\r\n    getFieldValue: function (form, fieldOptions) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        if (fieldOptions &&\r\n            formRecord &&\r\n            typeof fieldOptions.name === 'string' &&\r\n            typeof formRecord === 'object' &&\r\n            formRecord.hasOwnProperty(fieldOptions.name) &&\r\n            ['string', 'number', 'object'].indexOf(typeof formRecord[fieldOptions.name]) >= 0\r\n        ) {\r\n            return formRecord[fieldOptions.name];\r\n        }\r\n\r\n        return '';\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение функции из указанного текста\r\n     * @param functionName\r\n     * @param context\r\n     * @returns {null|Window}\r\n     * @private\r\n     */\r\n    getFunctionByName: function(functionName, context) {\r\n\r\n        let namespaces = functionName.split(\".\");\r\n        let func       = namespaces.pop();\r\n\r\n        context = context || window;\r\n\r\n        for (let i = 0; i < namespaces.length; i++) {\r\n            if (context.hasOwnProperty(namespaces[i])) {\r\n                context = context[namespaces[i]];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        if (typeof context[func] === 'function') {\r\n            return context[func];\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Обработка полей в полях\r\n     * @param form\r\n     * @param defaultOptions\r\n     * @param fieldOptions\r\n     */\r\n    mergeFieldOptions: function (form, defaultOptions, fieldOptions) {\r\n\r\n        let options = $.extend(true, {}, defaultOptions);\r\n\r\n        if (fieldOptions) {\r\n            if (options.hasOwnProperty('attr') && typeof options.attr === 'object' &&\r\n                fieldOptions.hasOwnProperty('attr') && typeof fieldOptions.attr === 'object'\r\n            ) {\r\n                fieldOptions.attr = this.mergeAttr(options.attr, fieldOptions.attr);\r\n            }\r\n\r\n            options = $.extend(true, {}, options, fieldOptions);\r\n        }\r\n\r\n        if (options.hasOwnProperty('width')) {\r\n            if (options.width) {\r\n                let unit = typeof options.width === 'number' ? 'px' : '';\r\n                options.width = options.width + unit;\r\n\r\n            } else if (form._options.fieldWidth && options.type !== 'color') {\r\n                let unit = typeof form._options.fieldWidth === 'number' ? 'px' : '';\r\n                options.width = form._options.fieldWidth + unit;\r\n            }\r\n        }\r\n\r\n        if (options.hasOwnProperty('labelWidth')) {\r\n            if (options.labelWidth >= 0 && options.labelWidth !== null) {\r\n                let unit = typeof options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = options.labelWidth + unit;\r\n\r\n            } else if (form._options.labelWidth) {\r\n                let unit = typeof form._options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = form._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        return options\r\n    },\r\n\r\n\r\n    /**\r\n     * Объединение атрибутов\r\n     * @param attr1\r\n     * @param attr2\r\n     * @returns {object}\r\n     */\r\n    mergeAttr: function (attr1, attr2) {\r\n\r\n        let mergeAttr = Object.assign({}, attr1);\r\n\r\n        if (typeof attr2 === 'object') {\r\n            $.each(attr2, function (name, value) {\r\n                if (mergeAttr.hasOwnProperty(name)) {\r\n                    if (name === 'class') {\r\n                        mergeAttr[name] += ' ' + value;\r\n\r\n                    } else if (name === 'style') {\r\n                        mergeAttr[name] += ';' + value;\r\n\r\n                    } else {\r\n                        mergeAttr[name] = value;\r\n                    }\r\n\r\n                } else {\r\n                    mergeAttr[name] = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return mergeAttr;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация и рендер дополнительных полей\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @returns {object}\r\n     * @private\r\n     */\r\n    getAttacheFields: function(form, options) {\r\n\r\n        let fields = [];\r\n\r\n        if (typeof options === 'object' &&\r\n            typeof(options.fields) === 'object' &&\r\n            Array.isArray(options.fields)\r\n        ) {\r\n            $.each(options.fields, function (key, field) {\r\n                let instance = form.initField(field);\r\n\r\n                if (typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                fields.push({\r\n                    hash: instance._hash,\r\n                    direction: options.hasOwnProperty('fieldsDirection') ? options.fieldsDirection : 'row',\r\n                    content: instance.renderContent()\r\n                });\r\n            });\r\n        }\r\n\r\n        return fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDate: function (value) {\r\n\r\n        if (value && value.length === 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDateTime: function (value) {\r\n\r\n        if (value && value.length >= 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n            let hour  = (\"00\" + date.getHours()).slice(-2);\r\n            let min   = (\"00\" + date.getMinutes()).slice(-2);\r\n            let sec   = (\"00\" + date.getSeconds()).slice(-2);\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year + ' ' + hour + ':' + min + ':' + sec;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateMonth: function (value, lang) {\r\n\r\n        if (value && value.length === 7) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth();\r\n\r\n            let monthLang = lang.date_months.hasOwnProperty(month) ? lang.date_months[month] : '';\r\n\r\n            value = monthLang + ' ' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateWeek: function (value, lang) {\r\n\r\n        if (value && value.length >= 7) {\r\n            let year = value.substring(0, 4);\r\n            let week = value.substring(6);\r\n\r\n            value = year + ' ' + lang.date_week + ' ' + week;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из объекта по указанному пути\r\n     * @param {object} obj\r\n     * @param {string} path\r\n     * @return {*}\r\n     */\r\n    getObjValue: function(obj, path) {\r\n\r\n        path = path.split('.');\r\n\r\n        for (let i = 0, len = path.length; i < len; i++){\r\n            obj = obj[path[i]];\r\n        }\r\n\r\n        return obj;\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка на число\r\n     * @param num\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    isNumeric: function(num) {\r\n        return (typeof(num) === 'number' || typeof(num) === \"string\" && num.trim() !== '') && ! isNaN(num);\r\n    },\r\n\r\n\r\n    /**\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    hashCode: function() {\r\n        return this.crc32((new Date().getTime() + Math.random()).toString()).toString(16);\r\n    },\r\n\r\n\r\n    /**\r\n     * Hash crc32\r\n     * @param str\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    crc32: function (str) {\r\n\r\n        for (var a, o = [], c = 0; c < 256; c++) {\r\n            a = c;\r\n            for (var f = 0; f < 8; f++) {\r\n                a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;\r\n            }\r\n            o[c] = a;\r\n        }\r\n\r\n        for (var n = -1, t = 0; t < str.length; t++) {\r\n            n = n >>> 8 ^ o[255 & (n ^ str.charCodeAt(t))];\r\n        }\r\n\r\n        return (-1 ^ n) >>> 0;\r\n    },\r\n\r\n\r\n    /**\r\n     * Округление\r\n     * @param number\r\n     * @param precision\r\n     * @returns {number}\r\n     */\r\n    round: function (number, precision) {\r\n\r\n        precision = typeof precision !== 'undefined' ? parseInt(precision) : 0;\r\n\r\n        if (precision === 0) {\r\n            return Math.round(number);\r\n\r\n        } else if (precision > 0) {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number * pow) / pow;\r\n\r\n        } else {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number / pow) * pow;\r\n        }\r\n    }\r\n};\n\nlet coreuiFormInstance = {\r\n\r\n    _options: {\r\n        id: null,\r\n        title: '',\r\n        lang: 'en',\r\n        send: {\r\n            url: '',\r\n            method: 'POST',\r\n            format: 'form',\r\n        },\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        labelWidth: 200,\r\n        controlsOffset: null,\r\n        readonly: false,\r\n        validate: false,\r\n        successLoadUrl: '',\r\n        errorClass: '',\r\n        layout: '[column_default]',\r\n        onSubmit: null,\r\n        record: {},\r\n        fields: [],\r\n        controls: []\r\n    },\r\n\r\n    _lock: false,\r\n    _fieldsIndex: 0,\r\n    _groupsIndex: 0,\r\n    _controlsIndex: 0,\r\n    _groups: [],\r\n    _fields: [],\r\n    _controls: [],\r\n    _events: {},\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {object} options\r\n     * @private\r\n     */\r\n    _init: function (options) {\r\n\r\n        this._options.labelWidth    = coreuiForm$1.getSetting('labelWidth');\r\n        this._options.lang          = coreuiForm$1.getSetting('lang');\r\n        this._options.errorClass    = coreuiForm$1.getSetting('errorClass');\r\n        this._options.send.format = coreuiForm$1.getSetting('sendDataFormat');\r\n\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        if ( ! this._options.id) {\r\n            this._options.id = coreuiFormUtils$1.hashCode();\r\n        }\r\n\r\n        if (this._options.hasOwnProperty('labelWidth')) {\r\n            if (this._options.labelWidth >= 0 && this._options.labelWidth !== null) {\r\n                let unit = typeof this._options.labelWidth === 'number' ? 'px' : '';\r\n                this._options.labelWidth = this._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        if ( ! this._options.hasOwnProperty('controlsOffset') || this._options.controlsOffset === null) {\r\n            this._options.controlsOffset = this._options.labelWidth;\r\n        } else {\r\n            if (this._options.controlsOffset >= 0) {\r\n                let unit = typeof this._options.controlsOffset === 'number' ? 'px' : '';\r\n                this._options.controlsOffset = this._options.controlsOffset + unit;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    initEvents: function () {\r\n\r\n        let that          = this;\r\n        let formContainer = '#coreui-form-' + this._options.id + ' > form';\r\n\r\n        $(formContainer).on('submit', function () {\r\n            setTimeout(function () {\r\n                that.send.apply(that);\r\n            }, 0);\r\n            return false;\r\n        });\r\n\r\n        this._trigger('shown.coreui.form');\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение id формы\r\n     * @return {string|null}\r\n     */\r\n    getId: function () {\r\n\r\n        return this._options.hasOwnProperty('id') ? this._options.id : null;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    render: function(element) {\r\n\r\n        let that       = this;\r\n        let widthSizes = [];\r\n        let layout     = this._options.layout;\r\n        let controls   = [];\r\n        let formAttr   = [];\r\n\r\n\r\n\r\n        if (this._options.width) {\r\n            let unit = typeof this._options.width === 'number' ? 'px' : '';\r\n            widthSizes.push('width:' + this._options.width + unit);\r\n        }\r\n\r\n        if (this._options.minWidth) {\r\n            let unit = typeof this._options.minWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('min-width:' + this._options.minWidth + unit);\r\n        }\r\n\r\n        if (this._options.maxWidth) {\r\n            let unit = typeof this._options.maxWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('max-width:' + this._options.maxWidth + unit);\r\n        }\r\n\r\n\r\n\r\n        // Поля\r\n        if (typeof this._options.fields === 'object' &&\r\n            Array.isArray(this._options.fields) &&\r\n            this._options.fields.length > 0 &&\r\n            layout &&\r\n            typeof layout === 'string'\r\n        ) {\r\n            let matches        = Array.from(layout.matchAll(/\\[column_([\\w_\\d]+)\\]/g));\r\n            let columns        = [];\r\n            let columnsContent = {};\r\n\r\n            if (matches.length > 0) {\r\n                $.each(matches, function (key, match) {\r\n                    columns.push(match[1]);\r\n                });\r\n            }\r\n\r\n            if (columns.length > 0) {\r\n                $.each(this._options.fields, function (key, field) {\r\n                    let column = field.hasOwnProperty('column') && (typeof field.column === 'string' || typeof field.column === 'number')\r\n                        ? (columns.indexOf(field.column) >= 0 ? field.column : null)\r\n                        : 'default';\r\n\r\n                    if (typeof column !== 'string') {\r\n                        return;\r\n                    }\r\n\r\n                    let type     = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : '';\r\n                    let instance = null;\r\n\r\n                    if (type === 'group') {\r\n                        instance = that.initGroup(field);\r\n\r\n                    } else {\r\n                        instance = that.initField(field);\r\n                    }\r\n\r\n\r\n                    if ( ! instance || typeof instance !== 'object') {\r\n                        return;\r\n                    }\r\n\r\n                    if ( ! columnsContent.hasOwnProperty(column)) {\r\n                        columnsContent[column] = [];\r\n                    }\r\n                    columnsContent[column].push(instance.render());\r\n                });\r\n            }\r\n\r\n            if (Object.keys(columnsContent).length >= 0) {\r\n                $.each(columnsContent, function (name, fieldContents) {\r\n\r\n                    layout = layout.replace('[column_' + name + ']', fieldContents.join(''));\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        // Элементы управления\r\n        if (typeof this._options.controls === 'object' &&\r\n            Array.isArray(this._options.controls) &&\r\n            this._options.controls.length > 0\r\n        ) {\r\n            $.each(this._options.controls, function (key, control) {\r\n                let instance = that.initControl(control);\r\n\r\n                if ( ! instance || typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                controls.push({\r\n                    show: ! control.hasOwnProperty('show') || control.show,\r\n                    index: that._controlsIndex - 1,\r\n                    content: instance.render()\r\n                });\r\n            });\r\n        }\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            formAttr.push('novalidate');\r\n        }\r\n\r\n\r\n        let html = ejs.render(tpl['form.html'], {\r\n            form: this._options,\r\n            formAttr: formAttr ? ' ' + formAttr.join(' ') : '',\r\n            widthSizes: widthSizes,\r\n            layout: layout,\r\n            controls: controls,\r\n        });\r\n\r\n        if (element === undefined) {\r\n            return html;\r\n        }\r\n\r\n        // Dom element\r\n        let domElement = {};\r\n\r\n        if (typeof element === 'string') {\r\n            domElement = document.getElementById(element);\r\n\r\n            if ( ! domElement) {\r\n                return '';\r\n            }\r\n\r\n        } else if (element instanceof HTMLElement) {\r\n            domElement = element;\r\n        }\r\n\r\n\r\n        domElement.innerHTML = html;\r\n\r\n        this.initEvents();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        this._lock = true;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.lock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Разблокировка\r\n     */\r\n    unlock: function () {\r\n\r\n        this._lock = false;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.unlock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Отправка данных формы\r\n     */\r\n    send: function () {\r\n\r\n        if (this._lock) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            let isValid = this.validate();\r\n\r\n            if ( ! isValid) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let onsubmit = null;\r\n        let data     = this.getData();\r\n\r\n        if (typeof this._options.onSubmit === 'function') {\r\n            onsubmit = this._options.onSubmit;\r\n\r\n        } else if (typeof this._options.onSubmit === 'string' && this._options.onSubmit) {\r\n            let func = coreuiFormUtils$1.getFunctionByName(this._options.onSubmit);\r\n\r\n            if (typeof func === 'function') {\r\n                onsubmit = func;\r\n            } else if (typeof this._options.onSubmit === 'string') {\r\n                let onSubmitText = this._options.onSubmit;\r\n\r\n                onsubmit = function(form, data) {\r\n                    try {\r\n                        eval(onSubmitText);\r\n                    } catch (e) {\r\n                        throw Error('Incorrect onSubmit param: ' + e.message)\r\n                    }\r\n                };\r\n            }\r\n        }\r\n\r\n        if (typeof onsubmit === 'function') {\r\n            let onSubmitResult = onsubmit(this, data);\r\n\r\n            if (onSubmitResult === false) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let results    = this._trigger('send.coreui.form', this, [ this, data ]);\r\n        let isStopSend = false;\r\n\r\n        $.each(results, function(key, result) {\r\n            if (result === false) {\r\n                isStopSend = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        if (isStopSend) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.lock();\r\n\r\n        let that       = this;\r\n        let sendFormat = ['form', 'json'].indexOf(this._options.send.format) >= 0\r\n            ? this._options.send.format\r\n            : 'form';\r\n\r\n        let dataFormat  = null;\r\n        let contentType = null;\r\n\r\n        if (sendFormat === 'json') {\r\n            contentType = \"application/json; charset=utf-8\";\r\n            dataFormat  = JSON.stringify(data);\r\n\r\n        } else {\r\n            contentType = false;\r\n            dataFormat  = new FormData();\r\n\r\n            $.each(data, function (name, value) {\r\n                if (value instanceof File) {\r\n                    dataFormat.append(name, value, value.name);\r\n\r\n                } else if (value instanceof FileList) {\r\n                    $.each(value, function (key, file) {\r\n                        dataFormat.append(name, file, file.name);\r\n                    });\r\n\r\n                } else {\r\n                    dataFormat.append(name, value);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        $.ajax({\r\n            url: this._options.send.url,\r\n            method: this._options.send.method,\r\n            data: dataFormat,\r\n            contentType: contentType,\r\n            processData: false,\r\n            beforeSend: function(xhr) {\r\n                that._trigger('start-send.coreui.form', that, [ that, xhr ]);\r\n            },\r\n            success: function (result) {\r\n                that.hideError();\r\n\r\n                that._trigger('success-send.coreui.form', that, [ that, result ]);\r\n\r\n                let jsonResponse = null;\r\n\r\n                if (typeof result === 'string') {\r\n                    try {\r\n                        let parsedResponse = JSON.parse(result);\r\n                        if (typeof parsedResponse === 'object' &&\r\n                            parsedResponse !== null &&\r\n                            ! Array.isArray(parsedResponse)\r\n                        ) {\r\n                            jsonResponse = parsedResponse;\r\n                        }\r\n\r\n                    } catch (e) {\r\n                        // ignore\r\n                    }\r\n                } else {\r\n                    jsonResponse = result;\r\n                }\r\n\r\n                if (jsonResponse !== null && typeof jsonResponse === 'object') {\r\n                    if (jsonResponse.hasOwnProperty('scripts') &&\r\n                        Array.isArray(jsonResponse.scripts)\r\n                    ) {\r\n                        $.each(jsonResponse.scripts, function (key, script) {\r\n                            if (typeof script === 'string') {\r\n                                let func = coreuiFormUtils$1.getFunctionByName(script);\r\n\r\n                                if (typeof func === 'function') {\r\n                                    func();\r\n                                } else {\r\n                                    eval(script);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (jsonResponse.hasOwnProperty('loadUrl') &&\r\n                        typeof jsonResponse.loadUrl === 'string'\r\n                    ) {\r\n                        location.href = jsonResponse.loadUrl;\r\n                    }\r\n                }\r\n\r\n                if (that._options.hasOwnProperty('successLoadUrl') &&\r\n                    typeof that._options.successLoadUrl === 'string'\r\n                ) {\r\n                    let successLoadUrl = that._options.successLoadUrl;\r\n\r\n                    // Замена параметров\r\n                    if (jsonResponse !== null && typeof jsonResponse === 'object') {\r\n                        const regx      = new RegExp('\\\\[response\\\\.([\\\\d\\\\w\\\\.]+)\\\\]', 'uig');\r\n                        let   urlParams = {};\r\n\r\n                        while (result = regx.exec(successLoadUrl)) {\r\n                            urlParams[result[0]] = result[1];\r\n                        }\r\n\r\n                        if (Object.keys(urlParams).length > 0) {\r\n                            $.each(urlParams, function (param, path) {\r\n                                let value = coreuiFormUtils$1.getObjValue(jsonResponse, path);\r\n                                value = typeof value !== 'undefined' ? value : '';\r\n\r\n                                successLoadUrl = successLoadUrl.replace(\r\n                                    new RegExp(param.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'g'),\r\n                                    value\r\n                                );\r\n                            });\r\n                        }\r\n                    }\r\n\r\n\r\n                    let equalUrl = location.href === successLoadUrl;\r\n\r\n                    location.href = successLoadUrl;\r\n\r\n                    if (equalUrl) {\r\n                        window.onhashchange();\r\n                    }\r\n                }\r\n            },\r\n            error: function(xhr, textStatus, errorThrown) {\r\n                let errorMessage = that.getLang().send_error || '';\r\n                let data         = {};\r\n\r\n                try {\r\n                    let parsedResponse = JSON.parse(xhr.responseText);\r\n                    if (typeof parsedResponse === 'object' &&\r\n                        parsedResponse !== null &&\r\n                        ! Array.isArray(parsedResponse)\r\n                    ) {\r\n                        data = parsedResponse;\r\n                    }\r\n\r\n                } catch (e) {\r\n                    // ignore\r\n                }\r\n\r\n                if (data.hasOwnProperty('error_message') &&\r\n                    typeof data.error_message === 'string' &&\r\n                    data.error_message !== ''\r\n                ) {\r\n                    errorMessage = data.error_message;\r\n                }\r\n\r\n                that.showError(errorMessage);\r\n                that._trigger('error-send.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n            },\r\n            complete: function(xhr, textStatus) {\r\n                that.unlock();\r\n                that._trigger('end-send.coreui.form', that, [ that, xhr, textStatus ]);\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return this._options;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение записи\r\n     * @returns {object}\r\n     */\r\n    getRecord: function () {\r\n\r\n        if (this._options.hasOwnProperty('record') && typeof this._options.record === 'object') {\r\n            return this._options.record;\r\n        }\r\n\r\n        return {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение данных с формы\r\n     * @returns {object}\r\n     */\r\n    getData: function () {\r\n\r\n        let data = {};\r\n\r\n        $.each(this._fields, function (key, field) {\r\n            let fieldOptions = field.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name) {\r\n                data[fieldOptions.name] = field.getValue();\r\n            }\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение полей\r\n     * @returns {object}\r\n     */\r\n    getFields: function () {\r\n        return this._fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение элементов управления\r\n     * @returns {object}\r\n     */\r\n    getControls: function () {\r\n        return this._controls;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение групп полей\r\n     * @returns {object}\r\n     */\r\n    getGroups: function () {\r\n        return this._groups;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение поля\r\n     * @param {string} name\r\n     * @returns {object}\r\n     */\r\n    getField: function (name) {\r\n\r\n        let field = {};\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            let fieldOptions = fieldInstance.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name === name) {\r\n                field = fieldInstance;\r\n            }\r\n        });\r\n\r\n        return field;\r\n    },\r\n\r\n\r\n    /**\r\n     * Смена состояний полей формы\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            fieldInstance.readonly(isReadonly);\r\n        });\r\n\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                if (isReadonly) {\r\n                    control.hide();\r\n                } else {\r\n                    control.show();\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ всех элементов управления\r\n     */\r\n    showControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.show();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие всех элементов управления\r\n     */\r\n    hideControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.hide();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Валидация полей\r\n     * @return {boolean}\r\n     */\r\n    validate: function () {\r\n\r\n        let isValid = true;\r\n\r\n        $.each(this._fields, function (key, field) {\r\n\r\n            if (field.isValid() === false) {\r\n                field.validate(false);\r\n                isValid = false;\r\n\r\n            } else {\r\n                field.validate(null);\r\n            }\r\n        });\r\n\r\n        return isValid;\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ сообщения с ошибкой\r\n     * @param {string} message\r\n     * @param {object} options\r\n     */\r\n    showError: function (message, options) {\r\n\r\n        let formContainer = $('#coreui-form-' + this._options.id + ' > form');\r\n        let formError     = formContainer.find('> .coreui-form__error');\r\n\r\n        if (formError[0]) {\r\n            formError.remove();\r\n        }\r\n\r\n        options = typeof options === 'object' && ! Array.isArray(options) && options !== null ? options : {};\r\n\r\n        if (typeof this._options.errorClass === 'string' && this._options.errorClass !== '') {\r\n            options.class = options.hasOwnProperty('class') ? options.class : '';\r\n            options.class += ' ' + this._options.errorClass;\r\n        }\r\n\r\n        let errorOptions = {\r\n            class:   options.hasOwnProperty('class') && typeof options.class === 'string' ? options.class : '',\r\n            dismiss: options.hasOwnProperty('dismiss') ? !! options.dismiss : true,\r\n        };\r\n\r\n        formContainer.prepend(\r\n            ejs.render(tpl['form-error.html'], {\r\n                message: message,\r\n                options: errorOptions,\r\n            })\r\n        );\r\n\r\n\r\n        if ( ! options.hasOwnProperty('scroll') || options.scroll) {\r\n            let scrollOffset = coreuiForm$1.getSetting('errorMessageScrollOffset');\r\n\r\n            $('html,body').animate({\r\n                scrollTop : formContainer.offset().top - scrollOffset\r\n            }, 'fast');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие сообщения с ошибкой\r\n     */\r\n    hideError: function () {\r\n\r\n        $('#coreui-form-' + this._options.id + ' > form > .coreui-form__error').remove();\r\n    },\r\n\r\n\r\n    /**\r\n     * @param eventName\r\n     * @param callback\r\n     * @param context\r\n     * @param singleExec\r\n     */\r\n    on: function(eventName, callback, context, singleExec) {\r\n        if (typeof this._events[eventName] !== 'object') {\r\n            this._events[eventName] = [];\r\n        }\r\n        this._events[eventName].push({\r\n            context : context || this,\r\n            callback: callback,\r\n            singleExec: !! singleExec,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление формы\r\n     */\r\n    destruct: function () {\r\n\r\n        $('#coreui-form-' + this._options.id).remove();\r\n        delete coreuiForm$1._instances[this.getId()];\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация поля\r\n     * @param field\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initField: function (field) {\r\n\r\n        if (typeof field !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : 'input';\r\n\r\n        if (type === 'group') {\r\n            return null;\r\n        }\r\n\r\n        if ( ! coreuiForm$1.fields.hasOwnProperty(type)) {\r\n            type = 'input';\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            field.readonly = true;\r\n        }\r\n\r\n\r\n        let fieldInstance = $.extend(true, {\r\n            render:        function () {},\r\n            renderContent: function () {},\r\n            init:          function () {},\r\n            getValue:      function () {},\r\n            setValue:      function () {},\r\n            getOptions:    function () {},\r\n            show:          function () {},\r\n            hide:          function () {},\r\n            readonly:      function () {},\r\n            validate:      function () {},\r\n            isValid:       function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        fieldInstance.init(this, field, this._fieldsIndex++);\r\n\r\n        this._fields.push(fieldInstance);\r\n\r\n        return fieldInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация группы\r\n     * @param group\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initGroup: function (group) {\r\n\r\n        if (typeof group !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = group.hasOwnProperty('type') && typeof group.type === 'string' ? group.type : '';\r\n\r\n        if (type !== 'group') {\r\n            return null;\r\n        }\r\n\r\n        let groupInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            expand:     function () {},\r\n            collapse:   function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        groupInstance.init(this, group, this._groupsIndex++);\r\n\r\n        this._groups.push(groupInstance);\r\n\r\n        return groupInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация контролов\r\n     * @param control\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initControl: function (control) {\r\n\r\n        if (typeof control !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : null;\r\n\r\n        if ( ! type || ! coreuiForm$1.controls.hasOwnProperty(type)) {\r\n            return null;\r\n        }\r\n\r\n        if (type === 'submit' && this._options.readonly) {\r\n            control.show = false;\r\n        }\r\n\r\n\r\n        let controlInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            show:       function () {},\r\n            hide:       function () {},\r\n        }, coreuiForm$1.controls[type]);\r\n\r\n        controlInstance.init(this, control, this._controlsIndex++);\r\n\r\n        this._controls.push(controlInstance);\r\n\r\n        return controlInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение настроек языка\r\n     * @private\r\n     */\r\n    getLang: function () {\r\n\r\n        return coreuiForm$1.lang.hasOwnProperty(this._options.lang)\r\n            ? coreuiForm$1.lang[this._options.lang]\r\n            : coreuiForm$1.lang['ru'];\r\n    },\r\n\r\n\r\n    /**\r\n     * @param name\r\n     * @param context\r\n     * @param params\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _trigger: function(name, context, params) {\r\n\r\n        params = params || [];\r\n        let results = [];\r\n\r\n        if (this._events[name] instanceof Object && this._events[name].length > 0) {\r\n            for (var i = 0; i < this._events[name].length; i++) {\r\n                let callback = this._events[name][i].callback;\r\n\r\n                context = context || this._events[name][i].context;\r\n\r\n                results.push(\r\n                    callback.apply(context, params)\r\n                );\r\n\r\n                if (this._events[name][i].singleExec) {\r\n                    this._events[name].splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n\r\n    /**\r\n     * @param {object} control\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderControl: function (control) {\r\n\r\n        let content = '';\r\n        let type    = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : 'text';\r\n\r\n        if (coreuiForm$1.control.hasOwnProperty(type)) {\r\n            content = coreuiForm$1.control[type].render(control);\r\n        }\r\n\r\n        return content;\r\n    }\r\n};\n\nvar coreuiForm$1 = {\r\n\r\n    lang: {},\r\n    fields: {},\r\n    controls: {},\r\n\r\n    _instances: {},\r\n    _settings: {\r\n        labelWidth: 200,\r\n        lang: 'en',\r\n        class: '',\r\n        sendDataFormat: 'form',\r\n        errorMessageScrollOffset: 70\r\n    },\r\n\r\n\r\n    /**\r\n     * Создание экземпляра формы\r\n     * @param {object} options\r\n     * @returns {coreuiFormInstance}\r\n     */\r\n    create: function (options) {\r\n\r\n        let instance = $.extend(true, {}, coreuiFormInstance);\r\n        instance._init(options instanceof Object ? options : {});\r\n\r\n        let formId = instance.getId();\r\n        this._instances[formId] = instance;\r\n\r\n        return instance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение экземпляра формы по id\r\n     * @param {string} id\r\n     * @returns {coreuiFormInstance|null}\r\n     */\r\n    get: function (id) {\r\n\r\n        if ( ! this._instances.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        if ($('#coreui-form-' + this._instances[id])[0]) {\r\n            delete this._instances[id];\r\n            return null;\r\n        }\r\n\r\n        return this._instances[id];\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка настроек\r\n     * @param {object} settings\r\n     */\r\n    setSettings: function(settings) {\r\n\r\n        this._settings = $.extend({}, this._settings, settings);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения настройки\r\n     * @param {string} name\r\n     */\r\n    getSetting: function(name) {\r\n\r\n        let value = null;\r\n\r\n        if (this._settings.hasOwnProperty(name)) {\r\n            value = this._settings[name];\r\n        }\r\n\r\n        return value;\r\n    }\r\n};\n\ncoreuiForm$1.lang.ru = {\r\n    \"modal_select\": \"Выбрать\",\r\n    \"modal_loading\": \"Загрузка...\",\r\n    \"switch_yes\": \"Да\",\r\n    \"switch_no\": \"Нет\",\r\n    \"dataset_add\": \"Добавить\",\r\n    \"date_months\": ['Январь','Февраль','Март','Апрель','Май','Июнь', 'Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\r\n    \"date_week\": \"неделя\",\r\n    \"send_error\": \"Произошла ошибка. Попробуйте снова или обратитесь к администратору\",\r\n    \"required_field\": \"Обязательное поле\",\r\n    \"repeat\": \"повторите\",\r\n    \"change\": \"изменить\",\r\n    \"cancel\": \"отмена\"\r\n};\n\ncoreuiForm$1.lang.en = {\r\n    \"modal_select\": \"Select\",\r\n    \"modal_loading\": \"Loading...\",\r\n    \"switch_yes\": \"Yes\",\r\n    \"switch_no\": \"No\",\r\n    \"dataset_add\": \"Add\",\r\n    \"date_months\": [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\r\n    \"date_week\": \"week\",\r\n    \"send_error\": \"An error has occurred. Please try again or contact your administrator\",\r\n    \"required_field\": \"Required field\",\r\n    \"repeat\": \"repeat\",\r\n    \"change\": \"change\",\r\n    \"cancel\": \"cancel\"\r\n};\n\ncoreuiForm$1.controls.button = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'button',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-secondary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'button';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils$1.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.custom = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'custom',\r\n        content: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form   = form;\r\n        this._index   = index;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return this._options.content;\r\n    }\r\n};\n\ncoreuiForm$1.controls.link = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'link',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-link'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/link.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > a')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.submit = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'submit',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        show: true,\r\n        attr: {\r\n            class: 'btn btn-sm btn-primary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    unlock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        button.find('.spinner-border').remove();\r\n        button.removeAttr('disabled');\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'submit';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.checkbox = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'checkbox',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: null,\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {object}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let values = [];\r\n\r\n            $('.content-' + this._hash + ' input[type=checkbox]:checked').each(function () {\r\n                values.push($(this).val());\r\n            });\r\n\r\n            return values;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значений в поле\r\n     * @param {object|null|string|number} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=radio]').prop('checked', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' input[type=radio]').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('checked', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that            = this;\r\n        let checkboxOptions = [];\r\n        let fieldOptions    = this.getOptions();\r\n        let selectedItems   = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'checkbox',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils$1.hashCode();\r\n\r\n                if (typeof(that._value) === 'object' &&\r\n                    Array.isArray(that._value)\r\n                ) {\r\n                    $.each(that._value, function (key, itemValue) {\r\n                        if (itemValue == option.value) {\r\n                            itemAttr.checked = 'checked';\r\n                            if (option.hasOwnProperty('text') && option.text) {\r\n                                selectedItems.push(option.text);\r\n                            }\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                } else if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItems.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                checkboxOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        let value = typeof this._value === 'object' && Array.isArray(this._value)\r\n            ? this._value.join(', ')\r\n            : this._value;\r\n\r\n        return ejs.render(tpl['fields/checkbox.html'], {\r\n            field: fieldOptions,\r\n            value: value,\r\n            render: {\r\n                options: checkboxOptions,\r\n                selectedItems: selectedItems\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.color = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'color',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-color d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            value: this._value\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.custom = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _options: {\r\n        type: 'custom',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        content: '',\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     */\r\n    getValue: function () {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options         = this.getOptions();\r\n        let content         = '';\r\n        let alloyComponents = [\r\n            'coreui.table',\r\n            'coreui.layout',\r\n            'coreui.panel',\r\n            'coreui.tabs',\r\n            'coreui.info',\r\n            'coreui.chart',\r\n        ];\r\n\r\n        if (typeof options.content === 'string') {\r\n            content = options.content;\r\n\r\n        } else if (options.content instanceof Object) {\r\n            if ( ! Array.isArray(options.content)) {\r\n                options.content = [ options.content ];\r\n            }\r\n\r\n            let components = [];\r\n\r\n            for (let i = 0; i < options.content.length; i++) {\r\n                if (typeof options.content[i] === 'string') {\r\n                    components.push(options.content[i]);\r\n\r\n                } else if ( ! Array.isArray(options.content[i]) &&\r\n                        options.content[i].hasOwnProperty('component') &&\r\n                        alloyComponents.indexOf(options.content[i].component) >= 0\r\n                ) {\r\n                    let name = options.content[i].component.split('.')[1];\r\n\r\n                    if (CoreUI.hasOwnProperty(name) &&\r\n                        typeof CoreUI[name] === \"object\" &&\r\n                        CoreUI[name] !== null &&\r\n                        ! Array.isArray(CoreUI[name])\r\n                    ) {\r\n                        let instance = CoreUI[name].create(options.content[i]);\r\n                        components.push(instance.render());\r\n\r\n                        this._form.on('shown.coreui.form', instance.initEvents, instance, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            content = components.join('');\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/custom.html'], {\r\n            content: content\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.dataset = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: [],\r\n    _renderOptions: [],\r\n    _options: {\r\n        type: 'dataset',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let name = option.hasOwnProperty('name') && ['string', 'number'].indexOf(typeof (option.name)) >= 0\r\n                    ? option.name\r\n                    : '';\r\n                let type = option.hasOwnProperty('type') && typeof (option.type) === 'string'\r\n                    ? option.type\r\n                    : 'text';\r\n                let attributes = option.hasOwnProperty('attr') && typeof (option.attr) === 'object' && ! Array.isArray(option.attr)\r\n                    ? option.attr\r\n                    : {};\r\n                let items = option.hasOwnProperty('items') && typeof (option.items) === 'object' && Array.isArray(option.items)\r\n                    ? option.items\r\n                    : [];\r\n                let valueY = option.hasOwnProperty('valueY') && ['string', 'numeric'].indexOf(typeof (option.valueY)) >= 0\r\n                    ? option.valueY\r\n                    : 'Y';\r\n                let valueN = option.hasOwnProperty('valueN') && ['string', 'numeric'].indexOf(typeof (option.valueN)) >= 0\r\n                    ? option.valueN\r\n                    : 'N';\r\n\r\n                if (name) {\r\n                    attributes.name = name;\r\n                }\r\n                if (options.required) {\r\n                    attributes.required = 'required';\r\n                }\r\n\r\n                if (type === 'select') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-select form-select-sm ' + attributes.class\r\n                        : 'form-select form-select-sm';\r\n\r\n                } else if (type === 'switch') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-check-input ' + attributes.class\r\n                        : 'form-check-input';\r\n\r\n                    attributes.type = 'checkbox';\r\n                    attributes.value = valueY;\r\n\r\n                } else {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-control form-control-sm ' + attributes.class\r\n                        : 'form-control form-control-sm';\r\n\r\n                    attributes.type = type;\r\n                }\r\n\r\n\r\n                that._renderOptions.push({\r\n                    type  : type,\r\n                    name  : name,\r\n                    attr  : attributes,\r\n                    items : items,\r\n                    valueY: valueY,\r\n                    valueN: valueN,\r\n                });\r\n            });\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {array}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let container = $('.content-' + this._hash);\r\n            let data      = [];\r\n\r\n            $('.coreui-form__field-dataset-list .coreui-form__field-dataset-item', container).each(function () {\r\n                let items = {};\r\n\r\n                $.each($(this).find('input, select').serializeArray(), function (key, item) {\r\n                    if (item.name) {\r\n                        items[item.name] = item.value;\r\n                    }\r\n                });\r\n\r\n                data.push(items);\r\n            });\r\n\r\n            return data;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (typeof value !== 'object' ||\r\n            Array.isArray(value) ||\r\n            value === null\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this._value.push(value);\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash + ' .coreui-form__field-dataset-list').append(\r\n                this._renderRowReadonly(value)\r\n            );\r\n        } else {\r\n            this._eventAdd(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление всех строк\r\n     */\r\n    removeItems: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' .coreui-form__field-dataset-list').empty();\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление строки по id\r\n     * @param {int} itemId\r\n     */\r\n    removeItem: function (itemId) {\r\n\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        $('#' + itemId).hide('fast', function () {\r\n            $('#' + itemId).remove();\r\n\r\n            if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n                $(element + ' .coreui-form__field-dataset-container').hide();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRow(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRowReadonly(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        // Кнопка удаления\r\n        $(element + ' .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n\r\n        // Кнопка добавления\r\n        $(element + ' .btn-dataset-add').click(function () {\r\n            that._eventAdd();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Событие добавления\r\n     */\r\n    _eventAdd: function (row) {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n        row = row || {};\r\n\r\n        if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n            $(element + ' .coreui-form__field-dataset-container').show();\r\n        }\r\n\r\n        $(element + ' .coreui-form__field-dataset-list').append(this._renderRow(row));\r\n        $(element + ' .coreui-form__field-dataset-item:last-child .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRow: function (row) {\r\n\r\n        let rowOptions  = [];\r\n        let itemOptions = [];\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let cellValue = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n                    let itemAttr = {};\r\n\r\n\r\n                    $.each(item, function (name, value) {\r\n                        if (name !== 'title') {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    });\r\n\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemAttr.selected = 'selected';\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemAttr.selected = 'selected';\r\n                    }\r\n\r\n                    let attributes = [];\r\n                    $.each(itemAttr, function (name, value) {\r\n                        attributes.push(name + '=\"' + value + '\"');\r\n                    });\r\n\r\n                    itemOptions.push({\r\n                        attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                        title: title\r\n                    });\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                if (cellValue == option.valueY) {\r\n                    option.attr.checked = 'checked';\r\n                }\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    option.attr.value = cellValue !== null ? cellValue : '';\r\n                }\r\n            }\r\n\r\n            let attributes = [];\r\n\r\n            $.each(option.attr, function (name, value) {\r\n                attributes.push(name + '=\"' + value + '\"');\r\n            });\r\n\r\n            rowOptions.push({\r\n                type: option.type,\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                items: itemOptions\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row.html'], {\r\n            hashItem: coreuiFormUtils$1.hashCode(),\r\n            options: rowOptions,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRowReadonly: function (row) {\r\n\r\n        let rowOptions = [];\r\n        let lang       = this._form.getLang();\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let optionValue = '';\r\n            let cellValue   = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                let itemOptions = [];\r\n\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemOptions.push(itemValue);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemOptions.push(cellValue);\r\n                    }\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                let valueY = 'Y';\r\n\r\n                if (option.hasOwnProperty('valueY')) {\r\n                    valueY = option.valueY;\r\n                }\r\n\r\n                optionValue = cellValue == valueY\r\n                    ? lang.switch_yes\r\n                    : lang.switch_no;\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    optionValue = cellValue;\r\n\r\n                    switch (option.type) {\r\n                        case 'date':           optionValue = coreuiFormUtils$1.formatDate(optionValue); break;\r\n                        case 'datetime-local': optionValue = coreuiFormUtils$1.formatDateTime(optionValue); break;\r\n                        case 'month':          optionValue = coreuiFormUtils$1.formatDateMonth(optionValue, lang); break;\r\n                        case 'week':           optionValue = coreuiFormUtils$1.formatDateWeek(optionValue, lang); break;\r\n                        default: optionValue = cellValue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            rowOptions.push({\r\n                value: optionValue\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row-readonly.html'], {\r\n            options: rowOptions,\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.group = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _options: {\r\n        type: 'group',\r\n        label: '',\r\n        show: true,\r\n        showCollapsible: true,\r\n        fields: [],\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-group-\" + index;\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие группы\r\n     * @param {int} duration\r\n     */\r\n    collapse: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-down');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-right');\r\n\r\n        $(container + ' .coreui-form__group_content').slideUp(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ группы\r\n     * @param {int} duration\r\n     */\r\n    expand: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-right');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-down');\r\n\r\n        $(container + ' .coreui-form__group_content').slideDown(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-group.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            group: this._options,\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {string}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fields = [];\r\n        let that   = this;\r\n\r\n        $.each(this._options.fields, function (key, field) {\r\n\r\n            let fieldInstance = that._form.initField(field);\r\n\r\n            if (typeof fieldInstance !== 'object') {\r\n                return;\r\n            }\r\n\r\n            fields.push(fieldInstance.render());\r\n        });\r\n\r\n        return fields.join('');\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.showCollapsible) {\r\n            let that      = this;\r\n            let container = '#coreui-form-' + this._id;\r\n\r\n            $(container + ' > .coreui-form__group_label .btn-collapsible').click(function () {\r\n\r\n                if ($(container + ' > .coreui-form__group_content').is(':visible')) {\r\n                    that.collapse(80);\r\n                } else {\r\n                    that.expand(80);\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.hidden = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'hidden',\r\n        name: null,\r\n        attr: {},\r\n        required: null,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('#coreui-form-' + this._id).val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if ( ! this._options.readonly) {\r\n            $('#coreui-form-' + this._id).val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-content.html'], {\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n\r\n        options.attr.id = 'coreui-form-' + this._id;\r\n\r\n        if (options.name) {\r\n            options.attr.name = options.name;\r\n        }\r\n\r\n        options.attr.type  = 'hidden';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/hidden.html'], {\r\n            value: this._value !== null ? this._value : '',\r\n            field: options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.input = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'text',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils$1.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils$1.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils$1.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils$1.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\n/**\n * jquery.mask.js\n * @version: v1.14.16\n * @author: Igor Escobar\n *\n * Created by Igor Escobar on 2012-03-10. Please report any bug at github.com/igorescobar/jQuery-Mask-Plugin\n *\n * Copyright (c) 2012 Igor Escobar http://igorescobar.com\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* jshint laxbreak: true */\n/* jshint maxcomplexity:17 */\n/* global define */\n\n// UMD (Universal Module Definition) patterns for JavaScript modules that work everywhere.\n// https://github.com/umdjs/umd/blob/master/templates/jqueryPlugin.js\n(function (factory, jQuery, Zepto) {\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object' && typeof Meteor === 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery || Zepto);\n    }\n\n}(function ($) {\n    'use strict';\n\n    var Mask = function (el, mask, options) {\n\n        var p = {\n            invalid: [],\n            getCaret: function () {\n                try {\n                    var sel,\n                        pos = 0,\n                        ctrl = el.get(0),\n                        dSel = document.selection,\n                        cSelStart = ctrl.selectionStart;\n\n                    // IE Support\n                    if (dSel && navigator.appVersion.indexOf('MSIE 10') === -1) {\n                        sel = dSel.createRange();\n                        sel.moveStart('character', -p.val().length);\n                        pos = sel.text.length;\n                    }\n                    // Firefox support\n                    else if (cSelStart || cSelStart === '0') {\n                        pos = cSelStart;\n                    }\n\n                    return pos;\n                } catch (e) {}\n            },\n            setCaret: function(pos) {\n                try {\n                    if (el.is(':focus')) {\n                        var range, ctrl = el.get(0);\n\n                        // Firefox, WebKit, etc..\n                        if (ctrl.setSelectionRange) {\n                            ctrl.setSelectionRange(pos, pos);\n                        } else { // IE\n                            range = ctrl.createTextRange();\n                            range.collapse(true);\n                            range.moveEnd('character', pos);\n                            range.moveStart('character', pos);\n                            range.select();\n                        }\n                    }\n                } catch (e) {}\n            },\n            events: function() {\n                el\n                .on('keydown.mask', function(e) {\n                    el.data('mask-keycode', e.keyCode || e.which);\n                    el.data('mask-previus-value', el.val());\n                    el.data('mask-previus-caret-pos', p.getCaret());\n                    p.maskDigitPosMapOld = p.maskDigitPosMap;\n                })\n                .on($.jMaskGlobals.useInput ? 'input.mask' : 'keyup.mask', p.behaviour)\n                .on('paste.mask drop.mask', function() {\n                    setTimeout(function() {\n                        el.keydown().keyup();\n                    }, 100);\n                })\n                .on('change.mask', function(){\n                    el.data('changed', true);\n                })\n                .on('blur.mask', function(){\n                    if (oldValue !== p.val() && !el.data('changed')) {\n                        el.trigger('change');\n                    }\n                    el.data('changed', false);\n                })\n                // it's very important that this callback remains in this position\n                // otherwhise oldValue it's going to work buggy\n                .on('blur.mask', function() {\n                    oldValue = p.val();\n                })\n                // select all text on focus\n                .on('focus.mask', function (e) {\n                    if (options.selectOnFocus === true) {\n                        $(e.target).select();\n                    }\n                })\n                // clear the value if it not complete the mask\n                .on('focusout.mask', function() {\n                    if (options.clearIfNotMatch && !regexMask.test(p.val())) {\n                       p.val('');\n                   }\n                });\n            },\n            getRegexMask: function() {\n                var maskChunks = [], translation, pattern, optional, recursive, oRecursive, r;\n\n                for (var i = 0; i < mask.length; i++) {\n                    translation = jMask.translation[mask.charAt(i)];\n\n                    if (translation) {\n\n                        pattern = translation.pattern.toString().replace(/.{1}$|^.{1}/g, '');\n                        optional = translation.optional;\n                        recursive = translation.recursive;\n\n                        if (recursive) {\n                            maskChunks.push(mask.charAt(i));\n                            oRecursive = {digit: mask.charAt(i), pattern: pattern};\n                        } else {\n                            maskChunks.push(!optional && !recursive ? pattern : (pattern + '?'));\n                        }\n\n                    } else {\n                        maskChunks.push(mask.charAt(i).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n                    }\n                }\n\n                r = maskChunks.join('');\n\n                if (oRecursive) {\n                    r = r.replace(new RegExp('(' + oRecursive.digit + '(.*' + oRecursive.digit + ')?)'), '($1)?')\n                         .replace(new RegExp(oRecursive.digit, 'g'), oRecursive.pattern);\n                }\n\n                return new RegExp(r);\n            },\n            destroyEvents: function() {\n                el.off(['input', 'keydown', 'keyup', 'paste', 'drop', 'blur', 'focusout', ''].join('.mask '));\n            },\n            val: function(v) {\n                var isInput = el.is('input'),\n                    method = isInput ? 'val' : 'text',\n                    r;\n\n                if (arguments.length > 0) {\n                    if (el[method]() !== v) {\n                        el[method](v);\n                    }\n                    r = el;\n                } else {\n                    r = el[method]();\n                }\n\n                return r;\n            },\n            calculateCaretPosition: function(oldVal) {\n                var newVal = p.getMasked(),\n                    caretPosNew = p.getCaret();\n                if (oldVal !== newVal) {\n                    var caretPosOld = el.data('mask-previus-caret-pos') || 0,\n                        newValL = newVal.length,\n                        oldValL = oldVal.length,\n                        maskDigitsBeforeCaret = 0,\n                        maskDigitsAfterCaret = 0,\n                        maskDigitsBeforeCaretAll = 0,\n                        maskDigitsBeforeCaretAllOld = 0,\n                        i = 0;\n\n                    for (i = caretPosNew; i < newValL; i++) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsAfterCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsBeforeCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMap[i]) {\n                            maskDigitsBeforeCaretAll++;\n                        }\n                    }\n\n                    for (i = caretPosOld - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMapOld[i]) {\n                            maskDigitsBeforeCaretAllOld++;\n                        }\n                    }\n\n                    // if the cursor is at the end keep it there\n                    if (caretPosNew > oldValL) {\n                      caretPosNew = newValL * 10;\n                    } else if (caretPosOld >= caretPosNew && caretPosOld !== oldValL) {\n                        if (!p.maskDigitPosMapOld[caretPosNew])  {\n                          var caretPos = caretPosNew;\n                          caretPosNew -= maskDigitsBeforeCaretAllOld - maskDigitsBeforeCaretAll;\n                          caretPosNew -= maskDigitsBeforeCaret;\n                          if (p.maskDigitPosMap[caretPosNew])  {\n                            caretPosNew = caretPos;\n                          }\n                        }\n                    }\n                    else if (caretPosNew > caretPosOld) {\n                        caretPosNew += maskDigitsBeforeCaretAll - maskDigitsBeforeCaretAllOld;\n                        caretPosNew += maskDigitsAfterCaret;\n                    }\n                }\n                return caretPosNew;\n            },\n            behaviour: function(e) {\n                e = e || window.event;\n                p.invalid = [];\n\n                var keyCode = el.data('mask-keycode');\n\n                if ($.inArray(keyCode, jMask.byPassKeys) === -1) {\n                    var newVal = p.getMasked(),\n                        caretPos = p.getCaret(),\n                        oldVal = el.data('mask-previus-value') || '';\n\n                    // this is a compensation to devices/browsers that don't compensate\n                    // caret positioning the right way\n                    setTimeout(function() {\n                      p.setCaret(p.calculateCaretPosition(oldVal));\n                    }, $.jMaskGlobals.keyStrokeCompensation);\n\n                    p.val(newVal);\n                    p.setCaret(caretPos);\n                    return p.callbacks(e);\n                }\n            },\n            getMasked: function(skipMaskChars, val) {\n                var buf = [],\n                    value = val === undefined ? p.val() : val + '',\n                    m = 0, maskLen = mask.length,\n                    v = 0, valLen = value.length,\n                    offset = 1, addMethod = 'push',\n                    resetPos = -1,\n                    maskDigitCount = 0,\n                    maskDigitPosArr = [],\n                    lastMaskChar,\n                    check;\n\n                if (options.reverse) {\n                    addMethod = 'unshift';\n                    offset = -1;\n                    lastMaskChar = 0;\n                    m = maskLen - 1;\n                    v = valLen - 1;\n                    check = function () {\n                        return m > -1 && v > -1;\n                    };\n                } else {\n                    lastMaskChar = maskLen - 1;\n                    check = function () {\n                        return m < maskLen && v < valLen;\n                    };\n                }\n\n                var lastUntranslatedMaskChar;\n                while (check()) {\n                    var maskDigit = mask.charAt(m),\n                        valDigit = value.charAt(v),\n                        translation = jMask.translation[maskDigit];\n\n                    if (translation) {\n                        if (valDigit.match(translation.pattern)) {\n                            buf[addMethod](valDigit);\n                             if (translation.recursive) {\n                                if (resetPos === -1) {\n                                    resetPos = m;\n                                } else if (m === lastMaskChar && m !== resetPos) {\n                                    m = resetPos - offset;\n                                }\n\n                                if (lastMaskChar === resetPos) {\n                                    m -= offset;\n                                }\n                            }\n                            m += offset;\n                        } else if (valDigit === lastUntranslatedMaskChar) {\n                            // matched the last untranslated (raw) mask character that we encountered\n                            // likely an insert offset the mask character from the last entry; fall\n                            // through and only increment v\n                            maskDigitCount--;\n                            lastUntranslatedMaskChar = undefined;\n                        } else if (translation.optional) {\n                            m += offset;\n                            v -= offset;\n                        } else if (translation.fallback) {\n                            buf[addMethod](translation.fallback);\n                            m += offset;\n                            v -= offset;\n                        } else {\n                          p.invalid.push({p: v, v: valDigit, e: translation.pattern});\n                        }\n                        v += offset;\n                    } else {\n                        if (!skipMaskChars) {\n                            buf[addMethod](maskDigit);\n                        }\n\n                        if (valDigit === maskDigit) {\n                            maskDigitPosArr.push(v);\n                            v += offset;\n                        } else {\n                            lastUntranslatedMaskChar = maskDigit;\n                            maskDigitPosArr.push(v + maskDigitCount);\n                            maskDigitCount++;\n                        }\n\n                        m += offset;\n                    }\n                }\n\n                var lastMaskCharDigit = mask.charAt(lastMaskChar);\n                if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {\n                    buf.push(lastMaskCharDigit);\n                }\n\n                var newVal = buf.join('');\n                p.mapMaskdigitPositions(newVal, maskDigitPosArr, valLen);\n                return newVal;\n            },\n            mapMaskdigitPositions: function(newVal, maskDigitPosArr, valLen) {\n              var maskDiff = options.reverse ? newVal.length - valLen : 0;\n              p.maskDigitPosMap = {};\n              for (var i = 0; i < maskDigitPosArr.length; i++) {\n                p.maskDigitPosMap[maskDigitPosArr[i] + maskDiff] = 1;\n              }\n            },\n            callbacks: function (e) {\n                var val = p.val(),\n                    changed = val !== oldValue,\n                    defaultArgs = [val, e, el, options],\n                    callback = function(name, criteria, args) {\n                        if (typeof options[name] === 'function' && criteria) {\n                            options[name].apply(this, args);\n                        }\n                    };\n\n                callback('onChange', changed === true, defaultArgs);\n                callback('onKeyPress', changed === true, defaultArgs);\n                callback('onComplete', val.length === mask.length, defaultArgs);\n                callback('onInvalid', p.invalid.length > 0, [val, e, el, p.invalid, options]);\n            }\n        };\n\n        el = $(el);\n        var jMask = this, oldValue = p.val(), regexMask;\n\n        mask = typeof mask === 'function' ? mask(p.val(), undefined, el,  options) : mask;\n\n        // public methods\n        jMask.mask = mask;\n        jMask.options = options;\n        jMask.remove = function() {\n            var caret = p.getCaret();\n            if (jMask.options.placeholder) {\n                el.removeAttr('placeholder');\n            }\n            if (el.data('mask-maxlength')) {\n                el.removeAttr('maxlength');\n            }\n            p.destroyEvents();\n            p.val(jMask.getCleanVal());\n            p.setCaret(caret);\n            return el;\n        };\n\n        // get value without mask\n        jMask.getCleanVal = function() {\n           return p.getMasked(true);\n        };\n\n        // get masked value without the value being in the input or element\n        jMask.getMaskedVal = function(val) {\n           return p.getMasked(false, val);\n        };\n\n       jMask.init = function(onlyMask) {\n            onlyMask = onlyMask || false;\n            options = options || {};\n\n            jMask.clearIfNotMatch  = $.jMaskGlobals.clearIfNotMatch;\n            jMask.byPassKeys       = $.jMaskGlobals.byPassKeys;\n            jMask.translation      = $.extend({}, $.jMaskGlobals.translation, options.translation);\n\n            jMask = $.extend(true, {}, jMask, options);\n\n            regexMask = p.getRegexMask();\n\n            if (onlyMask) {\n                p.events();\n                p.val(p.getMasked());\n            } else {\n                if (options.placeholder) {\n                    el.attr('placeholder' , options.placeholder);\n                }\n\n                // this is necessary, otherwise if the user submit the form\n                // and then press the \"back\" button, the autocomplete will erase\n                // the data. Works fine on IE9+, FF, Opera, Safari.\n                if (el.data('mask')) {\n                  el.attr('autocomplete', 'off');\n                }\n\n                // detect if is necessary let the user type freely.\n                // for is a lot faster than forEach.\n                for (var i = 0, maxlength = true; i < mask.length; i++) {\n                    var translation = jMask.translation[mask.charAt(i)];\n                    if (translation && translation.recursive) {\n                        maxlength = false;\n                        break;\n                    }\n                }\n\n                if (maxlength) {\n                    el.attr('maxlength', mask.length).data('mask-maxlength', true);\n                }\n\n                p.destroyEvents();\n                p.events();\n\n                var caret = p.getCaret();\n                p.val(p.getMasked());\n                p.setCaret(caret);\n            }\n        };\n\n        jMask.init(!el.is('input'));\n    };\n\n    $.maskWatchers = {};\n    var HTMLAttributes = function () {\n        var input = $(this),\n            options = {},\n            prefix = 'data-mask-',\n            mask = input.attr('data-mask');\n\n        if (input.attr(prefix + 'reverse')) {\n            options.reverse = true;\n        }\n\n        if (input.attr(prefix + 'clearifnotmatch')) {\n            options.clearIfNotMatch = true;\n        }\n\n        if (input.attr(prefix + 'selectonfocus') === 'true') {\n           options.selectOnFocus = true;\n        }\n\n        if (notSameMaskObject(input, mask, options)) {\n            return input.data('mask', new Mask(this, mask, options));\n        }\n    },\n    notSameMaskObject = function(field, mask, options) {\n        options = options || {};\n        var maskObject = $(field).data('mask'),\n            stringify = JSON.stringify,\n            value = $(field).val() || $(field).text();\n        try {\n            if (typeof mask === 'function') {\n                mask = mask(value);\n            }\n            return typeof maskObject !== 'object' || stringify(maskObject.options) !== stringify(options) || maskObject.mask !== mask;\n        } catch (e) {}\n    },\n    eventSupported = function(eventName) {\n        var el = document.createElement('div'), isSupported;\n\n        eventName = 'on' + eventName;\n        isSupported = (eventName in el);\n\n        if ( !isSupported ) {\n            el.setAttribute(eventName, 'return;');\n            isSupported = typeof el[eventName] === 'function';\n        }\n        el = null;\n\n        return isSupported;\n    };\n\n    $.fn.mask = function(mask, options) {\n        options = options || {};\n        var selector = this.selector,\n            globals = $.jMaskGlobals,\n            interval = globals.watchInterval,\n            watchInputs = options.watchInputs || globals.watchInputs,\n            maskFunction = function() {\n                if (notSameMaskObject(this, mask, options)) {\n                    return $(this).data('mask', new Mask(this, mask, options));\n                }\n            };\n\n        $(this).each(maskFunction);\n\n        if (selector && selector !== '' && watchInputs) {\n            clearInterval($.maskWatchers[selector]);\n            $.maskWatchers[selector] = setInterval(function(){\n                $(document).find(selector).each(maskFunction);\n            }, interval);\n        }\n        return this;\n    };\n\n    $.fn.masked = function(val) {\n        return this.data('mask').getMaskedVal(val);\n    };\n\n    $.fn.unmask = function() {\n        clearInterval($.maskWatchers[this.selector]);\n        delete $.maskWatchers[this.selector];\n        return this.each(function() {\n            var dataMask = $(this).data('mask');\n            if (dataMask) {\n                dataMask.remove().removeData('mask');\n            }\n        });\n    };\n\n    $.fn.cleanVal = function() {\n        return this.data('mask').getCleanVal();\n    };\n\n    $.applyDataMask = function(selector) {\n        selector = selector || $.jMaskGlobals.maskElements;\n        var $selector = (selector instanceof $) ? selector : $(selector);\n        $selector.filter($.jMaskGlobals.dataMaskAttr).each(HTMLAttributes);\n    };\n\n    var globals = {\n        maskElements: 'input,td,span,div',\n        dataMaskAttr: '*[data-mask]',\n        dataMask: true,\n        watchInterval: 300,\n        watchInputs: true,\n        keyStrokeCompensation: 10,\n        // old versions of chrome dont work great with input event\n        useInput: !/Chrome\\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && eventSupported('input'),\n        watchDataMask: false,\n        byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91],\n        translation: {\n            '0': {pattern: /\\d/},\n            '9': {pattern: /\\d/, optional: true},\n            '#': {pattern: /\\d/, recursive: true},\n            'A': {pattern: /[a-zA-Z0-9]/},\n            'S': {pattern: /[a-zA-Z]/}\n        }\n    };\n\n    $.jMaskGlobals = $.jMaskGlobals || {};\n    globals = $.jMaskGlobals = $.extend(true, {}, globals, $.jMaskGlobals);\n\n    // looking for inputs with data-mask attribute\n    if (globals.dataMask) {\n        $.applyDataMask();\n    }\n\n    setInterval(function() {\n        if ($.jMaskGlobals.watchDataMask) {\n            $.applyDataMask();\n        }\n    }, globals.watchInterval);\n}, window.jQuery, window.Zepto));\n\ncoreuiForm$1.fields.mask = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'mask',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        value = value.replace(/[^\\d\\w]/g, '');\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'text';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : ''\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' input')\r\n            .mask(this._options.mask, this._options.options);\r\n    }\r\n};\n\ncoreuiForm$1.fields.modal = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: '',\r\n    _text: '',\r\n    _options: {\r\n        type: 'modal',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        fields: [],\r\n        options: {\r\n            title: '',\r\n            size: 'lg',\r\n            url: '',\r\n            onHidden: null,\r\n            onClear: null,\r\n            onChange: null,\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n\r\n        if (typeof options.name === 'string' &&\r\n            formRecord.hasOwnProperty(options.name) &&\r\n            ['object'].indexOf(typeof formRecord[options.name]) >= 0\r\n        ) {\r\n            let record = formRecord[options.name];\r\n\r\n            this._value = record.hasOwnProperty('value') && ['number', 'string'].indexOf(typeof(record.value)) >= 0 ? record.value : '';\r\n            this._text  = record.hasOwnProperty('text') && ['number', 'string'].indexOf(typeof(record.text)) >= 0 ? record.text : '';\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input.coreui-form-modal-value').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     * @param {string} text\r\n     */\r\n    setValue: function (value, text) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(text);\r\n\r\n        } else {\r\n            let elementValue = $('.content-' + this._hash + ' .coreui-form-modal-value');\r\n            let elementText  = $('.content-' + this._hash + ' .coreui-form-modal-text');\r\n            let oldValue     = elementValue.val();\r\n\r\n            elementValue.val(value);\r\n            elementText.val(text);\r\n\r\n\r\n            if (oldValue != value) {\r\n                let modal = this._options.hasOwnProperty('options') && typeof (this._options.options) === 'object'\r\n                    ? this._options.options\r\n                    : {};\r\n\r\n                if (modal.hasOwnProperty('onChange')) {\r\n                    if (typeof(modal.onChange) === 'function') {\r\n                        modal.onChange(this);\r\n\r\n                    } else if (typeof(modal.onChange) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onChange);\r\n\r\n                        if (typeof func === 'function') {\r\n                            func(this);\r\n                        } else {\r\n                            eval(modal.onChange);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this._form._trigger('change-modal.coreui.form', this, [this]);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fieldOptions = this.getOptions();\r\n        let attributes   = [];\r\n        let textAttr     = {\r\n            type: 'text',\r\n            readonly: 'readonly',\r\n            class: 'form-control form-control-sm coreui-form-modal-text',\r\n            value: this._text !== null ? this._text : ''\r\n        };\r\n\r\n        if (fieldOptions.required) {\r\n            textAttr.required = 'required';\r\n        }\r\n\r\n        if (fieldOptions.hasOwnProperty('attr') &&\r\n            typeof fieldOptions.attr === 'object' &&\r\n            Array.isArray(fieldOptions.attr)\r\n        ) {\r\n            textAttr = coreuiFormUtils$1.mergeAttr(textAttr, fieldOptions.attr);\r\n        }\r\n\r\n        $.each(textAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/modal.html'], {\r\n            field: fieldOptions,\r\n            value: this._value !== null ? this._value : '',\r\n            text: this._text !== null ? this._text : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                width: this._options.width,\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that  = this;\r\n        let modal = this._options.hasOwnProperty('options') && typeof(this._options.options) === 'object'\r\n            ? this._options.options\r\n            : {};\r\n\r\n\r\n        // Очистка\r\n        $('.content-' + this._hash + ' .btn-modal-clear').click(function (e) {\r\n            if (modal.hasOwnProperty('onClear')) {\r\n                if (typeof(modal.onClear) === 'function') {\r\n                    modal.onClear(that);\r\n\r\n                } else if (typeof(modal.onClear) === 'string') {\r\n                    let func = coreuiFormUtils$1.getFunctionByName(modal.onClear);\r\n\r\n                    if (typeof func === 'function') {\r\n                        func(that);\r\n                    } else {\r\n                        eval(modal.onClear);\r\n                    }\r\n                }\r\n            }\r\n\r\n            that._form._trigger('clear-modal.coreui.form', that, [ that, e ]);\r\n\r\n            that.setValue('', '');\r\n        });\r\n\r\n        // Выбор\r\n        $('.content-' + this._hash + ' .btn-modal-select').click(function (e) {\r\n            let title = modal.hasOwnProperty('title') && typeof(modal.title) === 'string'\r\n                ? modal.title\r\n                : '';\r\n\r\n            let size = modal.hasOwnProperty('size') && typeof(modal.size) === 'string'\r\n                ? modal.size\r\n                : 'lg';\r\n\r\n            let url = modal.hasOwnProperty('url') && typeof(modal.url) === 'string'\r\n                ? modal.url\r\n                : '';\r\n\r\n            if ( ! url) {\r\n                return;\r\n            }\r\n\r\n\r\n            let modalId      = coreuiFormUtils$1.hashCode();\r\n            let modalLoading = ejs.render(tpl['fields/modal-loading.html'], {\r\n                lang: that._form.getLang(),\r\n            });\r\n\r\n\r\n            if (CoreUI.hasOwnProperty('modal')) {\r\n                let onShow   = null;\r\n                let onHidden = null;\r\n\r\n                if (modal.hasOwnProperty('onHidden')) {\r\n                    if (typeof(modal.onHidden) === 'function') {\r\n                        onHidden = modal.onHidden;\r\n\r\n                    } else if (typeof(modal.onHidden) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onHidden);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onHidden = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (modal.hasOwnProperty('onShow')) {\r\n                    if (typeof(modal.onShow) === 'function') {\r\n                        onShow = modal.onShow;\r\n\r\n                    } else if (typeof(modal.onShow) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onShow);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onShow = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                CoreUI.modal.show(title, modalLoading, {\r\n                    id: modalId,\r\n                    size: size,\r\n                    onShow: onShow,\r\n                    onHidden: onHidden\r\n                });\r\n            }\r\n\r\n            $.ajax({\r\n                url: url,\r\n                method: 'GET',\r\n                beforeSend: function(xhr) {\r\n                    that._form._trigger('before-load-modal.coreui.form', that, [ that, xhr ]);\r\n                },\r\n                success: function (result) {\r\n                    $('#modal-' + modalId + ' .modal-body').html(result);\r\n                    that._form._trigger('success-load-modal.coreui.form', that, [ that, result ]);\r\n                },\r\n                error: function(xhr, textStatus, errorThrown) {\r\n                    that._form._trigger('error-load-modal.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n                },\r\n                complete: function(xhr, textStatus) {\r\n                    that._form._trigger('complete-load-modal.coreui.form', that, [ that, xhr, textStatus ]);\r\n                },\r\n            });\r\n\r\n\r\n            that._form._trigger('select-modal.coreui.form', that, [ that, e ]);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.number = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'number',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block',\r\n            step: 'any'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null,\r\n        precision: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        // Установка точности\r\n        if (this._options.precision === null) {\r\n            let precision = 0;\r\n\r\n            if (this._options.attr.hasOwnProperty('step') &&\r\n                this._options.attr.step !== 'any' &&\r\n                ['string', 'number'].indexOf(typeof this._options.attr.step) >= 0\r\n            ) {\r\n                let match = $.trim(this._options.attr.step.toString()).match(/\\.(\\d+)$/);\r\n\r\n                if (match && match.hasOwnProperty(1)) {\r\n                    precision = match ? match[1].length : precision;\r\n                }\r\n            }\r\n\r\n            this._options.precision = precision;\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0 ||\r\n            ! value.toString().match(/^\\-?\\d+\\.?\\d*$/)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.precision >= 0) {\r\n            value = coreuiFormUtils$1.round(value, this._options.precision);\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('min')) {\r\n            value = value < Number(this._options.attr.min)\r\n                ? Number(this._options.attr.min)\r\n                : value;\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('max')) {\r\n            value = value > Number(this._options.attr.max)\r\n                ? Number(this._options.attr.max)\r\n                : value;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = $.extend(true, {}, this._options);\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'number';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('.content-' + this._hash + ' input').keydown(function (e) {\r\n            let k = e.keyCode || e.which;\r\n            let ok = k >= 35 && k <= 40 ||      // arrows\r\n                k >= 96 && k <= 105 ||     // 0-9 numpad\r\n                k === 189 || k === 109 ||  // minus\r\n                k === 110 || k === 190 ||  // dot\r\n                k === 9 ||  //tab\r\n                k === 46 || //del\r\n                k === 8 ||  // backspaces\r\n                ( ! e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)\r\n\r\n            if ( ! ok || (e.ctrlKey && e.altKey)) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' input').blur(function (e) {\r\n            let value = $(this).val();\r\n\r\n            if (that._options.precision >= 0) {\r\n                value = coreuiFormUtils$1.round(value, that._options.precision);\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('min')) {\r\n                value = value < Number(that._options.attr.min)\r\n                    ? Number(that._options.attr.min)\r\n                    : value;\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('max')) {\r\n                value = value > Number(that._options.attr.max)\r\n                    ? Number(that._options.attr.max)\r\n                    : value;\r\n            }\r\n\r\n            $(this).val(value);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.radio = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'radio',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input[type=radio]:checked').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            let that         = this;\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options)\r\n            ) {\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value') && option.value == value) {\r\n                        let text = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                            ? option.text\r\n                            : '';\r\n\r\n                        $('.content-' + that._hash).text(text);\r\n                        that._value = value;\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n\r\n        } else {\r\n            let input = $('.content-' + this._hash + ' input[type=radio][value=\"' + value + '\"]');\r\n\r\n            if (input[0]) {\r\n                input.prop('checked', true);\r\n                this._value = value;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            let value = this.getValue();\r\n            return typeof value === 'string' && value !== '';\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that         = this;\r\n        let radioOptions = [];\r\n        let fieldOptions = this.getOptions();\r\n        let selectedItem = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'radio',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText   = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils$1.hashCode();\r\n\r\n                if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItem.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                radioOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        return ejs.render(tpl['fields/radio.html'], {\r\n            field: fieldOptions,\r\n            value: this._value,\r\n            render: {\r\n                options: radioOptions,\r\n                selectedItem: selectedItem\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.range = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'range',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-range d-inline-block pt-1'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'range';\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.select = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'select',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @returns {array|string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            if (this._options.hasOwnProperty('attr') &&\r\n                typeof this._options.attr === 'object' &&\r\n                this._options.attr !== null &&\r\n                ! Array.isArray(this._options.attr) &&\r\n                this._options.attr.hasOwnProperty('multiple')\r\n            ) {\r\n                let values = [];\r\n\r\n                $('.content-' + this._hash + ' select option:selected').each(function () {\r\n                    values.push($(this).val());\r\n                });\r\n\r\n                return values;\r\n\r\n            } else {\r\n                return $('.content-' + this._hash + ' select option:selected').val()\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' select > option').prop('selected', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' select > option').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('selected', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let select    = $('select', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            select.removeClass('is-invalid');\r\n            select.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            select.removeClass('is-invalid');\r\n            select.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            select.removeClass('is-valid');\r\n            select.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let select = $('.content-' + this._hash + ' select');\r\n\r\n        if (this._options.required && select.val() === '') {\r\n            return false;\r\n        }\r\n\r\n        if (select[0]) {\r\n            return select.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let that          = this;\r\n        let options       = this.getOptions();\r\n        let attributes    = [];\r\n        let selectOptions = [];\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            options.options !== null\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n\r\n                if (typeof option === 'string' || typeof option === 'number') {\r\n                    selectOptions.push(that._renderOption({\r\n                        type: 'option',\r\n                        value: key,\r\n                        text: option\r\n                    }));\r\n\r\n                } else if (typeof option === 'object') {\r\n                    let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                        ? option.type\r\n                        : 'option';\r\n\r\n                    if (type === 'group') {\r\n                        let renderAttr   = [];\r\n                        let groupAttr    = {};\r\n                        let groupOptions = [];\r\n\r\n                        if (option.hasOwnProperty('attr') &&\r\n                            typeof option.attr === 'object' &&\r\n                            option.attr !== null &&\r\n                            ! Array.isArray(option.attr)\r\n                        ) {\r\n                            groupAttr = option.attr;\r\n                        }\r\n\r\n                        if (option.hasOwnProperty('label') && ['string', 'number'].indexOf(typeof(option.label)) >= 0) {\r\n                            groupAttr.label = option.label;\r\n                        }\r\n\r\n                        $.each(groupAttr, function (name, value) {\r\n                            renderAttr.push(name + '=\"' + value + '\"');\r\n                        });\r\n\r\n                        if (Array.isArray(option.options)) {\r\n                            $.each(option.options, function (key, groupOption) {\r\n                                groupOptions.push(that._renderOption(groupOption));\r\n                            });\r\n                        }\r\n\r\n                        selectOptions.push({\r\n                            type: 'group',\r\n                            attr: renderAttr.length > 0 ? (' ' + renderAttr.join(' ')) : '',\r\n                            options: groupOptions,\r\n                        });\r\n\r\n                    } else {\r\n                        selectOptions.push(that._renderOption(option));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                options: selectOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let that            = this;\r\n        let options         = this.getOptions();\r\n        let selectedOptions = [];\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                    ? option.type\r\n                    : 'option';\r\n\r\n                if (type === 'group') {\r\n                    if (Array.isArray(option.options)) {\r\n                        $.each(option.options, function (key, groupOption) {\r\n                            let optionText = groupOption.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(groupOption.text)) >= 0\r\n                                ? groupOption.text\r\n                                : '';\r\n\r\n                            if ( ! optionText || optionText === '') {\r\n                                return;\r\n                            }\r\n\r\n                            if (Array.isArray(that._value)) {\r\n                                $.each(that._value, function (key, itemValue) {\r\n                                    if (itemValue == groupOption.value) {\r\n                                        selectedOptions.push(optionText);\r\n                                        return false;\r\n                                    }\r\n                                });\r\n\r\n                            } else if (that._value == groupOption.value) {\r\n                                selectedOptions.push(optionText);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                } else {\r\n                    let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                        ? option.text\r\n                        : '';\r\n\r\n                    if ( ! optionText || optionText === '') {\r\n                        return;\r\n                    }\r\n\r\n                    if (Array.isArray(that._value)) {\r\n                        $.each(that._value, function (key, itemValue) {\r\n                            if (itemValue == option.value) {\r\n                                selectedOptions.push(optionText);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (that._value == option.value) {\r\n                        selectedOptions.push(optionText);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            render: {\r\n                selectedOptions: selectedOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Сборка опции\r\n     * @param option\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _renderOption: function (option) {\r\n\r\n        let optionAttr = [];\r\n        let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n            ? option.text\r\n            : '';\r\n\r\n        $.each(option, function (name, value) {\r\n            if (name !== 'text') {\r\n                optionAttr.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n\r\n        if (Array.isArray(this._value)) {\r\n            $.each(this._value, function (key, itemValue) {\r\n                if (itemValue == option.value) {\r\n                    optionAttr.push('selected=\"selected\"');\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        } else if (this._value == option.value) {\r\n            optionAttr.push('selected=\"selected\"');\r\n        }\r\n\r\n        return {\r\n            type: 'option',\r\n            text: optionText,\r\n            attr: optionAttr.length > 0 ? (' ' + optionAttr.join(' ')) : ''\r\n        };\r\n    }\r\n};\n\ncoreuiForm$1.fields.switch = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'switch',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        valueY: 'Y',\r\n        valueN: 'N',\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=checkbox]').prop('checked', value === this._options.valueY);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container       = $('.content-' + this._hash);\r\n        let switchContainer = $('.form-switch', container);\r\n        let inputs          = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n        let itemAttr   = {\r\n            type: 'checkbox',\r\n            class: 'form-check-input',\r\n            value: options.valueY\r\n        };\r\n\r\n\r\n        if (options.name) {\r\n            itemAttr.name = this._options.name;\r\n        }\r\n\r\n        if (options.required) {\r\n            itemAttr.required = 'required';\r\n        }\r\n\r\n        if (options.hasOwnProperty('attr') &&\r\n            typeof options.attr === 'object' &&\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            itemAttr = coreuiFormUtils$1.mergeAttr(itemAttr, options.attr);\r\n        }\r\n\r\n        if (this._value === options.valueY) {\r\n            itemAttr.checked = 'checked';\r\n        }\r\n\r\n        $.each(itemAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/switch.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.textarea = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'textarea',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' textarea').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' textarea').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let textarea  = $('textarea', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            textarea.removeClass('is-valid');\r\n            textarea.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' textarea');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/textarea.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.wysiwyg = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _editor: null,\r\n    _editorHash: null,\r\n    _options: {\r\n        type: 'wysiwyg',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        height: null,\r\n        minHeight: null,\r\n        maxHeight: null,\r\n        options: {},\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        readonly: false,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form       = form;\r\n        this._index      = index;\r\n        this._id         = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash       = coreuiFormUtils$1.hashCode();\r\n        this._editorHash = coreuiFormUtils$1.hashCode();\r\n        this._value      = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options    = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @return {string|null}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        } else {\r\n            return this._editor ? this._editor.getContent() : this._value;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            if (this._editor) {\r\n                this._editor.setContent(value);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/wysiwyg.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            editorHash: this._editorHash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let tinyMceOptions = {};\r\n        let than           = this;\r\n        let textareaId     = 'editor-' + this._editorHash;\r\n\r\n        if (typeof this._options.options === 'object' &&\r\n            ! Array.isArray(this._options.options) &&\r\n            Object.keys(this._options.options).length > 0\r\n        ) {\r\n            tinyMceOptions = this._options.options;\r\n\r\n        } else if (this._options.options === 'simple') {\r\n            tinyMceOptions = {\r\n                plugins: 'image lists anchor charmap',\r\n                toolbar: 'blocks | bold italic underline | alignleft aligncenter ' +\r\n                         'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                         'forecolor backcolor removeformat',\r\n                menubar: false,\r\n                branding: false\r\n            };\r\n\r\n        } else {\r\n            tinyMceOptions = {\r\n                promotion: false,\r\n                branding: false,\r\n                plugins: 'preview importcss searchreplace autolink autosave save directionality code ' +\r\n                         'visualblocks visualchars fullscreen image link media template codesample table ' +\r\n                         'charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',\r\n                menubar: 'file edit view insert format tools table help',\r\n                toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | ' +\r\n                         'alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | ' +\r\n                         'forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen ' +\r\n                         'preview save print | insertfile image media template link anchor codesample | ltr rtl',\r\n            };\r\n        }\r\n\r\n        tinyMceOptions.selector = '#editor-' + this._editorHash;\r\n\r\n        if (['string', 'number'].indexOf(typeof this._options.width) >= 0) {\r\n            tinyMceOptions.width = this._options.width;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minWidth) >= 0) {\r\n            tinyMceOptions.min_width = this._options.minWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxWidth) >= 0) {\r\n            tinyMceOptions.max_width = this._options.maxWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.height) >= 0) {\r\n            tinyMceOptions.height = this._options.height;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minHeight) >= 0) {\r\n            tinyMceOptions.min_height = this._options.minHeight;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxHeight) >= 0) {\r\n            tinyMceOptions.max_height = this._options.maxHeight;\r\n        }\r\n\r\n        tinymce.init(tinyMceOptions).then(function () {\r\n            than._editor = tinymce.get(textareaId);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.passwordRepeat = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _isChangeState: true,\r\n    _value: '',\r\n    _options: {\r\n        type: 'password',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            type: 'password',\r\n            class: 'form-control form-control-sm d-inline-block flex-shrink-0'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        showBtn: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        }\r\n\r\n        let pass = $('.content-' + this._hash + ' input[type=\"password\"]').eq(0);\r\n\r\n        if (typeof pass.attr('disabled') !== 'undefined' && pass.attr('disabled') !== false) {\r\n            return '';\r\n        }\r\n\r\n        return pass.val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value ? '******' : '');\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=\"password\"]').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input[type=\"password\"]', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        if ( ! this._isChangeState || this._options.readonly) {\r\n            return true;\r\n        }\r\n\r\n        let input = $('.content-' + this._hash + ' input[type=\"password\"]');\r\n\r\n        if (input.eq(0).val() !== input.eq(1).val()) {\r\n            return false;\r\n        }\r\n\r\n        if (input[0]) {\r\n            return input.eq(0).is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes  = [];\r\n        let attributes2 = [];\r\n        let datalist    = [];\r\n        let options     = this.getOptions();\r\n\r\n        this._isChangeState = ! options.showBtn\r\n            ? true\r\n            : ! this._value;\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if ( ! this._isChangeState) {\r\n            options.attr.disabled = '';\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.value = this._value ? '******' : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n        $.each(options.attr, function (name, value) {\r\n            if (['name', 'value'].indexOf(name) < 0) {\r\n                attributes2.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n        let lang = this._form.getLang();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: lang,\r\n            btn_text: this._isChangeState ? lang.cancel : lang.change,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                attr2: attributes2.length > 0 ? (' ' + attributes2.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value ? '******' : '',\r\n            hash: this._hash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' .btn-password-change').click(function (e) {\r\n            let textChange = $(this).data('change');\r\n            let textCancel = $(this).data('cancel');\r\n\r\n            if (that._isChangeState) {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').attr('disabled', 'disabled');\r\n                $(this).text(textChange);\r\n                that._isChangeState = false;\r\n\r\n            } else {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').removeAttr('disabled');\r\n                $(this).text(textCancel);\r\n                that._isChangeState = true;\r\n            }\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.file = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'file',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {File[]}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input')[0].files;\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {File|File[]} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if ( ! (value instanceof File) &&  ! (value instanceof FileList)) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text('');\r\n        } else {\r\n            let container = new DataTransfer();\r\n\r\n            if (value instanceof File) {\r\n                container.items.add(value);\r\n\r\n            } else {\r\n                $.each(value, function (key, file) {\r\n                    if (value instanceof File) {\r\n                        container.items.add(file);\r\n                    }\r\n                });\r\n            }\r\n\r\n            $('.content-' + this._hash + ' input')[0].files = container.files;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils$1.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils$1.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils$1.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils$1.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\nreturn coreuiForm$1;\n\n})));\n"]}