{"version":3,"sources":["coreui-form.min.js"],"names":["global","factory","exports","module","define","amd","CoreUI","form","this","f","window","self","ejs","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","fs","path","utils","scopeOptionWarned","_VERSION_STRING","version","_DEFAULT_LOCALS_NAME","_OPTS_PASSABLE_WITH_DATA","_OPTS_PASSABLE_WITH_DATA_EXPRESS","concat","_BOM","_JS_IDENTIFIER","resolvePaths","name","paths","filePath","some","v","resolveInclude","existsSync","handleCache","options","template","func","filename","hasTemplate","arguments","cache","get","fileLoader","toString","replace","compile","set","includeFile","opts","shallowCopy","createNullProtoObjWherePossible","includePath","views","match","exec","Array","isArray","root","includer","escapeFunction","includerResult","rethrow","err","str","flnm","lineno","esc","lines","split","start","Math","max","end","min","context","slice","map","line","curr","join","message","stripSemi","Template","text","templateText","mode","truncate","currentLine","source","client","escape","escapeXML","compileDebug","debug","openDelimiter","closeDelimiter","delimiter","strict","rmWhitespace","outputFunctionName","localsName","async","destructuredLocals","legacyInclude","_with","regex","createRegex","readFileSync","promiseImpl","Function","Promise","isDir","dirname","extname","resolve","scope","console","warn","render","d","data","shallowCopyFromList","renderFile","cb","result","args","prototype","shift","pop","settings","viewOpts","reject","clearCache","reset","modes","EVAL","ESCAPED","RAW","COMMENT","LITERAL","delim","escapeRegExpChars","open","close","RegExp","fn","prepended","appended","escapeFn","sanitizedFilename","JSON","stringify","generateSource","test","destructuring","src","log","ctor","SyntaxError","returnedFn","apply","includeData","Object","defineProperty","basename","value","writable","enumerable","configurable","matches","parseTemplateText","forEach","index","indexOf","closing","scanLine","firstPos","pat","arr","push","substring","_addOutput","newLineCount","lastIndexOf","__express","VERSION","../package.json","./utils","2","hasOwn","obj","key","hasOwnProperty","regExpChars","_ENCODE_HTML_RULES","string","String","&","<",">","\"","'","_MATCH_HTML","encode_char","escapeXMLToString","markup","undefined","to","from","list","_data","val","remove","hyphenToCamel","toUpperCase","create","__proto__","3","4","process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","resolvedPath","resolvedAbsolute","cwd","TypeError","charAt","normalize","isAbsolute","trailingSlash","substr","relative","trim","fromParts","toParts","samePartsLength","outputParts","sep","hasRoot","charCodeAt","matchedSlash","ext","startDot","startPart","preDotState","len","_process","5","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","marker","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","6","description","keywords","author","license","bin","main","jsdelivr","unpkg","repository","type","url","bugs","homepage","dependencies","jake","devDependencies","browserify","eslint","git-directory-deploy","jsdoc","lru-cache","mocha","uglify-js","engines","node","scripts","let","tpl","coreuiFormUtils$1","getFieldValue","formRecord","getRecord","fieldOptions","getFunctionByName","functionName","namespaces","mergeFieldOptions","defaultOptions","$","attr","mergeAttr","extend","width","_options","fieldWidth","unit","labelWidth","attr2","each","tryHandleCache","getAttacheFields","fields","field","instance","hash","_hash","direction","fieldsDirection","formatDate","templ","day","month","Date","date","getMonth","getDate","year","formatDateTime","getHours","getSeconds","formatDateMonth","lang","getFullYear","date_months","formatDateWeek","getObjValue","isNumeric","num","_REGEX_STRING","isNaN","hashCode","crc32","getTime","random","round","precision","parseInt","number","pow","coreuiFormInstance","id","send","method","format","minWidth","maxWidth","controlsOffset","readonly","validate","errorClass","layout","onSubmit","record","controls","_lock","_fieldsIndex","_groupsIndex","_controlsIndex","_groups","_fields","_controls","_events","_init","coreuiForm$1","getSetting","initEvents","that","formContainer","_trigger","getId","element","widthSizes","formAttr","matchAll","columns","columnsContent","column","initField","keys","fieldContents","control","show","content","html","domElement","document","getElementById","innerHTML","lock","controlOptions","getOptions","unlock","isValid","onsubmit","getData","onSubmitText","eval","onSubmitResult","results","isStopSend","sendFormat","dataFormat","contentType","FormData","FileList","file","append","processData","beforeSend","xhr","jsonResponse","parse","parsedResponse","script","loadUrl","href","successLoadUrl","regx","urlParams","param","error","textStatus","errorThrown","errorMessage","getLang","send_error","responseText","error_message","showError","complete","getValue","getFields","getControls","getGroups","getField","fieldInstance","isReadonly","hide","showControls","hideControls","formError","find","errorOptions","class","dismiss","prepend","scroll","scrollOffset","animate","scrollTop","offset","top","hideError","eventName","callback","singleExec","_instances","setValue","init","initGroup","group","expand","collapse","groupInstance","initControl","controlInstance","params","getMinutes","_renderControl","_settings","sendDataFormat","errorMessageScrollOffset","formId","setSettings","ru","modal_select","modal_loading","switch_yes","switch_no","dataset_add","date_week","required_field","repeat","change","cancel","en","button","_form","_index","onClick","_initEvents","attributes","duration","click","event","link","submit","coreuiFormUtils","_id","_value","inline","outContent","errorText","renderContent","empty","selectedItems","option","prop","itemValue","container","lastInput","inputs","removeClass","addClass","validText","invalidText","required","attachFields","checkboxOptions","itemAttr","optionText","checked","color","label","attach","datalist","input","is","_renderContentReadonly","_renderContent","datalistId","style","checkbox","itemAttributes","datalistAttr","alloyComponents","components","component","dataset","_renderOptions","items","valueY","valueN","serializeArray","item","_renderRowReadonly","custom","removeItems","removeItem","itemId","rows","headers","row","_eventAdd","_renderRow","rowOptions","itemOptions","cellValue","cellItemValue","selected","optionValue","slideUp","slideDown","showCollapsible","hashItem","jQuery","Zepto","Mask","regexMask","invalid","sel","pos","el","dSel","selection","cSelStart","ctrl","selectionStart","navigator","appVersion","createRange","moveStart","setCaret","range","setSelectionRange","createTextRange","moveEnd","select","events","keyCode","which","getCaret","maskDigitPosMapOld","maskDigitPosMap","jMaskGlobals","useInput","behaviour","keyup","oldValue","trigger","clearIfNotMatch","getRegexMask","pattern","optional","recursive","oRecursive","maskChunks","mask","translation","jMask","digit","destroyEvents","calculateCaretPosition","oldVal","newVal","getMasked","caretPosNew","newValL","oldValL","maskDigitsBeforeCaret","maskDigitsAfterCaret","maskDigitsBeforeCaretAll","maskDigitsBeforeCaretAllOld","caretPosOld","caretPos","inArray","byPassKeys","keyStrokeCompensation","lastUntranslatedMaskChar","buf","addMethod","resetPos","maskDigitCount","reverse","m","maskLen","valLen","check","valDigit","maskDigit","lastMaskChar","callbacks","fallback","skipMaskChars","maskDigitPosArr","lastMaskCharDigit","mapMaskdigitPositions","maskDiff","criteria","changed","defaultArgs","placeholder","removeAttr","getCleanVal","onlyMask","maxlength","caret","getMaskedVal","prefix","selectOnFocus","notSameMaskObject","maskObject","maskWatchers","maskFunction","globals","watchInputs","eventSupported","selector","setInterval","interval","isSupported","unmask","clearInterval","dataMask","removeData","applyDataMask","maskElements","HTMLAttributes","dataMaskAttr","watchInterval","userAgent","createElement","watchDataMask","#","A","S","onHidden","modal","_text","size","onClear","onChange","elementText","elementValue","textAttr","modalLoading","modalId","success","onShow","Number","step","keydown","k","selectedItem","radioOptions","shiftKey","ctrlKey","altKey","preventDefault","blur","radio","values","renderAttr","groupOptions","selectOptions","_renderOption","selectedOptions","optionAttr","switch","switchContainer","textarea","wysiwyg","groupAttr","groupOption","getContent","than","textareaId","tinyMceOptions","plugins","toolbar","promotion","branding","max_width","height","min_height","minHeight","passwordRepeat","pass","attributes2","_isChangeState","textCancel","DataTransfer","add","_editor","_editorHash","setContent","editorHash","menubar","min_width","maxHeight","max_height","tinymce","then","showBtn","eq","disabled","btn_text","textChange","files","File"],"mappings":"AAAC,CAAA,SAAUA,EAAQC,GACJ,UAAd,OAAAC,SAA4C,aAAjB,OAAIC,OAA6BA,OAASD,QAAQD,EAAU,EAG/E,YAAR,OAAKG,QAAeA,OAAAC,IAAAD,OAAAH,CAAA,GAAED,EAAAM,OAAYN,EAAAM,QAAA,GAAAN,EAAAM,OAAAC,KAAAN,EAAA,EAAlC,EAACO,KAAO,WAAc,aAEvB,CAAA,SAAgBC,GAAiB,UAAVP,OAAOA,SAA6B,aAAhB,OAAOC,OAAqBA,OAAAD,QAAAO,EAAA,EAAA,YAAA,OAAAL,QAAAA,OAAAC,IAAAD,OAAA,GAAAK,CAAA,GAAA,aAAA,OAAAC,OAAAA,OAAA,aAAA,OAAAV,OAAAA,OAAA,aAAA,OAAAW,KAAAA,KAAAH,MAAAI,IAAAH,EAAA,CAAA,EAAA,WAAA,OAAA,SAAAI,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAT,GAAA,GAAA,CAAAM,EAAAG,GAAA,CAAA,GAAA,CAAAJ,EAAAI,GAAA,CAAA,IAAAC,EAAA,YAAA,OAAAC,SAAAA,QAAA,GAAA,CAAAX,GAAAU,EAAA,OAAAA,EAAAD,EAAA,CAAA,CAAA,EAAA,GAAAG,EAAA,OAAAA,EAAAH,EAAA,CAAA,CAAA,EAAA,MAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,GAAA,GAAAM,KAAA,mBAAAF,CAAA,CAAAG,EAAAV,EAAAG,GAAA,CAAAhB,QAAA,EAAA,EAAAY,EAAAI,GAAA,GAAAQ,KAAAD,EAAAvB,QAAA,SAAAW,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,CAAA,CAAA,EAAAY,EAAAA,EAAAvB,QAAAW,EAAAC,EAAAC,EAAAC,CAAA,CAAA,CAAA,OAAAD,EAAAG,GAAAhB,OAAA,CAAA,IAAA,IAAAmB,EAAA,YAAA,OAAAD,SAAAA,QAAAF,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,CAAA,GAAAD,EAAAD,EAAAE,EAAA,EAAA,OAAAD,CAAA,EAAA,CAAAW,EAAA,CAAA,SAAAR,EAAAjB,EAAAD,GAAA,IAAA2B,EAAAT,EAAA,IAAA,EAAAU,EAAAV,EAAA,MAAA,EAAAW,EAAAX,EAAA,SAAA,EAAAY,EAAA,CAAA,EAAAC,EAAAb,EAAA,iBAAA,EAAAc,QAAAC,EAAA,SAAAC,EAAA,CAAA,YAAA,QAAA,UAAA,QAAA,eAAA,SAAA,QAAA,eAAA,SAAA,WAAA,SAAAC,EAAAD,EAAAE,OAAA,OAAA,EAAAC,EAAA,UAAAC,EAAA,6BAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAA,GAAAD,EAAAE,KAAA,SAAAC,GAAA,OAAAF,EAAA1C,EAAA6C,eAAAL,EAAAI,EAAA,CAAA,CAAA,EAAAjB,EAAAmB,WAAAJ,CAAA,CAAA,CAAA,EAAA,OAAAA,CAAA,CAAA,SAAAK,EAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAH,EAAAG,SAAAC,EAAA,EAAAC,UAAA5B,OAAA,GAAAuB,EAAAM,MAAA,CAAA,GAAA,CAAAH,EAAA,MAAA,IAAA9B,MAAA,kCAAA,EAAA,GAAA6B,EAAAlD,EAAAsD,MAAAC,IAAAJ,CAAA,EAAA,OAAAD,EAAAE,IAAAH,EAAAO,EAAAL,CAAA,EAAAM,SAAA,EAAAC,QAAArB,EAAA,EAAA,EAAA,MAAA,GAAA,CAAAe,EAAA,CAAA,GAAA,CAAAD,EAAA,MAAA,IAAA9B,MAAA,uDAAA,EAAA4B,EAAAO,EAAAL,CAAA,EAAAM,SAAA,EAAAC,QAAArB,EAAA,EAAA,CAAA,CAAA,OAAAa,EAAAlD,EAAA2D,QAAAV,EAAAD,CAAA,EAAAA,EAAAM,OAAAtD,EAAAsD,MAAAM,IAAAT,EAAAD,CAAA,EAAAA,CAAA,CAAA,SAAAM,EAAAd,GAAA,OAAA1C,EAAAwD,WAAAd,CAAA,CAAA,CAAA,SAAAmB,EAAAjC,EAAAoB,GAAA,IAAAc,EAAAjC,EAAAkC,YAAAlC,EAAAmC,gCAAA,EAAAhB,CAAA,EAAA,GAAAc,EAAAX,SAAA,SAAAvB,EAAAoB,GAAA,IAAAiB,EAAAC,EAAAlB,EAAAkB,MAAAC,EAAA,oBAAAC,KAAAxC,CAAA,EAAA,GAAAuC,GAAAA,EAAA1C,OAAAG,EAAAA,EAAA8B,QAAA,OAAA,EAAA,EAAAO,EAAAI,MAAAC,QAAAtB,EAAAuB,IAAA,EAAAhC,EAAAX,EAAAoB,EAAAuB,IAAA,EAAAvE,EAAA6C,eAAAjB,EAAAoB,EAAAuB,MAAA,IAAA,CAAA,CAAA,OAAA,GAAA,EAAAN,EAAA,EAAAA,EAAAjB,EAAAG,WAAAT,EAAA1C,EAAA6C,eAAAjB,EAAAoB,EAAAG,QAAA,EAAAxB,EAAAmB,WAAAJ,CAAA,GAAAA,EAAAuB,IAAAI,MAAAC,QAAAJ,CAAA,EAAA3B,EAAAX,EAAAsC,CAAA,EAAAD,IAAA,YAAA,OAAAjB,EAAAwB,SAAA,MAAA,IAAAnD,MAAA,oCAAA2B,EAAAyB,eAAA7C,CAAA,EAAA,GAAA,EAAA,OAAAqC,CAAA,EAAArC,EAAAkC,CAAA,EAAA,YAAA,OAAAd,EAAAwB,SAAA,CAAAE,EAAA1B,EAAAwB,SAAA5C,EAAAkC,EAAAX,QAAA,EAAA,GAAAuB,IAAAA,EAAAvB,WAAAW,EAAAX,SAAAuB,EAAAvB,UAAAuB,EAAAzB,UAAA,OAAAF,EAAAe,EAAAY,EAAAzB,QAAA,CAAA,CAAA,OAAAF,EAAAe,CAAA,CAAA,CAAA,SAAAa,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAJ,EAAAK,MAAA,IAAA,EAAAC,EAAAC,KAAAC,IAAAN,EAAA,EAAA,CAAA,EAAAO,EAAAF,KAAAG,IAAAN,EAAAxD,OAAAsD,EAAA,CAAA,EAAA5B,EAAA6B,EAAAF,CAAA,EAAAU,EAAAP,EAAAQ,MAAAN,EAAAG,CAAA,EAAAI,IAAA,SAAAC,EAAA3E,GAAA4E,EAAA5E,EAAAmE,EAAA,EAAA,OAAAS,GAAAb,EAAA,OAAA,QAAAa,EAAA,KAAAD,CAAA,CAAA,EAAAE,KAAA,IAAA,EAAA,MAAAjB,EAAAhD,KAAAuB,EAAAyB,EAAAkB,SAAA3C,GAAA,OAAA,IAAA4B,EAAA,KAAAS,EAAA,OAAAZ,EAAAkB,QAAAlB,CAAA,CAAA,SAAAmB,EAAAlB,GAAA,OAAAA,EAAAnB,QAAA,UAAA,IAAA,CAAA,CAAA,SAAAsC,EAAAC,EAAAnC,GAAAA,EAAAA,GAAAjC,EAAAmC,gCAAA,EAAA,IAAAhB,EAAAnB,EAAAmC,gCAAA,EAAA1D,KAAA4F,aAAAD,EAAA3F,KAAA6F,KAAA,KAAA7F,KAAA8F,SAAA,CAAA,EAAA9F,KAAA+F,YAAA,EAAA/F,KAAAgG,OAAA,GAAAtD,EAAAuD,OAAAzC,EAAAyC,QAAA,CAAA,EAAAvD,EAAAyB,eAAAX,EAAA0C,QAAA1C,EAAAW,gBAAA5C,EAAA4E,UAAAzD,EAAA0D,aAAA,CAAA,IAAA5C,EAAA4C,aAAA1D,EAAA2D,MAAA,CAAA,CAAA7C,EAAA6C,MAAA3D,EAAAG,SAAAW,EAAAX,SAAAH,EAAA4D,cAAA9C,EAAA8C,eAAA5G,EAAA4G,eAAA,IAAA5D,EAAA6D,eAAA/C,EAAA+C,gBAAA7G,EAAA6G,gBAAA,IAAA7D,EAAA8D,UAAAhD,EAAAgD,WAAA9G,EAAA8G,WAAA,IAAA9D,EAAA+D,OAAAjD,EAAAiD,QAAA,CAAA,EAAA/D,EAAAwC,QAAA1B,EAAA0B,QAAAxC,EAAAM,MAAAQ,EAAAR,OAAA,CAAA,EAAAN,EAAAgE,aAAAlD,EAAAkD,aAAAhE,EAAAuB,KAAAT,EAAAS,KAAAvB,EAAAwB,SAAAV,EAAAU,SAAAxB,EAAAiE,mBAAAnD,EAAAmD,mBAAAjE,EAAAkE,WAAApD,EAAAoD,YAAAlH,EAAAkH,YAAAjF,EAAAe,EAAAkB,MAAAJ,EAAAI,MAAAlB,EAAAmE,MAAArD,EAAAqD,MAAAnE,EAAAoE,mBAAAtD,EAAAsD,mBAAApE,EAAAqE,cAAA,KAAA,IAAAvD,EAAAuD,eAAA,CAAA,CAAAvD,EAAAuD,cAAArE,EAAA+D,OAAA/D,EAAAsE,MAAA,CAAA,EAAAtE,EAAAsE,MAAA,KAAA,IAAAxD,EAAAwD,OAAAxD,EAAAwD,MAAAhH,KAAAwD,KAAAd,EAAA1C,KAAAiH,MAAAjH,KAAAkH,YAAA,CAAA,CAAAxH,EAAAsD,MAAAzB,EAAAyB,MAAAtD,EAAAwD,WAAA7B,EAAA8F,aAAAzH,EAAAkH,WAAAjF,EAAAjC,EAAA0H,YAAA,IAAAC,SAAA,cAAA,EAAA,EAAAC,QAAA5H,EAAA6C,eAAA,SAAAL,EAAAW,EAAA0E,GAAA,IAAAC,EAAAlG,EAAAkG,QAAAC,EAAAnG,EAAAmG,QAAA9D,GAAA+D,EAAApG,EAAAoG,SAAAH,EAAA1E,EAAA2E,EAAA3E,CAAA,EAAAX,CAAA,EAAA,OAAAuF,EAAAvF,CAAA,IAAAyB,GAAA,QAAAA,CAAA,EAAAjE,EAAA2D,QAAA,SAAAV,EAAAa,GAAA,OAAAA,GAAAA,EAAAmE,QAAAnG,IAAAoG,QAAAC,KAAA,2DAAA,EAAArG,EAAA,CAAA,GAAAgC,EAAA0B,UAAA1B,EAAA0B,QAAA1B,EAAAmE,OAAA,OAAAnE,EAAAmE,OAAA,IAAAjC,EAAA/C,EAAAa,CAAA,EAAAH,QAAA,CAAA,EAAA3D,EAAAoI,OAAA,SAAAnF,EAAAoF,EAAAtH,GAAAuH,EAAAD,GAAAxG,EAAAmC,gCAAA,EAAAF,EAAA/C,GAAAc,EAAAmC,gCAAA,EAAA,OAAA,GAAAX,UAAA5B,QAAAI,EAAA0G,oBAAAzE,EAAAwE,EAAApG,CAAA,EAAAa,EAAAe,EAAAb,CAAA,EAAAqF,CAAA,CAAA,EAAAtI,EAAAwI,WAAA,WAAA,IAAAC,EAAAH,EAAAI,EAAAC,EAAAtE,MAAAuE,UAAAnD,MAAAjE,KAAA6B,SAAA,EAAAF,EAAAwF,EAAAE,MAAA,EAAA/E,EAAA,CAAAX,SAAAA,CAAA,EAAAH,GAAA,YAAA,OAAAK,UAAAA,UAAA5B,OAAA,KAAAgH,EAAAE,EAAAG,IAAA,GAAAH,EAAAlH,QAAA6G,EAAAK,EAAAE,MAAA,EAAAF,EAAAlH,OAAAI,EAAAkC,YAAAD,EAAA6E,EAAAG,IAAA,CAAA,GAAAR,EAAAS,WAAAT,EAAAS,SAAA7E,QAAAJ,EAAAI,MAAAoE,EAAAS,SAAA7E,OAAAoE,EAAAS,SAAA,gBAAAjF,EAAAR,MAAA,CAAA,GAAA0F,EAAAV,EAAAS,SAAA,kBAAAlH,EAAAkC,YAAAD,EAAAkF,CAAA,EAAAnH,EAAA0G,oBAAAzE,EAAAwE,EAAAnG,CAAA,GAAA2B,EAAAX,SAAAA,GAAAmF,EAAAzG,EAAAmC,gCAAA,EAAAF,GAAAwE,EAAAA,EAAAG,EAAAA,EAAA,GAAAA,CAAAA,EAAA,CAAA,GAAA,YAAA,OAAAzI,EAAA0H,YAAA,OAAA,IAAA1H,EAAA0H,YAAA,SAAAM,EAAAiB,GAAA,IAAAjB,EAAAU,EAAA3F,EAAAC,CAAA,EAAAsF,CAAA,CAAA,CAAA,CAAA,MAAA1D,GAAAqE,EAAArE,CAAA,CAAA,CAAA,CAAA,EAAA,MAAA,IAAAvD,MAAA,oCAAA,CAAA,CAAA,IAAAqH,EAAA3F,EAAAC,CAAA,EAAAsF,CAAA,CAAA,CAAA,MAAA1D,GAAA,OAAA6D,EAAA7D,CAAA,CAAA,CAAA6D,EAAA,KAAAC,CAAA,CAAA,EAAA1I,EAAAgG,SAAAA,EAAAhG,EAAAkJ,WAAA,WAAAlJ,EAAAsD,MAAA6F,MAAA,CAAA,EAAAnD,EAAAoD,MAAA,CAAAC,KAAA,OAAAC,QAAA,UAAAC,IAAA,MAAAC,QAAA,UAAAC,QAAA,SAAA,EAAAzD,EAAA4C,UAAA,CAAApB,YAAA,WAAA,IAAA3C,EAAA,0CAAA6E,EAAA7H,EAAA8H,kBAAArJ,KAAAwD,KAAAgD,SAAA,EAAA8C,EAAA/H,EAAA8H,kBAAArJ,KAAAwD,KAAA8C,aAAA,EAAAiD,EAAAhI,EAAA8H,kBAAArJ,KAAAwD,KAAA+C,cAAA,EAAAhC,EAAAA,EAAAnB,QAAA,KAAAgG,CAAA,EAAAhG,QAAA,KAAAkG,CAAA,EAAAlG,QAAA,KAAAmG,CAAA,EAAA,OAAA,IAAAC,OAAAjF,CAAA,CAAA,EAAAlB,QAAA,WAAA,IAAAoG,EAAAjG,EAAAxD,KAAAwD,KAAAkG,EAAA,GAAAC,EAAA,GAAAC,EAAApG,EAAAW,eAAA0F,EAAArG,EAAAX,SAAAiH,KAAAC,UAAAvG,EAAAX,QAAA,EAAA,YAAA,GAAA,CAAA7C,KAAAgG,OAAA,CAAA,GAAAhG,KAAAgK,eAAA,EAAAN,GAAA,sGAAAlG,EAAAmD,mBAAA,CAAA,GAAA,CAAA3E,EAAAiI,KAAAzG,EAAAmD,kBAAA,EAAA,MAAA,IAAA5F,MAAA,kDAAA,EAAA2I,GAAA,SAAAlG,EAAAmD,mBAAA,gBAAA,CAAA,GAAAnD,EAAAoD,YAAA,CAAA5E,EAAAiI,KAAAzG,EAAAoD,UAAA,EAAA,MAAA,IAAA7F,MAAA,0CAAA,EAAA,GAAAyC,EAAAsD,oBAAAtD,EAAAsD,mBAAA3F,OAAA,CAAA,IAAA,IAAA+I,EAAA,qBAAA1G,EAAAoD,WAAA,aAAAlG,EAAA,EAAAA,EAAA8C,EAAAsD,mBAAA3F,OAAAT,CAAA,GAAA,CAAA,IAAAwB,EAAAsB,EAAAsD,mBAAApG,GAAA,GAAA,CAAAsB,EAAAiI,KAAA/H,CAAA,EAAA,MAAA,IAAAnB,MAAA,sBAAAL,EAAA,iCAAA,EAAA,EAAAA,IAAAwJ,GAAA,SAAAA,GAAAhI,EAAA,eAAAA,CAAA,CAAAwH,GAAAQ,EAAA,KAAA,CAAA,CAAA,IAAA1G,EAAAwD,QAAA0C,GAAA,WAAAlG,EAAAoD,WAAA,cAAA+C,GAAA,SAAA3J,KAAAgG,OAAA0D,EAAA1J,KAAAgG,QAAA2D,GAAA,uBAAA,CAAAQ,EAAA3G,EAAA4C,aAAA,iCAAA0D,KAAAC,UAAA/J,KAAA4F,YAAA,EAAA,sBAAAiE,EAAA,aAAA7J,KAAAgG,OAAA,2EAAAhG,KAAAgG,OAAAxC,EAAAyC,SAAAkE,EAAA,0BAAAP,EAAAzG,SAAA,EAAA,MAAAgH,EAAA3G,EAAA4C,gBAAA+D,EAAA,wBAAA9F,EAAAlB,SAAA,EAAA,MAAAgH,GAAA3G,EAAAiD,SAAA0D,EAAA,kBAAAA,GAAA3G,EAAA6C,OAAAuB,QAAAwC,IAAAD,CAAA,EAAA3G,EAAA4C,cAAA5C,EAAAX,WAAAsH,EAAAA,EAAA,mBAAAN,EAAA,MAAA,IAAA,GAAArG,EAAAqD,MAAA,IAAAwD,EAAA,IAAAhD,SAAA,0CAAA,EAAA,CAAA,CAAA,MAAA/G,GAAA,MAAAA,aAAAgK,YAAA,IAAAvJ,MAAA,+CAAA,EAAAT,CAAA,MAAA+J,EAAAhD,SAAAoC,EAAA,IAAAY,EAAA7G,EAAAoD,WAAA,+BAAAuD,CAAA,CAAA,CAAA,MAAA7J,GAAA,MAAAA,aAAAgK,cAAA9G,EAAAX,WAAAvC,EAAAkF,SAAA,OAAAhC,EAAAX,UAAAvC,EAAAkF,SAAA,2BAAAlF,EAAAkF,SAAA,qEAAAlF,EAAAkF,SAAA,sCAAAhC,EAAAqD,QAAAvG,EAAAkF,SAAA,KAAAlF,EAAAkF,SAAA,mFAAAlF,CAAA,CAAAiK,EAAA/G,EAAAyC,OAAAwD,EAAA,SAAAzB,GAAA,OAAAyB,EAAAe,MAAAhH,EAAA0B,QAAA,CAAA8C,GAAAzG,EAAAmC,gCAAA,EAAAkG,EAAA,SAAAtI,EAAAmJ,GAAA,IAAA1C,EAAAxG,EAAAkC,YAAAlC,EAAAmC,gCAAA,EAAAsE,CAAA,EAAA,OAAAyC,IAAA1C,EAAAxG,EAAAkC,YAAAsE,EAAA0C,CAAA,GAAAlH,EAAAjC,EAAAkC,CAAA,EAAAuE,CAAA,CAAA,EAAA1D,EAAA,CAAA,EAAA,GAAAb,EAAAX,UAAA,YAAA,OAAA6H,OAAAC,eAAA,CAAA,IAAA9H,EAAAW,EAAAX,SAAA+H,EAAAtJ,EAAAsJ,SAAA/H,EAAAvB,EAAAmG,QAAA5E,CAAA,CAAA,EAAA,IAAA6H,OAAAC,eAAAJ,EAAA,OAAA,CAAAM,MAAAD,EAAAE,SAAA,CAAA,EAAAC,WAAA,CAAA,EAAAC,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA1K,IAAA,CAAA,OAAAiK,CAAA,EAAAP,eAAA,WAAAhK,KAAAwD,KAAAkD,eAAA1G,KAAA4F,aAAA5F,KAAA4F,aAAAxC,QAAA,WAAA,IAAA,EAAAA,QAAA,cAAA,EAAA,GAAApD,KAAA4F,aAAA5F,KAAA4F,aAAAxC,QAAA,cAAA,KAAA,EAAAA,QAAA,cAAA,KAAA,EAAA,IAAAjD,EAAAH,KAAAiL,EAAAjL,KAAAkL,kBAAA,EAAAnD,EAAA/H,KAAAwD,KAAAgD,UAAA/F,EAAAT,KAAAwD,KAAA8C,cAAA3F,EAAAX,KAAAwD,KAAA+C,eAAA0E,GAAAA,EAAA9J,QAAA8J,EAAAE,QAAA,SAAA9F,EAAA+F,GAAA,GAAA,IAAA/F,EAAAgG,QAAA5K,EAAAsH,CAAA,GAAA,IAAA1C,EAAAgG,QAAA5K,EAAAsH,EAAAA,CAAA,IAAAuD,EAAAL,EAAAG,EAAA,KAAArD,EAAApH,GAAA2K,GAAA,IAAAvD,EAAApH,GAAA2K,GAAA,IAAAvD,EAAApH,EAAA,MAAA,IAAAI,MAAA,0CAAAsE,EAAA,IAAA,EAAAlF,EAAAoL,SAAAlG,CAAA,CAAA,CAAA,CAAA,EAAA6F,kBAAA,WAAA,IAAA,IAAAM,EAAAjH,EAAAvE,KAAA4F,aAAA6F,EAAAzL,KAAAiH,MAAAmB,EAAAqD,EAAA3H,KAAAS,CAAA,EAAAmH,EAAA,GAAAtD,GAAA,KAAAoD,EAAApD,EAAAgD,SAAAM,EAAAC,KAAApH,EAAAqH,UAAA,EAAAJ,CAAA,CAAA,EAAAjH,EAAAA,EAAAY,MAAAqG,CAAA,GAAAE,EAAAC,KAAAvD,EAAA,EAAA,EAAA7D,EAAAA,EAAAY,MAAAiD,EAAA,GAAAjH,MAAA,EAAAiH,EAAAqD,EAAA3H,KAAAS,CAAA,EAAA,OAAAA,GAAAmH,EAAAC,KAAApH,CAAA,EAAAmH,CAAA,EAAAG,WAAA,SAAAxG,GAAA,GAAArF,KAAA8F,WAAAT,EAAAA,EAAAjC,QAAA,kBAAA,EAAA,EAAApD,KAAA8F,SAAA,CAAA,GAAA,CAAAT,EAAA,OAAAA,EAAAA,GAAAA,GAAAA,GAAAA,EAAAA,EAAAjC,QAAA,MAAA,MAAA,GAAAA,QAAA,MAAA,KAAA,GAAAA,QAAA,MAAA,KAAA,GAAAA,QAAA,KAAA,KAAA,EAAApD,KAAAgG,QAAA,mBAAAX,EAAA,MAAA,EAAAkG,SAAA,SAAAlG,GAAA,IAAA0C,EAAA/H,KAAAwD,KAAAgD,UAAA/F,EAAAT,KAAAwD,KAAA8C,cAAA3F,EAAAX,KAAAwD,KAAA+C,eAAAuF,EAAAzG,EAAAT,MAAA,IAAA,EAAAzD,OAAA,EAAA,OAAAkE,GAAA,KAAA5E,EAAAsH,EAAA,KAAAtH,EAAAsH,EAAA,IAAA/H,KAAA6F,KAAAH,EAAAoD,MAAAC,KAAA,MAAA,KAAAtI,EAAAsH,EAAA,IAAA/H,KAAA6F,KAAAH,EAAAoD,MAAAE,QAAA,MAAA,KAAAvI,EAAAsH,EAAA,IAAA/H,KAAA6F,KAAAH,EAAAoD,MAAAG,IAAA,MAAA,KAAAxI,EAAAsH,EAAA,IAAA/H,KAAA6F,KAAAH,EAAAoD,MAAAI,QAAA,MAAA,KAAAzI,EAAAsH,EAAAA,EAAA/H,KAAA6F,KAAAH,EAAAoD,MAAAK,QAAAnJ,KAAAgG,QAAA,mBAAAX,EAAAjC,QAAA3C,EAAAsH,EAAAA,EAAAtH,EAAAsH,CAAA,EAAA,OAAA,MAAA,KAAAA,EAAAA,EAAApH,EAAAX,KAAA6F,KAAAH,EAAAoD,MAAAK,QAAAnJ,KAAAgG,QAAA,mBAAAX,EAAAjC,QAAA2E,EAAAA,EAAApH,EAAAoH,EAAApH,CAAA,EAAA,OAAA,MAAA,KAAAoH,EAAApH,EAAA,IAAA,IAAAoH,EAAApH,EAAA,IAAA,IAAAoH,EAAApH,EAAAX,KAAA6F,MAAAH,EAAAoD,MAAAK,SAAAnJ,KAAA6L,WAAAxG,CAAA,EAAArF,KAAA6F,KAAA,KAAA7F,KAAA8F,SAAA,IAAAT,EAAAgG,QAAA,GAAA,GAAA,IAAAhG,EAAAgG,QAAA,GAAA,EAAA,MAAA,QAAA,GAAArL,KAAA6F,KAAA,CAAA,OAAA7F,KAAA6F,MAAA,KAAAH,EAAAoD,MAAAC,KAAA,KAAArD,EAAAoD,MAAAE,QAAA,KAAAtD,EAAAoD,MAAAG,IAAA5D,EAAA0G,YAAA,IAAA,EAAA1G,EAAA0G,YAAA,IAAA,IAAA1G,GAAA,KAAA,CAAA,OAAArF,KAAA6F,MAAA,KAAAH,EAAAoD,MAAAC,KAAA/I,KAAAgG,QAAA,SAAAX,EAAA,KAAA,MAAA,KAAAK,EAAAoD,MAAAE,QAAAhJ,KAAAgG,QAAA,2BAAAP,EAAAJ,CAAA,EAAA,OAAA,MAAA,KAAAK,EAAAoD,MAAAG,IAAAjJ,KAAAgG,QAAA,kBAAAP,EAAAJ,CAAA,EAAA,MAAA,MAAA,KAAAK,EAAAoD,MAAAI,QAAA,MAAA,KAAAxD,EAAAoD,MAAAK,QAAAnJ,KAAA6L,WAAAxG,CAAA,CAAA,CAAA,MAAArF,KAAA6L,WAAAxG,CAAA,CAAA,CAAArF,KAAAwD,KAAA4C,cAAA0F,IAAA9L,KAAA+F,aAAA+F,EAAA9L,KAAAgG,QAAA,kBAAAhG,KAAA+F,YAAA,KAAA,CAAA,EAAArG,EAAAyG,UAAA5E,EAAA4E,UAAAzG,EAAAsM,UAAAtM,EAAAwI,WAAAxI,EAAAuM,QAAAxK,EAAA/B,EAAAwC,KAAA,MAAA,aAAA,OAAAhC,SAAAA,OAAAE,IAAAV,EAAA,EAAA,CAAAwM,kBAAA,EAAAC,UAAA,EAAA9K,GAAA,EAAAC,KAAA,CAAA,GAAA8K,EAAA,CAAA,SAAAxL,EAAAjB,EAAAD,GAAA,SAAA2M,EAAAC,EAAAC,GAAA,OAAAC,EAAAhC,MAAA8B,EAAA,CAAAC,EAAA,CAAA,CAAA,IAAAE,EAAA,sBAAAD,EAAA9B,OAAApC,UAAAkE,eAAAE,GAAAhN,EAAA2J,kBAAA,SAAAsD,GAAA,OAAAA,EAAAC,OAAAD,CAAA,EAAAvJ,QAAAqJ,EAAA,MAAA,EAAA,EAAA,EAAA,CAAAI,IAAA,QAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,QAAAC,IAAA,OAAA,GAAAC,EAAA,WAAA,SAAAC,EAAAxM,GAAA,OAAA+L,EAAA/L,IAAAA,CAAA,CAAA,SAAAyM,IAAA,OAAA/F,SAAAiB,UAAAnF,SAAAjC,KAAAlB,IAAA,EAAA,kPAAA,CAAAN,EAAAyG,UAAA,SAAAkH,GAAA,OAAAC,MAAAD,EAAA,GAAAT,OAAAS,CAAA,EAAAjK,QAAA8J,EAAAC,CAAA,CAAA,EAAA,IAAA,YAAA,OAAAzC,OAAAC,eAAAD,OAAAC,eAAAjL,EAAAyG,UAAA,WAAA,CAAA0E,MAAAuC,CAAA,CAAA,EAAA1N,EAAAyG,UAAAhD,SAAAiK,CAAA,CAAA,MAAA9I,GAAAsD,QAAAC,KAAA,sEAAA,CAAA,CAAAnI,EAAA+D,YAAA,SAAA8J,EAAAC,GAAA,GAAAA,EAAAA,GAAA,GAAAD,MAAAA,EAAA,IAAA,IAAAtM,KAAAuM,EAAAnB,EAAAmB,EAAAvM,CAAA,GAAA,cAAAA,GAAA,gBAAAA,IAAAsM,EAAAtM,GAAAuM,EAAAvM,IAAA,OAAAsM,CAAA,EAAA7N,EAAAuI,oBAAA,SAAAsF,EAAAC,EAAAC,GAAA,GAAAA,EAAAA,GAAA,GAAAD,EAAAA,GAAA,GAAAD,MAAAA,EAAA,IAAA,IAAA7M,EAAA,EAAAA,EAAA+M,EAAAtM,OAAAT,CAAA,GAAA,CAAA,IAAAO,EAAAwM,EAAA/M,GAAA,KAAA,IAAA8M,EAAAvM,IAAAoL,EAAAmB,EAAAvM,CAAA,GAAA,cAAAA,GAAA,gBAAAA,IAAAsM,EAAAtM,GAAAuM,EAAAvM,GAAA,CAAA,OAAAsM,CAAA,EAAA7N,EAAAsD,MAAA,CAAA0K,MAAA,GAAApK,IAAA,SAAAiJ,EAAAoB,GAAA3N,KAAA0N,MAAAnB,GAAAoB,CAAA,EAAA1K,IAAA,SAAAsJ,GAAA,OAAAvM,KAAA0N,MAAAnB,EAAA,EAAAqB,OAAA,SAAArB,GAAA,OAAAvM,KAAA0N,MAAAnB,EAAA,EAAA1D,MAAA,WAAA7I,KAAA0N,MAAA,EAAA,CAAA,EAAAhO,EAAAmO,cAAA,SAAAtJ,GAAA,OAAAA,EAAAnB,QAAA,UAAA,SAAAS,GAAA,OAAAA,EAAA,GAAAiK,YAAA,CAAA,CAAA,CAAA,EAAApO,EAAAgE,gCAAA,YAAA,OAAAgH,OAAAqD,OAAA,WAAA,OAAArD,OAAAqD,OAAA,IAAA,CAAA,EAAA,CAAAC,UAAA,IAAA,YAAAtD,OAAA,WAAA,MAAA,EAAA,EAAA,WAAA,MAAA,CAAAsD,UAAA,IAAA,CAAA,CAAA,EAAA,IAAAC,EAAA,CAAA,SAAArN,EAAAjB,EAAAD,KAAA,IAAAwO,EAAA,CAAA,SAAAtN,EAAAjB,EAAAD,GAAA,CAAA,SAAAyO,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAA,IAAAC,EAAA,EAAA7N,EAAA2N,EAAAlN,OAAA,EAAA,GAAAT,EAAAA,CAAA,GAAA,CAAA,IAAA8N,EAAAH,EAAA3N,GAAA,MAAA8N,EAAAH,EAAAI,OAAA/N,EAAA,CAAA,EAAA,OAAA8N,GAAAH,EAAAI,OAAA/N,EAAA,CAAA,EAAA6N,CAAA,IAAAA,IAAAF,EAAAI,OAAA/N,EAAA,CAAA,EAAA6N,CAAA,GAAA,CAAA,GAAAD,EAAA,KAAAC,CAAA,IAAAF,EAAAK,QAAA,IAAA,EAAA,OAAAL,CAAA,CAAA,SAAAM,EAAAC,EAAA3O,GAAA,GAAA2O,EAAAD,OAAA,OAAAC,EAAAD,OAAA1O,CAAA,EAAA,IAAA,IAAA4O,EAAA,GAAAnO,EAAA,EAAAA,EAAAkO,EAAAzN,OAAAT,CAAA,GAAAT,EAAA2O,EAAAlO,GAAAA,EAAAkO,CAAA,GAAAC,EAAAlD,KAAAiD,EAAAlO,EAAA,EAAA,OAAAmO,CAAA,CAAAnP,EAAAgI,QAAA,WAAA,IAAA,IAAAoH,EAAA,GAAAC,EAAA,CAAA,EAAArO,EAAAqC,UAAA5B,OAAA,EAAA,CAAA,GAAAT,GAAA,CAAAqO,EAAArO,CAAA,GAAA,CAAA,IAAAY,EAAA,GAAAZ,EAAAqC,UAAArC,GAAAyN,EAAAa,IAAA,EAAA,GAAA,UAAA,OAAA1N,EAAA,MAAA,IAAA2N,UAAA,2CAAA,EAAA3N,IAAAwN,EAAAxN,EAAA,IAAAwN,EAAAC,EAAA,MAAAzN,EAAA4N,OAAA,CAAA,EAAA,CAAA,OAAAH,EAAA,IAAA,KAAAD,EAAAV,EAAAO,EAAAG,EAAAlK,MAAA,GAAA,EAAA,SAAA3D,GAAA,MAAA,CAAA,CAAAA,CAAA,CAAA,EAAA,CAAA8N,CAAA,EAAAxJ,KAAA,GAAA,IAAA,GAAA,EAAA7F,EAAAyP,UAAA,SAAA7N,GAAA,IAAA8N,EAAA1P,EAAA0P,WAAA9N,CAAA,EAAA+N,EAAA,MAAAC,EAAAhO,EAAA,CAAA,CAAA,EAAA,OAAAA,GAAAA,EAAA8M,EAAAO,EAAArN,EAAAsD,MAAA,GAAA,EAAA,SAAA3D,GAAA,MAAA,CAAA,CAAAA,CAAA,CAAA,EAAA,CAAAmO,CAAA,EAAA7J,KAAA,GAAA,IAAA6J,EAAA9N,EAAA,MAAA+N,IAAA/N,GAAA,MAAA8N,EAAA,IAAA,IAAA9N,CAAA,EAAA5B,EAAA0P,WAAA,SAAA9N,GAAA,MAAA,MAAAA,EAAA4N,OAAA,CAAA,CAAA,EAAAxP,EAAA6F,KAAA,WAAA,IAAApD,EAAA4B,MAAAuE,UAAAnD,MAAAjE,KAAA6B,UAAA,CAAA,EAAA,OAAArD,EAAAyP,UAAAR,EAAAxM,EAAA,SAAAlB,EAAAmK,GAAA,GAAA,UAAA,OAAAnK,EAAA,MAAA,IAAAgO,UAAA,wCAAA,EAAA,OAAAhO,CAAA,CAAA,EAAAsE,KAAA,GAAA,CAAA,CAAA,EAAA7F,EAAA6P,SAAA,SAAA/B,EAAAD,GAAA,SAAAiC,EAAA9D,GAAA,IAAA,IAAA7G,EAAA,EAAAA,EAAA6G,EAAAvK,QAAA,KAAAuK,EAAA7G,GAAAA,CAAA,IAAA,IAAA,IAAAG,EAAA0G,EAAAvK,OAAA,EAAA,GAAA6D,GAAA,KAAA0G,EAAA1G,GAAAA,CAAA,IAAA,OAAAA,EAAAH,EAAA,GAAA6G,EAAAvG,MAAAN,EAAAG,EAAAH,EAAA,CAAA,CAAA,CAAA2I,EAAA9N,EAAAgI,QAAA8F,CAAA,EAAA8B,OAAA,CAAA,EAAA/B,EAAA7N,EAAAgI,QAAA6F,CAAA,EAAA+B,OAAA,CAAA,EAAA,IAAA,IAAAG,EAAAD,EAAAhC,EAAA5I,MAAA,GAAA,CAAA,EAAA8K,EAAAF,EAAAjC,EAAA3I,MAAA,GAAA,CAAA,EAAAzD,EAAA2D,KAAAG,IAAAwK,EAAAtO,OAAAuO,EAAAvO,MAAA,EAAAwO,EAAAxO,EAAAT,EAAA,EAAAA,EAAAS,EAAAT,CAAA,GAAA,GAAA+O,EAAA/O,KAAAgP,EAAAhP,GAAA,CAAAiP,EAAAjP,EAAA,KAAA,CAAA,IAAA,IAAAkP,EAAA,GAAAlP,EAAAiP,EAAAjP,EAAA+O,EAAAtO,OAAAT,CAAA,GAAAkP,EAAAjE,KAAA,IAAA,EAAA,OAAAiE,EAAAA,EAAA9N,OAAA4N,EAAAvK,MAAAwK,CAAA,CAAA,GAAApK,KAAA,GAAA,CAAA,EAAA7F,EAAAmQ,IAAA,IAAAnQ,EAAA8G,UAAA,IAAA9G,EAAA8H,QAAA,SAAAlG,GAAA,GAAA,UAAA,OAAAA,IAAAA,GAAA,IAAA,IAAAA,EAAAH,OAAA,MAAA,IAAA,IAAA,IAAA2O,EAAA,KAAAxO,EAAAyO,WAAA,CAAA,EAAA/K,EAAA,CAAA,EAAAgL,EAAA,CAAA,EAAAtP,EAAAY,EAAAH,OAAA,EAAA,GAAAT,EAAA,EAAAA,EAAA,GAAA,KAAAY,EAAAyO,WAAArP,CAAA,GAAA,GAAA,CAAAsP,EAAA,CAAAhL,EAAAtE,EAAA,KAAA,CAAA,MAAAsP,EAAA,CAAA,EAAA,MAAA,CAAA,IAAAhL,EAAA8K,EAAA,IAAA,IAAAA,GAAA,IAAA9K,EAAA,IAAA1D,EAAA6D,MAAA,EAAAH,CAAA,CAAA,EAAAtF,EAAAkL,SAAA,SAAAtJ,EAAA2O,GAAAhQ,EAAA,SAAAqB,GAAA,UAAA,OAAAA,IAAAA,GAAA,IAAA,IAAA,IAAAuD,EAAA,EAAAG,EAAA,CAAA,EAAAgL,EAAA,CAAA,EAAAtP,EAAAY,EAAAH,OAAA,EAAA,GAAAT,EAAA,EAAAA,EAAA,GAAA,KAAAY,EAAAyO,WAAArP,CAAA,GAAA,GAAA,CAAAsP,EAAA,CAAAnL,EAAAnE,EAAA,EAAA,KAAA,CAAA,KAAA,CAAA,IAAAsE,IAAAgL,EAAA,CAAA,EAAAhL,EAAAtE,EAAA,GAAA,MAAA,CAAA,IAAAsE,EAAA,GAAA1D,EAAA6D,MAAAN,EAAAG,CAAA,CAAA,EAAA1D,CAAA,EAAA,OAAArB,EAAAgQ,GAAAhQ,EAAAqP,OAAA,CAAA,EAAAW,EAAA9O,MAAA,IAAA8O,EAAAhQ,EAAAqP,OAAA,EAAArP,EAAAkB,OAAA8O,EAAA9O,MAAA,EAAAlB,CAAA,EAAAP,EAAA+H,QAAA,SAAAnG,GAAA,UAAA,OAAAA,IAAAA,GAAA,IAAA,IAAA,IAAA4O,EAAA,CAAA,EAAAC,EAAA,EAAAnL,EAAA,CAAA,EAAAgL,EAAA,CAAA,EAAAI,EAAA,EAAA1P,EAAAY,EAAAH,OAAA,EAAA,GAAAT,EAAA,EAAAA,EAAA,CAAA,IAAAM,EAAAM,EAAAyO,WAAArP,CAAA,EAAA,GAAA,KAAAM,EAAA,CAAA,GAAAgP,EAAA,SAAAG,EAAAzP,EAAA,EAAA,KAAA,CAAA,CAAA,IAAAsE,IAAAgL,EAAA,CAAA,EAAAhL,EAAAtE,EAAA,GAAA,KAAAM,EAAA,CAAA,IAAAkP,EAAAA,EAAAxP,EAAA,IAAA0P,IAAAA,EAAA,GAAA,CAAA,IAAAF,IAAAE,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,IAAAF,GAAA,CAAA,IAAAlL,GAAA,IAAAoL,GAAA,IAAAA,GAAAF,IAAAlL,EAAA,GAAAkL,IAAAC,EAAA,EAAA,GAAA7O,EAAA6D,MAAA+K,EAAAlL,CAAA,CAAA,EAAA,IAAAsK,EAAA,MAAA,KAAAA,OAAA,CAAA,CAAA,EAAA,SAAA/K,EAAAM,EAAAwL,GAAA,OAAA9L,EAAA+K,OAAAzK,EAAAwL,CAAA,CAAA,EAAA,SAAA9L,EAAAM,EAAAwL,GAAA,OAAAxL,EAAA,IAAAA,EAAAN,EAAApD,OAAA0D,GAAAN,EAAA+K,OAAAzK,EAAAwL,CAAA,CAAA,CAAA,EAAAnP,KAAAlB,KAAAY,EAAA,UAAA,CAAA,CAAA,EAAA,CAAA0P,SAAA,CAAA,GAAAC,EAAA,CAAA,SAAA3P,EAAAjB,EAAAD,GAAA,IAAA8Q,EAAAC,EAAAtC,EAAAxO,EAAAD,QAAA,GAAA,SAAAgR,IAAA,MAAA,IAAA3P,MAAA,iCAAA,CAAA,CAAA,SAAA4P,IAAA,MAAA,IAAA5P,MAAA,mCAAA,CAAA,CAAA,IAAAyP,EAAA,YAAA,OAAAI,WAAAA,WAAAF,CAAA,CAAA,MAAApQ,GAAAkQ,EAAAE,CAAA,CAAA,IAAAD,EAAA,YAAA,OAAAI,aAAAA,aAAAF,CAAA,CAAA,MAAArQ,GAAAmQ,EAAAE,CAAA,CAAA,SAAAG,EAAAC,GAAA,GAAAP,IAAAI,WAAA,OAAAA,WAAAG,EAAA,CAAA,EAAA,IAAAP,IAAAE,GAAA,CAAAF,IAAAI,WAAA,OAAAJ,EAAAI,YAAAG,EAAA,CAAA,EAAA,IAAA,OAAAP,EAAAO,EAAA,CAAA,CAAA,CAAA,MAAAzQ,GAAA,IAAA,OAAAkQ,EAAAtP,KAAA,KAAA6P,EAAA,CAAA,CAAA,CAAA,MAAAzQ,GAAA,OAAAkQ,EAAAtP,KAAAlB,KAAA+Q,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAAC,EAAAC,EAAA,GAAAC,EAAA,CAAA,EAAAC,EAAA,CAAA,EAAA,SAAAC,IAAAF,GAAAF,IAAAE,EAAA,CAAA,EAAAF,EAAA7P,OAAA8P,EAAAD,EAAAlP,OAAAmP,CAAA,EAAAE,EAAA,CAAA,EAAAF,EAAA9P,SAAAkQ,EAAA,CAAA,CAAA,SAAAA,IAAA,GAAAH,CAAAA,EAAA,CAAA,IAAA,IAAAI,EAAAR,EAAAM,CAAA,EAAAf,GAAAa,EAAA,CAAA,EAAAD,EAAA9P,QAAAkP,GAAA,CAAA,IAAAW,EAAAC,EAAAA,EAAA,GAAA,EAAAE,EAAAd,GAAAW,GAAAA,EAAAG,GAAAI,IAAA,EAAAJ,EAAA,CAAA,EAAAd,EAAAY,EAAA9P,MAAA,CAAA6P,EAAA,KAAAE,EAAA,CAAA,EAAAM,CAAA,SAAAC,GAAA,GAAAhB,IAAAI,aAAA,OAAAA,aAAAY,CAAA,EAAA,IAAAhB,IAAAE,GAAA,CAAAF,IAAAI,aAAA,OAAAJ,EAAAI,cAAAY,CAAA,EAAA,IAAAhB,EAAAgB,CAAA,CAAA,CAAA,MAAAnR,GAAA,IAAA,OAAAmQ,EAAAvP,KAAA,KAAAuQ,CAAA,CAAA,CAAA,MAAAnR,GAAA,OAAAmQ,EAAAvP,KAAAlB,KAAAyR,CAAA,CAAA,CAAA,CAAA,EAAAH,CAAA,CAAA,CAAA,CAAA,SAAAI,EAAAX,EAAAY,GAAA3R,KAAA+Q,IAAAA,EAAA/Q,KAAA2R,MAAAA,CAAA,CAAA,SAAAC,KAAAzD,EAAA0D,SAAA,SAAAd,GAAA,IAAA1I,EAAA,IAAAtE,MAAAhB,UAAA5B,OAAA,CAAA,EAAA,GAAA,EAAA4B,UAAA5B,OAAA,IAAA,IAAAT,EAAA,EAAAA,EAAAqC,UAAA5B,OAAAT,CAAA,GAAA2H,EAAA3H,EAAA,GAAAqC,UAAArC,GAAAuQ,EAAAtF,KAAA,IAAA+F,EAAAX,EAAA1I,CAAA,CAAA,EAAA,IAAA4I,EAAA9P,QAAA+P,GAAAJ,EAAAO,CAAA,CAAA,EAAAK,EAAApJ,UAAAiJ,IAAA,WAAAvR,KAAA+Q,IAAAvG,MAAA,KAAAxK,KAAA2R,KAAA,CAAA,EAAAxD,EAAA2D,MAAA,UAAA3D,EAAA4D,QAAA,CAAA,EAAA5D,EAAA6D,IAAA,GAAA7D,EAAA8D,KAAA,GAAA9D,EAAAzM,QAAA,GAAAyM,EAAA+D,SAAA,GAAA/D,EAAAgE,GAAAP,EAAAzD,EAAAiE,YAAAR,EAAAzD,EAAAkE,KAAAT,EAAAzD,EAAAmE,IAAAV,EAAAzD,EAAAoE,eAAAX,EAAAzD,EAAAqE,mBAAAZ,EAAAzD,EAAAsE,KAAAb,EAAAzD,EAAAuE,gBAAAd,EAAAzD,EAAAwE,oBAAAf,EAAAzD,EAAAyE,UAAA,SAAA1Q,GAAA,MAAA,EAAA,EAAAiM,EAAA0E,QAAA,SAAA3Q,GAAA,MAAA,IAAAnB,MAAA,kCAAA,CAAA,EAAAoN,EAAAa,IAAA,WAAA,MAAA,GAAA,EAAAb,EAAA2E,MAAA,SAAAC,GAAA,MAAA,IAAAhS,MAAA,gCAAA,CAAA,EAAAoN,EAAA6E,MAAA,WAAA,OAAA,CAAA,CAAA,EAAA,IAAAC,EAAA,CAAA,SAAArS,EAAAjB,EAAAD,GAAAC,EAAAD,QAAA,CAAAwC,KAAA,MAAAgR,YAAA,gCAAAC,SAAA,CAAA,WAAA,SAAA,OAAAzR,QAAA,QAAA0R,OAAA,0DAAAC,QAAA,aAAAC,IAAA,CAAAlT,IAAA,cAAA,EAAAmT,KAAA,eAAAC,SAAA,aAAAC,MAAA,aAAAC,WAAA,CAAAC,KAAA,MAAAC,IAAA,8BAAA,EAAAC,KAAA,oCAAAC,SAAA,6BAAAC,aAAA,CAAAC,KAAA,SAAA,EAAAC,gBAAA,CAAAC,WAAA,UAAAC,OAAA,SAAAC,uBAAA,SAAAC,MAAA,SAAAC,YAAA,SAAAC,MAAA,UAAAC,YAAA,SAAA,EAAAC,QAAA,CAAAC,KAAA,UAAA,EAAAC,QAAA,CAAA1K,KAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAEvE2K,IAF2FC,IAACnK,OAAQqD,OAAOnO,IAAM,EA2B7GkV,mBAxBJD,IAAI,mBAHoJ,sQAIxJA,IAJyJ,2BAAK,iBAK9JA,IAAI,yBALgK,+yBAMpKA,IAAI,yBANoL,8wDAOxLA,IAAI,aAPyM,uzCAQ7MA,IAAI,wBARgO,6DASpOA,IAAI,sBATwP,6EAU5PA,IAAI,wBAV6Q,0YAWjRA,IAAI,qBAXmS,maAYvSA,IAAI,sBAZyS,iBAa7SA,IAAI,oCAbgT,wMAcpTA,IAAI,2BAdiT,07BAerTA,IAAI,uBAf2T,+yCAgB/TA,IAhBgU,sBAAA,2EAiBhUA,IAjBkU,qBAAY,kVAkB9UA,IAlB+U,6BAAiB,6JAmBhWA,IAAI,qBAnB8W,6rBAoBlXA,IAAI,8BApB8X,qtBAqBlYA,IAAI,qBArBwY,4XAsB5YA,IAAI,sBAtBkZ,upBAuBtZA,IAAI,sBAvByZ,uNAwB7ZA,IAAI,wBAxBsc,mIAyB1cA,IAAI,uBAzBke,uKAA6D7T,CAmC/hB+T,cAnCwpB,SAAS1U,EAAIE,GAAMyU,EAAYtV,EAAOuV,UAAA,EAAC,OAAAC,GAAyEF,GAAQ,UAAA,OAAAE,EAAAhT,MAAS,UAAR,OAAQ8S,GAAIA,EAAAxI,eAAA0I,EAAAhT,IAAA,GAAoC,GAAhC,CAAA,SAAStB,SAAQjB,UAAOD,QAAQ,OAAAsV,EAAAE,EAAAhT,KAAA,EA8ClzB8S,EAAWE,EAAahT,MA9C01BX,EAkDj4B,EAUA4T,kBA5D85C,SAASC,EAAAlQ,GAAiDxF,IAAAA,EAAc6B,EAAWqD,MAAA,GAAA,EAAClF,EAAQwD,EAAciE,IAAAA,EAAqDzH,EAAQ0H,GAAWlH,OAmE5kD,IAnEyqD0U,IAAIpN,EAAO,EAAClG,EAAI+T,EAAQlU,OAAAT,CAAA,GAAA,CAAC,GAAI+G,CAAAA,EAAQnG,eAAY+T,EAAA3U,EAAA,EAA6FuP,OAAIxI,KAA5FC,EAAQpG,EAAKoG,EAAOhH,GAyEnvD,CAEA,MA3Ey3D,YAAlB,OAAOiD,EAAAA,GAAYuB,EAAAtC,GAAmDT,IAgFj7D,EASAmT,kBAzFqnE5S,SAAQkB,EAAK2R,EAAAL,GA2F9nEN,IA3FwqElS,EAAQ8S,EAAE3R,OAAM1C,CAAAA,EAAO,GAAAoU,CAAA,EA6H/rE,OA7H6tEL,IAAgCvR,EAAAA,eAAY1B,MAAiB,GAAc,UAAbS,OAAQuB,EAAKwR,MAAEP,EAAI1I,eAAA,MAAA,GAAA,UAAA,OAAA0I,EAAAO,OAAiEP,EAAAO,KAAAzV,KAAA0V,UAAAhT,EAAA+S,KAAAP,EAAAO,IAAA,GAoG32E/S,EApG+4E8S,EAAAG,OAACjW,CAAAA,EAAQ6C,GAAAA,EAAejB,CAAauB,GAuGp7EH,EAvG++E8J,eAAA,OAAA,IAAC9J,EAAAkT,OAAKjS,EAAiC,UAAjCA,OAAaI,EAAMC,MAAe,KAAA,GAACL,EAAAA,MAAY1B,EAAY2T,MAAMhS,GAAYD,EAAWkS,SAAEC,YAA0B,UAAX5R,EAAQyP,OAAqBoC,EAAU,UAANhV,OAAMhB,EAAA8V,SAAAC,WAAoCpT,KAAQyB,GAAyBzB,EAAAkT,MAAA7V,EAAA8V,SAAAC,WAAAC,IAAqBrT,EAASD,eAAYC,YAAgB,IAAU,GAAJE,EAAIoT,YAAA,OAAAtT,EAAAsT,YAAKnT,EAAyB,UAAhBH,OAAQG,EAAQmT,WAAA,KAAA,GAAKlT,EAAAA,WAAqBJ,EAAOsT,WAAED,GAAuBlT,EAASgT,SAAAG,aAAOD,EAAU,UAANhV,OAAMhB,EAAA8V,SAAAG,WAAmC,KAAA,GAAAtT,EAAAsT,WAAAjW,EAAA8V,SAAAG,WAAAD,IAAsDrT,CA8Hj+F,EASAgT,UAvI8tG,SAASrS,EAAO4S,GAyI1uGrB,IAzI+wGlV,EAAQsD,OAAUH,OAAQ,GAACD,CAAK,EA8J/yG,MA9J4zG,UAAX,OAAOA,GAAI4S,EAAAU,KAAAD,EAAA,SAAA/T,EAAA2I,GAAUsL,EAAAA,eAA2BjU,CAAG,EAAY,UAAAA,EAAQwT,EAAAxT,IAAA,IAAA2I,EAA+DzD,UAAR1H,EAAgDgW,EAAAxT,IAAA,IAAA2I,EAAoD6K,EAAUxT,GAAA2I,EAAqB6K,EAAAxT,GAAA2I,CAAsD,CAAA,EAAWzC,CA+JvnH,EAUAgO,iBAzKozH7U,SAAMkC,EAAAA,GA2KtzHmR,IA3K25HyB,EAAU3T,GAgMr6H,MAhM6gI,UAAjB,OAAG0B,GAAkCvB,UA8K7hI,OA9K8gIuB,EAAAA,QA+K9gIL,MA/KuiIP,QAAKX,EAASuB,MAAAA,GAiLrjIoR,EAjL8kIU,KAAG9R,EAAAA,OAAezB,SAAS4J,EAAA+J,GAACC,EAAO9T,EAAYe,UAAKY,CAAAA,EAAyB,UAAA,OAAAmS,GAA2BF,EAAShS,KAAW,CAA+BmS,KAAK5R,EAAM6R,MAAeC,UAAUjS,EAAM+H,eAAK,iBAAA,EAAA9J,EAAAiU,gBAAA,MAAS7R,QAASH,EAAMxD,cAAc,CAAO0B,CAAAA,CAAmB,CAAA,EAA+H0C,CAiM/9I,EAQAqR,WAzM8rJC,SAAKhM,GA2M/rJ,IA3MszJrJ,EAAkEsV,EAACC,EAA6ErX,OAAjPmL,GAAsB,KAAlBrJ,EAAAA,SAA6FA,GAA1EoG,EAAQC,IAAKmP,KAAAnM,CAAA,GAA6DrJ,YAAsB,EAACuV,EAAAE,EAAAC,SAAA,EAAA,EAA+DL,GAAMC,GAAjEA,EAAM5R,EAAOiS,QAAC,GAAyB,GAAA,IAAAL,EAAAA,GAA8BpR,KAAS/C,EAA/Ba,EAAKmE,GAAK,IAAAoP,EAAAA,GAA6B,IAAMK,GAAgCvM,CAwNj9J,EAQAwM,eAhO8vK,SAAO/O,GAkOjwK,IAlOs0K9E,EAAMX,EAA6GiU,EAAgB9O,EAiPz8K,OAjP2zK6C,GAAM,IAAAA,EAAA1J,SAAW0B,GAANW,EAAK,IAAAwT,KAAAnM,CAAA,GAAUhI,YAAAA,EAASkU,EAAAE,EAAAC,SAAA,EAAA,EA8O11KrM,GA9O6+KpH,GAA9IuE,EAAIiP,EAAAE,QAAA,GAAgG,GAAC,IAAAL,EAAAA,GAAyCrT,KAAYD,EAA/C6E,EAAKE,GAAO,IAAAwO,EAAAA,GAAwC1O,IAAQ+O,EAAG,KAAzJ,KAAAH,EAAAK,SAAA,GAAAnS,MAAA,CAAA,CAAA,EAAyJ,KAA9IpC,KAAUA,EAAAA,WAAgB,GAAEoC,MAAG,CAAA,CAAA,EAA+G,KAAxF,KAAE8R,EAAAM,WAAA,GAAApS,MAAA,CAAA,CAAA,GAiPh7K0F,CACX,EASA2M,gBA3PyuL,SAAA3M,EAAA4M,GA6PruL,IA7Pq0LL,EAASL,EAA6J,OAA/LlM,GAAA,IAAAA,EAAA1J,SAAyBiW,GAApBH,EAACpU,IAASA,KAAAA,CAAQ,GAAM6U,YAAA,EAAKX,EAAME,EAACvT,SAAAA,EAAwEhE,GAA9ByW,EAAe3S,YAAU2E,eAAG4O,CAAA,EAAAU,EAAAE,YAAAZ,GAAA,IAAmBrR,IAAQ0R,GAAsDvM,CAwQh/L,EASA+M,eAjR2vMzT,SAAAA,EAAeX,GAmRtwM,IAnRk4Md,EAA+BA,EA0Rj6M,OA1Ru2MA,GAAqB2D,GAAbA,EAAOlF,SAAYuB,EAAQG,EAASW,UAAKX,EAAQ,CAAA,EAACH,EAAQ4D,EAAAA,UAAmBA,CAAAA,EAA2J5D,EAAQ8D,EAAS,IAAChD,EAAKgD,UAAW9G,IAAQ8G,GAA6F9D,CA2RluN,EASAmV,YApS8pOnV,SAAQ+D,EAAOnF,GAsSzqO,IAtS+rOsT,IAAIlU,EAAA,EAAAY,EAAAA,EAAAsD,MAAA,GAAA,EAAAyL,EAAA/O,EAAAH,OAAAT,EAAA2P,EAAA3P,CAAA,GAACgC,EAAAA,EAAQsE,EAAKtG,IA0SjtO,OA1SyxOuG,CA2S7xO,EASA6Q,UApTw6O5Q,SAAY6Q,GAqTh7O,OArTm8OC,UAAJzT,OAAIyT,GAAa,UAAA,OAAAD,GAAA,KAAAA,EAAAvI,KAAA,IAAA,CAAAyI,MAAAF,CAAA,CAsTp9O,EAOAG,SA7TgvP,WA8T5uP,OA9TovPlY,KAAMmY,QAAA,IAAAnB,MAAAoB,QAAA,EAAAtT,KAAAuT,OAAA,GAAAlV,SAAA,CAAA,EAAAA,SAAA,EAAA,CA+T9vP,EASAgV,MAAO,SAxUkkQ3U,GA0UrkQ,IAAK,IA1U2oQ/C,EAAM,GAAIM,EAAAA,EAAMJ,EAAA,IAAAA,CAAA,GAAA,CA4U5pQ,IA5UgtQ+I,IA2UhtQ5I,EA3U+sQH,EAAC+I,EAAS,EAAAzJ,EAAE,EAAAA,CAAA,GAAqDa,EAAA,EAAAA,EAAA,WAAAA,IAAA,EAAAA,IAAA,EA+UhxQL,EAAEE,GA/U00QG,CAgVh1Q,CAEA,IAAK,IAlVm8QP,EAAI2J,CAAAA,EAAAA,EAAAA,EAAAA,EAAc3F,EAAApD,OAAAX,CAAA,GAmVt9QD,EAnVwgRA,IAAI,EAAKE,EAAA,KAAIF,EAACiD,EAAKsD,WAAAA,CAAAA,IAsV/hR,OAAQ,CAAC,EAtVwnRvG,KAAM,CAuV3oR,EASA+X,MAAO,SAhWy0R5O,EAAW6O,GAoWv1R,IApW0xSpO,EAoW1xS,OApWw8R,KAkWx8RoO,EAlWw5R,KAAA,IAAAA,EAAAC,SAAAD,CAAA,EAAA,GAAgFzT,KAAAwT,MAAAG,CAAA,EAA2B,EAADF,GAAkPG,EAAI5T,KAAA4T,IAAA,GAAAH,CAAA,EAAIzT,KAAKwT,MAACtS,EAAM0S,CAAA,EAAAA,IAAkBvO,EAAIrF,KAAA4T,IAAA,GAAAH,CAAA,EAA8D/U,KAAK4C,MAAAA,EAAasS,CAAA,EAAAA,EA+Wl3S,CACJ,GAEIC,mBAlXq8S,CAoXr8S9C,SApX49S,CAqXx9S+C,GAAI,KACJ9G,MAtXw/S,GAuXx/S2F,KAvXy/S,KAwXz/SoB,KAxX8hT1O,CAAqDyJ,IAAA,GAACkF,OAAG,OA2XnlTC,OA3XulTvV,MA4X3lT,EACAoS,MAAO,KACPoD,SA9X4qT,KA+X5qTC,SA/XqrT,KAgYrrTjD,WAhYktT,IAiYltTkD,eAjYmxT,KAkYnxTC,SAAU,CAAA,EACVC,SAnY+xT,CAAA,EAoY/xTC,WApYgyT,GAqYhyTC,OArYkyT,mBAsYlyTC,SAtYuyTlP,KAuYvyTmP,OAvYqzT,GAwYrzTnD,OAxYwzT,GAyYxzToD,SAzYu3T,EA0Y33T,EAEAC,MAAO,CAAA,EACPC,aA7Ym9T,EA8Yn9TC,aA9Ys9TpU,EA+Yt9TqU,eA/Y4/TrU,EAgZ5/TsU,QAAS,GACTC,QAAS,GACTC,UAAW,GACXC,QAAS,GAQTC,MAAO,SA3Zi6UzP,GA6Zp6UzK,KAAK6V,SA7Z+8UG,WAAAmE,aAAAC,WAAA,YAAA,EA8Zp9Upa,KAAK6V,SA9Zg9U4B,KAAmBnW,aAAa8Y,WAAA,MAAA,EA+Zr/Upa,KAAK6V,SA/Zi/UwD,WAAAc,aAAAC,WAAA,YAAA,EAgat/Upa,KAAK6V,SAhay/UpM,KAAGe,OAAWtF,aAAakV,WAAQ1W,gBAAAA,EAkajiV1D,KAla+lV6V,SAAQhT,EAAAA,OAAU,CAAA,EAAA,GAAO6H,KAAOC,SAAAA,CAAc,EAA0C3K,KAAI4K,SAAStJ,KAqahsVtB,KAra+uV6V,SAAG+C,GAAA9D,kBAAAoD,SAAA,GAwalvVlY,KAAK6V,SAxa8yVrJ,eAAM,YAAA,GAAiB,GAyat0VxM,KAzaszV+K,SAAWiL,YAAK,OAAAhW,KAAA6V,SAAAG,aAAChL,EAAa,UAAbA,OAAahL,KAAA6V,SAAAG,WAAA,KAAA,GAAIhW,KAAE6V,SAAAG,WAAAhW,KAAA6V,SAAAG,WAAAD,GAA+B/V,KAAA6V,SAAArJ,eAAA,gBAAA,GAAA,OAAAxM,KAAA6V,SAAAqD,eAAmE,GAAlB1V,KAAKkD,SAAAA,iBAAmBd,EAAuC,UAAvCA,OAAa5F,KAAK4F,SAAAA,eAAsCxC,KAAO,GAAmBpD,KAAA6V,SAAAqD,eAAAlZ,KAAA6V,SAAAqD,eAAAnD,GAA1J/L,KAAAA,SAAekP,eAAUlZ,KAAA6V,SAAAG,UAub/5V,EAMAqE,WA7b00W,WA+bt0WzF,IAAI0F,EA/by4WrP,KAgc74W2J,IAAI2F,EAhc+5WjP,gBAAcA,KAAOuK,SAAK+C,GAAGjY,UAkch8W6U,EAAE+E,CAlcwhX,EAAApI,GAAA,SAAA,WAAyB,OAmc/iXvB,WAncuhX,WAACzQ,EAAKoL,KAAAA,MAASlG,CAAK,CAqc3iX,EArc6iX,CAAC,EAAC,CAAA,CAucnjX,CAAC,EAEDrF,KAzcmlXwa,SAAQ,mBAAiB,CA0chnX,EAOAC,MAAO,WAEH,OAndkyXza,KAAA6V,SAAArJ,eAAA,IAAA,EAAAxM,KAAA6V,SAAA+C,GAAA,IAodtyX,EAQA9Q,OA5dm5X,SAAA4S,GA8d/4X9F,IA9d06X0F,EAAQxU,KA+dl7X8O,IAAI+F,EA/di8X,GAger8X/F,IAAI0E,EAheq+XxT,KAAS+P,SAAKyD,OAACG,EAAA,GAkex/X7E,IAley/XgG,EAAS,GAwflgY,GAxf+iYvV,KAAIwQ,SAAMzS,QAAyB2S,EAA0B,UAArB,OAAC3S,KAAQyS,SAAWD,MAAC,KAAA,GAACvQ,EAASsG,KAACvI,SAAapD,KAAM6V,SAAAD,MAAAG,CAAA,GAAkDxK,KAAAA,SAASyN,WAAmB7Y,EAAS,UAAJ,OAAIH,KAAA6V,SAAAmD,SAAA,KAAA,GAAC2B,EAAMhP,KAAKnI,aAAcxD,KAAA6V,SAAAmD,SAAAjD,CAAA,GAA8D/V,KAAI8L,SAAAA,WAAeA,EAAsC,UAAtCA,OAAazG,KAAKT,SAAYzD,SAAQ,KAAA,GAACwZ,EAAOtV,KAAI,aAAArF,KAAA6V,SAAAoD,SAAAlD,CAAA,GAAkG/M,UAwf59Y,OAxfm8YhJ,KAAK6F,SAAKH,QAyf78Y3B,MAzfo+YC,QAAAhE,KAAA6V,SAAAQ,MAAA,GAAkB,EA0ft/YrW,KA1f0+Y6V,SAAQQ,OAAIlV,QA2ft/YmY,GA3fohZ,UA4fphZ,OA5fohZA,EA6fthZ,CACE1E,IA9fuiZ3J,EAAUvF,MAASoD,KAAMI,EAAO2R,SAAA,wBAAA,CAAA,EA+fvkZjG,IA/fwkZkG,EAAA,GAAMC,EAAU,GAA+C,EAAb9P,EAAKjF,QAA6DwP,EAAAU,KAAAjL,EAAA,SAAAsB,EAAA1I,GAAYiX,EAAInP,KAAA9H,EAAA,EAAA,CAAC,CAAA,EAAiH,EAARiX,EAAQ3Z,QAACqU,EAAAU,KAAOlW,KAAE6V,SAAEQ,OAAA,SAAA9J,EAAA+J,GAAK1B,IAAGoG,EAAI1E,CAAAA,EAAA9J,eAAA,QAAA,GAAA,UAAA,OAAA8J,EAAA0E,QAAA,UAAA,OAAA1E,EAAA0E,OAA4CnP,UAAN,GAA7BhG,EAAMH,QAASoD,EAAMK,MAAO,EAACmN,EAAA0E,OAAA,KAA4B,GAAU,UAATnV,OAAKmV,EAAN,CAAuFpG,IAAIjB,EAAM2C,EAAA9J,eAAA,MAAA,GAAA,UAAA,OAAA8J,EAAA3C,KAAA2C,EAAA3C,KAAA,GAACiB,IAAA2B,EAAgB,MAAuDA,EAAf,UAAb5C,EAA0C7K,EAAMG,UAAGqN,CAAA,EAA8DgE,EAAAW,UAAA3E,CAAA,IAA4E,UAAlB,OAAQC,IAA+GwE,EAAAvO,eAAAwO,CAAA,IAAMD,EAAmBC,GAAI,IAoiB51aD,EApiBq5aC,GAAArP,KAAA4K,EAAAzO,OAAA,CAAA,EAA/b,CAqiB19Z,CAAC,EAriBi/a,GAwiBl/a4C,OAxiB69awQ,KAAKrP,CAAe,EAAC1K,QAyiBl/aqU,EAAEU,KAziBi/a6E,EAAA,SAAA7Y,EAAAiZ,GAAO7B,EAAIA,EAAAlW,QAAA,WAAAlB,EAAA,IAAAiZ,EAAA5V,KAAA,EAAA,CAAA,CA4iB9/a,CAAC,CAET,CA9iB4pb,UAAA,OAAAvF,KAAA6V,SAAA4D,UAAC1V,MAAAC,QAAAhE,KAAA6V,SAAA4D,QAAA,GAAE,EAAAzZ,KAAA6V,SAAA4D,SAAAtY,QAAmCzB,EAAAA,KAAQsM,KAAAA,SAAUtM,SAAQwI,SAAUqE,EAAA6O,GAASnP,IAAAA,EAAQxK,EAAAA,YAAe2Z,CAAA,EAA8Blb,GAAoB,UAAZ,OAAYqW,GAAwBkD,EAAiB9N,KAAE,CAAY0P,KAAA,CAAAD,EAAA5O,eAAA,MAAA,GAAA4O,EAAAC,KAAKjQ,MAAAkP,EAAAT,eAAA,EAAMyB,QAAA/E,EAAAzO,OAAA,CAAG,CAAA,CAAI,CAAA,EAA8D,WAAZ2E,OAAAA,KAAWoJ,SAACuD,UAAqBpZ,KAAA6V,SAAAuD,UAAK5M,EAAAA,KAAc,YAAQlE,EAA8F5I,EAAQ2J,IAAAA,OAAAA,IAAiB,aAAUsD,CAAQ5M,KAAI4M,KAAOkJ,SAAC+E,SAAQA,EAAA,IAAAA,EAAArV,KAAA,GAAA,EAAA,GAAAoV,WAAAA,EAACrB,OAAO1M,EAA2C6M,SAAAA,CAAC,CAAA,EAklBhsc,GAllB8ucnM,KAAAA,IAAVoN,EAAW,OAAIa,EAAgC3G,IAAI1H,EAAW,GAylBlyc,GAzlB60cR,UAAP,OAAOA,GAAyThN,GAAQyG,EAAzSqV,EAAAC,SAAAC,eAAAhB,CAAA,GAAoU,MAAa,EAA+D,MAAqCrT,aAAmBlE,cAAuCqY,EAAAd,GAqmBp1dc,EArmBg8dG,UAACvO,EAumBj8dpN,KAvmBs9dqa,WAAI,CAwmB99d,EAMAuB,KA9mBqpepO,WAgnBjpexN,KAhnB6re0Z,MAAQzY,CAAAA,EAknBrseuU,EAAEU,KAAKlW,KAlnB6tega,UAAA,SAAAzN,EAAA6O,GAmnBhuexG,IAnnBwueiH,EAAAT,EAAAU,WAAA,EAAwCD,EAAArP,eAAA,MAAA,GAAA,WAAAqP,EAAAlI,MAAQyH,EAAAQ,KAAA,CAwnB5xe,CAAC,CACL,EAMAG,OA/nB24e,WAioBv4e/b,KAAK0Z,MAjoBo8e,CAAA,EAmoBz8elE,EAAEU,KAAKlW,KAnoB8+ega,UAAQxM,SAAQjB,EAAA6O,GAooBjgfxG,IAAIiH,EApoB8/eT,EAAAU,WAAA,EAASD,EAAOrP,eAAc,MAAG,GAAc,WAAdqP,EAAclI,MAuoB7ifyH,EAvoB8ifW,OAAA,CAyoBtjf,CAAC,CACL,EAMAlD,KAhpB8mfnL,WAkpB1mf,GAlpByof1N,CAAAA,KAAK0N,MAkpB9of,CAKA,GAvpB6tf,WAApBE,OAAO5N,KAAA6V,SAAauD,UAAApZ,KAAA6V,SAAAuD,SAAA,CAACxE,IAAAoH,QAAYtO,KAAMnB,SAAI,EAAG1D,GAAM,CAAAmT,QAAe,MAAW,CAgqBvxfpH,IAhqB02fqH,SAAOpY,KAAwBmE,KAAAhI,KAAAkc,QAAA,EAAExc,GAAQgE,YAARhE,OAAQgE,KAAAA,SAAAA,SAA2CuY,SAAUvR,KAAOqD,SAAMwL,cAAgC,GAA0B,UAA1B,OAAO7O,KAAOqD,SAAYwL,UAAAvZ,KAAA6V,SAAA0D,SAAA,CAAA3E,IAAChS,KAAAkS,kBAAAK,kBAAAnV,KAAA6V,SAAA0D,QAAA,EAAC,GAAK,YAAA,OAAA3W,KAACoL,SAAUpL,UAAK,GAAmB,UAAR8H,OAAO1K,KAAC6V,SAAA0D,SAAA,CAAC3E,IAAOuH,aAAUnc,KAAA6V,SAAA0D,SAAQvL,SAAU,SAAAjO,KAAAiI,MAAK,IAACoU,KAAAD,YAAA,CAA0B,CAA1B,MAAA7b,GAAQ,MAAUS,MAAA,6BAAAT,EAAAkF,OAAA,CAAQ,CAAE,CAAG,CAAE,CAAgD,GAAmB7F,YAAjB,OAAAsc,SAA+B,CAAGrH,IAAAyH,eAAiBJ,SAAAjc,KAAAgI,IAAA,EAA+C,GAAQ,CAAA,IAAJuG,eAAK,MA8rBjygB,CAGAqG,IAAI0H,QAjsB+4gB7N,KAAQ+L,SAAG,mBAAAxa,KAAA,CAAAA,KAAAgI,KAAA,EAksB15gBuU,WAlsB+5gB,CAAA,EA2sBn6gB,GAPA/G,EAAEU,KAAKoG,QApsBg7gB7N,SAAUlC,EAACnE,GAqsB97gB,GArsBm8gB,CAAA,IAAJmG,EAAM,MAAA,EAADgO,WAAA,CAAA,EAysBx8gB,CAAC,EAEGA,CAAAA,WAAJ,CAKAvc,KAhtByihB4b,KAAI9M,EAktB7ihB8F,IAltBolhB0F,KAAUvX,KAmtB1lhByZ,WAntBmrhB,GAA/B9b,CAAC,OAAIqC,QAAAA,QAAaoL,KAAAA,SAAa0K,KAAAE,MAAA,EAAC/Y,KAAG6V,SAAOvU,KAAIyX,OAqtBhshB,OAEF0D,WAvtB+xhB,KAwtB/xhBC,YAxtBuyhB,KAAoC3N,SA0tB30hByN,YA1tBi3hBE,YAAA,kCAAC5N,WAAYhF,KAACsE,UAAcpG,IAAC2G,IAAoF+N,YAAO3N,CAAAA,EAA2C0N,WAAA,IAAAE,SAAkCnH,EAAAU,KAAI9G,KAAAA,SAAW1P,EAAQ0P,GAAiBC,aAAqB/N,KAAoB8M,WAAAA,OAAeO,EAAOrN,EAAUuJ,EAAK3I,IAAC,EAAmC2I,aAAW+R,SAAKtb,EAAI4U,KAAG9G,EAAAA,SAAW7C,EAAAsQ,GAASJ,WAAAK,OAAA5a,EAAA2a,EAAAA,EAAA3a,IAAA,CAAC,CAAA,EAAmCua,WAAAK,OAAA5a,EAAA2I,CAAA,CAAgC,CAAA,GAkvBn0iB2K,EAlvBm4iB9V,KAAAA,CAAwBkU,IAAIzR,KAAK0T,SAAOvN,KAAAA,IAAkCwQ,OAAOpZ,KAAAA,SAAQyP,KAAUR,OAqvBl+iB3G,KArvBogjByU,WAsvBpgjBC,YAtvB+hjBA,YAuvB/hjBK,YAvvBsljB,CAAA,EAwvBtljBC,WAxvB+ljB,SAAAC,GAAG1X,KAAKiV,SAAK,yBAAAF,KAAA,CAAAA,KAAA2C,EAAA,CAAC,EAACvd,QAAQ6P,SAASnH,QAAsBkS,KAAC5a,UAAQgI,EAAyD4S,KAAS9K,SAAQ,2BAAC8K,KAAA,CAAAA,KAAAlS,OAAA,EAAawM,IAAAsI,aAAe/b,KAAwC,IAAK6D,IAAI0G,eAAY5B,KAAAqT,MAAA/U,MAAA,EAAmB,UAAV,OAAIpD,gBAAwB,OAAVA,gBAAejB,MAAAC,QAAAoZ,cAAA,IAAiCF,aAAalY,eAAqF7D,CAAhCuO,MAAOpP,IAAopB,GAAngBoP,OAAfD,cAA0B,UAAD,OAACyN,eAACvN,aAAiBnD,eAAA,SAAA,GAACzI,MAAAC,QAAAkZ,aAAAvI,OAAA,GAAMa,EAAAU,KAAAgH,aAAAvI,QAAA,SAAApI,IAAA8Q,QAAgB,GAAG,UAAA,OAAAA,OAAA,CAAW1N,IAAAA,KAAiBmF,kBAAW3T,kBAAWkc,MAAA,EAAwB,YAAA,OAAAza,KAAagN,KAAY9N,EAAoEsa,KAAAiB,MAAA,CAAkC,CAAa7V,CAAO,EAA6FlG,aAAKyO,eAAa,SAAA,IAAsB,UAAV,OAAKmN,aAAKI,UAAgBtN,SAAauN,KAAIL,aAAAI,SAA4EhD,KAACtK,SAAYxD,eAAC,gBAAA,GAAM,UAALxH,OAAKsV,KAAAzE,SAAA2H,eAAC,CAAK5I,IAAA4I,eAAAlD,KAAAzE,SAAA2H,eAA0B,GAAA,OAAAN,cAAA,UAAA,OAAAA,aAAA,CAAC,MAAAO,KAAA,IAAAjU,OAAA,kCAAA,KAAA,EAAUoL,IAAG8I,UAAO5N,GAA8C,KAAA1H,OAAAqV,KAAA3Z,KAAA0Z,cAAA,GAAAE,UAAAtV,OAAA,IAAAA,OAAA,GAAkD,EAAL9G,OAAK4Z,KAAAwC,SAAA,EAAAvc,QAAeqU,EAAAU,KAAGwH,UAAa,SAAMC,EAAErc,GAAuBuJ,EAAA,KAAA,KAAAA,EAAXiK,kBAAA+C,YAAAqF,aAAA5b,CAAA,GAAWuJ,EAAA,GAA4B2S,eAAAA,eAAApa,QAAoB,IAAEoG,OAAImU,EAAIva,QAAA,sBAAA,MAAA,EAAA,GAAA,EAAsByH,CAAWmF,CAAqB,CAAA,CAAQ,CAAoBA,SAAYuN,KAAMC,cAACxY,CAo0Bn/lB,EAp0B4/lB4Y,MAAA,SAAAX,EAAAY,EAAAC,GAAI9Y,IAAG+Y,EAAYzD,KAAE0D,QAAA,EAAAC,YAAA,GAAQ3c,EAAgB,GAAM5B,IAA0CkL,IAAAA,EAAcd,KAAAqT,MAAAF,EAAAiB,YAAA,EAAgC,UAAtB,OAAOd,GAA6CnN,OAAlBX,GAA8BvL,MAAAC,QAAAoZ,CAAA,IAAUpV,EAAAoV,EAA2FjN,CAAhBD,MAAQ5P,IAAyD8P,EAAAA,eAAa,eAAA,GAA8B,UAAzB,OAAM9O,EAAKH,eAA8C,KAAvBH,EAAKM,gBAAoCyc,EAAc/V,EAAAmW,eAAoB7D,KAAA8D,UAAAL,CAAA,EAACzD,KAAAE,SAAA,yBAAAF,KAAA,CAAAA,KAAA2C,EAAAY,EAAAC,EAAA,CA+1Bv8mB,EACAO,SAh2Bs9mB,SAAMpB,EAAAY,GAAC7N,KAAAA,OAAY,EAAOhL,KAAGwV,SAAI,uBAAAF,KAAA,CAAAA,KAAA2C,EAAAY,EAAA,CAm2Bv/mB,CACJ,CAAC,CAvJD,CAzDA,CAiNJ,EAOA/B,WA52B0unB,WA62BtunB,OA72BuunB9b,KAAOsB,QA82BlvnB,EAOA2T,UAr3B64nB,WAu3Bz4nB,OAv3Bo5nBjV,KAAIsP,SAAO9C,eAAe,QAAO,GAAuB,UAAvB,OAASjI,KAAIM,SAAS2U,OAASjV,KAAI+K,SAAOzK,OAAsE,EA43BzioB,EAOAqX,QAn4B+roB1L,WAAwCoE,IAAA5M,EAAS0I,GA+4B5uoB,OA/4BizoB8E,EAAAU,KAAAlW,KAAA+Z,QAAA,SAAAxN,EAAA+J,GAAC1B,IAAAM,EAASvE,EAAmBmL,WAAE,EAAqD5G,EAAA1I,eAAA,MAAA,GAAA0I,EAAAhT,OAAE8F,EAAUkN,EAAAhT,MAAAoU,EAAAgI,SAAA,EA64Bj5oB,CAAC,EA74Bq9oBtW,CAg5B19oB,EAOAuW,UAv5BwlpB9N,WAw5BplpB,OAx5BqnpBzQ,KAAI+Z,OAy5B7npB,EAOAyE,YAh6ByvpBhO,WAi6BrvpB,OAj6BoxpBxQ,KAAO4Q,SAk6B/xpB,EAOA6N,UAz6Bk9pB,WA06B98pB,OA16Bu9pBze,KAAG8Z,OA26B99pB,EAQA4E,SAn7BmoqB,SAAO7N,GAq7BtoqB+D,IAr7B2pqB0B,EAAI7F,GA+7B/pqB,OARA+E,EAAEU,KAv7B2wqBlW,KAAO6Q,QAAAA,SAAoBtE,EAAAoS,GAAA/J,IAAAM,EAAAyJ,EAAA7C,WAAA,EAAK5G,EAAOzE,eAAyB,MAAC,GAAAyE,EAAAhT,OAAAA,IAACoU,EAAQqI,EA67Bv1qB,CAAC,EA77Bg5qBrI,CAg8Br5qB,EAMA6C,SAt8Bw/qBhI,SAAUyN,GAw8B9/qBpJ,EAx8B6hrBU,KAAIhF,KAAAA,QAAWF,SAAAA,EAAa2N,GAACA,EAAAxF,SAAAyF,CAAA,CA08B1jrB,CAAC,EAGDpJ,EAAEU,KA78BsmrBjF,KAAMD,UAAAA,SAAoBC,EAAMmK,GAAExG,IAAAiH,EAAIT,EAAAU,WAAA,EAAeD,EAAArP,eAAA,MAAA,GAAA,WAAAqP,EAAAlI,OAAUxS,EAAQkQ,EAAYwN,KAAA,EAAEzD,EAAAC,KAAA,EAu9B7rrB,CAAC,CACL,EAMAyD,aA99B01rB,WAg+Bt1rBtJ,EAAEU,KAh+Bg3rBlW,KAAGgR,UAAY,SAACzE,EAAA6O,GAi+B93rBA,EAj+B+3rBpK,KAAAA,CAk+Bn4rB,CAAC,CACL,EAMA+N,aAz+By+rBvN,WAA0BrD,EAAAA,KAAOnO,KAAC6R,UAAS,SAAYtF,EAAC6O,GAACA,EAAQyD,KAAK9a,CA6+B3isB,CAAC,CACL,EAOAqV,SAr/BmvsB,WAAGxE,IAAAoH,EAAcjL,CAAAA,EAA6N,OAy/B79sByE,EAz/BwxsBU,KAAKvE,KAAKoI,QAAM,SAAAxN,EAAA+J,GAAqB,CAAA,IAAdhO,EAAS0T,QAAK,GAAgBjL,EAAIvG,SAAW,CAAA,CAAKmH,EAAQqK,EAAA,CAAA,GAAsDhK,EAAIoH,SAAE,IAAA,CAAiBjL,CAAAA,EAAuC6N,CAqgCj+sB,EAQAoC,UA7gCgrtB,SAACzL,EAAAA,GA+gC7qtBiC,IA/gCuutB2F,EAAQ/E,EAAA,gBAAAxV,KAAA6V,SAAA+C,GAAA,SAAA,EAACoG,EAAAzE,EAAA0E,KAAA,uBAAA,EAA8OC,GAA9MF,EAAUje,IAA0Cie,EAAApR,OAAA,EAAiClL,EAAC,UAAA,OAAAA,GAAAqB,MAAAC,QAAAtB,CAAA,GAAA,OAAAA,EAAA,GAAAA,EAA6C,UAAhB,OAAM1C,KAAIe,SAAMsY,YAAiC,KAAArZ,KAAA6V,SAAAwD,aAAC3W,EAAAyc,MAAAzc,EAAA8J,eAAA,OAAA,EAAA9J,EAAAyc,MAAA,GAAChR,EAAQ6E,OAAM,IAAAhT,KAAU6V,SAAAwD,YAAgB,CAAI8F,MAASve,EAAQjB,eAAc,OAAC,GAAA,UAAA,OAAA+C,EAAAyc,MAAAzc,EAAAyc,MAAA,GAACxf,QAAOD,CAAAA,EAAQ8M,eAAA,SAAA,GAAA,CAAA,CAAA9J,EAAA0c,OAgiClhuB,GAEA7E,EAliColuB8E,QAA2B3d,IAAAA,OAAQmT,IAAO,mBAAA,CAAOrP,QAACA,EAA0D6N,QAAQ6L,CAAa5L,CAAG,CAuiCxtuB,EAviCkwuBE,EAAShH,eAAY,QAAA,GAAA9J,CAAAA,EAAA4c,SAAMC,EAAapF,aAAAC,WAAA,0BAAA,EAAazG,EAAAA,WAAU,EAAA6L,QAAA,CAAIC,UAAClF,EAAAmF,OAAA,EAAAC,IAAAJ,CAA+B,EAAA,MAAA,EAijCz2uB,EAMAK,UAvjC6/uBzL,WAyjCz/uBqB,EAAE,gBAzjCqjvBxV,KAAA6V,SAAA+C,GAAA,+BAAA,EAAAhL,OAAA,CA0jC3jvB,EASAuE,GAAI,SAnkC0qvB0N,EAAAC,EAAA5a,EAAA6a,GAAE,UAAA,OAAA/f,KAAAia,QAAA4F,KAAK7f,KAAAia,QAAA4F,GAAA,IAAe7f,KAAAia,QAAA4F,GAAAlU,KAAA,CAE9rvBjB,QAAOqD,GAAY/N,KACzB8f,SAAAA,EACAC,WAAA,CAAA,CAAAA,CACA,CAAA,CACJlL,EAMAA,SAAI,WAEAW,EAAA,gBAAAxV,KAA0B6V,SAAG+C,EAAA,EAAAhL,OAAA,EAC7B,OAAAuM,aAAsB6F,WAAGhgB,KAAAya,MAAA,EAC7B5F,EASAA,UAAI,SAAAyB,GAIA,GAAA,UAAA,OAAAA,EACJ,OAAA,KAGA1B,IAAAjB,EAAA2C,EAAA9J,eAAA,MAAA,GAAA,UAAA,OAAA8J,EAAA3C,KAAA2C,EAAA3C,KAAA,QAEIoB,GAAe,UAAfA,EAEQC,OAAAA,KAUJmF,aAAA9D,OAAA7J,eAAAmH,CAAA,IAEAA,EAAS,SAKjB3T,KAAA6V,SAAAsD,WACA7C,EAAA6C,SAAA,CAAA,GAIAvE,IAAA+J,EAAAnJ,EAAAG,OAAA,CAAA,EAAA,CACIR,OAAmB,aAEXE,cAAaD,aACbxS,KAAuB,aAE3BsC,SAAqBhF,aAEhB+f,SAAe5K,aACZnQ,WAAQsH,aACRtH,KAAiB,aACpB2Z,KAAM,aACH1F,SAAW,aACfC,SAAA,aACJ4C,QAAA,YAEA,EAAI7B,aAAc9D,OAAM1C,EAAK,EASrC,OAPQgL,EAAAuB,KAAAlgB,KAAAsW,EAAAtW,KAAA2Z,YAAA,EAAA,EAGH3Z,KAAA+Z,QAAApO,KAAAgT,CAAA,EAILA,CACA,EA2jCIwB,UA9iCQ,SAAAC,GAGJ,IAaI1d,EAbJ,MAAA,UAAA,OAAA0d,GAQmB,WAHX1d,EAAQkT,EAAKpJ,eAAgB,MAAO,GAAA,UAAA,OAAA4T,EAAAzM,KAAAyM,EAAAzM,KAAA,IAI5BiC,OAIZlT,EAAQ8J,EAAAA,OAAe,CAAA,EAAA,CACnB9J,OAAQsT,aACRkK,KAAW,aACXxd,WAAQsT,aAEXqK,OAAexK,aACZyK,SAAW,YA0iCnB,EAziCQ5d,aAAQsT,OAAajW,EAAK8V,GAElCqK,KAAAlgB,KAAAogB,EAAApgB,KAAA4Z,YAAA,EAAA,EAGH5Z,KAAA8Z,QAAAnO,KAAA4U,CAAA,EAILA,EACA,EA+iCIC,YApiCoBte,SAASkZ,GAsiCzB,GAniC2B,UAAf,OAAOA,EAoiCf,OAniCY1F,KAsiChBd,IAliCYjB,EAAAyH,EAAA5O,eAAA,MAAA,GAAA,UAAA,OAAA4O,EAAAzH,KAAAyH,EAAAzH,KAAA,KAoiCZ,GAjiCY+B,CAAAA,GAAUxT,CAAAA,aAAauX,SAAAjN,eAAAmH,CAAA,EAC3B,OAAA,KAID+B,WAAP/B,GAAgB3T,KAAA6V,SAAAsD,WACnBiC,EAAAC,KAAA,CAAA,GAMLoF,EAAAjL,EAAAG,OAAA,CAAA,EAAA,CACA7N,OAAA,aACAoY,KAAA,aACApE,WAAA,aACI1F,KAAkB,aAEVC,KAAW,YAEf,EAAI8D,aAAcV,SAAK9F,EAAQ,EAkiC/B,OAJA8M,EAzhCoBP,KAAOlgB,KAACib,EAAU3E,KAAMuD,cAAA,EAAA,EA2hC5C7Z,KAxhCYga,UAAArO,KAAA8U,CAAA,EAGJpK,CAwhCZ,EA/gCA2H,QAAC,WAIL,OAAA7D,aAAA1C,KAAAjL,eAAAxM,KAAA6V,SAAA4B,IAAA,EACA0C,aAAA1C,KAAAzX,KAAA6V,SAAA4B,MACA0C,aAAA1C,KAAA,EACA,EA8hCI+C,SAjhCI,SAAAtY,EAAAgD,EAAAwb,GAGHA,EAAAA,GAAA,GAGD9L,IAAA0H,EAAA,GAEJ,GAAAtc,KAAAia,QAAA/X,aAAAwI,QAAA,EAAA1K,KAAAia,QAAA/X,GAAAf,OACA,IAAA,IAAAT,EAAA,EAAAA,EAAAV,KAAAia,QAAA/X,GAAAf,OAAAT,CAAA,GAAA,CACAkU,IAAAkL,EAAA9f,KAAAia,QAAA/X,GAAAxB,GAAAof,SAGiB5a,EAAU/D,GAAYnB,KAAEia,QAAA/X,GAAAxB,GAAAwE,QAErBoX,EAAS5E,KACLT,EAAKC,MAAUhS,EAAIwb,CAAA,CACxB,EAEM1gB,KAAIia,QAAQ0G,GAAAA,GAAWZ,YACvB/f,KAAIia,QAAQ1C,GAAAA,OAAcpS,EAAAA,CAAK,CAG5C4R,CAKJ,OAAOlM,CACX,EAkhCA+V,eAvgCiB/V,SAAM1J,GAEfyT,IAAIwC,EAAQH,GACZrC,IAAImC,EAAQE,EAAKC,eAAU,MAAA,GAAA,UAAA,OAAAkE,EAAAzH,KAAAyH,EAAAzH,KAAA,OAWnC,OANI2H,EADIzQ,aAAiBuQ,QAAM5O,eAAOmH,CAAA,EAClCwG,aAAAiB,QAAAzH,GAAA7L,OAAAsT,CAAA,EAMJE,CACJ,CACA,EAEA,IAAAnB,aAAA,CAEIvC,KAAAA,GAmgCAvB,OAjgCQxL,GAkgCR4O,SAjgCYrC,GAmgCZ4I,WAhgCgB5I,GAigChByJ,UAhgCI,CAEA7K,WAAY,IACfyB,KAAA,KAGD0H,MAAA,GACJ2B,eAAA,OACAC,yBAAA,EACA,EAUIhT,OAAC,SAAArL,GAILkS,IAAA2B,EAAAf,EAAAG,OAAA,CAAA,EAAA,GAAAgD,kBAAA,EAGAqI,GAFAzK,EAAA2D,MAAAxX,aAAAgI,OAAAhI,EAAA,EAAA,EAEA6T,EAAAkE,MAAA,GAGQ,OAFRza,KAAAggB,WAAAgB,GAAAzK,CAGI,EAYAtT,IAAA,SAAA2V,GAEJ,OAAA5Y,KAAAggB,WAAAxT,eAAAoM,CAAA,EAIWpD,EAAA,gBAAexV,KAAAggB,WAAApH,EAAA,EAAA,IAEb,OAAQ5Y,KAAKggB,WAAUpH,GACnB,MAGL5Y,KAAAggB,WAAApH,GATZ,IA8/BI,EAz+BAqI,YAAA,SAAAxY,GAEJzI,KAAA6gB,UAAArL,EAAAG,OAAA,GAAA3V,KAAA6gB,UAAApY,CAAA,CACA,EAu/BI2R,WA7+BW,SAAI7B,GAEP3D,IAAA/J,EAAYyN,KAOvB,OAHWzN,EADI6N,KAAGmI,UAAYrU,eAActK,CAAA,EACrBoW,KAAKuI,UAAUnI,GAGtC7N,CAED,CA4+BA,EA2xNA,OAzxNAsP,aA1+Be1C,KAAEyJ,GAAA,CA2+BbC,aA1+Bc,UA2+BdC,cA1+BU,cA2+BVC,WA1+Be,KA2+BfC,UA1+BgB,MA2+BhBC,YA1+BgB,WA2+BhB5J,YA1+BK,CAAA,SAAA,UAAA,OAAA,SAAA,MAAA,OAAA,OAAA,SAAA,WAAA,UAAA,SAAA,WA2+BL6J,UA1+Be,SA2+BfvD,WA1+Bc,qEA2+BdwD,eA1+BkB,oBA2+BlBC,OA1+BI1L,YA2+BJ2L,OA1+BIzI,WA2+BJ0I,OA1+BY,QA2+BhB,EAEAzH,aA1+Bc1C,KAAEoK,GAAA,CA2+BZV,aA1+BkB,SA2+BlBC,cA1+Bc,aA2+BdC,WA1+Bc,MA2+BdC,UA1+Bc,KACdC,YAAC,MAED7H,YAAY,CAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,YACZC,UAAY,OACZC,WAAc,wEACdC,eAAiB,iBACjBC,OAAS,SACTC,OAAS,SACTC,OAAS,QA0+Bb,EAr+BAG,aAAAV,SAAAqI,OAAA,CAEAC,MAAA,KACAC,OAAA,KACI9H,SAAO,CAEHvG,KAAKkC,SACL0H,KAAK1H,KACLyF,QAAKzF,KACLoM,QAAKpM,KAELJ,KAAKI,CAEEsJ,MAAKtJ,0BACR,CAq+BR,EASAqK,KAl+BK,SAAMngB,EAAA2C,EAAA0I,GAo+BPpL,KAl+BQ6V,SAAWL,EAAAG,OAAYE,GAAAA,KAASqD,SAAAA,CAAc,EAm+BtDlZ,KAl+BQ+hB,MAAc7I,EAClBlZ,KAAAgiB,OAAA5W,EACJwJ,IAAA0F,EAAAta,KAIJD,EAAAoS,GAAA,oBAAA,WACJmI,EAAA4H,YAAA,CACA,CAAA,CACI7H,EAu+BAyB,WA99Be,WACT,OAAAtG,EAAAG,OAAA,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CA+9BN,EAOA/N,OA19BI,WAIJ8M,IAAAuN,EAAA,GACJvN,IAAAlS,EAAA1C,KAAA8b,WAAA,EASQ,OAPRpZ,EAAA+S,KAAA9B,KAAA,SAEI7L,EAAMoO,KAAExT,EAASgY,KAAO,SAAExY,EAAA2I,GAElByP,EAAiB3O,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CACrB,CAAA,EAEI4O,IAAQ3R,OAAO+M,IAAA,wBAAA,CACf+F,QAAa5a,KAAE6V,SAIf/N,OAAK+N,CACGJ,KAAwBG,EAArBuM,EAAYtM,OAAc,IAAKsM,EAAW5c,KAAO,GAAE,EAAA,EAC9DoV,CACJ,CAAA,CAq9BJ,EAOAU,KAl9BI,SAAA+G,GAIA5M,EAAA,gBAAAxV,KAAA+hB,MAAAtH,MAAA,EAAA,YAAAza,KAAAgiB,MAAA,EAAA3G,KAAA+G,GAAA,CAAA,CAi9BJ,EAOAvD,KA18BY,SAAEuD,GAGN5M,EAAA,gBAAkBxV,KAAM+hB,MAAAtH,MAAA,EAAA,YAAAza,KAAAgiB,MAAA,EAAAnD,KAAAuD,GAAA,CAAA,CA08BhC,EAMAxG,KAAM,WAEFhH,IAAIkN,EAp8BYvL,EAAQ,gBAAkBD,KAAMyL,MAAAtH,MAAA,EAAA,YAAAza,KAAAgiB,OAAA,WAAA,EAGhCzL,EAAQ0I,KAAG3E,iBAAehE,EAAM,IACpCwL,EAAAzC,QAAA,yDAAA,EAIIyC,EAAArM,KAAA,UAAA,GACJqM,EAAArM,KAAA,WAAA,UAAA,CAm8BhB,EAMAyM,YA/7BmBnH,WAi8BfnG,IA97BU0F,KAAAta,KAEV,GAAA,CAAA,WAAA,UAAAqL,QAAA,OAAArL,KAAA6V,SAAAoM,OAAA,GA+7BIzM,EAAE,gBAAkBxV,KAAK+hB,MAAMtH,MAAM,EAAI,YAAcza,KAAKgiB,OAAS,WAAW,EA57BpFK,MAAA,SAAAC,OAKgBzM,GAAkCuF,YAAlCvF,OAAS4D,KAAAA,SAAUwI,QACf3H,KAAOzE,SAAC2K,QAAYpF,KAAQ2G,MAAAO,KAAA,MAErB,CACf1N,IAAAkL,SAAAhL,kBAAAK,kBAAAmF,KAAAzE,SAAAoM,OAAA,EAGU,YAAA,OAAAnC,SACMtT,SAAAA,KAAeuV,MAAOO,KAAIlH,EAEjC7E,KAASzO,KAAO+N,SAAAoM,OAAA,CAE/B,CACN,CAAA,CA07BJ,CACJ,EAEA9H,aAr7BgBV,SAAO5D,OAAQ,CAu7B3BkM,MAr7BQpH,KAs7BRqH,OAr7BQ1I,KAs7BRzD,SAr7BQ4D,CACF9F,KAAA,SAEF2H,QAAW,IAq7Bf,EASA4E,KAl7BQ,SAAAngB,EAAA2C,EAAA0I,GAGAoQ,KAAAA,SAAad,EAAAA,OAAO,GAAA1a,KAAA6V,SAAAnT,CAAA,EACxB1C,KAAA+hB,MAAAhiB,EAGAyb,KAAAA,OAAWG,CAg7Bf,EAOAG,WA16BW,WACH,OAAID,EAAAA,OAAAA,CAAAA,EAAiBT,GAAAA,KAAQU,QAAU,CA26B/C,EAh6BJT,KAAA,SAAA+G,GAGQ5M,EAAI,gBAAczV,KAAA0a,MAAA,EAAA,YAAAza,KAAAgiB,MAAA,EAAA3G,KAAA+G,GAAA,CAAA,CAu6BtB,EA35BAvD,KAAA,SAAAuD,GAEJ5M,EAAA,gBAAAzV,KAAA0a,MAAA,EAAA,YAAAza,KAAAgiB,MAAA,EAAAnD,KAAAuD,GAAA,CAAA,CACIvJ,EAy6BA/Q,OA95BY,WAER,OAAA9H,KAAA6V,SAAAyF,OA+5BJ,CACJ,EAEAnB,aA35BY8B,SAAWsG,KAAK1M,CA65BxBkM,MA15BQ,KA25BRC,OAz5BY,KA05BZnM,SAz5BYoG,CACJtI,KAAC,OA05BL4J,KAz5BYpB,KA05BZb,QAx5BQW,KAy5BRgG,QAx5BgB,KAy5BhBxM,KAx5BgB2G,CACJ+C,MAAE,qBAy5Bd,CACJ,EASAe,KAt5BI,SAAAngB,EAAA2C,EAAA0I,GAIApL,KAAIuc,SAAa/G,EAAAG,OAAK,GAAA3V,KAAA6V,SAAAnT,CAAA,EAEpBwT,KAAKoG,MAASvc,EACZC,KAAIoI,OAAWgD,EAo5BnBwJ,IAn5BQ2H,EAAavc,KAEjBD,EAAAoS,GAAA,oBAAA,WACFmI,EAAA4H,YAAA,CAEF,CAAA,CAm5BJ,EAOApG,WA34BQU,WACAE,OAAAA,EAAAA,OAAc,CAAA,EAAA,GAAA1c,KAAA6V,QAAA,CA44BtB,EAOAwF,KAx4BY,SAAO+G,GA04Bf5M,EAAE,gBAx4ByBsH,KAAO5a,MAAM2a,MAAMA,EAAK3a,YAAKlC,KAAAgiB,MAAA,EAAA3G,KAAA+G,GAAA,CAAA,CAy4B5D,EAOAvD,KAr4BQjL,SAAUiC,GAEV7N,EAAAA,gBAAgBhI,KAAA+hB,MAAAtH,MAAA,EAAA,YAAAza,KAAAgiB,MAAA,EAAAnD,KAAAuD,GAAA,CAAA,CAs4BxB,EAMAxG,KAr4BYtB,WAu4BR1F,IAn4BQkN,EAAI5E,EAAAA,gBAAmBld,KAAA+hB,MAAAtH,MAAA,EAAA,YAAAza,KAAAgiB,OAAA,WAAA,EAGnBF,EAAI1E,KAAAA,iBAA4BhV,EAAAA,IAChC0Z,EAAIzC,QAAOjC,yDAELrZ,EAGN+d,EAAArM,KAAA,UAAA,GAEFqM,EAAOxhB,KAAG,WAAA,UAAA,CAg4BxB,EAOAwH,OAAQ,WAEJ8M,IAAIuN,EA13B6B9E,GA23BjCzI,IAAIlS,EA13BoB1C,KAAA8b,WAAA,EAg4BxB,OAJAtG,EAAEU,KA13BexT,EAAC+S,KAAA,SAAAvT,EAAA2I,GACNsX,EAAAxW,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CA23BZ,CAAC,EAr3BWzK,IAAA0H,OAAA+M,IAAA,sBAAA,CACJuG,QAAApb,KAAA6V,SAEA/N,OAAS+N,CAGD2H,KAAsB3H,EAAtB2H,EAAiBlD,OAAckD,IAAAA,EAAcjY,KAAA,GAAA,EAAA,EAq3BzD,CACJ,CAAC,CACL,EAMA2c,YAl3BoB,WAo3BhBtN,IAAI0F,KAl3BoBta,KAIqBoD,GAg3BzC,CAAC,WAj3BmBoa,UAAiBA,QAAAA,OAAepa,KAAAA,SACxBoG,OAAOmU,GAi3BnCnI,EAAE,gBA92BgBxV,KAAA+hB,MAAAtH,MAAA,EAAA,YAAAza,KAAAgiB,OAAA,MAAA,EACNK,MAAA,SAAAC,OAGI,GAAsB,YAArB/E,OAAOC,KAAAA,SAAcyE,QAClC3H,KAAAzE,SAAAoM,QAAA3H,KAAAyH,MAAAO,KAAA,MACH,CACM1E,IAAYkC,SAAEjC,gBAAyB1I,kBAAAmF,KAAAzE,SAAAoM,OAAA,EAErB,YAAA,OAAAnC,SAEjBA,SAAAxF,KAAAyH,MAAAO,KAAA,EAEWlF,KAAAA,KAAcvH,SAAKoM,OAC1B7E,CAIJ,CAEF,CAAA,CA02Bd,CACJ,EAEAjD,aAp2BgBV,SAAA+I,OAAA,CAs2BZT,MAn2BYzH,KAo2BZ0H,OAn2BS,KAo2BTnM,SAn2BQwI,CAo2BJ1K,KAn2BY,SAo2BZ4J,KAn2BY,KACRjC,QAAA,KACF2G,QAAA,KACL5G,KAAA,CAAA,EAGD5F,KAAA,CACJ0J,MAAA,wBACA,CACA,EA02BIe,KA91BQ,SAAKrK,EAASrJ,EAAAA,GAElBxM,KAAA6V,SAAAL,EAAAG,OAAA,GAAA3V,KAAA6V,SAAAnT,CAAA,EAEA1C,KAAO+hB,MAAEhiB,EACZC,KAAAgiB,OAAA5W,EAGDwJ,IAAA0F,EAAAta,KAEJD,EAAAoS,GAAA,oBAAA,WACAmI,EAAA4H,YAAA,CACIhG,CAAAA,CA41BA,EAOAJ,WAv1BW9T,WACV,OAAAwN,EAAAG,OAAA,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CAGD,EASAwF,KAAA,SAAA+G,GAEJ5M,EAAA,gBAAAxV,KAAA+hB,MAAAtH,MAAA,EAAA,YAAAza,KAAAgiB,MAAA,EAAA3G,KAAA+G,GAAA,CAAA,CACA,EASAvD,KAAA,SAAAuD,GAEQ5M,EAAA,gBAAmBxV,KAAA+hB,MAAAtH,MAAA,EAAA,YAAAza,KAAAgiB,MAAA,EAAAnD,KAAAuD,GAAA,CAAA,CACvB,EAQA1D,KAAAA,WAIMxI,IAAI4L,EAAM/H,EAAAA,gBAAsB/Z,KAAE2e,MAAAA,MAAe,EAAA,YAAA3e,KAAAgiB,OAAA,WAAA,EAG3C9M,EAAAA,KAAa1I,iBAAe,EAAM,IAClC8J,EAAQqI,QAAAA,yDAAa,EAE3BmD,EAAArM,KAAA,UAAA,GAEFqM,EAAYrM,KAAA,WAAA,UAAA,CAIhB,EA+0BAsG,OAx0BM,WAIEnH,IAAIiH,EAAAA,EAAAA,gBAAyBC,KAAAA,MAAYrB,MAAA,EAAA,YAAAza,KAAAgiB,OAAA,WAAA,EAw0B7CF,EAr0BYlD,KAAAA,iBAAY,EAAAhR,OAAA,EAs0BxBkU,EAr0BY1G,WAAc,UAAA,CAs0B9B,EA5zBJtT,OAAA,WAEIgX,IAAAA,EAAc,GAER5I,IAAIxT,EAAMsX,KAAW8B,WAAUvP,EAW/B2J,OATAxT,EAAA+S,KAAA9B,KAAA,SAIN6B,EAAAU,KAAAxT,EAAA+S,KAAA,SAAAvT,EAAA2I,GACJsX,EAAAxW,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CACA,CAAA,EAGezK,IAAK4Z,OAAAA,IAAW,wBAAwB,CAC3CoB,QAAapb,KAAC6V,SAChB/N,OAAA,CACL2N,KAAA,EAAA0M,EAAAhhB,OAAA,IAAAghB,EAAA5c,KAAA,GAAA,EAAA,EAGD,CACJ,CAAA,CACA,EAm0BI2c,YA1zBkB9I,WAGVxE,IAAC0F,KAAMta,KAEP,GAAA,CAAA,WAAA,UAAAqL,QAAA,OAAArL,KAAA6V,SAAAoM,OAAA,GACFzM,EAAA,gBAAAxV,KAAA+hB,MAAAtH,MAAA,EAAA,YAAAza,KAAAgiB,OAAA,WAAA,EAEKhG,MAAO,SAAAsG,OAIlB,GAAA,YAAA,OAAAhI,KAAAzE,SAAAoM,QACJ3H,KAAAzE,SAAAoM,QAAA3H,KAAAyH,MAAAO,KAAA,MACA,CACA1N,IAAAkL,SAAA2C,gBAAAtN,kBAAAmF,KAAAzE,SAAAoM,OAAA,EAE2C,YAAlBzc,OAAS9C,SAEJod,SAAAxF,KAAAyH,MAAkBO,KAAKzM,EAG3BuG,KAAA9B,KAAAzE,SAAAoM,OAAA,CAElB,CAEU,CAAA,CAqzBd,CACJ,EAEA9H,aAjzBY+E,OAAAA,SAAe,CAmzBvBwD,IAjzBQtD,GAkzBR3I,MAjzBK,GAkzBLsL,MAhzBIxH,KAizBJyH,OA/yBYxc,EAgzBZmd,OA/yBYjgB,GAgzBZmT,SA9yBK,CAGDlC,KAAOjR,WACHR,KAAIqd,KAEJ/J,MAAE,KA4yBNQ,WA3yBiB,KACb4M,OAAG,CAAA,EACPC,WAAA,KACH3P,YAAA,KAGD4P,UAAA,KACJpgB,QAAA,GACA2T,OAAA,KACIuJ,SAAW,KAELzG,SAAA,KACLkC,KAAA,CAAA,EAGDL,OAAA,IACJ,EA+yBIkF,KAtyBQ,SAASL,EAAAA,EAAgBzU,GAEzB0U,KAAAA,MAAUA,EACVC,KAAAA,IAAeA,EAAAA,MAAAA,EAAAA,WAAAA,EAAAA,eAAAA,MAAAA,EAAAA,EAAAA,KAAAA,GACjB/f,KAAAyW,MAAA3B,kBAAAoD,SAAA,EACLlY,KAAA2iB,OAAA7N,kBAAAC,cAAAhV,EAAA2C,CAAA,EAGD1C,KAAA6V,SAAAf,kBAAAQ,kBAAAvV,EAAAC,KAAA6V,SAAAnT,CAAA,CACJ,EAUAoZ,WAAA,WACA,OAAAtG,EAAAG,OAAA,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CACA,EAwyBIsD,SA/xBY,SAAS3M,GAGbxM,KAAA2iB,OAAW3iB,KAAAse,SAAA,EACfte,KAAA6V,SAAAsD,SAAA,CAAA,CAAAyF,EAGIjL,EAAAA,YAAc3T,KAAAyW,KAAA,EAAA8E,KAClBvb,KAAA+iB,cAAA,CAEA,CA6xBJ,EAOAlE,KA1xBQoB,SAAemC,GAEf/G,EAAAA,gBAA6Brb,KAAA0iB,GAAA,EAAA7D,KAAAuD,CAAA,CA2xBrC,EAOA/G,KAvxBI,SAAOsD,GAIXnJ,EAAA,gBAAAxV,KAAA0iB,GAAA,EAAArH,KAAA+G,CAAA,CACJ,EA4xBI9D,SApxBQ,WAGJ,GAAI3K,KAAOyM,SAAM5T,SAEbmH,OAAS3T,KAAA2iB,OAEb,CAEIpC,IAAAA,EAAa,GAMdpG,OAJK3E,EAAQ,YAAcxV,KAAAyW,MAAA,+BAAA,EAAAP,KAAA,WAC1B4F,EAAYnQ,KAAA6J,EAAAxV,IAAc,EAAA2N,IAAA,CAAA,CAC1B0S,CAAAA,EAEDlG,CAEHoG,CAixBJ,EArwBJN,SAAA,SAAApV,GAEI2V,GAAAA,EAAAA,CAAAA,SAAa,SAAUpF,UAAS/P,QAAA,OAAAR,CAAA,EAAA,GAAhC2V,CAMI,GAAmBhU,UAAfmH,OAAOyH,GAEJzH,GAAUwG,OAANtP,GAAmB4O,CAAAA,MAASjN,QAAAA,CAAAA,EAC5B,MACX,MAIA3B,EAAA,CAAAA,GAKIqV,IAAI5F,EAAQta,KAGZ6e,GAFA/C,KAAAA,OAAY,GAER9b,KAAQ6V,SAAYsD,SAAC,CAC1BgB,EAAAA,YAAaV,EAAS9F,KAAM,EAAAqP,MAAA,EAI1BhJ,IAAAA,EAAeyG,KAAAA,WAAgB,EAGvC,GAAAvL,EAAA1I,eAAA,SAAA,GAGD,UAAA,OAAA0I,EAAAxS,SACJqB,MAAAC,QAAAkR,EAAAxS,OAAA,GACAqB,MAAAC,QAAA6G,CAAA,EACA,CACa+J,IAAAqO,EAAY,GAKpBzN,EAAAU,KAAAhB,EAAAxS,QAAA,SAAA6J,EAAA2W,GAILA,EAAA1W,eAAA,OAAA,GACAgJ,EAAAU,KAAArL,EAAA,SAAA0B,EAAAoB,GAEA,GAAAuV,EAAArY,OAAA8C,EAQ8B,OAP9BuV,EAAA1W,eAAA,MAAA,GAAA,GAAA,CAAA,SAAA,UAAAnB,QAAA,OAAA6X,EAAAvd,IAAA,GACAsd,EAAAtX,KAAAuX,EAAAvd,IAAA,EAIwB2U,EAAAqI,OAAAhX,KAAAgC,CAAA,EAEM,CAAA,CAEF,CAAG,CAIf2O,CAAO,EAMP9G,EAAA,YAAA8E,EAAA7D,KAAA,EAAA9Q,KAAAsd,EAAA1d,KAAA,IAAA,CAAA,CACJ,CAGJ,MACHiQ,EAAA,YAAAxV,KAAAyW,MAAA,oBAAA,EAAA0M,KAAA,UAAA,CAAA,CAAA,EAILpf,MAAAC,QAAA6G,CAAA,GACA2K,EAAA,YAAAxV,KAAAyW,MAAA,oBAAA,EAAAP,KAAA,SAAA3J,EAAA6W,GACA5N,EAAAU,KAAArL,EAAA,SAAA0B,EAAAoB,GACA,GAAAA,GAAA6H,EAAA4N,CAAA,EAAAzV,IAAA,EAMyByN,OALL5F,EAAU4F,CAAS,EAAA+H,KAAA,UAAA,CAAA,CAAA,EAEf7I,EAAAqI,OAAAhX,KAAAgC,CAAA,EAGSnB,CAAAA,CAEzB,CAAA,CAEO8O,CAAAA,CAxFH,CA4FZ,EAsvBIlC,SA5uBW,SAAE4C,EAAArW,GAETob,IAMRsC,EACAC,EACAC,EARQxC,KAAAA,SAAAA,WAMRsC,EAAA7N,EAAA,YAAAxV,KAAAyW,KAAA,EACA6M,EAAA9N,EAAA,yBAAA6N,CAAA,EACAE,EAAA/N,EAAA,QAAA6N,CAAA,EAGQA,EAAYpE,KAAKtJ,iBAAiBgD,EAAAA,OAAAA,EAClCpC,EAAS2D,KAAMxX,mBAAmBgI,EAAAA,OAAShI,EAG3Bse,OAAXhB,GAELuD,EAAOhN,YAAQ,YAAA,EAClBgN,EAAAC,YAAA,UAAA,GAILxH,GACAuH,EAAAC,YAAA,YAAA,EACAD,EAAAE,SAAA,UAAA,EAQgC,UAAlB,OAJMzD,EAFG,KAAA,IAAAra,GAAA,UAAA,OAAA3F,KAAA6V,SAAA6N,UAEH1D,KAAWxT,SAAAA,UAIjB7G,IACK2d,EAAKtD,OAAa,+BAACra,EAAA,QAAA,IAKjC4d,EAAAC,YAAA,UAAA,EAGDD,EAAAE,SAAA,YAAA,EAEJ,KAAA,IAAA9d,IACA,UAAA,OAAA3F,KAAA6V,SAAA8N,YACiBhe,EAAS8C,KAAAA,SAAUkb,YAG/B,CAAAhe,GAAA3F,KAAA6V,SAAA+N,WAGDje,EAAA3F,KAAA+hB,MAAA/D,QAAA,EAAAyD,iBAI2B,UAAf,OAAA9b,GAEC2d,EAAOxG,OAAA,iCAAAnX,EAAA,QAAA,GA+tBpB,EAltBAqW,QAAA,WAEA,MAAAhc,EAAAA,KAAa6V,SAAE+N,UAAU5jB,CAAAA,KAAA6V,SAAAsD,WACU,EAApBnZ,KAACse,SAAS,EAAAnd,MAIzB,EAQA2G,OAAA,WAEA8M,IAAAlS,EAAoB1C,KAAA8b,WAAA,EACpB+H,EAAiB/O,kBAAuBsB,iBAAkBpW,KAAK+hB,MAAQrf,CAAE,EAEzE,OAAAtC,IAAc0H,OAAA+M,IAAA,yBAAA,CACd+D,GAAA5Y,KAAgB0iB,IACR3iB,KAAEC,KAAQ+hB,MACVvL,KAAExW,KAAQyW,MACVH,MAAEtW,KAAA6V,SACbyF,QAAAtb,KAAA+iB,cAAA,EAED5I,aAAsB2H,CAElBC,CAAK,CACLC,EA6tBAe,cAttBe,WAEdnO,IAAA0F,EAAAta,KAGD8jB,EAAA,GACJ5O,EAAAlV,KAAA8b,WAAA,EACAmH,EAAA,GAEA/N,EAAA1I,eAAA,SAAA,GACA,UAAA,OAAA0I,EAAAxS,SACUqB,MAAAC,QAAgBtB,EAAS0I,OAAO,GAG7B2W,EAAAA,KAAWhiB,EAAI2C,QAAA,SAAA6J,EAAA2W,GACflB,IAAW5W,EAAK,GACL2Y,EAAI,CAEZpQ,KAAA,WACCuO,MAAa,kBACpB,EACLtN,IAAAoP,EAAAd,EAAA1W,eAAA,MAAA,GAAA,GAAA,CAAA,SAAA,UAAAnB,QAAA,OAAA6X,EAAAvd,IAAA,EAGDud,EAAAvd,KACJ,GAEAuP,EAAAhT,OACgB6hB,EAAY7hB,KAAAoY,EAAAzE,SAAA3T,MAKxBgT,EAAA0O,WACJG,EAAAH,SAAA,YAGYpO,EAAAU,KAAAgN,EAAW,SAAAhhB,EAAA2I,GAEI,SAAF3I,IAGG6hB,EAAQ7hB,GAFM,UAAZ4Z,EAEMiI,EAAA7hB,GAAA,IAAA2I,EAGWA,EAI5B,CAAE,EAECsX,EAAAA,GAAWhhB,kBAAoBghB,SAAW5c,EAEtD,UAAA,OAAA+U,EAAAqI,QACL5e,MAAAC,QAAAsW,EAAAqI,MAAA,EAILnN,EAAAU,KAAAoE,EAAAqI,OAAA,SAAApW,EAAA6W,GACA,GAAAA,GAAAF,EAAArY,MAQI,OAPJkZ,EAAAE,QAAA,UAC8Bf,EAAA1W,eAAA,MAAA,GAAA0W,EAAAvd,MAEGoc,EAAapW,KAAGuX,EAAWvd,IAAG,EAI3D,CAAA,CAEJ,CAAA,EAEoByc,EAAUO,QAAAO,EAAArY,QAELqY,EAAQnB,eAAa,MAAG,GAAAmB,EAAcvd,MAC1Dsd,EAAAtX,KAAAuX,EAAAvd,IAAA,EAILoe,EAAAE,QAAA,WAIkBzO,EAAAU,KAAK6N,EAAA,SAAsB7hB,EAAM2I,GAE7BoU,EAAKtT,KAAAzJ,EAAoB,KAAG2I,EAAA,GAAA,CAC/BwU,CAAAA,EAGA5J,EAAiB9J,KAAA,CAC5BiN,GAAAmL,EAAAnL,GACHjT,KAAAqe,EAGDvO,KAAA,EAAA0M,EAAAhhB,OAAA,IAAAghB,EAAA5c,KAAA,GAAA,EAAA,EACJ,CAAA,CACA,CAAA,EAKQqP,IAAK/J,EAA8B,UAA9B,OAAY7K,KAAS2iB,QAAqB9M,MAAQ7R,QAAQhE,KAAK2iB,MAAG,EACjE3iB,KAAA2iB,OAAepd,KAAG,IAAKwc,EAGb/hB,KAAA2iB,OA4rBhB,OA1rBaviB,IAAM0H,OAAA+M,IAAA,wBAAA,CACHyB,MAAIwJ,EAEJjV,MAAIA,EA0rBhB/C,OAzrBgBgY,CACHpd,QAAMohB,EACH1H,cAAUvG,CACd,CA0rBhB,CAAC,CACL,CACJ,EAEAsE,aAzrBC9D,OAAA6N,MAAA,CAIGnC,IAAK,GACLC,MAAM,GACNnM,MAAAA,KAwrBAmM,OAvrBU,EAwrBVW,OAvrBIrH,GACJzF,SAAC,CAGDlC,KAAA,QACJzR,KAAA,KACAiiB,MAAA,KACAnO,WAAA,KACAJ,MAAA,KACAiN,WAAA,KACQ3P,YAAYnT,KAEZ+iB,UAAa,KACbsB,OAAU,KACV3O,KAAKuM,CACR7C,MAAA,gDAGD,EACJyE,SAAA,KACAzK,SAAA,KACAkL,SAAA,KACIvI,KAAU,CAAA,EACNd,OAASrF,IACb,EAcJuK,KAAA,SAAAngB,EAAA2C,EAAA0I,GAEApL,KAAA+hB,MAAAhiB,EACQC,KAAE0iB,IAAUN,EAAQ3H,MAAE,EAAA,WAAA/X,EAAA8J,eAAA,MAAA,EAAA9J,EAAAR,KAAAkJ,GAEpBpL,KAAAyW,MAAe3B,kBAAkBoD,SAAA,EACtClY,KAAA2iB,OAAA7N,kBAAAC,cAAAhV,EAAA2C,CAAA,EAGD1C,KAAA6V,SAAAf,kBAAAQ,kBAAAvV,EAAAC,KAAA6V,SAAAnT,CAAA,CACJ,EASAyX,WAAaV,WAETsI,OAAWvM,EAAAG,OAAA,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CACXmM,EA8qBA7I,SAvqBa,SAAEyF,GAEd5e,KAAA2iB,OAAA3iB,KAAAse,SAAA,EAGDte,KAAA6V,SAAAsD,SAAA,CAAA,CAAAyF,EAEJpJ,EAAA,YAAAxV,KAAAyW,KAAA,EAAA8E,KACAvb,KAAA+iB,cAAA,CACA,CACA,EA4qBIlE,KAnqBQvE,SAAK4H,GAEZ1M,EAAA,gBAAAxV,KAAA0iB,GAAA,EAAA7D,KAAAuD,CAAA,CAGD,EASA/G,KAAA,SAAA+G,GAEJ5M,EAAA,gBAAAxV,KAAA0iB,GAAA,EAAArH,KAAA+G,CAAA,CACA,EAUA9D,SAAA,WAGU,OAAAte,KAAA6V,SAAkBsD,SACvBnZ,KAAA2iB,OAGDnN,EAAA,YAAAxV,KAAAyW,MAAA,QAAA,EAAA9I,IAAA,CACJ,EAgqBIsS,SAvpBW6B,SAAYjX,GAEnB,CAAA,SAAA,UAAAQ,QAAA,OAAAR,CAAA,EAAA,IAMR7K,KAAA2iB,OAAA9X,EAEY7K,KAAA6V,SAAWsD,SAEXgJ,EAAAA,YAAeniB,KAAAyW,KAAA,EAAA9Q,KAAAkF,CAAA,EAGb2K,EAAC9S,YAAc1C,KAAAyW,MAAc,QAAO,EAAE9I,IAAA9C,CAAA,EAqpBhD,EAxoBAuO,SAAA,SAAA4C,EAAArW,GAEJ,IAMc0d,EAGMiB,EATpBtkB,KAAA6V,SAAAsD,WAMckK,EAAA7N,EAAe,YAAciF,KAAMhE,KAAI,EAGjC6N,EAAWhK,EAAKzE,QAASoM,CAAO,EA8oB5CoB,EA5oBmBpE,KAAA,iBAAA,EAAArR,OAAA,EA6oBnByV,EA5oBoBvD,KAAAA,mBAA0B,EAAC3K,OAAAA,EAGlBmF,OA2oBzB0B,GA1oBYsI,EAACd,YAAM,YAAA,EA4oBnBc,EA3oBoBd,YAAM3N,UAAgB,GAElCmG,GACFsI,EAAAd,YAAA,YAAA,EACVc,EAAAb,SAAA,UAAA,EAQM,UAAA,OAJDhK,EAFZ,KAAA,IAAA9T,GAAA,UAAA,OAAA3F,KAAA6V,SAAA6N,UAEoB1jB,KAACwiB,SAASkB,UAIjB/d,IACA0d,EAAQvG,OAAA,+BAAAnX,EAAA,QAAA,IAGdsc,EAASuB,YAAI,UAAA,EACPc,EAAIb,SAAA,YAAA,EAEC,KAAA,IAAA9d,IACX,UAAA,OAAA3F,KAAA6V,SAAA8N,YACHhe,EAAA3F,KAAA6V,SAAA8N,YAIL,CAAAhe,GAAA3F,KAAA6V,SAAA+N,WACAje,EAAA3F,KAAA+hB,MAAA/D,QAAA,EAAAyD,iBAI0B/e,UAAhB,OAAU3C,GAEP8V,EAAaF,OAAS,iCAAyBhQ,EAAA,QAAA,GAyoBxD,EA5nBJqW,QAAA,WAEIF,IAAAA,EAAYtG,EAAA,YAAYxV,KAAAyW,MAAA,QAAA,EAEvB,OAAA6N,EAAA,GAGDA,EAAAC,GAAA,QAAA,EAGJ,IACIlJ,EAUAwD,OAAM,WAGLjK,IAAAlS,EAAA1C,KAAA8b,WAAA,EAGD+H,EAAA/O,kBAAAsB,iBAAApW,KAAA+hB,MAAArf,CAAA,EAEJ,OAAAtC,IAAA0H,OAAA+M,IAAA,yBAAA,CACU+D,GAAA5Y,KAAA0iB,IAEEZ,KAAStM,KAAEuM,MAERD,KAAO7C,KAAKxI,MACfqL,MAAOzC,EACX/D,QAAAtb,KAAA+iB,cAAA,EACOjB,aAAY+B,CACf/B,CAAAA,CA0nBR,EAOAiB,cArnBgB,WAEf,OAAA/iB,KAAA6V,SAAAsD,SAGDnZ,KAAAwkB,uBAAA,EACJxkB,KAAAykB,eAAA,CACA,EA2nBIA,eAhnBM,WAGErJ,IAAAA,EAAcvF,GACd/N,EAAQ,GAgnBZ8M,IA/mBQa,EAAiBtU,KAAAA,WAAiB,EACtCujB,EAAA5P,kBAAAoD,SAAA,EA8DZ,OA5DKxV,EAAA8J,eAAA,MAAA,GAGD,UAAA,OAAA9J,EAAA+S,MACJ,OAAA/S,EAAA+S,MACA1R,CAAAA,MAAAC,QAAAtB,EAAA+S,IAAA,IAGY6E,EAAO7E,KAAI,IAMH/S,EAAIR,OACAoY,EAAKzE,KAAQ3T,KAAC+f,KAAQ3H,SAAYgI,MA4mBlD5f,EAxmBoB+S,KAAA9B,KAAOmM,EAAanM,KAymBxCjR,EAxmBoBod,KAAAA,MAAciC,KAAKY,OA0mBnCjgB,EAxmBqB4X,QACT5X,EAAA+S,KAAAX,kBAAAY,UACJ,CAAAiP,MAAA,SAAAjiB,EAAAkT,KAAA,EACFlT,EAAA+S,IACV,GAEP/S,EAAAkhB,WAEDzJ,EAAa9D,KAAOuO,SAAW,YAKnBliB,EAAC8J,eAAA,UAAA,GACC,UAAF,OAAE9J,EAAA2hB,UACFtgB,MAAEC,QAAAtB,EAAA2hB,QAAA,IAEA3hB,EAAI+S,KAAAhI,KAAAiX,EAEV1O,EAAAA,KAAYtT,EAAI2hB,SAAA,SAAA9X,EAAAsY,GACRjQ,IAAKkQ,EAAA,GAEb5R,EAAWgD,KAAM2O,EAAA,SAAA3iB,EAAA2I,GACNia,EAAInZ,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CACN,CAAE,EAEDwZ,EAAI1Y,KAAA,CACA8J,KAAA,EAAAqP,EAAA3jB,OAAA,IAAA2jB,EAAAvf,KAAA,GAAA,EAAA,EACJ,CAAA,CACJ,CAAA,GAKdiQ,EAAAU,KAAAxT,EAAA+S,KAAA,SAAAvT,EAAA2I,GACAsX,EAAAxW,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CACA,CAAA,EAEAzK,IAAA0H,OAAA+M,IAAA,qBAAA,CACUyB,MAAA4J,EAEG6B,WAAe2C,EACfhC,MAAW3iB,KAAK0a,OAChBhE,OAAW3B,CACX6N,KAA6B5N,EAAlBD,EAAAA,OAAkBC,IAAchV,EAAM2C,KAAQ,GAAA,EAAA,GACzDmT,SAAWf,CACnB,CAGD,CAAA,CACJ,EAUA0P,uBAAA,WAEIrL,IAAQzW,EAAE1C,KAAU4e,WAAY,EAG5B,OAAK/I,IAAQ/N,OAACqR,IAAQ,qBAAgB,CAEpC7C,MAAW5T,EAGhBmI,MAAA7K,KAAA2iB,MAGD,CAAA,CACJ,CACA,EA2lBAxI,aAzlBU9D,OAAU+L,OAAQ,CAGxBM,IAAC,GAGDjM,MAAA,GACJsL,MAAA,KACAY,OAAA,KACA9M,SAAA,CACQlC,KAAE,SAEAwQ,MAAA,KACLnO,WAAA,KAGDJ,MAAA,KACJ0F,QAAA,GACAuH,WAAA,KACA3P,YAAA,KACIoL,SAAU,KAENjD,KAAQ,CAAA,EACJL,OAAO,IAmlBf,EApkBJkF,KAAA,SAAAngB,EAAA2C,EAAA0I,GAEApL,KAAA+hB,MAAAhiB,EACIkgB,KAAQyC,IAAY7X,EAAK4P,MAAE,EAAA,WAAA/X,EAAA8J,eAAA,MAAA,EAAA9J,EAAAR,KAAAkJ,GAEvBpL,KAAK2iB,OAAU7N,kBAAoBzJ,cAAeR,EAAMnI,CAAM,EAC1D1C,KAAA6V,SAAAf,kBAAAQ,kBAAAvV,EAAAC,KAAA6V,SAAAnT,CAAA,EACJ1C,KAAAyW,MAAA3B,kBAAAoD,SAAA,CA6kBJ,EAOA4D,WAzkBY,WACR,OAAK6G,EAAMhN,OAAK,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CA0kBpB,EAOAsD,SAhkBoB3D,SAAO3K,KAykB3BgU,KAAM,SA9jBUuD,GAgkBZ5M,EA5jBQA,gBAAgB8E,KAAK7D,GAAK,EAAE9Q,KAAKsd,CAAAA,CA6jB7C,EAOA5H,KAAM,SA1jBoB+H,GA4jBtB5N,EAAE,gBAzjB8BxV,KAAA0iB,GAAA,EAAArH,KAAA+G,CAAA,CA0jBpC,EAjjBA9D,SAAA,aAgkBA2B,SArjBQoD,SAAcxY,KA8jBtB/C,OAljBQyb,WAGA3O,IAAIlS,EAAW1C,KAAK8b,WAAe,EAC/BnW,EAAYkQ,kBAAkBO,iBAAApW,KAAA+hB,MAAArf,CAAA,EAGlC,OAAItC,IAAOuF,OAAIkP,IAAK,yBAAU,CAC1ByO,GAAAA,KAAUxG,IACd/c,KAAAC,KAAA+hB,MAEHvL,KAAMxW,KAAAyW,MACH8M,MAAOC,EACPD,QAAOE,KAASV,cAAa,EAEzBc,aAAWA,CA+iBnB,CAAC,CACL,EAOAd,cA5iBQ,WAEPnO,IAAAlS,EAAA1C,KAAA8b,WAAA,EAGDlH,IAAA0G,EAAA,GACJ1G,IAAAmQ,EAAA,CACA,eACA,gBACW,eAEC,cACA,cACJ,gBAMJ,GAAA,UAAA,OAAAriB,EAAA4Y,QACJA,EAAA5Y,EAAA4Y,aAEA,GAAA5Y,EAAA4Y,mBAAA5Q,OAAA,CACY3G,MAAWC,QAAAtB,EAAA4Y,OAAA,IAEX5Y,EAAmB4Y,QAACQ,CAAWpZ,EAAC4Y,UAI5B1G,IAqBSpI,EArBLwY,EAAI,GAER,IAAEpQ,IAAK6B,EAAK,EAAA/V,EAAAgC,EAAA4Y,QAAAna,OAAAT,CAAA,GACI,UAARmV,OAAAA,EAAQyF,QAAA5a,GACXskB,EAAKjC,KAAcrgB,EAAC4Y,QAAA5a,EAAA,EAE/B,CAAAqD,MAAAC,QAAAtB,EAAA4Y,QAAA5a,EAAA,GACLgC,EAAA4Y,QAAA5a,GAAA8L,eAAA,WAAA,GAGD,GAAAuY,EAAA1Z,QAAA3I,EAAA4Y,QAAA5a,GAAAukB,SAAA,IAEJ/iB,EAAAQ,EAAA4Y,QAAA5a,GAAAukB,UAAArgB,MAAA,GAAA,EAAA,GAEmB9E,OAAY0M,eAAAtK,CAAA,IAEG,UAAA,OAAApC,OAAAoC,IACF,OAApB4hB,OAAoB5hB,IACR,CAAM6B,MAAK+X,QAAUhc,OAAEoC,EAAA,IAGtBsK,EAAe1M,OAAAoC,GAC5B6L,OAAOmH,EAAAA,QAAaxS,EAAAA,EAGbwS,EAAoBvJ,KAAE4K,EAAUhK,OAAK2W,CAAAA,EAE5BljB,KAAG+hB,MAAA5P,GAAA,oBAAAoE,EAAA8D,WAAA9D,EAAA,CAAA,CAAA,GAQf+E,EAAIpG,EAAmB3P,KAAA,EAAA,CA2hB/B,CAGA,OAzhBYwe,IAAAA,OAASH,IAAQ,sBAAa,CAClCtI,QAAAA,CA0hBR,CAAC,CACL,CACJ,EAEAnB,aAAa9D,OAxhBY6O,QAAM,CA0hB3BxC,IAAK,GACLjM,MAAO,GACPsL,MAxhBa,KAyhBbY,OAvhBYoB,GAwhBZoB,eAthBgB,GAuhBhBtP,SAphBkBK,CAqhBdvC,KAphBgB,UAqhBhBzR,KAAM,KACNiiB,MAAO,KACPnO,WAphBwBiN,KAqhBxBrN,MAAO,KACPiN,WAphBoB,KAqhBpB3P,YAphBgB,KAqhBhB4P,UAphBc,KAqhBdsB,OAnhBS,KAohBT3O,KAnhBY,CAohBR0J,MAnhBY8D,2CAohBhB,EACAW,SAnhBYG,KAohBZ5K,SAnhBQ,KAohBRkL,SAlhBeN,KAmhBf1I,KAlhBY8G,CAAAA,EAmhBZnH,OAlhBU,IAmhBd,EASAkF,KA5gBQ5J,SAAOpB,EAAAA,EAAY9J,GAEnBtD,KAAAA,MAAQ/H,EA6gBZC,KA5gBQ0C,IAASohB,EAAAA,MAAe,EAAA,WAAAphB,EAAA8J,eAAA,MAAA,EAAA9J,EAAAR,KAAAkJ,GA6gBhCpL,KA5gBQijB,OAAanO,kBAAEmO,cAAAA,EAAAA,CAAAA,EACnBjjB,KAAA6V,SAAAf,kBAAAQ,kBAAAvV,EAAAC,KAAA6V,SAAAnT,CAAA,EACF1C,KAAAyW,MAAA3B,kBAAAoD,SAAA,EAETtD,IAAA0F,EAAAta,KAIMD,EAAIoS,GAAA,oBAAA,WACEmI,EAAAzE,SAAAsD,UACEmB,EAAA4H,YAAA,CAEXS,CAAAA,EAEUjgB,EAAO8J,eAAA,SAAA,GACH,UAAJ,OAAI9J,EAAAA,SACLqB,MAAMC,QAAAtB,EAAAA,OAAA,GAEN8S,EAAEU,KAAIxT,EAAAA,QAAA,SAAA6J,EAAA2W,GACDtO,IAAE1S,EAAIghB,EAAA1W,eAAA,MAAA,GAAA,GAAA,CAAA,SAAA,UAAAnB,QAAA,OAAA6X,EAAAhhB,IAAA,EACHghB,EAAIhhB,KACF,GACHyR,EAAAuP,EAAA1W,eAAA,MAAA,GAAA,UAAA,OAAA0W,EAAAvP,KACNuP,EAAAvP,KACK,OACVwO,EAAAe,EAAA1W,eAAA,MAAA,GAAA,UAAA,OAAA0W,EAAAzN,MAAA,CAAA1R,MAAAC,QAAAkf,EAAAzN,IAAA,EACayN,EAAAzN,KACA,GACA2P,EAAAlC,EAAA1W,eAAA,OAAA,GAAA,UAAA,OAAA0W,EAAAkC,OAAArhB,MAAAC,QAAAkf,EAAAkC,KAAA,EACJlC,EAAAkC,MACF,GACXC,EAAAnC,EAAA1W,eAAA,QAAA,GAAA,GAAA,CAAA,SAAA,WAAAnB,QAAA,OAAA6X,EAAAmC,MAAA,EAGDnC,EAAAmC,OACJ,IACAC,EAAApC,EAAA1W,eAAA,QAAA,GAAA,GAAA,CAAA,SAAA,WAAAnB,QAAA,OAAA6X,EAAAoC,MAAA,EACApC,EAAAoC,OACA,IAEoBvlB,IAEIA,EAAImC,KAAAA,GAEJ4S,EAAAA,WACAA,EAAAA,SAAkBC,YAKtC,WAAApB,EACJwO,EAAAhD,MAAAgD,EAAA3V,eAAA,OAAA,EACA,8BAAA2V,EAAAhD,MACA,6BAEsC,WAAVxL,GACvBwO,EAAAhD,MAAAgD,EAAA3V,eAAA,OAAA,EAGD,oBAAA2V,EAAAhD,MACJ,mBAEAgD,EAAAxO,KAAA,WACcwO,EAAUvD,MAAYyG,IAKflD,EAAQ1L,MACjB0L,EAAKY,eACR,OAAA,EACJ,gCAAAZ,EAAAhD,MAGD,+BAEJgD,EAAAxO,KAAAA,GAKK2G,EAAA6K,eAAAxZ,KAAA,CAGDgI,KAAAA,EACJzR,KAAAA,EACAuT,KAAA0M,EACAiD,MAAAA,EACoBhD,OAAQiD,EAElBC,OAAkBA,CACvB,CAAA,CAGD,CAAA,CAEJ,EAYAxJ,WAAA,WACA,OAAAtG,EAAAG,OAAA,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CACIoK,EAyfA9G,SA/eW,SAAAyF,GAEP5e,KAAA2iB,OAAA3iB,KAAAse,SAAA,EACHte,KAAA6V,SAAAsD,SAAA,CAAA,CAAAyF,EAILpJ,EAAA,YAAAxV,KAAAyW,KAAA,EAAA8E,KACAvb,KAAA+iB,cAAA,CACA,EAEc/iB,KAAA6V,SAAUmG,UAEZhc,KAAK6V,YAASsD,CA8etB,EAOA0F,KAzeQyF,SAAMd,GAGNc,EAAAA,gBAAkBtkB,KAAA0iB,GAAA,EAAY7D,KAACuD,CAAA,CAyevC,EAOA/G,KAteK,SAAM+G,GAEHkC,EAAAA,gBAAetkB,KAAA0iB,GAAa,EAAArH,KAAA+G,CAAA,CAuepC,EAOA9D,SAneY,WAEJ,GAAAte,KAAA6V,SAAAsD,SACJ,OAAAnZ,KAAA2iB,OAIJ,CACJ/N,IAAAyO,EAAA7N,EAAA,YAAAxV,KAAAyW,KAAA,EACA7B,IAAA5M,EAAA,GAoBYtF,OAlBD8S,EAAE,oEAAY6N,CAAA,EAAAnN,KAAA,WAERtB,IAAKwQ,EAAA,GAGHd,EAAAA,KAAQ9O,EAACxV,IAAA,EAAAif,KAAS,eAAA,EAAAsG,eAAA,EAAA,SAAAhZ,EAAAiZ,GAC7BA,EAAAtjB,OAEWkjB,EAAAI,EAAAtjB,MAAAsjB,EAAA3a,MAIf,CAAA,EAEJ7C,EAAA2D,KAAAyZ,CAAA,CACA,CAAA,EAGmBpd,CACX,CA4dJ,EAOAiY,SA1dM,SAAApV,GAIN,UAAA,OAAAA,GACJ9G,MAAAC,QAAA6G,CAAA,GACA,OAAAA,IAUI7K,KAAA2iB,OAAAhX,KAAAd,CAAA,EAEJ7K,KAAA6V,SAAAsD,SACA3D,EAAA,YAAAxV,KAAAyW,MAAA,mCAAA,EAAAqG,OACA9c,KAAAylB,mBAAA5a,CAAA,CACI4Z,EAGQJ,KAAAA,UAAiBxZ,CAAA,EAodzB,EAQAuO,SA3cY3D,SAAUuG,EAAQ2G,GAGtBjgB,IAKAA,EALAA,KAAQ+S,SAAOX,YAKfpS,EAAQkhB,EAAQ,YAAE5jB,KAAAyW,KAAA,GAEtBwI,KAAA,eAAA,EAAArR,OAAA,EAGAyV,EAAY7W,KAAAA,cAAe,EAAAoB,OAAW,EAMnByW,OAAbnO,IAKI8F,EAMV,UAAA,OAHgBrW,EADM,KAAA,IAADA,GAAC,UAAA,OAAA3F,KAAA6V,SAAA6N,UACJoB,KAAAA,SAAmBpB,UAGrC/d,IAEOjD,EAAYoa,OAAE,kCAAuBnX,EAAA,QAAA,GAK1B,KAAA,IAAAA,IACQ,UAAV+e,OAAAA,KAAU7O,SAAA8N,YACVhB,EAAM3iB,KAAA6V,SAAA8N,YAEGxiB,CAAAA,GAAUnB,KAAO6V,SAAGsM,WAC3BkC,EAAAA,KAAAA,MAAAA,QAAAA,EAAAA,iBAMtB,UAAA,OAAA1e,GACJ0d,EAAAvG,OAAA,iCAAAnX,EAAA,QAAA,IAGA,EASIqW,QAAA,WAGJ7B,MAAAA,EAAAA,KAAa9D,SAAOqP,UAAS1lB,CAAAA,KAAA6V,SAAAsD,WAElB,EAAAnZ,KAAAse,SAAA,EAAAnd,MAIP0U,EA+bA8P,YAzbc,WAEV/B,EAAAA,gBAAc5jB,KAAA0iB,IAAA,aAAA1iB,KAAAyW,MAAA,mCAAA,EAAAuM,MAAA,CA0blB,EAhbJ4C,WAAA,SAAAC,GAEQjR,IAAE8F,EAAU3a,gBAAoBC,KAAE0iB,IAAA,aAAA1iB,KAAAyW,MAGlCjB,EAAI,IAAIqQ,CAAapL,EAAAA,KAAO,OAAG,WAC1BkI,EAAAA,IAAW7N,CAAAA,EAAAA,OAAAA,EAE4B,IAAlCU,EAAAkF,EAAM5F,mCAA4B,EAAA3T,QAC/CqU,EAAAkF,EAAA,wCAAA,EAAAmE,KAAA,CAIL,CAAA,CACA,EASA/W,OAAA,WAEIqR,IAAQzW,EAAYkc,KAAAA,WAEnB,EAGDiF,EAAA/O,kBAAAsB,iBAAApW,KAAA+hB,MAAArf,CAAA,EAEJ,OAAAtC,IAAA0H,OAAA+M,IAAA,yBAAA,CACA+D,GAAA5Y,KAAA0iB,IACU3iB,KAAA8e,KAAUuD,MAEV5L,KAAAxW,KAAeyW,MACpBH,MAAA5T,EAGD4Y,QAAAtb,KAAA+iB,cAAA,EACJc,aAAAA,CACA,CAAA,CACA,EAUIvF,cAAU,WAMd,OAAAte,KAAA6V,SAAAsD,SACAnZ,KAAAwkB,uBAAA,EACAxkB,KAAAykB,eAAA,CACIxE,EA2aAwE,eA/ZQZ,WAGAjL,IAAIlW,EAAQ1C,KAAA8b,WAAA,EACZ/b,IAAI+lB,EAAQ/D,GACRgE,EAAOtP,GACXH,EAActW,KA4blB,OAzbE0C,EAAA8J,eAAA,SAAA,GACL,UAAA,OAAA9J,EAAAA,SAGDqB,MAAAC,QAAAtB,EAAAA,OAAA,IAGJ8S,EAAAU,KAAAxT,EAAAA,QAAA,SAAA6J,EAAA2W,GACmBpR,EAAAiR,EAAYvW,eAAA,OAAA,GAAA,GAAA,CAAA,SAAA,WAAAnB,QAAA,OAAA6X,EAAApR,KAAA,EAEDoR,EAAKpH,MACH,GAUpBiK,EAAcpa,KAAC2P,CACL5Y,MAAQ4Y,CAEf,CAAI5Y,CACF,CAAEqB,EAIY,UAAfihB,OAAUhlB,KAAK2iB,SAAA5e,MAAAC,QAAAhE,KAAA2iB,MAAA,GAEdnN,EAAKU,KAAIlW,KAAM0C,OAAQ4Y,SAAQna,EAAM6kB,GACT,UAAlBtjB,OAAQ4Y,GAAevX,MAAUC,QAAAgiB,CAAA,GASpClmB,EAAO0M,KAAAA,EAAAA,WAAoBwZ,CAC3B,CAAA,CAIA,CAAA,EAKR5lB,IAAA0H,OAAA+M,IAAA,uBAAA,CACJyB,MAAA5T,EAEA4Y,MAA0B,OAAhB0J,KAAAA,OAAmBhlB,KAAA2iB,OAAA,GACjClL,KAAAzX,KAAA+hB,MAAA/D,QAAA,EAGAlW,OAAWA,CACAie,QAAEzK,EACXwK,KAAAA,CACN,CACH,CAAA,CAED3L,EAyYIqK,uBAjYmB,WAEfL,IAAKzhB,EAAM1C,KAAA8b,WAAA,EACX9F,IAAAA,EAAgB,GACX+P,EAAM,GACXlD,EAAgB7iB,KAmCd,OAhCI0C,EAAM8J,eAAA,SAAA,GACN,UAAA,OAAA9J,EAAAA,SACFyc,MAAOnb,QAAAtB,EAAAA,OAAA,IAGXyW,EAAQjD,KAAExT,EAAIA,QAAA,SAAA6J,EAAA2W,GACApR,EAAAoR,EAAA1W,eAAA,OAAA,GAAA,GAAA,CAAA,SAAA,WAAAnB,QAAA,OAAA6X,EAAApR,KAAA,EACJoR,EAAApR,MACF,GAIZiU,EAAApa,KAAA,CACJmG,MAAAA,CACA,CAAA,CACA,CAAA,EAGmC1G,UAAzB,OAAUrL,KAAM2C,SAAgBqB,MAAAC,QAAAhE,KAAA2iB,MAAA,GAExBnN,EAAAU,KAAUlW,KAAA2iB,OAAA,SAAApW,EAAAyZ,GACW,UAAVvL,OAAOuL,GAAgBtjB,MAAQ8J,QAAAA,CAAe,GAKxDsZ,EAAIna,KAAA2O,EAAAmL,mBAAAO,CAAA,CAAA,CAEP,CAAA,EAIN5lB,IAAA0H,OAAA+M,IAAA,uBAAA,CAEEnS,MAAQ8J,EAIN0J,MAAsB,OAAjBxT,KAAQA,OAAmB6J,KAAK2W,OAAQ,GAC3CzL,KAAQzX,KAAGkjB,MAAO1W,QAAAA,EAGlB1E,OAAQ,CAGJqa,QAAU4D,EAGVX,KAAQlC,CAGZ,CAiXR,CAAC,CACL,EAOAhB,YA1WgBC,WA4WZvN,IAvWYuN,EAAUniB,KAwWtB4U,IApWYuN,EAAU,gBAAkBniB,KAAA0iB,IAAA,aAAA1iB,KAAAyW,MAuWxCjB,EAAEkF,EAnWUyH,sBAA8B3V,EAAAA,MAAAA,WAI9B2V,EAAAA,WAAe3M,EAAG7B,IAAI,EAAA3L,KAAA,SAAA,CAAA,CAiWlC,CAAC,EAGDwN,EAAEkF,EA9VkBxY,mBAAI,EAAAmgB,MAAA,WACZ5M,EAAIwQ,UAAI9D,CA+VpB,CAAC,CACL,EAtVA8D,UAAA,SAAAD,GAEJpR,IAAA0F,EAAAta,KACA4U,IAAA8F,EAAA,gBAAA1a,KAAA0iB,IAAA,aAAA1iB,KAAAyW,MACIqF,EAAUkK,GAAE,GAEX,IAAAxQ,EAAAkF,EAAA,mCAAA,EAAAvZ,QAGDqU,EAAAkF,EAAA,wCAAA,EAAAW,KAAA,EAGJ7F,EAAAkF,EAAA,mCAAA,EAAAoC,OAAA9c,KAAAkmB,WAAAF,CAAA,CAAA,EACI7M,EAAAA,EAAU,kEAAsB,EAAAkJ,MAAA,WAEvBM,EAAMiD,WAAmBtH,EAAAA,IAAS,EAACtW,KAAA,SAAA,CAAA,CACxC,CAAA,CA0VJ,EA3UJke,WAAA,SAAAF,GAGUpR,IAAAuR,EAAkB,GACvBC,EAAA,GAyZG,OArZR5Q,EAAAU,KAAAlW,KAAAmlB,eAAA,SAAA5Y,EAAA2W,GAEAtO,IAAAyR,EAAAL,EAAAxZ,eAAA0W,EAAAhhB,IAAA,EAAA8jB,EAAA9C,EAAAhhB,MAAA,GA+EYigB,GA5EqBO,WAAvBQ,EAAevP,KACpB6B,EAAAU,KAAAgN,EAAAkC,MAAA,SAAA7Y,EAAAiZ,GAGD5Q,IAAA9C,EAAA0T,EAAAhZ,eAAA,OAAA,GAAA,GAAA,CAAA,SAAA,WAAAnB,QAAA,OAAAma,EAAA1T,KAAA,EACJ0T,EAAA1T,MACA,GACA8C,IAAAwO,EAAAoC,EAAAhZ,eAAA,OAAA,GAAA,GAAA,CAAA,SAAA,WAAAnB,QAAA,OAAAma,EAAA3a,KAAA,EAC0B2a,EAAA3a,MAEAsO,GACFwJ,EAAM,GAiClBR,GA7BgB3M,EAAEU,KAAAsP,EAAA,SAAAtjB,EAAA2I,GAEhB,UAAA3I,IACgB6hB,EAAA7hB,GAAA2I,EAGF,CAAC3I,EAGX,UAAA,OAAAmkB,GAAAtiB,MAAAC,QAAAqiB,CAAA,EAEQjB,EAAMlP,KAAAmQ,EAAA,SAAA9Z,EAAA+Z,GAClB,GAAAA,GAAAlD,EAGN,MAAA,EADeW,EAAAwC,SAAA,WAKnB,CAAA,EAEJF,GAAAb,EAAA3a,QACAkZ,EAAAwC,SAAA,YAOY,IACJ/Q,EAAAU,KAAA6N,EAAA,SAAA7hB,EAAA2I,GAEiBA,EAAMc,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CAEdgL,CAAAA,EAIFuQ,EAAAza,KAAA,CACYd,KAAM,EAAAsX,EAAAhhB,OAAA,IAAAghB,EAAA5c,KAAA,GAAA,EAAA,GACzBuM,MAAAA,CACH,CAAA,CAGD,CAAA,EAEJ,WAAAoR,EAAAvP,KACA0S,GAAAnD,EAAAmC,SACAnC,EAAAzN,KAAAwO,QAAA,WAKQ,GAAA,CAAA,SAAA,UAAA5Y,QAAA,OAAAgb,CAAA,IAEanD,EAAKzN,KAAA5K,MAAyB,OAAXwb,EAAWA,EAAA,IAMvC,IAGArK,EAAAA,KAASkH,EAAAzN,KAAA,SAAAvT,EAAA2I,GACLsX,EAAWxW,KAAKzJ,EAAW,KAAI2I,EAAW,GAACgL,CAC3ClQ,CAAAA,EAGAwgB,EAAWxa,KAAK,CAChB0X,KAAUvG,EAAOnJ,KACrB8B,KAAA,EAAA0M,EAAAhhB,OAAA,IAAAghB,EAAA5c,KAAA,GAAA,EAAA,GAEG6f,MAAAgB,CACC,CAAA,CAqTR,CAAC,EAjTQhmB,IAAM0H,OAAW+M,IAAI,2BAAwB,CAC1ClP,SAAOmP,kBAAqB2M,SAAAA,EAChC/e,QAAAyjB,CACJ,CAAA,CAoTR,EAxSJV,mBAAA,SAAAO,GAGQpR,IAAIuR,EAAcvC,GACdnM,EAAY6G,KAAUyD,MAAC5gB,QAAU,EA4WrC,OAzWAqU,EAAAU,KAAOlW,KAAImlB,eAAA,SAAA5Y,EAAA2W,GAIftO,IAAA4R,EAAA,GACJH,EAAAL,EAAAxZ,eAAA0W,EAAAhhB,IAAA,EAAA8jB,EAAA9C,EAAAhhB,MAAA,GAEIyjB,GAAyB,WAAdzC,EAAEvP,KAAY,CAEnBiB,IAAAwR,EAA0B,GAIhC5Q,EAAAU,KAAAgN,EAAAkC,MAAA,SAAA7Y,EAAAiZ,GACJA,EAAAhZ,eAAA,OAAA,GAAA,GAAA,CAAA,SAAA,WAAAnB,QAAA,OAAAma,EAAA1T,KAAA,GACA0T,EAAA1T,MAEgB8C,IAAAwO,EAAkBoC,EAAAhZ,eAAA,OAAA,GAAA,GAAA,CAAA,SAAA,WAAAnB,QAAA,OAAAma,EAAA3a,KAAA,EAEZ2a,EAAA3a,MAEM,GAGA,UAAA,OAAAwb,GAAAtiB,MAAqC5C,QAAWklB,CAAG,EACnD7Q,EAAAU,KAAAmQ,EAAA,SAAA9Z,EAAA+Z,GAChB,GAAAA,GAAAlD,EAEP,OADKgD,EAAAza,KAAAyX,CAAA,EACL,CAAA,CAIL,CAAA,EAEAiD,GAAAb,EAAA3a,OACuBub,EAAAza,KAAA0a,CAAA,CAGXxC,CAAAA,CAGI,MAAKnB,GAAG,WAAAQ,EAAAvP,KAAA,CACLiB,IAAKmN,EAAK,IAEVrf,EAAO8J,eAAA,QAAA,IACL6Y,EAAKtC,EAAcsC,QAGnCmB,EAAAH,GAAAhB,EAGD5N,EAAA4J,WACJ5J,EAAA6J,SAEA,MACIyB,GAA2B,GAAZ,CAAA,SAAY,UAAA1X,QAAA,OAAAgb,CAAA,EAQ3B,OANgBxQ,EAASsD,EAMzB+J,EAAAvP,MACJ,IAAA,OAAA6S,EAAA1R,kBAAA8B,WAAA4P,CAAA,EAAA,MACA,IAAA,iBAAAA,EAAA1R,kBAAAuC,eAAAmP,CAAA,EAAA,MACA,IAAA,QAAAA,EAAA1R,kBAAA0C,gBAAAgP,EAAA/O,CAAA,EAAA,MACoB,IAAAgN,OAAY+B,EAAA1R,kBAAA8C,eAAA4O,EAAA/O,CAAA,EAAA,MAEN,QAACqE,EAAYuK,CACf,CASZF,EAAAxa,KAAA,CACOjJ,MAAQA,CACX,CAAA,CAsRR,CAAC,EAhRStC,IAAA0H,OAAA+M,IAAA,oCAAA,CACJnS,QAAAyjB,CAmRN,CAAC,CACL,CACJ,EAEAhM,aAlRoB9D,OAAI+J,MAAU,CAoR9BsC,IAAK,GACLX,MAAO,KACPC,OAjRc,EAkRdnM,SAjRQ,CACJlC,KAAA,QAEAwQ,MAAO/jB,GACHkW,KAAK,CAAA,EACLzL,gBAAY8X,CAAAA,EACZlL,OAAM,GACN3P,OAAQ,IAiRhB,EArQA0c,KAAAA,SAAAA,EAAsB9hB,EAAE0I,GAGpBpL,KAAI8lB,MAAY/lB,EAChBC,KAAI+lB,OAAY3a,EAChBpL,KAAIsa,IAAcva,EAAA0a,MAAA,EAAA,UAAArP,EAGlBpL,KAAI0C,SAAQ8J,EAAAA,OAAe,CAAA,EAAA,GAAUxM,KACjC6V,SAAOnT,CAAQA,EAIf8S,IAAEU,EAAKxT,KA0QX3C,EArQQgmB,GAAAA,oBAAa,WACTjU,EAAKoQ,YAAEpQ,CAsQnB,CAAC,CACL,EAOAgK,WArQgB,WAsQZ,OApQYgK,EAAKna,OAAK2O,CAAAA,EAAKmL,GAAAA,KAAAA,SAAsB/iB,OAAE,CAqQvD,EAOA4d,SAnQc,SAAE8B,GAqQZxN,IAnQQkR,EAAMA,gBAAAA,KAAAA,IAEZtQ,EAAA6N,EAAA,mDAAA,EAAAG,YAAA,iBAAA,EACLhO,EAAA6N,EAAA,mDAAA,EAAAI,SAAA,kBAAA,EAILjO,EAAA6N,EAAA,8BAAA,EAAAoD,QAAArE,CAAA,CACA,EAwQI/B,OAhQM3F,SAAU0H,GAEVxN,IAAAyO,EAAA,gBAAArjB,KAAA0iB,IAEFlN,EAAA6N,EAAA,mDAAA,EAAAG,YAAA,kBAAA,EACE9I,EAAAA,EAAU,mDAAuC,EAAA+I,SAAA,iBAAA,EAEjDjO,EAAA6N,EAAA,8BAAA,EAAAqD,UAAAtE,CAAA,CACN,EAuQAta,OA7PUke,WAGFxQ,OAAEkF,IAAO5S,OAAG+M,IAAA,yBAAA,CAChB+D,GAAA5Y,KAAA0iB,IAEEhI,KAAU1a,KAAA+hB,MACVrH,MAAU1a,KAAA6V,SACJyF,QAACsK,KAAa7C,cAAW,CAC/B,CAAA,CACN,EAkQAA,cAxPQoD,WAGFjQ,IAAIG,EAAM8O,GAEJkB,EAASrmB,KAmQjB,OAXAwV,EArPQA,KAAEU,KAAKgN,SAAY7M,OAAE,SAAemP,EAAMlP,GAIlC8M,EAAgB9I,EAAC9N,MAAAA,UAAe8J,CAAQ,EAMfzL,UAA3BqL,OAASyI,GAIXtI,EAAE1K,KAAAgT,EAAA7W,OAAA,CAAA,CAgPd,CAAC,EAEMuO,EA7OiBiQ,KAAAA,EAAAA,CA8O5B,EAQApE,YA3OkBhM,WA6Od,GA3OYlW,KAAE6V,SAAA8Q,gBAAA,CAEFP,IAAAA,EAAgBpmB,KACZyV,EAAM0M,gBAAyBniB,KAAMmiB,IAEzC3M,EAAE6N,EAAA,+CAAA,EAAAhB,MAAA,WAGCa,EAAAA,EAAW,gCAAe,EAAAqB,GAAA,UAAA,EAC7B8B,EAAS/F,SAAW+E,EAAAA,EAExB/K,EAAA+F,OAAA,EAAA,CAGA,CAAA,CAyOR,CACJ,CACJ,EAEAlG,aAtOcjE,OAAKgN,OAAa,CAwO5BR,IAtOS,GAuOTX,MArOQoE,KAsORnE,OArOYrO,EAsOZgP,OArOYlN,GAsOZI,SArOYuP,CACJzR,KAAE,SACJzR,KAAA,KAEFuT,KAAOrV,GACHwmB,SAAU9R,KACVpS,OAAO,IAqOf,EASAwd,KAjOQzI,SAAa1X,EAAKgiB,EAAa3W,GAI/BpL,KAAIwmB,MAAWzmB,EACfC,KAAIqmB,IAAcL,EAAIxZ,MAAAA,EAAAA,WAAsBtK,EAAQ8jB,eAAgB,MAAK,EAAAtjB,EAAAR,KAAAkJ,GAEzEpL,KAAIkjB,OAAWpO,kBAAeC,cAAAhV,EAAA2C,CAAA,EA+NlC1C,KA9NQ6V,SAAIuQ,kBAAgB9Q,kBAAAvV,EAAAC,KAAA6V,SAAAnT,CAAA,CA+NhC,EAOAoZ,WAAY,WACR,OAAOtG,EAxNaG,OAAA,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CAyNxB,EAOAyI,SArNgB4E,WAuNZ,OArNQljB,KAAA6V,SAAAsD,SAEAqN,KAAAA,OAIHhR,EAAM,gBAAAxV,KAAA0iB,GAAA,EAAA/U,IAAA,CAkNf,EAOAsS,SAAU,SAnNiCuG,GAqNnC,CAAC,SApNgB,UAAOnb,QAAA,OAAAR,CAAA,EAAA,IAwN5B7K,KAAK2iB,OAvNkC6D,EACvBxmB,KAAA6V,SAAAsD,WAyNZ3D,EAAE,gBAzNiC6Q,KAAAA,GAAS,EAAA1Y,IAAA9C,CAAA,CA2NpD,EAOA/C,OAvNQpF,WAER,OAAAtC,IAAA0H,OAAA+M,IAAA,2BAAA,CACHyG,QAAAtb,KAAA+iB,cAAA,CAED5I,CAAAA,CAEIuI,EA4NAK,cArNI4D,WAEA3L,IAAMmH,EAAE,GACXvN,IAAAlS,EAAA1C,KAAA8b,WAAA,EAkCL,OA9BApZ,EAAA8J,eAAA,MAAA,GACA,UAAA,OAAA9J,EAAA+S,MACA,OAAA/S,EAAA+S,MACA1R,CAAAA,MAAAC,QAAAtB,EAAA+S,IAAA,IAEU/S,EAAU3C,KAAM2C,IAKlBA,EAAKmT,KAAQ+C,GAAKjD,eAAiB3V,KAAK6V,IAInC1D,EAAGjQ,OACAQ,EAACwf,KAAYhgB,KAACQ,EAAAR,MAK1BQ,EAAA+S,KAAA9B,KAAA,SACJjR,EAAA+S,KAAA5K,MAAA,OAAA7K,KAAA2iB,OAAA3iB,KAAA2iB,OAAA,GAGI7G,EAAAA,KAAUpZ,EAAE+S,KAAY,SAAAvT,EAAA2I,GACpBsX,EAAgBxW,KAAMzJ,EAAI,KAAK2T,EAAUnT,GAAAA,CAC5C,CAAA,EAILtC,IAAA0H,OAAA+M,IAAA,sBAAA,CACAhK,MAAA,OAAA7K,KAAA2iB,OAAA3iB,KAAA2iB,OAAA,GACArM,MAAA5T,EACYoF,OAAE,CAEFub,KAA8B,EAAlBlB,EAAAhhB,OAAuBuhB,IAAGP,EAAA5c,KAAA,GAAA,EAAA,EAExC8d,CACAA,CAAAA,CA2MN,CACJ,EArMAlJ,aAAA9D,OAAAiO,MAAA,CAEA5B,IAAA,GACIrC,MAAM,GAwMN0B,MAtMQsB,KAuMRrB,OArMMqB,EAsMNV,OArMMU,GAsMNxN,SApMMwN,CACL1P,KAAA,OAGDzR,KAAA,KACJiiB,MAAA,KACAnO,WAAA,KACAJ,MAAA,KACI9N,WAAQ,KAEJoL,YAAWpL,KACP8Q,UAAS8J,KACT3iB,OAAO,KACPqgB,KAAK,CACL9E,MAAS,6CACX,EACLsI,SAAA,KAGDD,YAAA,KACJD,UAAA,KACAvK,SAAA,KACAkL,SAAA,KACItB,KAAAA,CAAAA,EAEI/H,OAAU,IA+Ld,EAhLAkF,KAAC,SAAAngB,EAAA2C,EAAA0I,GAKLpL,KAAA+hB,MAAAhiB,EACAC,KAAAgiB,OAAA5W,EACApL,KAAA0iB,IAAA3iB,EAAA0a,MAAA,EAAA,WAAA/X,EAAA8J,eAAA,MAAA,EAAA9J,EAAAR,KAAAkJ,GACI8W,KAAAA,MAAapN,kBAAYoD,SAAA,EAErBlY,KAAI2iB,OAAcgE,kBAAiB5R,cAAAhV,EAAA2C,CAAA,EAC/B1C,KAAIsa,SAAgBxF,kBAAAQ,kBAAAvV,EAAAC,KAAA6V,SAAAnT,CAAA,CAsL5B,EAOAoZ,WAnLU,WACN,OAAAtG,EAAAG,OAAA,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CACJ,EASAA,SAAU,SAAA+I,GAEN1c,KAAMygB,OAAI3iB,KAAAse,SAAA,EACV7I,KAAOI,SAACsD,SAAA,CAAA,CAAAyF,EAER5D,EAAAA,YAAQhb,KAAAyW,KAAA,EAAA8E,KACXvb,KAAA+iB,cAAA,CAGD,CACJ,EAsLIlE,KA9KQ,SAAY9e,GAEhByV,EAAI,gBAAYV,KAAAA,GAAAA,EAAAA,KAAkBQ,CAAAA,CACtC,EASA+F,KAAC,SAAA+G,GAIL5M,EAAA,gBAAAxV,KAAA0iB,GAAA,EAAArH,KAAA+G,CAAA,CACA,EAYA9D,SAAA,WAEI2B,OAAUjgB,KAAA6V,SAAesD,SAEhBnZ,KAAQ2iB,OACTnN,EAAA,YAAAxV,KAAAyW,MAAA,QAAA,EAAA9I,IAAA,CAqKR,EAzJJsS,SAAA,SAAApV,GAEA,CAAA,SAAA,UAAAQ,QAAA,OAAAR,CAAA,EAAA,IAKU7K,KAAA2iB,OAAA9X,EAIN7K,KAAA6V,SAAAsD,SACJ3D,EAAA,YAAAxV,KAAAyW,KAAA,EAAA9Q,KAAAkF,CAAA,EAEA2K,EAAA,YAAAxV,KAAAyW,MAAA,QAAA,EAAA9I,IAAA9C,CAAA,EA+JI,EAQAuO,SApJI,SAAA4C,EAAArW,GAGAjD,IAOA2gB,EACIxY,EARJnI,KAAQ+S,SAAU0D,WAOlBkK,EAAkBxO,EAAAA,YAAI7U,KAAAyW,KAAqB,EACvC5L,EAAY8X,EAAM,QAASU,CAAQV,EAEnC7a,EAAQmX,KAAA,iBAAA,EAAArR,OAAA,EAiJZyV,EAhJclB,KAAAA,mBAAyB,EAAGvU,OAAGuU,EAE3C,OAAAnG,GACNsI,EAAAd,YAAA,YAAA,EACHc,EAAAd,YAAA,UAAA,GAIUxH,GACAsI,EAAEd,YAAA,YAAA,EACFc,EAAIb,SAAA,UAAA,EAMI,UAAJ,OAHD9d,EADA,KAAA,IAAAA,GAAA,UAAA,OAAA3F,KAAA6V,SAAA6N,UACA1jB,KAAA6V,SAAA6N,UAGK/d,IACD0d,EAAMvG,OAAA,+BAAAnX,EAAA,QAAA,IAGhBuN,EAAWsQ,YAAM,UAAA,EACjBV,EAAWW,SAAI,YAAA,EAET,KAAA,IAAA9d,IACK,UAAA,OAAA3F,KAAA6V,SAAA8N,YACVhe,EAAA3F,KAAA6V,SAAA8N,YAEgB,CAAAhe,GAAA3F,KAAA6V,SAAA+N,WACNje,EAAI3F,KAAA+hB,MAAA/D,QAAA,EAAAyD,iBAIP,UAAA,OAAA9b,GACX0d,EAAAvG,OAAA,iCAAAnX,EAAA,QAAA,GAKL,EAmJIqW,QA3IS0G,WAEL9N,IAAK+N,EAAW7N,EAAAA,YAAAA,KAAkBC,MAAAA,QAAkB,EAEvD,OAAAuP,EAAA,GAGDA,EAAAC,GAAA,QAAA,EAGJ,IACIzI,EASA3C,OAAQ,WAGJvE,IAAKiB,EAASsD,KAAY2C,WAAY,EAEpC+H,EAAmBpN,kBACZsM,iBACR/iB,KAAA+hB,MAAArf,CAAA,EAIL,OAAAtC,IAAA0H,OAAA+M,IAAA,yBAAA,CACJ+D,GAAA5Y,KAAA0iB,IACA3iB,KAAAC,KAAA+hB,MACAvL,KAAAxW,KAAAyW,MACUH,MAAAuI,EAEAvD,QAAAtb,KAAkB+iB,cAAc,EACrCc,aAAAA,CAGD,CAAA,CACJ,EAUAd,cAAA,WAEA,OAAA/iB,KAAA6V,SAAAsD,SACcnZ,KAAAwkB,uBAAY,EAEXxkB,KAAK6V,eAASsD,CAGzB,EA+HAsL,eArHQ,WAGJ7P,IAAK+N,EAAc,GAEf0B,EAAclL,GACd3D,IAAE9S,EAAc1C,KAAKyW,WAAY5L,EACpC6Z,EAAM5P,kBAAAoD,SAAA,EAoEP,OAlEAxV,EAAA8J,eAAA,MAAA,GACH,UAAA,OAAA9J,EAAA+S,MAGD,OAAA/S,EAAA+S,MACJ1R,CAAAA,MAAAC,QAAAtB,EAAA+S,IAAA,IAEA/S,EAAA+S,KAAA,IAIY/S,EAAKmT,OACLnT,EAAA+S,KAAAvT,KAAAlC,KAAA6V,SAAA3T,MAIJQ,EAAS+S,KAAS9B,KAAS0P,EAAAA,KAE3BA,EAAUpE,KAAKpU,MAAmB+C,OAAnB5N,KAAA2iB,OAA2B3iB,KAAA2iB,OAAA,GAGtC3G,EAAOpG,QACP0O,EAAMd,KAAY1O,kBAAaY,UACzB8N,CAAAA,MAAW,SAAW9gB,EAACkT,KAAA,EAE1BlT,EAAW+S,IACd6O,GAII3e,EAAOie,WACXlhB,EAAA+S,KAAAmO,SAAA,YAKHlhB,EAAM8J,eAAA,UAAA,GAC0B,UAA7B8X,OAAMd,EAAYa,UAClBC,MAAMb,QAAS/gB,EAAA2hB,QAAa,IAGxB3hB,EAAI+S,KAAWhI,KAACoI,EAGfL,EAAAU,KAAMxT,EAAW2hB,SAASxO,SAAS+N,EAAQiB,GACpCjQ,IAAGkQ,EAAW9G,GAE1BxI,EAAAU,KAAA2O,EAAA,SAAA3iB,EAAA2I,GAEWlF,EAASgG,KAAUzJ,EAAA,KAAA2I,EAAA,GAAA,CAC1BwY,CAAAA,EAERgB,EAAA1Y,KAAA,CACH8J,KAAA,EAAAqP,EAAA3jB,OAAA,IAAA2jB,EAAAvf,KAAA,GAAA,EAAA,EAGD,CAAA,CACJ,CAAA,GAGIyW,EAAAA,KAAStZ,EAAA+S,KAAY,SAAAvT,EAAA2I,GAEbyZ,EAAU3Y,KAAAzJ,EAAc,KAAKuU,EAAQ,GAAA,CAEzC,CAAA,EAEArW,IAAA0H,OAAA+M,IAAA,qBAAA,CAEAyB,MAAW5T,EACdgiB,WAAAA,EAGD7Z,MAAA,OAAA7K,KAAA2iB,OAAA3iB,KAAA2iB,OAAA,GACJ7a,OAAA,CACA2N,KAAA,EAAA0M,EAAAhhB,OAAA,IAAAghB,EAAA5c,KAAA,GAAA,EAAA,GACA8e,SAAAA,CACY,CAEJ,CAAA,CAgGJ,EAOAG,uBA9FsBX,WAErBjP,IAAAlS,EAAA1C,KAAA8b,WAAA,EAGDlH,IAAAjB,EAAA,OACJ9I,EAAA7K,KAAA2iB,OACA/N,IAAA6C,EAAAzX,KAAA+hB,MAAA/D,QAAA,EAEI+E,EAAevW,eAAY,MAAA,GAAA,UAAA,OAAA9J,EAAAiR,OAEvBA,EAAYkC,EAASsD,MAO7B,IACA,OAAAxF,GACA,IAAA,OAAA9I,EAAAiK,kBAAA8B,WAAA/L,CAAA,EAAA,MACI4Z,IAAgB,iBAAY5Z,EAAAiK,kBAAAuC,eAAAxM,CAAA,EAAA,MAEpBsX,IAAU,QAAOtX,EAAAiK,kBAAA0C,gBAAA3M,EAAA4M,CAAA,EAAA,MACjB4M,IAAe,OAAExZ,EAAAiK,kBAAA8C,eAAA/M,EAAA4M,CAAA,CACjB/U,CAWJ,CARK,MAAEA,GAKHA,QAAYkb,MAAKtd,CAAA,CAGrB,CAEA,OAAAF,IAAA0H,OAAA+M,IAAA,qBAAA,CAEAnS,MAAaiR,EACbjR,MAAamI,EAETnI,KAAQkT,KAAKa,KACb/T,CAAAA,CA+ER,CACJ,EAyCC,SA9DOjD,EAAAonB,EAAAC,GAGgB,YAAZ,OAAAlnB,QAAYA,OAAAC,IA8DhBD,OA7Da,CAAA,UAAMH,CAAA,EAAoBqV,UAARjK,OAAQiK,SAAmC,aAAjB8B,OAAW/L,OA+DpElL,OA/D4ED,QAAAD,EAAAmB,QAAA,QAAA,CAAA,EAiE5EnB,EAhE+BoL,GAAQiK,CAAAA,CAmE9C,EAAC,SAlEqCjK,GACAA,SAoE/Bkc,EApEuCjS,EAAAA,EAAAA,GACnC,IA6VYkS,EA7VZ/lB,EAAA,CAEFgmB,QAAU,GACRrf,SAActH,WACd,IACJ,IAAA4mB,EAqEgBC,EAAM,EAnEJtS,EAAIuS,EAAAnkB,IAAA,CAAA,EACJokB,EAAA5L,SAAA6L,UACFC,EAAAC,EAAAC,eAaxB,OAVIJ,GAAA,CAAA,IAAAK,UAAAC,WAAAtc,QAAA,SAAA,IACH6b,EAAAG,EAAAO,YAAA,GAqE2BC,UAAU,YAAa,CAAC5mB,EAAE0M,IAAI,EAAExM,MAAM,EAnElEgmB,EAAAD,EAAAvhB,KAAAxE,QAGAomB,CAAAA,GAAA,MAAAA,IACAJ,EAAAI,GAGAJ,CACA,CAAA,MAAA7mB,IACA,EACAwnB,SAAA,SAAAX,GACA,IACA,IACAY,EAAAP,EADAJ,EAAA7C,GAAA,QAAA,KACAiD,EAAAJ,EAAAnkB,IAAA,CAAA,GAGA+kB,kBACAR,EAAAQ,kBAAAb,EAAAA,CAAA,IAEAY,EAAAP,EAAAS,gBAAA,GACA3H,SAAA,CAAA,CAAA,EACAyH,EAAAG,QAAA,YAAAf,CAAA,EACAY,EAAAF,UAAA,YAAAV,CAAA,EACAY,EAAAI,OAAA,GAGA,CAAA,MAAA7nB,IACA,EACA8nB,OAAA,WACAhB,EACAjV,GAAA,eAAA,SAAA7R,GACA8mB,EAAApf,KAAA,eAAA1H,EAAA+nB,SAAA/nB,EAAAgoB,KAAA,EAqEoBlB,EAAGpf,KAAK,qBAAsBof,EAAGzZ,IAAI,CAAC,EAnE1DyZ,EAAApf,KAAA,yBAAA/G,EAAAsnB,SAAA,CAAA,EACAtnB,EAAAunB,mBAAAvnB,EAAAwnB,eACA,CAAA,EAqEiBtW,GAAGqD,EAAEkT,aAAaC,SAAW,aAAe,aAAc1nB,EAAE2nB,SAAS,EAnEtFzW,GAAA,uBAAA,WACAvB,WAAA,WACoBiW,EAAAA,QAAa,EAAEgC,MAAA,CAEpBjpB,EAAM,GAAK,CACV,CAAA,EACDuS,GAAA,cAAmB,WACZiV,EAAG3nB,KAAAA,UAAgB,CAAA,CAAA,CAC9B,CAAA,EACKonB,GAAM,YAAU,WAC5BiC,IAAA7nB,EAAA0M,IAAA,GAAAyZ,EAAApf,KAAA,SAAA,GAEWof,EAAA2B,QAAA,QAAA,EAoEK3B,EAAGpf,KAAK,UAAW,CAAA,CAAK,CAjE7B,CAAA,EAIKmK,GAAE,YAAY,WACd2W,EAAA7nB,EAAA0M,IAAA,CACIuZ,CAAAA,EAEAM,GAAI,aAAY,SAAAlnB,GACS,CAAA,IAAlBmb,EAAS6L,eACP9R,EAAGgS,EAAAA,MAAKC,EAAAA,OAAAA,CAErB,CAAA,EAEOtV,GAAGkV,gBAAiB,WACnBQ,EAAUmB,iBAAsB7nB,CAAAA,EAAO8I,KAAAhJ,EAAA0M,IAAA,CAAA,GAClC1M,EAAC0E,IAAKxE,EAAAA,CAEnB,CAAA,CAAA,EAmER8nB,aAjEkB1B,WAIZ,IAHE,IAAA2B,EAAAC,EAAAC,EAAAC,EAAAhpB,EAAAipB,EAAA,GAGS5oB,EAAA,EAAAA,EAAA6oB,EAAApoB,OAAAT,CAAA,IAChB8oB,EAAAC,EAAAD,YAAAD,EAAAra,OAAAxO,CAAA,KAIoBwoB,EAAAM,EAAAN,QAAA/lB,SAAA,EAAAC,QAAA,eAAA,EAAA,EAASgkB,EAASoC,EAAAL,UAkE3BC,EAAYI,EAAYJ,YA9DfpB,EAAkBb,KAAKA,EAAIjY,OAAAxO,CAAA,CAAA,EAC7B2oB,EAAA,CAAAK,MAAAH,EAAAra,OAAAxO,CAAA,EAAAwoB,QAAAA,CAAA,GACSI,EAACrB,KAAgBkB,GAACC,EAAAF,EAAA,IAAAA,CAAA,GAIxBf,EAAQxc,KAAA4d,EAAAra,OAAAxO,CAAA,EAAA0C,QAAA,yBAAA,MAAA,CAAA,EAatBoS,OATPnV,EAAAipB,EAAA/jB,KAAA,EAAA,EAGO8jB,IACQhpB,EAAAA,EAAA+C,QAAc,IAAIilB,OAAO,IAAMC,EAAMoB,MAAA,MAAAL,EAAAK,MAAA,KAAA,EAAA,OAAA,EACrCtmB,QAAA,IAAAoG,OAAyBmE,EAAM+b,MAAA,GAAA,EAAAL,EAAAH,OAAA,GAIrCR,IAAAA,OAAaC,CAAAA,CAEf/X,EAgER+Y,cA/DyBd,WACdzB,EAAI9U,IAAA,CAAA,QAAA,UAAA,QAAA,QAAA,OAAA,OAAA,WAAA,IAAA/M,KAAA,QAAA,CAAA,CACT,EAEE6hB,IAAGpf,SAAK1F,GAER,IACIwmB,EADS1B,EAAA7C,GAAA,OAAU,EACC,MAAQvc,OAOhC3H,EAJyB,EAAjB0C,UAAS5B,QACpBimB,EAAAtO,GAAA,IAAAxW,GACD8kB,EAAAtO,GAAAxW,CAAA,EAEI8kB,GAEHA,EAAAtO,GAAA,EAGOpW,OAAOrC,CA8DnB,EA5DQupB,uBAAA,SAAAC,GACH,IAAAC,EAAA7oB,EAAA8oB,UAAA,EACDC,EAAA/oB,EAAAsnB,SAAA,EACI,GAAAsB,IAAiBC,EAAA,CAO8B,IAN3CpnB,IAAQsmB,EAAAA,EAAehhB,KAAKgf,wBAAyB,GAAA,EAC7CiD,EAAAH,EAAA3oB,OACb+oB,EAAAL,EAAA1oB,OACDgpB,EAAA,EACLC,EAAA,EACaC,EAAW,EACPC,EAAK,EAAa5pB,EAAA,EAAmBA,EAAAspB,EAAAtpB,EAAAupB,GAAWhpB,EAAAwnB,gBAAA/nB,GAAXA,CAAA,GAErC0pB,CAAoB,GAK1BlB,IAAUM,EAAAA,EAAmB,EAACrmB,GAAAA,GACnBqmB,EAAAA,gBAAoB9oB,GADSA,CAAC0C,GAKrCkmB,CAA6B,GACQJ,IAAOxoB,EAAEwoB,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,GAAQjoB,EAAAwnB,gBAAA/nB,IACnD2pB,CAAA,GAKPf,IAAW3d,EAAI4e,EAAc,EAAEnnB,GAAAA,EAAQ1C,CAAA,GAC3CO,EAAAunB,mBAAA9nB,IACJ4pB,CAAA,GASoBJ,EAAT1gB,EACdwgB,EAAA,GAAAC,EACyBD,GAAXO,GAAWA,IAAAL,EACLjpB,EAAAunB,mBAAoBwB,KACxCQ,EAAAR,EAGuB/oB,EAAGwnB,gBADPuB,EADHA,GAAAM,EAAAD,GACeF,KAEvBH,EAAAQ,IAKDD,EAAAP,IAEGA,EADGA,GAAAK,EAAAC,GACHF,EAEP,CAEA,OAAQJ,CACX,EACDJ,UAAAA,SAAwBtpB,GAChBwpB,EAAMxpB,GAAKypB,OAAAA,MACXC,EAAAA,QAAgBzB,GAEZgC,IAIAH,EACAC,EALAE,EAAcnD,EAAGpf,KAAK,cAAA,EAEtBkiB,GAAuB,CAAA,IAAvBA,EAAOO,QAASpC,EAAOoB,EAAAiB,UAAA,EAejB,OAdNP,EAAAA,EAAqBJ,UAAI,EACzBK,EAAoBnpB,EAAGsnB,SAAC,EACxB8B,EAAAA,EAAAA,KAA2B,oBAAC,GAAA,GAKtBzZ,WAAC6X,WACHxnB,EAAA6mB,SAAA7mB,EAAA2oB,uBAAAC,CAAA,CAAA,CACJ,EAAArU,EAAAkT,aAAAiC,qBAAA,EAEJ1pB,EAAA0M,IAAAmc,CAAA,EAEM7oB,EAAG+oB,SAAAA,CAAkB,EAChBvB,EAAAA,UAAkBnoB,CAAA,CA2DrC,EACAypB,UAzDYI,SAAAA,EAAuBxc,GAgC/B,IA/BI,IAUQ2c,EAoBRM,EA9BAC,EAAA,GAEMhgB,EAAkByC,KAAAA,IAAf0c,EAA0B/oB,EAAE0M,IAAE,EAAAA,EAAA,GAC7B8a,EAAAA,EAAAA,EAAiBc,EAAGpoB,OACtBkpB,EAAAA,EAAAA,EAAAA,EAA0BlpB,OAC9Bue,EAAA,EAAAoL,EAAA,OACJC,EAAA,CAAA,EAEMC,EAAkB,EACdxC,EAAkB,GAUlBgC,EAiDV9nB,EAAQuoB,SAtDRH,EAAA,UACId,EAAW,CAAGE,EAChBF,EAAqB,EAChBkB,EAAIX,EAAW,EACZjoB,EAACkmB,EAAAA,EACO,WACZwB,MAAeM,CAAAA,EAAAA,GAAAA,CAAAA,EAAAA,CACfN,IAEEA,EAAcQ,EAAQ,EACxB,WACF,OAAAU,EAAAC,GAAA7oB,EAAA8oB,CAEC,GAITC,EAAA,GAAA,CACOrB,IAAAA,EAAWT,EAAAra,OAAAgc,CAAA,EACrBI,EAAAzgB,EAAAqE,OAAA5M,CAAA,EACUknB,EAAYC,EAAAD,YAAA+B,GAEL/B,GAEGxhB,EAAKnE,MAAA2lB,EAAeN,OAAA,GAEvBb,EAAOyC,GAAQJ,CAAW,EACrBX,EAAWX,YACC,CAAA,IAAD2B,EACLA,EAAAG,EAqDEA,IAAMM,GAAgBN,IAAMH,IAnDnDG,EAAAH,EAAArL,GAGekK,IAAuBC,KACpBc,GAAAA,GAITc,GAAY/L,GACzB4L,IAAAV,GAIoBtd,CAAcK,GACzBid,EAAAtd,KAAAA,GAAuBkc,EAAAL,UACvB+B,GAAAxL,EAAiBve,GAAMue,GAClB8J,EAAAkC,UAAcb,EAAMC,GAAAtB,EAAAkC,QAAA,EACjBR,GAAAxL,EACCpd,GAAIod,GAENze,EAAAgmB,QAAAtb,KAAA,CAAA1K,EAAAqB,EAAAA,EAAAgpB,EAAAhrB,EAAAkpB,EAAAN,OAAA,CAAA,EAGJ+B,GAAOvL,IAEJiM,GACKd,EAAAC,GAAAS,CAAA,EAGRD,IAAYC,GACHK,EAAUjgB,KAAArJ,CAAA,EAC1BA,GAAAod,IAEcyL,EAAWI,EAClBK,EAAYjgB,KAAArJ,EAAA0oB,CAAA,EACLG,CAAeC,IAI9BR,GAAAA,EAEIW,CAEA/B,EAAoBA,EAAWta,OAACqc,CAAU,EAE1C/B,IAAa4B,EAAA,GAAA3B,EAAAD,YAAAqC,IACTP,EAAAA,KAASznB,CAAkBqlB,EAGvBY,EAAIiB,EAAQxlB,KAAO,EAAE,EAqDrC,OADAtE,EAAE6qB,sBAnD8BhC,EAAA8B,EAAAR,CAAA,EACftB,CAoDrB,EACAgC,sBAnDoB,SAAAhC,EAAA8B,EAAAR,GAoDlB,IAlDkBW,EAAIP,EAAYP,QAAanB,EAAE3oB,OAAAiqB,EAAA,EAmDjDnqB,EAAEwnB,gBAlD+B,GAmDjC,IAlDkB,IAAA/nB,EAAA,EAAAA,EAAAkrB,EAAAzqB,OAAAT,CAAA,GACJO,EAAAwnB,gBAAAmD,EAAAlrB,GAAAqrB,GAAA,CAoDhB,EACAN,UAlDgB,SAAAnrB,GAIAsqB,SAAAA,EAAwB1oB,EAAGoL,EAASjF,GACP,YAAtBmhB,OAAAA,EAAYL,IAAU6C,GAClBtpB,EAAAR,GAAAsI,MAAAxK,KAAAqI,CAAA,CAEd,CAPG,IAAAsF,EAAA1M,EAAA0M,IAAA,EACAse,EAAAte,IAAAmb,EACAkC,EAAgB,CAAArd,EAAArN,EAAA8mB,EAAA1kB,GAOhBwoB,EAAKxL,WAAM,CAAA,GAAAuM,EAAAC,CAAA,EACX5pB,EAAKod,aAAM,CAAA,GAAAuM,EAAAC,CAAA,EACdpM,EAAM,aAAAnS,EAAAxM,SAAAooB,EAAApoB,OAAA+qB,CAAA,EACLjrB,EAAS,YAAM,EAAAA,EAAAgmB,QAAA9lB,OAAA,CAAAwM,EAAArN,EAAA8mB,EAAAnmB,EAAAgmB,QAAAvkB,EAAA,CAmD7B,CACJ,EAGI+mB,GADJrC,EAAK5R,EAAE4R,CAtDqE,EAC5DpnB,MAAA8oB,EAAA7nB,EAAA0M,IAAA,EAwDhB4b,EAtDmB,YAAN,OAAMA,EAAAA,EAAAtoB,EAAA0M,IAAA,EAAAL,KAAAA,EAAA8Z,EAAA1kB,CAAA,EAAA6mB,EAyDnBE,EAtDgBF,KAAAA,EAuDhBE,EArDgB/mB,QAAI4oB,EAsDpB7B,EAAM7b,OArDcge,WAsDhB,IArDgBtpB,EAAKod,EAAAA,SAAM,EAYvB,OAXS+J,EAAM/mB,QAAAypB,aACHvB,EAAAA,WAAAA,aAA2BW,EAE3BP,EAAAA,KAAAA,gBAAgB,GACpB5D,EAAAgF,WAAA,WAAA,EAGJnrB,EAAA0oB,cAAA,EACJ1oB,EAAA0M,IAAA8b,EAAA4C,YAAA,CAAA,EAEAprB,EAAI4qB,SAAAA,CAAAA,EACAV,CAoDZ,EAGA1B,EAlDUqC,YAAAA,WACF,OAAOhC,EAAAA,UAAM,CAAA,CAAA,CACjB,EAqDJL,EAlDQhB,aAAe,SAAK9a,GACtB,OAAK1M,EAAK8oB,UAAU6B,CAAAA,EAAAA,CAAAA,CAmD1B,EAEDnC,EAlDMvJ,KAAA,SAAAoM,GAaGxM,GAZJ2L,EAAWa,GAAa,CAAA,EACpB5pB,EAAYiL,GAAK,GAEbue,EAAAA,gBAAyB1W,EAAE9S,aAAQsmB,gBACnClJ,EAAAA,WAAwBtK,EAAEwW,aAAU3jB,WAmD5CohB,EAlDgBD,YAAmBhU,EAACG,OAAK,GAAAH,EAAAkT,aAAsBc,YAAE9mB,EAAA8mB,WAAA,EAoDjEC,EAlDYjU,EAAAG,OAAA,CAAA,EAAA,GAAA8T,EAAA/mB,CAAA,EAGRod,EAAS7e,EAAAgoB,aAAmB,EAE5BnJ,EACAA,EAAQsI,OAAC,EACbnnB,EAAA0M,IAAA1M,EAAA8oB,UAAA,CAAA,MACH,CAESrnB,EAAAypB,aACE/E,EAAI3R,KAAA,cAAA/S,EAAAypB,WAAA,EAKH5C,EAAIvhB,KAAA,MAAA,GACXtF,EAAO+S,KAAG/S,eAAO,KAAA,EAKnB,IAAA,IAAAhC,EAAA,EAAA6rB,EAAA,CAAA,EAAA7rB,EAAA6oB,EAAApoB,OAAAT,CAAA,GAAA,CACY,IAAA8oB,EAAiBC,EAAED,YAAAD,EAAAra,OAAAxO,CAAA,GACxB0rB,GAAW5C,GAAYA,EAAAJ,UAAA,CAC9BmD,EAAA,CAAA,EACgB,KACJF,CACVvE,CAELyE,GAkDWnF,EAAG3R,KAAK,YAAa8T,EAAKpoB,MAAM,EAAE6G,KAAK,iBAAkB,CAAA,CAAI,EA9C9D/G,EAAC8oB,cAAe,EAC1B9oB,EAAAmnB,OAAA,EAEDoE,EAAAvrB,EAAAsnB,SAAA,EACMkE,EAAAA,IAAAA,EAAY1C,UAAG,CAAA,EACV9oB,EAAC8oB,SAAUyC,CAAK,CAC1B,CAEF/C,EAEK/mB,EAAAA,KAAUA,CAAAA,EAAAA,GAAO,OAAM,CAAA,CAiD/B,CA3CyB,SAAjB+mB,IAEAzC,IAAAA,EAAY/lB,EAAEgoB,IAAAA,EAEVqD,EAAU,GACRlE,EAAQ,aACRza,EAAMoc,EAAAA,KAAY,WAAA,EA0D5B,GAxDQzF,EAAI5hB,KAAQypB,EAAAA,SAAa,IACrB/E,EAAQ6D,QAAA,CAAA,GAGZ3G,EAAA7O,KAAAiX,EAAA,iBAAA,IACAhqB,EAAAsmB,gBAAA,CAAA,GAGgC,SAA9B5B,EAAG3R,KAAKiX,EAAA,eAAsB,IAChChqB,EAAAiqB,cAAA,CAAA,GAGAC,EAAAtI,EAAAiF,EAAA7mB,CAAA,EACA,OAAShC,EAAKsH,KAAEukB,OAAY,IAAIxF,EAAG/mB,KAAQmB,EAAMuB,CAAO,CAAA,CA8CpE,CA3C6B,SA4C7BkqB,EA5CqCtW,EAAAiT,EAAA7mB,GA6CjCA,EA5CgBA,GAAA,GA6ChB,IA5CYmqB,EAAArX,EAAAc,CAAA,EAAAtO,KAAA,MAAA,EACJ+B,EAAAD,KAAAC,UAEAc,EAAI0hB,EAAAA,CAAW,EAAA5e,IAAA,GAAA6H,EAAAc,CAAA,EAAA3Q,KAAA,EA4CvB,IArCQ,MALA,YAAA,OAAA4jB,IAEEI,EAAAA,EAAe9e,CAAA,GAGO,UAAf,OAAK0d,GAAUxe,EAAA8iB,EAAAnqB,OAAA,IAAAqH,EAAArH,CAAA,GAAAmqB,EAAAtD,OAAAA,CAChBQ,CAAR9oB,MAAOX,IA0CnB,CAlCAkV,EAAEsX,aA/CYtD,GAiGdhU,EAAE/L,GArCE8f,KAAA,SAAAA,EAAA7mB,GAEAA,EAAU+S,GAAW,GAMrB,SAAAsX,IACH,GAAAH,EAAA5sB,KAAAupB,EAAA7mB,CAAA,EACDkqB,OAAoBpX,EAAAxV,IAAA,EAAA4sB,KAAStW,OAAW,IAAE5T,EAAO1C,KAAEupB,EAAA7mB,CAAA,CAAA,CAE3CmqB,CA2BJ,IApCGnqB,EAAQiqB,KAAAA,SACXK,EAAAxX,EAAAkT,aAEIkE,EAAAA,EAAkBtI,cAClB2I,EAAajlB,EAAWilB,aAAeD,EAAQtqB,YAevDwqB,OA2BI1X,EAnCI3K,IAAAA,EAAKqL,KAAKI,CAAY,EAEtB6W,GAAoB,KAAT5D,GAAqB0D,IAC5B1D,cAAY1e,EAAAA,aAAMsiB,EAAA,EACtB3X,EAAAsX,aAAAK,GAAAC,YAAA,WACA5X,EAAOiG,QAAOoR,EAAAA,KAAAA,CAAe,EAAA3W,KAAQ6W,CAAa,CACpD,EAAAM,CAAW,GAEjBH,IAoCA,EAEA1X,EAAE/L,GAnCEoW,OAAS,SAAUA,GACnByN,OAAAA,KAAWtlB,KAAI6X,MAAS,EAAA4M,aAAO9e,CAAA,CAoCnC,EAEA6H,EAAE/L,GAAG8jB,OAlCGD,WAIJ,OAHAE,cAAAhY,EAAAsX,aAAA9sB,KAAAmtB,SAAA,EACA/F,OAAK5R,EAAIsX,aAAA9sB,KAAAmtB,UAEFG,KAAAA,KAAAA,WACV,IAAAG,EAAAjY,EAAAxV,IAAA,EAAAgI,KAAA,MAAA,EAEWylB,GACE/qB,EAAOkL,OAAM,EAAA8f,WAAA,MAAA,CAEnBV,CAAAA,CAiCR,EAEAxX,EAAE/L,GAhCMsjB,SAAY,WAiChB,OAhCYH,KAAAA,KAAAA,MAAiB,EAACP,YAAY3pB,CAiC9C,EAEA8S,EAAEmY,cAhCO,SAAAR,KAEHA,EAAWJ,GAAYvX,EAACkT,aAAAkF,wBAESX,EAAAA,EAAazX,EAAA2X,CAAA,GAC5CK,OAAgBV,EAAAA,aAAaK,YAAU,EAAAjX,KAAA2X,CAAA,CA+B/C,EApgBA,IA+ZKP,EAAAlG,EAyEG4F,EAAGK,CACPO,aAAA,oBACAE,aAAW,eACdL,SAAA,CAAA,EAEGM,cAAU,IACVd,YAAYjlB,CAAAA,EACf2iB,sBAAA,GAGG6C,SAAAA,CAAa,oCAA+BvjB,KAAA/J,OAAAwnB,UAAAsG,SAAA,IApFxCnO,EAoFwC,QAnF3CuH,EAAA3L,SAAAwS,cAAA,KAAA,GAKHnB,GAFDjN,EAAA,KAAAA,KAEkBuH,KAGX1kB,EAAAA,aAAYmd,EAAA,SAAA,EACZ6M,EAAqB,YAAZ,OAAYtF,EAAAvH,IAGzBuH,EAAI9C,KAEJgJ,GAsEAY,cAASpB,CAAAA,EACTpC,WAAYxU,CAAAA,EAAK,GAAA,GAAA,GAAW,GAAA,GAAA,GAAA,GAAA,GAAA,IACxBsT,YAAY,CACRiE,EAAAA,CAAAA,QAAU,IAAA,EACVA,EAAAA,CAAQvE,QAAS,KAACwE,SAAW,CAAA,CAAO,EACxCS,IAAA,CAAAjF,QAAA,KAAAE,UAAA,CAAA,CAAA,EACFgF,EAAA,CAAAlF,QAAA,aAAA,EACLmF,EAAA,CAAAnF,QAAA,UAAA,CAEG,CA4BJ,EAxBA1T,EAAEmY,aAAanY,EAAGkT,cAASyE,IA2B3BH,EA1BYxX,EAAAkT,aAAiBA,EAAAA,OAAAA,CAAAA,EAAakF,GAAAA,EAAYpY,EAAAkT,YAAA,GAGrD+E,UAEGT,EAAAA,cAAU,EA4BdI,YAzBc,WACVW,EAAAA,aAAkBG,eAClBjB,EAAAA,cAAiB,CA2BrB,EAzBID,EAAAe,aAAA,CA0BR,EAAG7tB,OAzBKyoB,OAAWzoB,OAAA4mB,KAAA,EA2BnB3M,aAzBQuQ,OAAcnB,KAAM,CA2BxB7G,IAzBQ,GA0BRjM,MA1BcyS,GA2BdnH,MA3B4B,KA4B5BC,OA3BW,EA4BXW,OA5BcuG,GA6BdrT,SA7B6BsT,CAAcxV,KAAC,OACpCzR,KAAK,KA+BTiiB,MA/BU+E,KAgCVlT,WAhCkC,KAAMJ,MAAC,KACrCiN,WAAK,KAkCT3P,YAlCmB,KAAa4P,UAAC,KAC7BsB,OAAK,KAoCT3O,KApCUyT,CAAmB/J,MAAA,6CAC7B,EACHyE,SAAA,KAEC8E,SAAY,KACdsE,SAAYtE,KAqCRrN,KAAM,CAAA,EAnCVL,OAAA,IACA,EAWJb,KAAAA,SAAa9D,EAAW3T,EAAG0I,GAGvBqL,KAASsL,MAAAhiB,EACTgiB,KAAOC,OAAI5W,EACX4W,KAASU,IAAA3iB,EAAA0a,MAAA,EAAA,WAAA/X,EAAA8J,eAAA,MAAA,EAAA9J,EAAAR,KAAAkJ,GACTuX,KAAQA,OAAE7N,kBAAAC,cAAAhV,EAAA2C,CAAA,EACVmT,KAAQA,SAAEf,kBAAAQ,kBAAAvV,EAAAC,KAAA6V,SAAAnT,CAAA,EACNiR,KAAM8C,MAAM3B,kBAAAoD,SAAA,EACZhW,IAAMoY,EAAIta,KAEVgW,EAAAA,GAAU,oBAAM,WACLsE,EAAAzE,SAAAsD,UACDmB,EAAE4H,YAAI,CAEhBY,CAAAA,CAkCJ,EAOAhH,WAjCc,WACVd,OAAQxF,EAAAG,OAAA,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CACZ,EASAqK,SAAM,SAActB,GAGhB5e,KAAKgiB,OAAgBhiB,KAAAse,SAAA,EACrBte,KAAK0iB,SAAgBjI,SAAU,CAAA,CAAAmE,EAE/BpJ,EAAI,YAAYV,KAAAA,KAAAA,EAAAA,KACX2B,KAAKsM,cAAMjO,CAChB,EAGWwF,KAAKzE,SAASsD,UACjBmB,KAAK4H,YAAa,CA+B9B,EAOArD,KA3BI,SAASlJ,GAIbH,EAAA,gBAAAxV,KAAA0iB,GAAA,EAAA7D,KAAAuD,CAAA,CACJ,EAgCI/G,KApBS,SAAOxF,GAEZL,EAAA,gBAAAxV,KAAA0iB,GAAA,EAAArH,KAAA+G,CAAA,CACJ,EAUA9D,SAAC,WAIL,OAAAte,KAAA6V,SAAAsD,SACAnZ,KAAA2iB,OACAnN,EAAA,YAAAxV,KAAAyW,MAAA,QAAA,EAAA9I,IAAA,CACI0N,EAUAiD,SAAU,SAAAzT,GAKT,CAAA,SAAA,UAAAQ,QAAA,OAAAR,CAAA,EAAA,IAMLA,EAAAA,EAAAzH,QAAA,WAAA,EAAA,EAGQpD,KAAK2iB,OAAU9X,EAEf7K,KAAA6V,SAAAsD,SAEK3D,EAAG3K,YAAc7K,KAAAyW,KAAU,EAAE9Q,KAAGkF,CAAA,EAIjC2K,EAAI,YAAU2D,KAAQ1C,MAAE,QAAA,EAAA9I,IAAA9C,CAAA,EAKhC,EAOJuO,SAAA,SAAA4C,EAAArW,GAGQ,IAKI2e,EAEJjB,EAPIrjB,KAAK6V,SAASsD,WAKdmL,EAAc9O,EAAA,YAAmBxV,KAAAyW,KAAA,EAErC4M,EAAe7N,EAAA,QAAA6N,CAAmBzV,EAGlCyV,EAAWpE,KAAK,iBAAM,EAAArR,OAAA,EAClB0W,EAAMd,KAAAA,mBAAyB,EAAA5V,OAAA,EAGjB,OAAjBoO,GACGsI,EAAMd,YAAY,YAAa,EAC/Bc,EAAMb,YAAS,UAAW,GAGfzH,GACXsI,EAAAd,YAAA,YAAA,EAEIc,EAAAb,SAAW,UAAa,EAOR,UAAhB,OAJD9d,EADH,KAAA,IAAAA,GAAA,UAAA,OAAA3F,KAAA6V,SAAA6N,UACG1jB,KAAA6V,SAAA6N,UAIY/d,IACP0d,EAAYxN,OAAAA,+BAAmClQ,EAAA,QAAA,IAI/CA,EAAI6d,YAAcxF,UAAUyD,EAChC6C,EAAAb,SAAA,YAAA,EAGgB,KAAA,IAAL9d,IACM,UAAPmX,OAAO9c,KAAA6V,SAAA8N,YACrBhe,EAAA3F,KAAA6V,SAAA8N,YAEP,CAAAhe,GAAA3F,KAAA6V,SAAA+N,WAGDje,EAAA3F,KAAA+hB,MAAA/D,QAAA,EAAAyD,iBAIqB,UAAZ,OAAA9b,GAEI0d,EAAKvG,OAAW,iCAAyBnX,EAAA,QAAA,GATtD,EAuBAmC,QAAQ,WAGJ8M,IAAIiP,EAAAA,EAAY,YAAG/O,KAAAA,MAAkBsB,QAAAA,EAGjCwC,OAAI0L,EAAK5B,GACGX,EAAKwC,GAAA,QAAA,EAGV,IAjBf,EA2BAxB,OAAAA,WAKCnO,IAAAlS,EAAA1C,KAAA8b,WAAA,EAGD+H,EAAA/O,kBAAAsB,iBAAApW,KAAA+hB,MAAArf,CAAA,EAEJ,OAAAtC,IAAA0H,OAAA+M,IAAA,yBAAA,CACA+D,GAAA5Y,KAAA0iB,IACA3iB,KAAAC,KAAA+hB,MACI0C,KAAczkB,KAAEyW,MAER0L,MAAAA,EACAkC,QAAarkB,KAAE+iB,cAAA,EACfrgB,aAAkBoZ,CACtB,CAAA,CAzBJ,EAOAiH,cAiCiBlY,WAGTnI,OAAO1C,KAAK6V,SAAGf,SACT6P,KAAOH,uBAAmB5O,EAC5BlT,KAAQ+S,eACX,CAlCT,EAQAgP,eA0CmBI,WAxCfjQ,IA0CUuN,EAAA,GAEFkC,EAAc,GA1CtBzP,IA2CYa,EAAMqP,KAAYhJ,WAAW,EAC/B4I,EAAA5P,kBAAAoD,SAAA,EA+DVxV,OA7DAA,EAAA8J,eAAA,MAAA,GAEqB,UAAf,OAAC9J,EAAc+S,MACG,OAApB0M,EAAWxW,MACb5H,CAAAA,MAAAC,QAAAtB,EAAA+S,IAAA,IAGEa,EAAO5T,KAAO,IAGdoF,EAAQ5F,OACJuT,EAAM0M,KAAAA,KAAWhhB,KAAU0U,SAAUsM,MAG3Czf,EAAA+S,KAAA9B,KAAA,OACLjR,EAAA+S,KAAA5K,MAAA,OAAA7K,KAAA2iB,OAAA3iB,KAAA2iB,OAAA,GAILjgB,EAAAkT,QACAlT,EAAA+S,KAAAX,kBAAAY,UACA,CAAAiP,MAAA,SAAAjiB,EAAAkT,KAAA,EACI4O,EAAAA,IAEQ9hB,GAGA4T,EAAO5T,WACPmI,EAAY8X,KAAAA,SAAe,YAMvCjgB,EAAA8J,eAAA,UAAA,GACA,UAAA,OAAA9J,EAAA2hB,UACAtgB,MAAAC,QAAAtB,EAAA2hB,QAAA,IAGU3hB,EAAA+S,KAAehI,KAAQiV,EAGhClN,EAAAU,KAAAxT,EAAA2hB,SAAA,SAAA9X,EAAAsY,GAEYxO,IAAAA,EAAe,GAGfb,EAAAU,KAAA2O,EAAA,SAAA3iB,EAAA2I,GACEia,EAAAnZ,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CACD,CAAA,EAEAwZ,EAAA1Y,KAAA,CACO8J,KAAA,EAAAqP,EAAA3jB,OAAA,IAAA2jB,EAAAvf,KAAA,GAAA,EAAA,EACH,CAAA,CACL,CAAE,GAGPsd,EAAAA,KAAAA,EAAgBpN,KAAA,SAAAvT,EAAA2I,GAChBqI,EAAiBvH,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CACjBiY,CAAAA,EAES1iB,IAAA0H,OAAA+M,IAAA,qBAAA,CACL/C,MAASpP,EACLgiB,WAAMA,EACP7Z,MAAI,OAAA7K,KAAA2iB,OAAA3iB,KAAA2iB,OAAA,GACP2L,OAAU,CACH7Y,KAAM,EAAA0M,EAAAhhB,OAAA,IAAAghB,EAAA5c,KAAA,GAAA,EAAA,GACL8e,SAAEA,CACb,CACDT,CAAAA,CAtDJ,EAgEJY,uBAAA,WAEA5P,IAAAlS,EAAA1C,KAAA8b,WAAA,EAGQ,OAAI9G,IAAAA,OAAajV,IAAKkV,qBAAW,CAE5B8M,MAAWhiB,EACX2iB,MAA0B,OAAf3iB,KAAK0a,OAAmBza,KAAI0C,OAAQ8J,EACpD,CAAA,CA1DJ,EAOA0V,YAmEY,WAEN1M,EAAA,gBAAAxV,KAAA0iB,IAAA,aAAA1iB,KAAAyW,MAAA,QAAA,EACL8S,KAAAvpB,KAAA6V,SAAA0T,KAAAvpB,KAAA6V,SAAAnT,OAAA,CAGD,CACJ,EAEAyX,aAAA9D,OAAAkY,MAAA,CAnEI7L,IAqEI,GACJjM,MAAC,GAGDsL,MAAA,KACJY,OAAA,GACA6L,MAAA,GACA3Y,SAAA,CACIsD,KAAU,QAENjX,KAAKygB,KACLwB,MAAKtO,KAEHG,WAAW,KAIbJ,MAAW,KACPiN,WAAKX,KACThP,YAAA,KACH4P,UAAA,KAGDzM,OAAA,GACJ3T,QAAA,CACAoP,MAAA,GACA2c,KAAA,KACU7a,IAAA,GAEA0a,SAAA,KACLI,QAAA,KAGDC,SAAA,IACJ,EACA/K,SAAA,KACAzK,SAAA,KACQkC,KAAE,CAAA,EAEAL,OAAA,IACN,EAgBJkF,KAAA,SAAAngB,EAAA2C,EAAA0I,GAEAwJ,IAAAI,EAAAjV,EAAAkV,UAAA,EAEIgL,KAAQ8B,MAAYlX,EAEhB7K,KAAK0iB,IAAU3iB,EAAQ0a,MAAEpP,EAAQ,WAAa3I,EAAM8J,eAAA,MAAA,EAAA9J,EAAAR,KAAAkJ,GAChDpL,KAAA6V,SAAAf,kBAAAQ,kBAAAvV,EAAAC,KAAA6V,SAAAnT,CAAA,EACJ1C,KAAAyW,MAAA3B,kBAAAoD,SAAA,EAI4B,UAAxB,OAAKrC,EAASsD,MACZnE,EAAWxI,eAAe7G,EAAUzD,IAAA,GAEnC,GAAN,CAAM,UAAAmJ,QAAA,OAAA2J,EAAAtS,EAAAR,KAAA,IAEC0sB,EAAW5Z,EAAMtS,EAAcR,MAGnC2sB,KAAAA,OAAiBhkB,EAAM2B,eAAA,OAAA,GAAA,GAAA,CAAA,SAAA,UAAAnB,QAAA,OAAAmO,EAAA3O,KAAA,EAAA2O,EAAA3O,MAAA,GACvB+jB,KAAAA,MAAgBjpB,EAAK6G,eAAA,MAAA,GAAA,GAAA,CAAA,SAAA,UAAAnB,QAAA,OAAAmO,EAAA7T,IAAA,EAAA6T,EAAA7T,KAAA,IA1FzBiP,IAmGY0F,EAAIta,KAjGhBD,EAoGaoS,GAAA,oBAAuBwc,WAnGhCrU,EAoGY4H,YAAWpN,CAnG3B,CAAC,CACL,EAOAgH,WAsGQ,WACJ,OAAAtG,EAAAG,OAAA,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CACJ,EA/FAsD,SAyGY,SAAUA,GAElBnZ,KAAA2iB,OAAA3iB,KAAAse,SAAA,EAEAte,KAAIqjB,SAAY7N,SAAE,CAAA,CAAWoJ,EAG7ByE,EAAAA,YAAerjB,KAAAyW,KAAA,EAAe8E,KAE1BS,KAAO+G,cAAW,CAClB,EAGA/G,KAASnG,SAAAsD,UACLnZ,KAAAkiB,YAAgB,CA3G5B,EAOArD,KAAM,SA+GiBuD,GA7GnB5M,EAAE,gBAgHsBuM,KAAM/D,GAAAA,EAAQa,KAAE4C,CAAAA,CA/G5C,EA0HApG,KAAA,SAAA+G,GAEJ5M,EAAA,gBAAAxV,KAAA0iB,GAAA,EAAArH,KAAA+G,CAAA,CACA,EAWI9D,SAAA,WAEJ,OAAAte,KAAA6V,SAAAsD,SACAnZ,KAAA2iB,OACYnN,EAAA,YAAWxV,KAAAyW,MAAA,gCAAA,EAAA9I,IAAA,CAtHnB,EAQAsS,SAyHQ4D,SAAcA,MAAAA,MAErB,GAAA,EAAA,CAAA,SAAA,UAAAxY,QAAA,OAAAR,KAAA,EAAA,GASG,GAHR7K,KAAA2iB,OAAA9X,MAGYqK,KAAAA,SAAeiE,SACfgJ,EAAAA,YAAiBniB,KAAAyW,KAAA,EAAA9Q,KAAAA,IAAA,MAEX,CACNwT,IAAQ0V,aAAYrZ,EAAA,YAAAxV,KAAAyW,MAAA,2BAAA,EACbmY,YAAApZ,EAAA,YAAAxV,KAAAyW,MAAA,0BAAqD,EACrDqS,SAAe+F,aAAYL,IAAK,EAWvCM,GARA5Z,aAAa0O,IAAAA,KAAU,EACvBkL,YAASlL,IAAWje,IAAA,EAOZmjB,UAAGhU,MAAAA,CACfF,IAAA2Z,MAAAvuB,KAAA6V,SAAArJ,eAAA,SAAA,GAAA,UAAA,OAAAxM,KAAA6V,SAAAnT,QAEe1C,KAAE6V,SAAU3T,QACZyJ,GAGL,GAAC7D,MAAO+M,eAAI,UAAsB,EACjCK,GAAY,YAAZA,OAAYqZ,MAAAI,SACPhM,MAAMgM,SAAY3uB,IAAK2iB,OAElB3E,GAAS,UAATA,OAASuQ,MAAAI,SAAA,CAClB/Z,IAAAhS,KAAAkS,kBAAAK,kBAAAoZ,MAAAI,QAAA,EAE0BxM,YAAbhhB,OAAMyB,KAC3BA,KAAA5C,IAAA,EAEPoc,KAAAmS,MAAAI,QAAA,CAIL,CAGe3uB,KAAE+hB,MAAAvH,SAAY,2BAAAxa,KAAA,CAAAA,KAAA,CAEjBsa,CACJ,CArIJ,EAQAlB,SA2IgB,SAAWxW,EAAS+C,GAzIhC,IA+II0d,EAJQrjB,KAAC6V,SAAMsD,YAIfkK,EAAA7N,EAAA,YAAAxV,KAAAyW,KAAA,GAIKwJ,KAAS,eAAO,EAAArS,OAAA,EACvByV,EAAApE,KAAA,cAAA,EAAArR,OAAA,EAEF,OAAAoO,IAUQpI,EAUmB9L,UAAnBinB,OALAppB,EADQ,KAAA,IAAAA,GAAA,UAAA,OAAA3F,KAAA6V,SAAA6N,UACR1jB,KAAA6V,SAAA6N,UAKAqL,IACMzU,EAAUwC,OAACkB,kCAAQrY,EAAA,QAAA,GAMN,KAAA,IAAPA,IAE0B,UAA5B6G,OAAAA,KAAAA,SAAemX,YACjBhe,EAAO4oB,KAAMD,SAAS3K,YAGf,CAAO4K,GAAMD,KAAAA,SAAc1K,WAC9BhhB,EAAOkS,KAAAA,MAAAA,QAAkBK,EAAAA,iBAKjC,UAAA,OAAAxP,GACJ0d,EAAAvG,OAAA,iCAAAnX,EAAA,QAAA,IA1JZ,EAOAqW,QAgKY,WA9JR,MAAA,EAiKYpD,KAAIoW,SAAOpL,UAAA5jB,CAAAA,KAAA6V,SAAAsD,UACLsV,CAAIzuB,KAAAse,SAAA,EA7J1B,EAOAxW,OAkKYmnB,WAhKRra,IAkKY0F,EAAWE,KAASsB,WAAA,EACvB+H,EAAA/O,kBAAAsB,iBAAApW,KAAA+hB,MAAArf,CAAA,EAhKT,OAkKY4X,IAAKyH,OAAMvH,IAAAA,yBAAS,CACvB5B,GAAA5Y,KAAA0iB,IACDrE,KAAQre,KAAE+hB,MACNzH,KAAKyH,KAAMvH,MACflE,MAAA5T,EACF4Y,QAAAtb,KAAA+iB,cAAA,EAGEc,aAAOrJ,CACb,CAAA,CACN,EASAmI,cAAU,WAENhP,IAAMuB,EAAQlV,KAAA8b,WAAA,EACd5Z,IAAMigB,EAAI,GACL2M,EAAM,CACX9Y,KAAY,OACPmD,SAAM,WACX0J,MAAY,sDACZ3P,MAAiB,OAAJlT,KAAIwuB,MAAAxuB,KAAAwuB,MAAA,EACjB1L,EAmBR,OAjBc5N,EAAA0O,WACFzE,EAAOyE,SAAA,YAGXA,EAAcpX,eAAA,MAAA,GACA,UAAd2M,OAAUjE,EAAIO,MACd4O,MAAUrgB,QAAIkR,EAAAO,IAAA,IAERqZ,EAAMha,kBAAAY,UAAAoZ,EAAA5Z,EAAAO,IAAA,GAKhBD,EAAAU,KAAA4Y,EAAA,SAAA5sB,EAAA2I,GACJsX,EAAAxW,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CACA,CAAA,EAEAzK,IAAA0H,OAAA+M,IAAA,qBAAA,CACAyB,MAAApB,EACUrK,MAAyBO,OAAzB8U,KAAcyC,OAAkB3iB,KAAA2iB,OAAA,GAE7BZ,KAAe,OAAV/hB,KAAUwuB,MAAAxuB,KAAAwuB,MAAA,GACfxM,KAAMhiB,KAAKoL,MAAK4S,QAAA,EAChB0E,OAAW3iB,CACN6V,MAAMd,KAAAA,SAAkBoD,MAC7ByK,KAA6B5N,EAAlBD,EAAAA,OAAkBC,EAAkBxP,KAAE7C,GAAO,EAAC,EACzDmT,CAxKL,CAAC,CACL,EAOAqM,YA+KY,WAGJtN,IAAI0F,KAACzE,KACT0Y,MAAAvuB,KAAA6V,SAAArJ,eAAA,SAAA,GAAA,UAAA,OAAAxM,KAAA6V,SAAAnT,QAGQ1C,KAAG6V,SAAInT,QAEP,GAIN8S,EAAA,YAAAxV,KAAAyW,MAAA,mBAAA,EAAA4L,MAAA,SAAA/hB,GACL,GAAAiuB,MAAA/hB,eAAA,SAAA,EAGD,GAAA,YAAA,OAAA+hB,MAAAG,QACJH,MAAAG,QAAApU,IAAA,OAEA,GAAA,UAAA,OAAAiU,MAAAG,QAAA,CACgB9Z,IAAAhS,KAAYkS,kBAAAK,kBAAAoZ,MAAAG,OAAA,EAEvB,YAAA,OAAA9rB,KAGDA,KAAA0X,IAAA,EAEJ8B,KAAAmS,MAAAG,OAAA,CAEc,CAKJpU,KAAAyH,MAAcvH,SAAU,0BAE1BF,KAAC,CAAAA,KAAAha,EAAA,EAGOga,KAAC4H,SAAa,GAAA,EAAA,CACtB,CAAA,EAKR1M,EAAA,YAAAxV,KAAAyW,MAAA,oBAAA,EAAA4L,MAAA,SAAA/hB,GACAsU,IAAA9C,EAAAyc,MAAA/hB,eAAA,OAAA,GAAA,UAAA,OAAA+hB,MAAAzc,MACAyc,MAAAzc,MACU,GAGL2c,EAAAF,MAAA/hB,eAAA,MAAA,GAAA,UAAA,OAAA+hB,MAAAE,KAGDF,MAAAE,KACJ,KAEA7a,EAAA2a,MAAA/hB,eAAA,KAAA,GAAA,UAAA,OAAA+hB,MAAA3a,IACU2a,MAAUnM,IAEV,GAIN,GAAAxO,EAAA,CAMIgB,IAAOoa,EAAc7V,kBACJjB,SACT,EACXtD,IA2CLhS,EA3CKmsB,EAAA3uB,IAAA0H,OAAA+M,IAAA,6BAAA,CAGD4C,KAAA6C,KAAAyH,MAAA/D,QAAA,CACJ,CAAA,EAGY,GAAEle,OAAAmgB,eAAiB,OAAA,EAAA,CAElBrL,IAAQsa,EAAY7jB,KAGrBijB,EAAA,KAGKzY,MAAS0C,eAAgB,UAAA,IACa,YAAnCzD,OAAAA,MAAkBwD,SAC9BgW,EAAAC,MAAAD,SAIUa,UADiB,OAAKtZ,MAAQyY,UAMA,YAApBa,OAHpBvsB,EAAAkS,kBAAAK,kBAAAoZ,MAAAD,QAAA,KAMAA,EAAA1rB,IAOM2rB,MAAc/hB,eAAa,QAAUmB,IAC3C,YAAA,OAAA4gB,MAAAW,OACHA,EAAAX,MAAAW,OAIL,UAAA,OAAAX,MAAAW,QAGA,YAAA,OAFAtsB,EAAAkS,kBAAAK,kBAAAoZ,MAAAW,MAAA,KAGwBlT,EAAapZ,IAOpB9C,OAASyuB,MAASlL,KAAAA,EAAU0L,EAAA,CAEvBnW,GAACoW,EACDP,KAACA,EAEJS,OAAWA,EACZ1L,SAAY8K,CACZ9K,CAAAA,CAET,CAEGc,EAAMb,KAAAA,CAEF7P,IAAOjO,EACHmT,OAAQjD,MAChBmH,WAAA,SAAAC,GAEWtX,KAAIoc,MAAKvH,SAAU,gCAAAF,KAAA,CAAAA,KAAA2C,EAAA,CAC1BoG,EACJ4L,QAAA,SAAA7mB,GACGoN,EAAA,UAAAwZ,EAAA,cAAA,EAAAzT,KAAAnT,CAAA,EACGob,KAAWzB,MAACvH,SAAW,iCAAAF,KAAA,CAAAA,KAAAlS,EAAA,CACvBqb,EAEF7F,MAAW,SAAKX,EAAAY,EAAaC,GACzBxD,KAAWyH,MAAClM,SAAS8N,+BAA0BrJ,KAAA,CAAAA,KAAA2C,EAAAY,EAAAC,EAAA,CAC3C,EAEPO,SAAiB,SAASxI,EAAAA,GAChByE,KAAKyH,MAAM/D,SAAUyD,kCAAcnH,KAAA,CAAAA,KAAA2C,EAAAY,EAAA,CAC9C,CACJ,CAAA,EAIAvD,KAAAyH,MAAAvH,SAAA,2BAAAF,KAAA,CAAAA,KAAAha,EAAA,CA/FZ,CAgGQ,CAAA,CACJ,CAhOJ,EAqOA6Z,aAAA9D,OAAAoC,OAAA,CAEIuD,IAAAA,GAlOAvF,MAoOQ6N,GAnORvC,MAqOQuC,KApORtC,OAqOQ,EApORW,OAqOI,GApOJ9M,SAsOW,CACVlC,KAAA,SAGDzR,KAAA,KACJiiB,MAAA,KACAnO,WAAA,KACAJ,MAAA,KACI9N,WAAQ,KAEJoL,YAAoB,KACpB4P,UAAIe,KAEJO,OAAU,KACNxL,KAAI,CACAuG,MAAQ4C,8CACRqN,KAAM,KACV9Y,EACAgF,SAAS,KACTuI,SAAAA,KACFQ,SAAA,KACLhJ,KAAA,CAAA,EAGDL,OAAA,KACJzC,UAAA,IACA,EAnOI2H,KAmPI,SAAAngB,EAAA2C,EAAA0I,GAgBA,GAbI1I,KAAAA,MAAaR,EACjBlC,KAAAgiB,OAAA5W,EAEA1I,KAAOggB,IAAU3iB,EAAI0a,MAAQ,EAAA,WAAA/X,EAAA8J,eAAA,MAAA,EAAA9J,EAAAR,KAAAkJ,GAC7B1I,KAAO+T,MAAW3B,kBAAcoD,SAAY,EAE5ClY,KAAI0C,OAAaoS,kBAAEC,cAAAhV,EAAA2C,CAAA,EACfA,KAAAA,SAAeoS,kBAAkBY,kBAC7B3V,EAAAC,KAAA6V,SAAAnT,CAAA,EAKc,OAAlBA,KAAOmT,SAAS0C,UAAE,CAClB7V,IAAQ+S,EAAKmO,EAIblhB,KAAQ8J,SAAAA,KAAeA,eACvB,MAAO9J,GAGuB,QAAtB+S,KAAKhI,SAAOiX,KAAAA,MAEoC,GAAjDhiB,CAAAA,SAAQ2hB,UAAUhZ,QAAUkB,OAAKsY,KAAAA,SAAgBpP,KAAA2Z,IAAA,IAG7CvK,EAAAA,EAAAA,KAAgB7kB,KAAA6V,SAAgBhL,KAAKukB,KAAEjsB,SAAA,CAAA,EAAAU,MAAA,UAAA,IAE5CA,EAAA2I,eAAA,CAAA,IAEOb,EAAK9H,EAAAA,EAAA,GAAA1C,OAAAoX,GAItBvY,KAAA6V,SAAA0C,UAAAA,CAEErC,CAIFtB,IAAA0F,EAAWxS,KAEP4c,EAAAA,GAAAA,oBAAsB,WACXpK,EAACqI,SAAWxJ,UACfmB,EAAA4H,YAAA,CAhQZ,CAAC,CACL,EA2QAA,WAAW,WAEL,OAAA1M,EAAAG,OAAc,CAAA,EAAKc,GAAKzW,KAAG6V,QAAUwZ,CApQ3C,EAOAlW,SAkQkB,SAAQyF,GACd0Q,KAAC3M,OAAM3iB,KAAAse,SAAA,EAAKte,KAAA6V,SAAAsD,SAAA,CAAA,CAAAyF,EACApJ,EAAA,YAAAxV,KAAAyW,KAAA,EAAA8E,KACXvb,KAAM+iB,cAAA,CAAK,EA5Pb/iB,KAAK6V,SAASsD,UA+PZnZ,KAAIkiB,YAAc,CA5P/B,EAOArD,KAiQQ,SAAAuD,GA/PJ5M,EAkQQ3K,gBAAgBskB,KAAO7U,GAAAA,EAAKzE,KAAAA,CAAa,CAjQrD,EA+QHwF,KAAA,SAAA+G,GAIM5M,EAAE,gBAAExV,KAAA0iB,GAAA,EAAArH,KAAA+G,CAAA,CACP3L,EAnQA6H,SA0QW,WAEPsE,OAAQ5iB,KAAK6V,SAAAsD,SACb0J,KAAYF,OACZzP,EAAAA,YAAiBlT,KAAAyW,MAAA,QAAA,EAAA9I,IAAA,CAzQrB,EAiRAsS,SAAC,SAAApV,GAIL,CAAA,SAAA,UAAAQ,QAAA,OAAAR,CAAA,EAAA,GACA,CAAAA,EAAA1H,SAAA,EAAAU,MAAA,gBAAA,IAM4B,GAAfke,KAAKlM,SAAU0C,YACfmK,EAAW3iB,kBAAeuY,MAASzN,EAAInI,KAAQ8J,SAAAA,SAAqB,GAGpEqJ,KAAAA,SAAWf,KAAAA,eAAkBQ,KAAAA,IACrCzK,EAAAA,EAAAskB,OAAAnvB,KAAA6V,SAAAJ,KAAAxQ,GAAA,EAGDkqB,OAAAnvB,KAAA6V,SAAAJ,KAAAxQ,GAAA,EACJ4F,GAGIiR,KAAYjG,SAAAJ,KAAYjJ,eAAA,KAAA,IACpB3B,EAAS8K,EAAawZ,OAAInvB,KAAK6V,SAASJ,KAAA1Q,GAAA,EAC3CoqB,OAAAnvB,KAAA6V,SAAAJ,KAAA1Q,GAAA,EAGD8F,GAGJ7K,KAAA2iB,OAAA9X,EAGa8X,KAAM9M,SAAmByI,SACzBzI,EAAAA,YAAiB7V,KAAM4e,KAAAA,EAAAA,KAAU/T,CAAA,EAKzC2K,EAAA,YAAAxV,KAAAyW,MAAA,QAAA,EAAA9I,IAAA9C,CAAA,EAIL,EAWAuO,SAAA,SAAA4C,EAAArW,GAEQ,IAOR0d,EACAiB,EARUtkB,KAAA6V,SAAUuM,WAOpBiB,EAAA7N,EAAA,YAAAxV,KAAAyW,KAAA,EACA6N,EAAA9O,EAAA,QAAA6N,CAAA,EAEI/E,EAAUW,KAAAX,iBAAY,EAAA1Q,OAAA,EAElByV,EAAYxN,KAAAA,mBACF,EAAC8M,OAAM,EAKrB,OAAA3G,GACJsI,EAAAd,YAAA,YAAA,EACAc,EAAAd,YAAA,UAAA,GAEcxH,GAEDsI,EAAAd,YAAmB,YAAS,EAC7Bc,EAAAb,SAAA,UAAA,EAWwB/gB,UAAd,OAPFiD,EADc,KAAA,IAATA,GAAW,UAAA,OAAA3F,KAAA6V,SAAA6N,UACD1jB,KAAA6V,SAAA6N,UAOZxO,IAECgO,EAAO1W,OAAAA,+BAA2C3B,EAAO,QAAA,IAtSrEyZ,EA4SgBd,YAAU3Y,UAAK,EA3S/ByZ,EA4SYb,SAAY,YAAA,EAElB,KAAA,IAAA9d,IACN,UAAA,OAAA3F,KAAA6V,SAAA8N,YAEGhe,EAAA3F,KAAA6V,SAAA8N,YAGW,CAAAhe,GAAA3F,KAAA6V,SAAA+N,WACAje,EAAC3F,KAAW+hB,MAAK/D,QAAA,EAAAyD,iBAItC,UAAA,OAAA9b,GAGD0d,EAAAvG,OAAA,iCAAAnX,EAAA,QAAA,GAGJ,EAzSIqW,QAkTQsH,WAGJD,IAAAA,EAAc7N,EAAC,YAAAxV,KAAmB4N,MAAQ,QAAA,EAG1C,OAAIoO,EAAO,GACAwH,EAAAA,GAAY,QAAA,EAIZA,IApTf,EAOA1b,OAuTK,WAEGyb,IAAAA,EAAgB/N,EAAAG,OAAY,CAAA,EAAC,GAAA3V,KAAA6V,QAAA,EAEzBgO,EAAW/O,kBAAkBsB,iBAAApW,KAAA+hB,MAAArf,CAAA,EAtTrC,OAwTYiD,IAAOmC,OAAK+N,IAAAA,yBAAoB,CAEnC+C,GAAA5Y,KAAW0iB,IACR/c,KAAO3F,KAAK+hB,MAChBvL,KAAAxW,KAAAyW,MACJH,MAAA5T,EAEI4Y,QAAO3V,KAAIod,cAAe,EAC1BO,aAAgBO,CACpB,CAAA,CAzTR,EAOAd,cA6TalN,WAELjB,IAAAuN,EAActX,GAClBwZ,EAAA,GAEAzP,IAAAlS,EAAW1C,KAAA8b,WAAA,EACd4I,EAAA5P,kBAAAoD,SAAA,EAzQG,OA8QRxV,EAAA8J,eAAA,MAAA,GACA,UAAA,OAAA9J,EAAA+S,MACuB,OAAX/S,EAAA+S,MAEA/S,CAAAA,MAAOsB,QAAa8X,EAAAA,IAAY,IAGpCpZ,EAAWoF,KAAU,IAGbpF,EAAO+T,OACXH,EAAYT,KAAAA,KAAQ7V,KAAA6V,SAAA3T,MAGtBQ,EAAA+S,KAAA9B,KAAA,SACLjR,EAAA+S,KAAA5K,MAAA,OAAA7K,KAAA2iB,OAAA3iB,KAAA2iB,OAAA,GAILjgB,EAAAkT,QACAlT,EAAA+S,KAAAX,kBAAAY,UACA,CAAAiP,MAAA,SAAAjiB,EAAAkT,KAAA,EACImN,EAAetN,IAEP6E,GAGAiV,EAAAA,WAEAra,EAAAA,KAAa1I,SAAAA,YAOLmH,EAAMnH,eAAO,UAAA,GACN,UAAP2S,OAAOzc,EAAA2hB,UACVtgB,MAAAC,QAAAtB,EAAA2hB,QAAA,IAKD3hB,EAAIwS,KAAAA,KAAiBwP,EAErBlP,EAAAU,KAAAxT,EAAA2hB,SAAA,SAAA9X,EAAAsY,GAEI3P,IAAAA,EAAqB,GAEzBM,EAAAU,KAAA2O,EAAA,SAAA3iB,EAAA2I,GAEOqY,EAAQvX,KAAUzJ,EAAM2I,KAAOA,EAAA,GAAA,CAC9B3I,CAAAA,EAEI6hB,EAAS7hB,KAAK,CACjBuT,KAAM,EAAAqP,EAAA3jB,OAAA,IAAA2jB,EAAAvf,KAAA,GAAA,EAAA,EACHwe,CAAAA,CA7UhB,CAAC,GAGLvO,EA+UQuO,KAAAA,EAAWtO,KAAGX,SAAAA,EAAkBoD,GAEhCiK,EAASQ,KAAMzgB,EAAU,KAAM2I,EAAE,GAAA,CA/UzC,CAAC,EAkVWzK,IAAA0H,OAAA+M,IAAA,qBAAA,CACAkP,MAAAA,EACJW,WAAAA,EAEExO,MAAe,OAAV6N,KAAAA,OAAwB/jB,KAAE6K,OAAO,GACpCsX,OAAAA,CACF1M,KAAA,EAAA0M,EAAAhhB,OAAA,IAAAghB,EAAA5c,KAAA,GAAA,EAAA,GAGFiqB,SAAa7jB,CACTiN,CAlVZ,CAAC,CACL,EAOAsJ,YAoVgB,WAlVZ1M,EAoVQ+Z,YAAcA,KAAAA,MAAAA,QAAAA,EAAAA,QAAAA,SAAAA,GAClB3a,IAAA0a,EAAAhvB,EAAA+nB,SAAA/nB,EAAAgoB,OAYE,EAXJ,IAAAgH,GAAAA,GAAA,IACN,IAAAA,GAAAA,GAAA,KACH,MAAAA,GAAA,MAAAA,GAEmBvH,MAAP1R,GAAe,MAAHiZ,GAEd,IAAAA,GACE,KAAAA,GACE,IAAAA,GACF,CAAAhvB,EAAAmvB,UAAA,IAAAH,GAAAA,GAAA,KAEChvB,EAAAovB,SAAApvB,EAAAqvB,SACArvB,EAAAsvB,eAAO,CAEbzL,CAAAA,EAEAvO,IAAK0E,EAAMta,KAEXkT,EAAAA,YAAiBlT,KAAAyW,MAAA,QAAA,EAAAoZ,KAAA,SAAAvvB,GACjBwiB,IAASjY,EAAM2K,EAAAxV,IAAA,EAAA2N,IAAA,EAET,GAAA2M,EAAAzE,SAAA0C,YACK1N,EAAAiK,kBAAAwD,MAAAzN,EAAAyP,EAAAzE,SAAA0C,SAAA,GAGD+B,EAAIzE,SAAAJ,KAAAjJ,eAAA,KAAA,IACJ3B,EAAIA,EAAAskB,OAAA7U,EAAAzE,SAAAJ,KAAAxQ,GAAA,EACJkqB,OAAA7U,EAAAzE,SAAAJ,KAAAxQ,GAAA,EACF4F,GAKhByP,EAAAzE,SAAAJ,KAAAjJ,eAAA,KAAA,IACA3B,EAAAA,EAAAskB,OAAA7U,EAAAzE,SAAAJ,KAAA1Q,GAAA,EACAoqB,OAAA7U,EAAAzE,SAAAJ,KAAA1Q,GAAA,EACA8F,GAIakX,EAAAA,IAAK,EAAMhiB,IAAI8K,CAAA,CACpB,CAAA,CAxVJ,CACJ,EAEAsP,aAyVatE,OAAQia,MAAGhb,CAIpB4N,IAAA,GACJjM,MAAA,GACAsL,MAAA,KACAC,OAAA,EACIlG,OAAAA,GA1VAjG,SA2VY,CACXlC,KAAA,QAGDzR,KAAA,KACJiiB,MAAA,KACAnO,WAAA,KACA4M,OAAA,CAAA,EACIzJ,WAAU,KAENjG,YAAyB,KACzB4P,UAAa,KAEXpgB,QAAA,GAGL2T,OAAA,GAGDuN,SAAA,KACJzK,SAAA,KACAkC,KAAA,CAAA,EACAL,OAAA,IACI6D,EAaAqB,KAAC,SAAAngB,EAAA2C,EAAA0I,GAILpL,KAAA+hB,MAAAhiB,EACAC,KAAA0iB,IAAA3iB,EAAA0a,MAAA,EAAA,WAAA/X,EAAA8J,eAAA,MAAA,EAAA9J,EAAAR,KAAAkJ,GACApL,KAAAyW,MAAA3B,kBAAAoD,SAAA,EACIoG,KAAQqE,OAAE7N,kBAAYC,cAAAhV,EAAA2C,CAAA,EAElB1C,KAAO6V,SAAKA,kBACFP,kBACFvV,EAAWC,KAAG6V,SAAanT,CAAA,CACvC,EArWAoZ,WA+WQ,WACJ,OAAAtG,EAAAG,OAAA,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CA9WJ,EA0XAsD,SAAA,SAAAyF,GAEJ5e,KAAA2iB,OAAA3iB,KAAAse,SAAA,EACAte,KAAA6V,SAAAsD,SAAA,CAAA,CAAAyF,EAEIxF,EAAAA,YAAoB4C,KAAAA,KAASrW,EAAAA,KAErB3F,KAAK6V,cAASsD,CACd,CAnXR,EAOA0F,KAuXQyF,SAAMd,GAGNc,EAAAA,gBAAkBtkB,KAAA0iB,GAAA,EAAY7D,KAACuD,CAAA,CAvXvC,EAOA/G,KA0XK,SAAM+G,GAEHkC,EAAAA,gBAAetkB,KAAA0iB,GAAa,EAAArH,KAAA+G,CAAA,CAzXpC,EAOA9D,SA6XY,WAEJ,OAAAte,KAAA6V,SAAAsD,SACJnZ,KAAA2iB,OACHnN,EAAA,YAAAxV,KAAAyW,MAAA,4BAAA,EAAA9I,IAAA,CAGD,EAxXAsS,SAiYQ,SAAgBpV,GAGpB,GAAA,EAAA,CAAO,SAAI,UAAAQ,QAAA,OAAAR,CAAA,EAAA,GAMnB,GAAA7K,KAAA6V,SAAAsD,SAAA,CACAvE,IAAA0F,EAAAta,KACY4U,IAAAM,EAAWlV,KAAA8b,WAAA,EAGX+H,EAAe/O,eAAkBsB,SAAAA,GAEf,UAAZ,OAAOlB,EAAKxS,SACVqB,MAAIC,QAAAkR,EAAAxS,OAAA,GAEN8S,EAAIU,KAACO,EAAK/T,QAAA,SAAA6J,EAAA2W,GAEP,GAAKH,EAAAA,eAAe,OAAA,GAAAG,EAAArY,OAAAA,EASzC,OAR0BgZ,EAAAA,EAAAA,eAAAA,MAAAA,GAAAA,GAAAA,CAAAA,SAAAA,UAAAA,QAAAA,OAAAA,EAAAA,IAAAA,EAChBX,EAAAvd,KACL,GAIL6P,EAAA,YAAA8E,EAAA7D,KAAA,EAAA9Q,KAAAA,CAAA,EACA2U,EAAAqI,OAAA9X,EACA,CAAA,CAGYsX,CAAAA,CAGJ,KAAIuC,CAEGhiB,EAAQ8J,EAAAA,YAAqBxM,KAChCyW,MAAO/T,6BACPA,EAAQ+S,IAAI,EAIhB6O,EAAA,KAEI5hB,EAAYygB,KAAE,UAAA,CAAA,CAAA,EACN1N,KAAKvT,OAAO2I,EAGxBnI,CA/YJ,EAQA0W,SAkZI,SAAA4C,EAAArW,GAOIjD,IAMQoiB,EACFxB,EAEFe,EATJ3hB,KAAQ+S,SAAS0D,WAMT2L,EAAYtP,EAAC7J,YAAY3L,KAAO6K,KAAK,EACvCyY,EAAA9N,EAAA,yBAAA6N,CAAA,EAEFgB,EAAc7O,EAAA,QAAA6N,CAAA,EAxZtBA,EA0ZUpE,KAAA,iBAAA,EAAArR,OAAA,EACNyV,EAAEpE,KAAA,mBAAA,EAAArR,OAAA,EAGS6H,OAATuG,GACFmG,EAAWxW,YAAY,YAAY,EACrC4X,EAAAC,YAAA,UAAA,GAGS9gB,GACPgiB,EAAUlB,YAAY,YAAA,EACtB3Y,EAAW4Y,SAAO,UAAA,EAM1B,UAAA,OAHYY,EADiBljB,KAAAA,IAAXghB,GAAyD,UAA1BA,OAAAA,KAAW5c,SAASme,UAC/CW,KAAAA,SAAAA,UAGtB1e,IACH2d,EAAAxG,OAAA,+BAAAnX,EAAA,QAAA,IAKU4d,EAAEC,YAAA,UAAA,EACFD,EAAIE,SAAA,YAAA,EAED,KAAA,IAAA9d,IACA,UAAA,OAAA3F,KAAA6V,SAAA8N,YACQhe,EAAA3F,KAAA6V,SAAA8N,YAEH,CAAAhe,GAAA3F,KAAA6V,SAAA+N,WACCje,EAAI3F,KAAA+hB,MAAA/D,QAAA,EAAAyD,iBAID,UAAN,OAAM9b,GACP2d,EAAIxG,OAAA,iCAAAnX,EAAA,QAAA,GA3ZhB,EAuaAqW,QAAA,WAEJ,IACAnR,EADA,MAAA7K,EAAAA,KAAA6V,SAAA+N,UAAA5jB,CAAAA,KAAA6V,SAAAsD,WAEA,UAAA,OADAtO,EAAA7K,KAAAse,SAAA,IACA,KAAAzT,CA5ZI,EA0aJ/C,OAAA,WAEA8M,IAAAlS,EAAA1C,KAAA8b,WAAA,EACIA,EAAYhH,kBAAYsB,iBAAApW,KAAA+hB,MAAArf,CAAA,EAEvB,OAAAtC,IAAA0H,OAAA+M,IAAA,yBAAA,CAGD+D,GAAA5Y,KAAA0iB,IACJ3iB,KAAAC,KAAA+hB,MACAvL,KAAAxW,KAAAyW,MACAH,MAAAtW,KAAA6V,SACYyF,QAAEtb,KAAU4e,cAAY,EAEvB+D,aAAyBrE,CAC9B,CAAA,CAraJ,EAOAyE,cA4aM,WAINnO,IAAA0F,EAAAta,KACJwvB,EAAA,GACAta,EAAAlV,KAAA8b,WAAA,EACAyT,EAAA,GAtXQ,OAyXEra,EAAe1I,eAAiB,SAAS,GAC9C,UAAA,OAAA0I,EAAAxS,SAGDqB,MAAAC,QAAAkR,EAAAxS,OAAA,GAEJ8S,EAAAU,KAAAhB,EAAAxS,QAAA,SAAA6J,EAAA2W,GACAtO,IAAAuN,EAAA,GACc4B,EAAY,CAETlO,KAASsD,QACFwJ,MAAM,kBAEf,EACK/N,IAACiB,EAASrJ,EAAeA,eAC7B,MAAW,GACgB,GADfqJ,CAAAA,SAAa,UAAKxK,QAC9B,OAAKwK,EAASJ,IAAI,EAIRyN,EAAKvd,KAEb,GAEAuP,EAAAhT,OAEK6tB,EAAM7tB,KAAAoY,EAAAzE,SAAA3T,MAIjBgT,EAAA0O,WACJG,EAAAH,SAAA,YAKRpO,EAAAU,KAAAgN,EAAA,SAAAhhB,EAAA2I,GACA,SAAA3I,IAEwB2I,EAAO3I,GAD/B,UAAAA,EAC+B6hB,EAAA7hB,GAAA,IAAA2I,EAGnBA,EAIIA,CAAK,EAETkZ,EAAAnL,GAAA9D,kBAAAoD,SAAA,EAGUrN,EAAO8X,QAAAO,EAAArY,QACrBqY,EAAA1W,eAAA,MAAA,GAAA0W,EAAAvd,MAEkB4pB,EAAA5jB,KAAAuX,EAAAvd,IAAA,EAGTkQ,EAASsD,QAAU,WAKpBjE,EAAAA,KAAAA,EAAa1I,SAAetK,EAAS2I,GAKjCoY,EAAgBtX,KAAEzJ,EAAA,KAAA2I,EAAA,GAAA,CAEhB,CAACqK,EAKKsa,EAAW3kB,KAAK,CACZ+N,GAAIsK,EAAO1W,GACPyW,KAAAA,EACJxN,KAAA,EAAA0M,EAAAhhB,OAAA,IAAAghB,EAAA5c,KAAA,GAAA,EAAA,EA1chB,CAAC,CACL,CAAC,EA+cOnF,IAAA0H,OAAA+M,IAAA,qBAAA,CACFyB,MAAApB,EAGArK,MAAA7K,KAAW2iB,OACjB7a,OAAA,CAEGpF,QAAA8sB,EACDD,aAAmB9Y,CAEjB1S,CA/cR,CAAC,CACL,CACJ,EAEAoW,aAAa9D,OAgdmB0R,MAAQpc,CA9cpC+W,IAAK,GACLjM,MAAO,GACPsL,MAida,KAhdbC,OAidQ,EAhdRW,OAidI,GACJ9M,SAAC,CAGDlC,KAAA,QACJzR,KAAA,KACAiiB,MAAA,KACAnO,WAAA,KACAJ,MAAA,KACIwD,WAAU,KAENlG,YAAS2C,KACLiN,UAAA,KACJsB,OAAA,KAEA3O,KAAI4N,CACA8E,MAAY3S,gCAEhB6N,EACAA,SAAUpE,KAEV9F,SAAW,KACPgP,SAAO3E,KACP2E,KAAM,CAAA,EAETnN,OAAM,IAvdX,EASAkF,KA0dQiI,SAAO3E,EAAW9gB,EAAC0I,GAGnBpL,KAAI+hB,MAAWhiB,EA1dnBC,KA2dQgiB,OAAW5W,EA1dnBpL,KA2dY2F,IAAYkQ,EAAAA,MAAS8N,EAAAA,WAAWjhB,EAAA8J,eAAA,MAAA,EAAA9J,EAAAR,KAAAkJ,GA1d5CpL,KA4dSyW,MAAa9Q,kBAAakQ,SAAS+N,EA3d5C5jB,KA4dY2F,OAAYoc,kBAAgBN,cAAc1hB,EAAA2C,CAAA,EA3dtD1C,KA4dQ6V,SAAAf,kBAAAQ,kBAAAvV,EAAAC,KAAA6V,SAAAnT,CAAA,CA3dZ,EAseJoZ,WAAA,WACA,OAAAtG,EAAAG,OAAA,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CACA,EAxdIsD,SAkeQ,SAAgByF,GAGpB5e,KAAO2iB,OAAI3iB,KAAAse,SAAA,EACdte,KAAA6V,SAAAsD,SAAA,CAAA,CAAAyF,EAILpJ,EAAA,YAAAxV,KAAAyW,KAAA,EAAA8E,KACAvb,KAAA+iB,cAAA,CACA,CACIjb,EA9dA+W,KAueQvI,SAAO5T,GAEPmhB,EAAAA,gBAAcA,KAAAA,GAAAA,EAAAA,KAAAA,CAAAA,CAtetB,EAOAxI,KA0eI,SAAYxF,GAMhBL,EAAA,gBAAAxV,KAAA0iB,GAAA,EAAArH,KAAA+G,CAAA,CACJ,EAveI9D,SA+eQ6D,WAIJ,OAAOzf,KAAQ8J,SAAAA,SAKX9J,KAAQ+S,OACZD,EAAA,YAAAxV,KAAAyW,MAAA,QAAA,EAAA9I,IAAA,CApfJ,EAOAsS,SAwfI,SAAApV,GAGInI,CAAAA,SAAakhB,UAAWvY,QAAA,OAAUR,CAAA,EAAA,IArftC7K,KA+fQ2iB,OAAWO,EA7ffljB,KA+fY2T,SAAMwF,SA9flB3D,EA+fY3K,YAAU7K,KAAAyW,KAAA,EAAA9Q,KAAAkF,CAAA,EAEd2K,EAAE,YAACxV,KAAAyW,MAAA,QAAA,EAAA9I,IAAA9C,CAAA,EA7fnB,EAQAuO,SAygBoB,SAAU4C,EAACxP,GAvgB3B,IAII6W,EACAiB,EALAtkB,KAygBY6V,SAAAsD,WArgBZkK,EA2gBsBrf,EAAAA,YAAetB,KAAAA,KAAU,EA1gB/C4hB,EA2gBuBpB,EAAAA,QAAOxgB,CAAS,EAzgB3C2gB,EA2gBsBpE,KAAA,iBAAA,EAAArR,OAAA,EA1gBtByV,EA2gBgBpE,KAAA,mBAAA,EAAArR,OAAA,EAGU,OA5gBtBoO,GACAsI,EA4gBgB7O,YAAMua,YAAoB,EA3gB1C1L,EA4gBgB5hB,YAASutB,UAAAA,GAGVjU,GA5gBfsI,EA6gBY4L,YAAcvkB,YAAUwkB,EAC5B7L,EAAAb,SAAA,UAAA,EAOV,UAAA,OAJF9d,EADM,KAAA,IAAAA,GAAA,UAAA,OAAA3F,KAAA6V,SAAA6N,UACN1jB,KAAA6V,SAAA6N,UAIE/d,IAEQ0d,EAAQxO,OAAI,+BAAuBlP,EAAA,QAAA,IAGzCmC,EAAQ0b,YAAA,UAAA,EACJ/N,EAAM0M,SAAWhhB,YAAU,EAE/B,KAAA,IAAAwE,IACF,UAAA,OAAA3F,KAAA6V,SAAA8N,YACLhe,EAAA3F,KAAA6V,SAAA8N,YAIL,CAAAhe,GAAA3F,KAAA6V,SAAA+N,WACAje,EAAA3F,KAAA+hB,MAAA/D,QAAA,EAAAyD,iBAKkC,UAAlB,OAAkB9b,GACtBjD,EAAuBoZ,OAAAA,iCAAYnW,EAAA,QAAA,GA/gB3C,EAOAqW,QAAS,WAELpH,IAAI0P,EA6hBoBvgB,EAAAA,YAAcuW,KAAKqI,MAAS,QAAA,EA3hBpD,OAAI2B,EAAM,GACCA,EA6hBqB8L,GAAAA,QAAAA,EA1hBzB,IACX,EAOAtoB,OAkiBgB,WAhiBZ8M,IAkiBYlS,EAAA1C,KAAA8b,WAAA,EAEA+H,EAAU7f,kBAAsBoS,iBAAApW,KAAA+hB,MAAArf,CAAA,EAjiB5C,OAAOtC,IAmiBa0H,OAAIsb,IAAS,yBAAkB,CAliB/CxK,GAAI5Y,KAmiBgBowB,IAliBpBrwB,KAmiBoBC,KAAA+hB,MAliBpBvL,KAmiBgBxW,KAAAyW,MAliBhBH,MAmiBc5T,EAEN4Y,QAAOtb,KAAIsa,cAAe4I,EAniBlCW,aAoiBYuM,CAniBhB,CAAC,CACL,EAOArN,cAsiBQ,WAEPnO,IAAAuN,EAAA,GAGDkC,EAAA,GACJzP,IAAAlS,EAAA1C,KAAA8b,WAAA,EACA4I,EAAA5P,kBAAAoD,SAAA,EA+DI,OA7DJxV,EAAA8J,eAAA,MAAA,GACA,UAAA,OAAA9J,EAAA+S,MAC6ByN,OAAzBiN,EAAe1a,MAEP4a,CAAAA,MAAAA,QAAe3tB,EAAA+S,IAAA,IAKb/S,EAAO+S,KAAE,IAGX/S,EAAAR,OACFQ,EAAA+S,KAAAvT,KAAAlC,KAAA6V,SAAA3T,MAziBFQ,EA8iBY0gB,KAAAA,KAAaF,QA7iBzBxgB,EA8iBY2tB,KAAAA,MAAgBrwB,KAAA2iB,OAEpBjgB,EAAAkT,QACFlT,EAAA+S,KAAAX,kBAAAY,UAEC,CAAIiP,MAAKhC,SAAUO,EAAYtN,KAAE,EACpCya,EAAgB5a,IACpB,GAGQ/S,EAAEkhB,WACFlhB,EAAEshB,KAAUJ,SAAA,YAI3BlhB,EAAA8J,eAAA,UAAA,GAE4B,UAA7B2N,OAAa9D,EAAOia,UAETvsB,MAAAC,QAAAtB,EAAA2hB,QAAA,IAEA3hB,EAAI+S,KAAAhI,KAAAiX,EAEHlP,EAAEU,KAAAxT,EAAA2hB,SAAA,SAAA9X,EAAAsY,GACAjQ,IAAAkQ,EAAA,GAEItP,EAAAU,KAAA2O,EAAA,SAAA3iB,EAAA2I,GACCia,EAAAnZ,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CACD,CAAA,EAEVqI,EAAiBvH,KAAA,CACN8J,KAAI,EAAAqP,EAAA3jB,OAAA,IAAA2jB,EAAAvf,KAAA,GAAA,EAAA,EACP,CAAG,CACL,CAAA,GAGN4T,EAAAA,KAAQzW,EAAM+S,KAAA,SAAAvT,EAAA2I,GACRsX,EAAIxW,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CACVmQ,CAAAA,EAIJ5a,IAAA0H,OAAA+M,IAAA,qBAAA,CACJyB,MAAA5T,EACAgiB,WAAAA,EACA7Z,MAAA7K,KAAA2iB,OACA7a,OAAA,CACA2N,KAAA,EAAA0M,EAAAhhB,OAAA,IAAAghB,EAAA5c,KAAA,GAAA,EAAA,GACU8e,SAAgB3hB,CAEbqf,CACL,CAAA,CApjBJ,CACJ,EAEA5H,aAqjBatE,OAAQsS,OAAGrT,CAIpB4N,IAAA,GACJjM,MAAA,GACAsL,MAAA,KACAC,OAAA,EACIlG,OAAAA,GAtjBAjG,SAujBY,CACXlC,KAAA,SAGDzR,KAAA,KACJiiB,MAAA,KACAnO,WAAA,KACAJ,MAAA,KACIuD,WAAU,KAENjG,YAAyB,KACzB4P,UAAa,KAEXsB,OAAA,KAGL3O,KAAA,CAGD0J,MAAA,2CACJ,EACAyE,SAAA,KACAzK,SAAA,KACQkL,SAAE,KAEAhJ,KAAA,CAAA,EACLL,OAAA,IAGD,EAYJkF,KAAA,SAAAngB,EAAA2C,EAAA0I,GAEIkT,KAAQyD,MAAEhiB,EAENC,KAAOgiB,OAAKnM,EAGf7V,KAAA0iB,IAAA3iB,EAAA0a,MAAA,EAAA,WAAA/X,EAAA8J,eAAA,MAAA,EAAA9J,EAAAR,KAAAkJ,GAGDpL,KAAAyW,MAAA3B,kBAAAoD,SAAA,EACJlY,KAAA2iB,OAAA7N,kBAAAC,cAAAhV,EAAA2C,CAAA,EACA1C,KAAA6V,SAAAf,kBAAAQ,kBAAAvV,EAAAC,KAAA6V,SAAAnT,CAAA,CACA,EAnkBIoZ,WA6kBU,WACL,OAAMtG,EAAAG,OAAA,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CA5kBX,EAslBJsD,SAAA,SAAAyF,GAGQ5e,KAAI2iB,OAAsB3iB,KAAEse,SAAA,EACxBte,KAAA6V,SAAAsD,SAAA,CAAA,CAAAyF,EAGJpJ,EAAI6N,YAAoBrjB,KAAAyW,KAAA,EAAW8E,KAC/BgV,KAAAA,cAAoB,CACxB,CAhlBJ,EAOA1R,KAolBQ0E,SAAOE,GAllBXjO,EAqlBQ7P,gBAAYkQ,KAAS6N,GAAAA,EAAAA,KAAStB,CAAA,CAplB1C,EAOA/G,KAwlBQ,SAAW1V,GAtlBf6P,EAAE,gBAwlBsBK,KAAS8N,GAAAA,EAAAA,KAAAA,CAAW,CAvlBhD,EAOArF,SA0lBI,WAIJ,GAAAte,KAAA6V,SAAAsD,SACJ,OAAAnZ,KAAA2iB,OAGW,GAAE3iB,KAAA6V,SAAYrJ,eAAA,MAAA,GAEN,UAAJ,OAAIxM,KAAA6V,SAAAJ,MACd,OAAAzV,KAAA6V,SAAAJ,MAGD,CAAA1R,MAAAC,QAAAhE,KAAA6V,SAAAJ,IAAA,GACJzV,KAAA6V,SAAAJ,KAAAjJ,eAAA,UAAA,EACA,CACAoI,IAAAmb,EAAA,GAQmB,OALPrtB,EAAO,YAAaoZ,KAAYrF,MAAA,yBAAA,EAAAP,KAAA,WAChC2N,EAAe/O,KAAAA,EAAAA,IAAAA,EAAAA,IAAkBsB,CAAAA,CAE3B,CAACtO,EAEKia,CAEZzL,CACO,OAAOyM,EAAAA,YAAe/iB,KAAAyW,MAAA,yBAAA,EAAA9I,IAAA,CAGrC,EA1lBAsS,SAomBQvd,SAAiBmI,GAEjB8I,GAAI,EAAA,CAAA,SAAE,SAAU,UAAAtI,QAAA,OAAAR,CAAA,EAAA,GAAhB8I,CAMJ,GAAkB,UAAdjR,OAAQR,GACR6hB,GAAgB,OAARlZ,GAAagL,CAAAA,MAAa7R,QAAA6G,CAAA,EACtC,MAEInI,MAIAA,EAAQ8J,CAAAA,GAOZoI,IAAI0F,EAAWta,KAIbkW,GAHE6N,KAAAA,OAASE,GAGPjkB,KAAC+jB,SAAU5K,SAAUjX,CACvBigB,EAAAA,YAAoB7H,EAAG7D,KAAO5L,EAAAA,MAAQ,EAG1C+J,IAAUM,EAAYlV,KAAA8b,WAAA,EAElBjR,GAAOqK,EAAW1I,eAAA,SAAA,GACQ,UAApB,OAAKuV,EAAerf,SAClBqB,MAAAC,QAAAkR,EAAAxS,OAAA,GACEyf,MAAAA,QAAWhhB,CAAM,EAC3B,CACFyT,IAAAqO,EAAA,GAETzN,EAAAU,KAAAhB,EAAAxS,QAAA,SAAA6J,EAAA2W,GAIUA,EAAA1W,eAAA,OAAA,GACIgJ,EAAAU,KAAArL,EAAA,SAAA0B,EAAAoB,GAED,GAAAuV,EAAArY,OAAA8C,EAMK,OALLuV,EAAA1W,eAAA,MAAA,GAAA,GAAA,CAAA,SAAA,UAAAnB,QAAA,OAAA6X,EAAAvd,IAAA,GACUsd,EAAAtX,KAAAuX,EAAAvd,IAAA,EAGA2U,EAAAqI,OAAAhX,KAAAgC,CAAA,EACL,CAAA,CAEM,CAAA,CAET,CAAA,EAGP6H,EAAA,YAAA8E,EAAA7D,KAAA,EAAA9Q,KAAAsd,EAAA1d,KAAA,IAAA,CAAA,CACDqe,CAEAS,MACM7O,EAAA,YAAIxV,KAAAyW,MAAA,kBAAA,EAAA0M,KAAA,WAAA,CAAA,CAAA,EAEbpf,MAAAC,QAAA6G,CAAA,GAGD2K,EAAA,YAAAxV,KAAAyW,MAAA,kBAAA,EAAAP,KAAA,SAAA3J,EAAA6W,GACJ5N,EAAAU,KAAArL,EAAA,SAAA0B,EAAAoB,GACA,GAAAA,GAAA6H,EAAA4N,CAAA,EAAAzV,IAAA,EAI0BjL,OAH1B8S,EAAA4N,CAAA,EAAAD,KAAA,WAAA,CAAA,CAAA,EACA7I,EAAAqI,OAAAhX,KAAAgC,CAAA,EAEmCvC,CAAAA,CAGXA,CAAAA,CACR,CAAQrL,CA3EZ8K,CAriBR,EA6nBAuO,SAAC,SAAA4C,EAAArW,GAIL,IAKagd,EACA9M,EANb7V,KAAA6V,SAAAsD,WAKawJ,EAAwBnN,EAAC8I,YAAUte,KAAAyW,KAAA,EACnCZ,EAASsD,EAAAA,SAAcyF,CAAU,EAKzCyE,EAAApE,KAAA,iBAAA,EAAArR,OAAA,EAGDyV,EAAApE,KAAA,mBAAA,EAAArR,OAAA,EAEJ,OAAAoO,GACAmM,EAAA3E,YAAA,YAAA,EACU2E,EAAAtJ,YAAoB,UAAA,GAGzB7C,GAGDmM,EAAA3E,YAAA,YAAA,EACJ2E,EAAA1E,SAAA,UAAA,EASI,UAAA,OANM9d,EADV,KAAA,IAAAA,GAAA,UAAA,OAAA3F,KAAA6V,SAAA6N,UACoBtB,KAAQvM,SAAE6N,UAM1B/d,IACJ0d,EAAAvG,OAAA,+BAAAnX,EAAA,QAAA,IAGYwiB,EAAE3E,YAAY,UAAA,EAElB2E,EAAYtS,SAASsD,YACf,EAKV,KAAA,IAAAxT,IACJ,UAAA,OAAA3F,KAAA6V,SAAA8N,YACAhe,EAAA3F,KAAA6V,SAAA8N,YAEwB9Y,CAAKlF,GAAE3F,KAAA6V,SAAA+N,WAEVje,EAAE3F,KAAUqL,MAAO2S,QAAQnT,EAAAA,iBAMd,UAAjBgL,OAAQlQ,GACX0d,EAAcvG,OAAKrG,iCAAkB9Q,EAAA,QAAA,GAxoB/C,EAopBAyT,QAAQ,WAGAxE,IAAAuT,EAAA3S,EAAA,YAAAxV,KAAAyW,MAAA,SAAA,EAGJ,OAAI4M,CAAAA,KAAAA,SAAcO,UAAyB,KAAXuE,EAAK1R,IAAM,KAMvCuF,EAAO,GACEwH,EAAAA,GAAY,QAAA,EAIrBgN,KAjpBR,EAOA1oB,OAopBK,WAEG0oB,IAAAA,EAAkBxwB,KAAA8b,WAAa,EAE3B+H,EAAW/O,kBAAkBsB,iBAAApW,KAAA+hB,MAAArf,CAAA,EAnpBrC,OAqpBYiD,IAAOmC,OAAK+N,IAAAA,yBAAoB,CAEnC+C,GAAA5Y,KAAW0iB,IACR/c,KAAO3F,KAAK+hB,MAChBvL,KAAAxW,KAAAyW,MACJH,MAAA5T,EAEI4Y,QAAO3V,KAAIod,cAAe,EAC1BM,aAAgBQ,CACpB,CAAA,CAtpBR,EAOAd,cA0pBiB,WAGT,OAAOuB,KAAKzO,SAAIsD,SACpBnZ,KAAAwkB,uBAAA,EACHxkB,KAAAykB,eAAA,CAGD,EArpBAA,eA+pBoB,WAEZjO,IAAI8D,EAAYta,KAChBsW,IAAAA,EAActW,KAAA8b,WAAA,EACdR,IAAAA,EAAcyH,GACdc,EAAcA,GAiHtB,OA5GAnhB,EAAA8J,eAAA,MAAA,GACJ,UAAA,OAAA9J,EAAA+S,MACA,OAAA/S,EAAA+S,MACA1R,CAAAA,MAAAC,QAAAtB,EAAA+S,IAAA,IAGY0M,EAAU1M,KAAK,IAQf/S,EAAYR,OAChBQ,EAAA+S,KAAAvT,KAAAlC,KAAA6V,SAAA3T,MAIAQ,EAAAkT,QAEIlT,EAAQkT,KAAOd,kBAAAY,UACPD,CAAAA,MAAOX,SAAAA,EAAkBY,KAAS,EAC/BhT,EAAE+S,IACT/S,GAIJA,EAAYkhB,WAChBlhB,EAAA+S,KAAAmO,SAAA,YAMAlhB,EAAWoF,eAAW,SAAA,GACJ,UAAdwO,OAAO5T,EAAOA,SACS,OAAvBmI,EAAY8X,SAERlN,EAAIS,KAAEiM,EAAWhhB,QAAS,SAAWghB,EAAAA,GAE3C,GAAA,UAAA,OAAAe,GAAA,UAAA,OAAAA,EACNgN,EAAAvkB,KAAA2O,EAAA6V,cAAA,CACHxc,KAAA,SAEmB8c,MAAOlkB,EAEhB5G,KAAAud,CACE,CAAA,CAAA,OAEG,GAAA,UAAA,OAAAA,EAKG,GAAA,WAJFA,EAAA1W,eAAA,MAAA,GAAA,UAAA,OAAA0W,EAAAvP,KACIuP,EAAAvP,KACP,UAEK,CACKiB,IAAAob,EAAA,GACLU,EAAA,GACGT,EAAA,GAEF/M,EAAA1W,eAAA,MAAA,GACG,UAAA,OAAA0W,EAAAzN,MACA,OAAAyN,EAAAzN,MACJ,CAAA1R,MAAAC,QAAAkf,EAAAzN,IAAA,IAEMib,EAAAxN,EAAAzN,MAGPyN,EAAA1W,eAAA,OAAA,GAAA,GAAA,CAAA,SAAA,UAAAnB,QAAA,OAAA6X,EAAAiB,KAAA,IACFuM,EAAAvM,MAAAjB,EAAAiB,OAKhB3O,EAAAU,KAAAwa,EAAA,SAAAxuB,EAAA2I,GACAmlB,EAAArkB,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CACA,CAAA,EAEA9G,MAAAC,QAAAkf,EAAAxgB,OAAA,GAC0BA,EAAAA,KAAS0I,EAAO1I,QAAA,SAAA6J,EAAAokB,GAEXV,EAAAtkB,KAAA2O,EAAA6V,cAAAQ,CAAA,CAAA,CACC,CAAA,EAGRT,EAAGpb,KAAkBoD,CAClBpD,KAAAA,QACAA,KAAkBQ,EAAlBR,EAAkBQ,OAAkBvV,IAAMiwB,EAAKna,KAAUnT,GAAAA,EAAQ,GAErEA,QAAAutB,CAEP,CAAA,CAEK/N,MACTgO,EAAAvkB,KAAA2O,EAAA6V,cAAAjN,CAAA,CAAA,CAKR,CAAA,EAGJ1N,EAAAU,KAAAxT,EAAA+S,KAAA,SAAAvT,EAAA2I,GACIiR,EAAYnQ,KAAYzJ,EAAA,KAAA2I,EAAA,GAAA,CACpB,CAAA,EAIJzK,IAAA0H,OAAA+M,IAAA,sBAAA,CACJyB,MAAA5T,EACAmI,MAAA7K,KAAA2iB,OACA7a,OAAA,CACc2N,KAAsB,EAAtB0M,EAAUvD,OAAY,IAAAuD,EAAA5c,KAAA,GAAA,EAAA,GAEvBod,QAAyBrE,CACzBzI,CAEH,CAAA,CAxrBN,EAssBAgJ,uBAAwB,WAGvBjK,IAAA0F,EAAAta,KAGD4U,IAAAlS,EAAA1C,KAAA8b,WAAA,EACJlH,IAAAwb,EAAA,GAgFY,OA9EZ1tB,EAAA8J,eAAA,SAAA,GAC8B,UAApB,OAAA6O,EAAU+G,SAEVre,MAAAC,QAAkBtB,EAAQA,OAAO0f,GAIvC5M,EAAAU,KAAAxT,EAAAA,QAAA,SAAA6J,EAAA2W,GAMarN,GAASsD,WAL1B+J,EAAA1W,eAAA,MAAA,GAAA,UAAA,OAAA0W,EAAAvP,KACAuP,EAAAvP,KACA,UAIwBgP,MAAM3e,QAAAkf,EAAAxgB,OAAA,GACf8S,EAAAU,KAAAgN,EAAAxgB,QAAA,SAAA6J,EAAAokB,GACgB/b,IAAGoP,EAAa4M,EAAYpkB,eAAc,MAAA,GAAA,GAAA,CAAA,SAAA,UAAAnB,QAAA,OAAAslB,EAAAhrB,IAAA,EACjEgrB,EAAAhrB,KACH,GAILqe,GAAA,KAAAA,IAK2BjgB,MAAAC,QAAAsW,EAAAqI,MAAA,EAEOnN,EAAEU,KAAAoE,EAAAqI,OAAA,SAAApW,EAAA6W,GACIzd,GAAIyd,GAAOuN,EAAA9lB,MAErB,OADfulB,EAAAzkB,KAAAqY,CAAA,EACe,CAAA,CAElB,CAAA,EAEP1J,EAAAqI,QAAAgO,EAAA9lB,OAGDulB,EAAAzkB,KAAAqY,CAAA,EAEJ,CAAA,MAGc5K,CAEGvD,IAASsD,EAAU+J,EAAA1W,eAAA,MAAA,GAAA,GAAA,CAAA,SAAA,UAAAnB,QAAA,OAAA6X,EAAAvd,IAAA,EACxBud,EAAAvd,KACJ,GAIeqe,GAAyB,KAARpW,IAKhC7J,MAAAC,QAAAsW,EAAAqI,MAAA,EAEanN,EAAAU,KAAAoE,EAAAqI,OAAA,SAAApW,EAAA6W,GACW,GAAAA,GAAeF,EAAOrY,MAE1C,OADyB6Y,EAAS/X,KAAAqY,CAAA,EAClC,CAAA,CAGclH,CAAAA,EAGXxC,EAAAqI,QAAAO,EAAArY,OACYulB,EAAgBzkB,KAAEqY,CAAA,EAErB,CAEP,CAAA,EAKD5jB,IAAOuF,OAAIkP,IAAK,sBAAU,CAC1BwO,MAAS3gB,EACboF,OAAA,CACJsoB,gBAAAA,CACH,CAGD,CAAA,CACJ,EAaID,cAAA,SAAAjN,GAEJtO,IAAAyb,EAAA,GACAzb,IAAAoP,EAAAd,EAAA1W,eAAA,MAAA,GAAA,GAAA,CAAA,SAAA,UAAAnB,QAAA,OAAA6X,EAAAvd,IAAA,EACYud,EAAApb,KAEApF,GA0BF,OAvBF8S,EAAAU,KAAO9V,EAAU,SAAK8B,EAAA2I,GACN,SAAJ3I,GACDmuB,EAAU1kB,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CAEjByL,CAAAA,EAGFvS,MAAAC,QAAAhE,KAAA2iB,MAAA,EACLnN,EAAAU,KAAAlW,KAAA2iB,OAAA,SAAApW,EAAA6W,GAGD,GAAAA,GAAAF,EAAArY,MAEJ,OADAwlB,EAAA1kB,KAAA,qBAAA,EACA,CAAA,CAEIoX,CAAAA,EAIejb,KAAO+M,QAAIqO,EAAArY,OAClByL,EAAc3K,KAAA,qBAAA,EAGhB,CACLgI,KAAA,SAGDhO,KAAAqe,EACJvO,KAAA,EAAA4a,EAAAlvB,OAAA,IAAAkvB,EAAA9qB,KAAA,GAAA,EAAA,EACA,CACA,CAjuBA,EAEA4U,aAmuBY9D,OAAAia,OAAA,CAjuBR5N,IAouBI,GAnuBJjM,MAouBQoa,GAnuBR9O,MAouBQ+O,KAnuBR9O,OAquBQ,EApuBRW,OAwuBQoO,GAvuBRlb,SAyuBW,CACHkb,KAAAA,SAxuBJ7uB,KAyuBQ8uB,KAxuBR7M,MAyuBQ8M,KAxuBRjb,WA2uBiB,KA1uBjB6M,WA2uBkB,KACd3P,YAAC,KAEJ4P,UAAM,KACHiO,OAAAA,IA3uBJzL,OA4uBQ4L,IA3uBR7a,OA4uBQ8a,GA3uBRvN,SA4uBe,KA3uBfzK,SA8uBe,KA7uBfkC,KA8uBQ4V,CAAAA,EAIJjW,OAAC,IAhvBT,EASAkF,KAmvBQ6Q,SAAAA,EAAeK,EAAYhmB,GAE/BpL,KAAK+hB,MAAUhiB,EACXgxB,KAAAA,OAAeM,EACnBrxB,KAAA0iB,IAAA3iB,EAAA0a,MAAA,EAAA,WAAA/X,EAAA8J,eAAA,MAAA,EAAA9J,EAAAR,KAAAkJ,GACApL,KAAKyW,MAAU3B,kBAAkBoD,SAAYrC,EACzCkb,KAAAA,OAAeO,kBAAkBzb,cAAS0b,EAAS7uB,CAAA,EACvD1C,KAAA6V,SAAAf,kBAAAQ,kBAAAvV,EAAAC,KAAA6V,SAAAnT,CAAA,CAlvBJ,EA2vBHoZ,WAAA,WAED3B,OAAa9D,EAAAA,OAAOmb,CAAAA,EAAAA,GAAAA,KAAiB3b,QAAA,CAEjC6M,EA/uBAvJ,SAsvBU,SAAUyF,GAEhBuF,KAAOxB,OAAI3iB,KAAAse,SAAA,EACXtI,KAAAA,SAAgBmD,SAAA,CAAA,CAAAyF,EAEhBiE,EAAAA,YAAgB7iB,KAAAyW,KAAA,EAAA8E,KAChBrI,KAAW6P,cAAM,CACjBD,CArvBJ,EAOAjE,KAsvBI6E,SAAWtB,GAEXiC,EAAAA,gBAAcrkB,KAAA0iB,GAAA,EAAA7D,KAAAuD,CAAA,CArvBlB,EA+vBJ/G,KAAA,SAAA+G,GAEA5M,EAAA,gBAAAxV,KAAA0iB,GAAA,EAAArH,KAAA+G,CAAA,CACIlC,EAjvBA5B,SA2vBY,WAGJhE,OAAK4H,KAAAA,SAAa/I,SACpBnZ,KAAA2iB,OACLnN,EAAA,YAAAxV,KAAAyW,MAAA,QAAA,EAAA9I,IAAA,CAGD,EASAsS,SAAA,SAAApV,GAEJ,CAAA,SAAA,UAAAQ,QAAA,OAAAR,CAAA,EAAA,IAKQ7K,KAAK6V,OAASsD,EAMPnZ,KAAK6V,SAASsD,SACb3D,EAAC0M,YAAaliB,KAAAyW,KAAA,EAAA9Q,KAAAkF,CAAA,EAEzB2K,EAAA,YAAAxV,KAAAyW,MAAA,uBAAA,EAAA0M,KAAA,UAAAtY,IAAA7K,KAAA6V,SAAAwP,MAAA,EAIL,EAWAjM,SAAA,SAAA4C,EAAArW,GAEQ,IAOR0d,EACAkN,EACAhN,EATUvjB,KAAA6V,SAAUuM,WAOpBiB,EAAA7N,EAAA,YAAAxV,KAAAyW,KAAA,EACA8Z,EAAA/a,EAAA,eAAA6N,CAAA,EACAE,EAAA/N,EAAA,QAAA6N,CAAA,EAGQA,EAASxN,KAAQ,iBAAW,EAAAjI,OAAA,EACxByV,EAAOpE,KAAK0D,mBAAM,EAAA/U,OAAA,EAGT,OAAT6jB,GAEAlO,EAAOkO,YAAU,YAAgB,EACjClO,EAASC,YAAA,UAAA,GAGD7V,GACf4V,EAAAC,YAAA,YAAA,EAGDD,EAAAE,SAAA,UAAA,EAOQ,UAAA,OAJZ9d,EADA,KAAA,IAAAA,GAAA,UAAA,OAAA3F,KAAA6V,SAAA6N,UACA1jB,KAAA6V,SAAA6N,UAIY/d,IACJ4qB,EAAAzT,OAAA,+BAAAnX,EAAA,QAAA,IAMC4d,EAAMC,YAAA,UAAA,EACDD,EAAAE,SAAkB,YAAS,EAcjC,UAAA,OARR9d,EAJK,KAAA,IAAAA,EAGD,UAAA,OAAA3F,KAAA6V,SAAA8N,YACJ3jB,KAAA6V,SAAA8N,YAEAhe,GACA3F,KAAA+hB,MAAA/D,QAAA,EAAAyD,eAKQ9b,IAEI0d,EAAcvG,OAAc,iCAAWnX,EAAA,QAAA,GAvxB/C,EAOAqW,QA8xBY,WAEJ,OAAA,IA7xBR,EAOAlU,OAgyBY,WA9xBR8M,IAiyBSlS,EAAiB1C,KAAI8b,WAAa,EAC/BnW,EAAYoc,kBAAgBN,iBAAczhB,KAAA+hB,MAAArf,CAAA,EAElD,OAAAtC,IAAA0H,OAAA+M,IAAA,yBAAA,CAEI+D,GAAA5Y,KAAO2F,IACP0d,KAASrjB,KAAC8c,MACdtG,KAAAxW,KAAAyW,MACJH,MAAA5T,EACH4Y,QAAAtb,KAAA+iB,cAAA,EAGDc,aAAAA,CACJ,CAAA,CACA,EA7xBId,cAuyBiB,WAEbnO,IAAAuN,EAAA,GAEAvN,IAAI0P,EAAUtkB,KAAA8b,WAAA,EACVlH,IAAAmP,EAAiB,CACrBpQ,KAAA,WAEAwL,MAAW,mBACdtU,MAAAnI,EAAA2iB,MAGD,EAmCJ,OAhCA3iB,EAAAR,OACY6hB,EAAAjc,KAAW9H,KAAA6V,SAAA3T,MAKfQ,EAAWoF,WACHic,EAAQH,SAAA,YAGZtN,EAAO5T,eAAO,MAAA,GACc,UAA5B4Y,OAAS5Y,EAAKqgB,MACdc,MAAAA,QAAcA,EAAAA,IAAAA,IAErBE,EAAAjP,kBAAAY,UAAAqO,EAAArhB,EAAA+S,IAAA,GAKLzV,KAAA2iB,SAAAjgB,EAAA2iB,SACAtB,EAAAE,QAAA,WAMKzO,EAAAU,KAAA6N,EAAA,SAAA7hB,EAAA2I,GAGDsX,EAAAxW,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CACJ,CAAA,EAEAzK,IAAA0H,OAAA+M,IAAA,sBAAA,CACI4P,MAAc/hB,EAENyf,MAAAA,KAAcQ,OACd+O,KAAAA,KAAW3P,MAAK/D,QAAA,EAChBqG,OAAQ,CACR3hB,KAA+B,EAAjByf,EAAKrG,OAAYqG,EAAA5c,KAAA,GAAA,EAAA,EAE9BosB,CAIL,CAAA,CAxzBJ,CACJ,EAEAxX,aA8zBYzX,OAAY8tB,SAAS,CA5zB7B9N,IA+zBI,GA9zBJX,MA+zBQrf,KA9zBRsf,OA+zBI,EA9zBJW,OAg0BIjgB,GA/zBJmT,SAi0BQnT,CACAA,KAAAA,WAh0BJR,KAi0BUyiB,KAAgCR,MAClCzhB,KAERsT,WAAA,KAEAJ,MAAIlT,KACAA,WAAY,KAChBwQ,YAAA,KAEEgD,UAAKxT,KACHyf,OAAAA,KACF1M,KAAA,CACI0J,MAACzc,6CACH,EAn0BJkhB,SAo0BQ8N,KACJvY,SAAA,KACFkL,SAAA,KAEFhJ,KAAQ,CAAA,EAERL,OAAU,IAr0Bd,EASAkF,KAs0BM,SAAAngB,EAAA2C,EAAA0I,GAINpL,KAAA+hB,MAAAhiB,EACJC,KAAAgiB,OAAA5W,EACApL,KAAA0iB,IAAA3iB,EAAA0a,MAAA,EAAA,WAAA/X,EAAA8J,eAAA,MAAA,EAAA9J,EAAAR,KAAAkJ,GACApL,KAAAyW,MAAA3B,kBAAAoD,SAAA,EACIsM,KAAAA,OAAAA,kBAAoCzP,cAAAhV,EAAA2C,CAAA,EAEhC1C,KAAI0C,SAAcoS,kBAAaQ,kBAAAvV,EAAAC,KAAA6V,SAAAnT,CAAA,CAx0BnC,EAm1BJoZ,WAAA,WACA,OAAAtG,EAAAG,OAAA,CAAA,EAAA,GAAA3V,KAAA6V,QAAA,CACA,EAr0BIsD,SA+0Bc,SAAWyF,GA70BrB5e,KA+0BQsa,OAAsBta,KAAKse,SAAA,EAE/Bte,KAAC6V,SAAMsD,SAAA,CAAA,CAAAyF,EA90BXpJ,EAg1BQA,YAAaoc,KAAAA,KAAW,EAAArW,KACxBjB,KAAKqX,cAAc,CACvB,CA/0BR,EAy1BA3P,KAAM,SAAGI,GAETvM,EAAAA,gBAAU7V,KAAA0iB,GAAA,EAAA7D,KAAAuD,CAAA,CAj1BV,EAOA/G,KAk1BIyH,SAAWV,GAEX3M,EAAI,gBAAEzV,KAAA0iB,GAAA,EAAArH,KAAA+G,CAAA,CAj1BV,EAOA9D,SAk1BU,WAET,OAAAte,KAAA6V,SAAAsD,SAGDnZ,KAAA2iB,OACJnN,EAAA,YAAAxV,KAAAyW,MAAA,WAAA,EAAA9I,IAAA,CACA,EA70BIsS,SAq1BY,SAAaxF,GAEhBkI,CAAAA,SAAW7N,UAAAA,QAAkBC,OAAAA,CAAchV,EAAI,IAM5DC,KAAA2iB,OAAA9X,EAEA7K,KAAA6V,SAAAsD,SACI2C,EAAU,YAAc9b,KAAAyW,KAAA,EAAA9Q,KAAAkF,CAAA,EAEvB2K,EAAA,YAAAxV,KAAAyW,MAAA,WAAA,EAAA9I,IAAA9C,CAAA,EAIL,EAcIuO,SAAA,SAAA4C,EAAArW,GAEJ,IAKK0d,EAGDmN,EARJxwB,KAAA6V,SAAAsD,WAKKkK,EAAA7N,EAAA,YAAAxV,KAAAyW,KAAA,EAGD+Z,EAAAhb,EAAA,WAAA6N,CAAA,EAEJA,EAAApE,KAAA,iBAAA,EAAArR,OAAA,EACAyV,EAAApE,KAAA,mBAAA,EAAArR,OAAA,EAGyB,OAAfoO,GACLwU,EAAAhN,YAAA,YAAA,EAGDgN,EAAAhN,YAAA,UAAA,GAEJxH,GACAwU,EAAAhN,YAAA,YAAA,EACYgN,EAAE/M,SAAY,UAAA,EAW1B,UAAA,OAHI9d,EAHC,KAAA,IAAAA,GAAA,UAAA,OAAA3F,KAAA6V,SAAA6N,UAGD1jB,KAAA6V,SAAA6N,UAGJ/d,IACc0d,EAAUxY,OAAO,+BAAAlF,EAAA,QAAA,IAIvB6qB,EAAAhN,YAAA,UAAA,EAEKb,EAAS9X,SAAK,YAAA,EAIM4L,KAAAA,IAAR9Q,IACV,UAAA,OAAA3F,KAAA6V,SAAA8N,YACCN,EAAYrjB,KAAI6xB,SAAalO,YAGbmO,CAAIjnB,GAAM7K,KAAA6V,SAAA+N,WAEvBje,EAAA3F,KAAA+hB,MAAA/D,QAAA,EAAAyD,iBAIC,UAAA,OAAA9b,GACF0d,EAAAvG,OAAA,iCAAAnX,EAAA,QAAA,GA72Bd,EA03BAyT,QAAQ,WAGAxE,IAAA0P,EAAA9O,EAAA,YAAAxV,KAAAyW,MAAA,WAAA,EAGJ,GAAI4M,EAAAA,GACAiB,OAAaA,EAACC,GAAO,QAAElB,CAn3B/B,EAOAvb,OAy3BY,WAEJ8M,IAAAlS,EAAA1C,KAAA8b,WAAA,EAEI+H,EAAW/O,kBAAesB,iBAAApW,KAAA+hB,MAAArf,CAAA,EAE9B,OAAAtC,IAAA0H,OAAA+M,IAAA,yBAAA,CACH+D,GAAM5Y,KAAA0iB,IACH4B,KAAMd,KAAAA,MACNc,KAAMb,KAAShN,MAEXH,MAAO3Q,EACP2V,QAAWtb,KAAK6V,cAAS8N,EACrBhe,aAAYkQ,CA13BxB,CAAC,CACL,EAo4BAkN,cAAC,WAILnO,IAAAuN,EAAA,GACAvN,IAAAlS,EAAA1C,KAAA8b,WAAA,EAqCA,OAnCapZ,EAAA8J,eAAY,MAAA,GAEW,UAAxB8X,OAAS5hB,EAAC+S,MAEA,OAAV6O,EAAU7O,MACV1R,CAAAA,MAAOugB,QAAS5hB,EAAS+S,IAAA,IAG7B/S,EAAW+S,KAAA,IAKnB/S,EAAAR,OACAQ,EAAA+S,KAAAvT,KAAAlC,KAAA6V,SAAA3T,MAIYQ,EAAekT,QACfiO,EAAAA,KAAe/O,kBAAkBsB,UAE3B,CAACtO,MAAO+M,SAAInS,EAAAkT,KAAA,EACVlT,EAAI+S,IACR,GAEJa,EAAO5T,WACP4Y,EAAS7F,KAAKsN,SAAc,YAGnCvN,EAAAU,KAAAxT,EAAA+S,KAAA,SAAAvT,EAAA2I,GAGDsX,EAAAxW,KAAAzJ,EAAA,KAAA2I,EAAA,GAAA,CACJ,CAAA,EAEAzK,IAAA0H,OAAA+M,IAAA,wBAAA,CACIkO,MAAergB,EAEXmI,MAA6B,OAAjBgL,KAAAA,OACF7V,KAACwkB,OAAAA,GAEd1c,OAAA,CAGD2N,KAAA,EAAA0M,EAAAhhB,OAAA,IAAAghB,EAAA5c,KAAA,GAAA,EAAA,EACJ,CACA,CAAA,CACA,CA54BA,EAEA4U,aA84BYkK,OAAQoM,QAAS,CA54BzB/N,IA84BI,GA74BJjM,MA+4BW/T,GA94BXqf,MAm5BQrf,KAl5BRigB,OAm5BI,KAl5BJoP,QAo5BQrvB,KAn5BRsvB,YAo5BgBvc,KAn5BhBI,SAo5BI,CAEAnT,KAAQ+S,UACR/S,MAAQ+S,KAERO,WAAYJ,KACRlT,MAAO,KAr5BXsW,SAs5BiB,KAAyBC,SAC3B,KAEfoY,OAAA,KAEAE,UAAY3N,KACRlhB,UAAQ+S,KACZ/S,QAAA,GAGAmgB,WAAYrW,KAIR9J,YAAa+K,KAEb+H,SAAO9S,KA75BXyW,SA85BY2L,CAAAA,EA75BZzJ,KA+5BUnF,CAAAA,EA95BV8E,OA+5BY8J,IA95BhB,EASA5E,KAk6BI,SAAWpY,EAAO+M,EAAIzJ,GAElBsZ,KAAAA,MAAYA,EACZ7Z,KAAKmX,OAAa5W,EAClBtD,KAAAA,IAAQ/H,EAAA0a,MAAA,EAAA,WAAA/X,EAAA8J,eAAA,MAAA,EAAA9J,EAAAR,KAAAkJ,GAj6BZpL,KAk6BQyV,MAAiBtU,kBAAiB+W,SAAGiK,EAj6B7CniB,KAk6BQqkB,YAAUA,kBAAAA,SAAAA,EACdrkB,KAAA2iB,OAAA7N,kBAAAC,cAAAhV,EAAA2C,CAAA,EACF1C,KAAA6V,SAAAf,kBAAAQ,kBAAAvV,EAAAC,KAAA6V,SAAAnT,CAAA,EAINkS,IAAA0F,EAAAta,KAEJD,EAAAoS,GAAA,oBAAA,WACAmI,EAAAzE,SAAAsD,UACIqL,EAAAA,YAAwB,CAGpB,CAAA,CAp6BJ,EAOA1I,WAu6BiB,WAt6Bb,OAs6B+BjR,EAAK8K,OAAGb,CAAAA,EAAAA,GAAAA,KAAkB8B,QAAAA,CAr6B7D,EAOAuC,SAi6BY,SAAWyF,GA/5BnB5e,KA+5BsF2iB,OAAA3iB,KAAAse,SAAA,EAClFte,KAAA6V,SAAAsD,SAAA,CAAA,CAAAyF,EAGAhX,EAAAA,YAAgB5H,KAAAyW,KAAA,EAAA8E,KAChBvb,KAAA+iB,cAAA,CACJ,EAEO3iB,KAAI0H,SAAWqR,UAClB7C,KAAO5T,YAAO,CA95BtB,EAOAmc,KAAM,SAAUuD,GAEZ5M,EAAE,gBAAkBxV,KAAK0iB,GAAG,EAAE7D,KAAKuD,GAAY,CAAC,CACpD,EAOA/G,KAAM,SAAU+G,GAEZ5M,EAAE,gBAAkBxV,KAAK0iB,GAAG,EAAErH,KAAK+G,GAAY,CAAC,CACpD,EAOA9D,SAAU,WAEN,MAAIte,CAAAA,KAAK6V,SAASsD,UAGPnZ,KAAK+xB,QAAU/xB,KAAK+xB,QAAQnB,WAAW,EAAI5wB,KAAK2iB,MAE/D,EAOA1C,SAAU,SAAUpV,GAEhB7K,KAAK2iB,OAAS9X,EAEV7K,KAAK6V,SAASsD,SACd3D,EAAE,YAAcxV,KAAKyW,KAAK,EAAE9Q,KAAKkF,CAAK,EAElC7K,KAAK+xB,SACL/xB,KAAK+xB,QAAQE,WAAWpnB,CAAK,CAGzC,EAQAuO,SAAU,SAAU4C,EAASrW,GAEzB,IAII0d,EAJArjB,KAAK6V,SAASsD,YAIdkK,EAAY7N,EAAE,YAAcxV,KAAKyW,KAAK,GAEhCwI,KAAK,eAAe,EAAErR,OAAO,EACvCyV,EAAUpE,KAAK,cAAc,EAAErR,OAAO,EAEtB,OAAZoO,IAIAA,EAKoB,UAAhB,OAHArW,EADgB,KAAA,IAATA,GAA2D,UAAnC,OAAO3F,KAAK6V,SAAS6N,UAC7C1jB,KAAK6V,SAAS6N,UAGd/d,IACP0d,EAAUvG,OAAO,kCAAoCnX,EAAO,QAAQ,GAIpD,KAAA,IAATA,IACkC,UAArC,OAAO3F,KAAK6V,SAAS8N,YACrBhe,EAAO3F,KAAK6V,SAAS8N,YAEb,CAAEhe,GAAQ3F,KAAK6V,SAAS+N,WAChCje,EAAO3F,KAAK+hB,MAAM/D,QAAQ,EAAEyD,iBAIhB,UAAhB,OAAO9b,GACP0d,EAAUvG,OAAO,iCAAmCnX,EAAO,QAAQ,IAG/E,EAOAqW,QAAS,WAEL,MAAA,EAAIhc,KAAK6V,SAAS+N,UAAc5jB,CAAAA,KAAK6V,SAASsD,UAClC,CAAEnZ,KAAKse,SAAS,EAIhC,EAOAxW,OAAQ,WAEJ8M,IAAIlS,EAAe1C,KAAK8b,WAAW,EAC/B+H,EAAe/O,kBAAkBsB,iBAAiBpW,KAAK+hB,MAAOrf,CAAO,EAEzE,OAAOtC,IAAI0H,OAAO+M,IAAI,yBAA0B,CAC5C+D,GAAI5Y,KAAK0iB,IACT3iB,KAAOC,KAAK+hB,MACZvL,KAAMxW,KAAKyW,MACXH,MAAO5T,EACP4Y,QAAStb,KAAK+iB,cAAc,EAC5Bc,aAAcA,CAClB,CAAC,CACL,EAOAd,cAAe,WAEXnO,IAAIlS,EAAU1C,KAAK8b,WAAW,EAE9B,OAAO1b,IAAI0H,OAAO+M,IAAI,uBAAwB,CAC1CyB,MAAO5T,EACPmI,MAAuB,OAAhB7K,KAAK2iB,OAAkB3iB,KAAK2iB,OAAS,GAC5CuP,WAAYlyB,KAAKgyB,WACrB,CAAC,CACL,EAOA9P,YAAa,WAET,GAAIliB,CAAAA,KAAK6V,SAASsD,SAAlB,CAIAvE,IAAImc,EAAiB,GACjBF,EAAiB7wB,KACjB8wB,EAAiB,UAAY9wB,KAAKgyB,aAMlCjB,EAJiC,UAAjC,OAAO/wB,KAAK6V,SAASnT,SACrB,CAAEqB,MAAMC,QAAQhE,KAAK6V,SAASnT,OAAO,GACO,EAA5CgI,OAAOwQ,KAAKlb,KAAK6V,SAASnT,OAAO,EAAEvB,OAElBnB,KAAK6V,SAASnT,QAEE,WAA1B1C,KAAK6V,SAASnT,QACJ,CACbsuB,QAAS,6BACTC,QAAS,qJAGTkB,QAAS,CAAA,EACThB,SAAU,CAAA,CACd,EAGiB,CACbD,UAAW,CAAA,EACXC,SAAU,CAAA,EACVH,QAAS,yQAGTmB,QAAS,gDACTlB,QAAS,uUAIb,GAGW9D,SAAW,WAAantB,KAAKgyB,YAEoB,GAA5D,CAAC,SAAU,UAAU3mB,QAAQ,OAAOrL,KAAK6V,SAASD,KAAK,IACvDmb,EAAenb,MAAQ5V,KAAK6V,SAASD,OAE0B,GAA/D,CAAC,SAAU,UAAUvK,QAAQ,OAAOrL,KAAK6V,SAASmD,QAAQ,IAC1D+X,EAAeqB,UAAYpyB,KAAK6V,SAASmD,UAEsB,GAA/D,CAAC,SAAU,UAAU3N,QAAQ,OAAOrL,KAAK6V,SAASoD,QAAQ,IAC1D8X,EAAeK,UAAYpxB,KAAK6V,SAASoD,UAEoB,GAA7D,CAAC,SAAU,UAAU5N,QAAQ,OAAOrL,KAAK6V,SAASwb,MAAM,IACxDN,EAAeM,OAASrxB,KAAK6V,SAASwb,QAE0B,GAAhE,CAAC,SAAU,UAAUhmB,QAAQ,OAAOrL,KAAK6V,SAAS0b,SAAS,IAC3DR,EAAeO,WAAatxB,KAAK6V,SAAS0b,WAEsB,GAAhE,CAAC,SAAU,UAAUlmB,QAAQ,OAAOrL,KAAK6V,SAASwc,SAAS,IAC3DtB,EAAeuB,WAAatyB,KAAK6V,SAASwc,WAG9CE,QAAQrS,KAAK6Q,CAAc,EAAEyB,KAAK,WAC9B3B,EAAKkB,QAAUQ,QAAQtvB,IAAI6tB,CAAU,CACzC,CAAC,CA5DD,CA6DJ,CACJ,EAEA3W,aAAa9D,OAAOmb,eAAiB,CAEjC9O,IAAK,GACLjM,MAAO,GACPsL,MAAO,KACPC,OAAQ,EACR2P,eAAgB,CAAA,EAChBhP,OAAQ,GACR9M,SAAU,CACNlC,KAAM,WACNzR,KAAM,KACNiiB,MAAO,KACPnO,WAAY,KACZJ,MAAO,KACPiN,WAAY,KACZ3P,YAAa,KACb4P,UAAW,KACXsB,OAAQ,KACR3O,KAAM,CACF9B,KAAM,WACNwL,MAAO,2DACX,EACAyE,SAAU,KACVD,YAAa,KACbD,UAAW,KACXvK,SAAU,KACVkL,SAAU,KACVhJ,KAAM,CAAA,EACNoX,QAAS,CAAA,EACTzX,OAAQ,IACZ,EASAkF,KAAM,SAAUngB,EAAM2C,EAAS0I,GAE3BpL,KAAK+hB,MAAWhiB,EAChBC,KAAKgiB,OAAW5W,EAChBpL,KAAK0iB,IAAW3iB,EAAK0a,MAAM,EAAI,WAAa/X,EAAQ8J,eAAe,MAAM,EAAI9J,EAAQR,KAAOkJ,GAC5FpL,KAAKyW,MAAW3B,kBAAkBoD,SAAS,EAC3ClY,KAAK2iB,OAAW7N,kBAAkBC,cAAchV,EAAM2C,CAAO,EAC7D1C,KAAK6V,SAAWf,kBAAkBQ,kBAAkBvV,EAAMC,KAAK6V,SAAUnT,CAAO,EAGhFkS,IAAI0F,EAAOta,KAEXD,EAAKoS,GAAG,oBAAqB,WACzBmI,EAAK4H,YAAY,CACrB,CAAC,CACL,EAOApG,WAAY,WACR,OAAOtG,EAAEG,OAAO,CAAA,EAAM,GAAI3V,KAAK6V,QAAQ,CAC3C,EAOAsD,SAAU,SAAUyF,GAEhB5e,KAAK2iB,OAAoB3iB,KAAKse,SAAS,EACvCte,KAAK6V,SAASsD,SAAW,CAAC,CAAEyF,EAE5BpJ,EAAE,YAAcxV,KAAKyW,KAAK,EAAE8E,KACxBvb,KAAK+iB,cAAc,CACvB,EAEO/iB,KAAK6V,SAASsD,UACjBnZ,KAAKkiB,YAAY,CAEzB,EAOArD,KAAM,SAAUuD,GAEZ5M,EAAE,gBAAkBxV,KAAK0iB,GAAG,EAAE7D,KAAKuD,CAAQ,CAC/C,EAOA/G,KAAM,SAAU+G,GAEZ5M,EAAE,gBAAkBxV,KAAK0iB,GAAG,EAAErH,KAAK+G,CAAQ,CAC/C,EAOA9D,SAAU,WAEN,IAIImT,EAJJ,OAAIzxB,KAAK6V,SAASsD,SACPnZ,KAAK2iB,OAKqB,KAAA,KAFjC8O,EAAOjc,EAAE,YAAcxV,KAAKyW,MAAQ,yBAAyB,EAAEic,GAAG,CAAC,GAEvDjd,KAAK,UAAU,GAA+C,CAAA,IAA1Bgc,EAAKhc,KAAK,UAAU,EAC7D,GAGJgc,EAAK9jB,IAAI,CACpB,EAOAsS,SAAU,SAAUpV,GAEZ,CAAC,SAAU,UAAUQ,QAAQ,OAAOR,CAAK,EAAI,IAIjD7K,KAAK2iB,OAAS9X,EAEV7K,KAAK6V,SAASsD,SACd3D,EAAE,YAAcxV,KAAKyW,KAAK,EAAE9Q,KAAKkF,EAAQ,SAAW,EAAE,EAEtD2K,EAAE,YAAcxV,KAAKyW,MAAQ,yBAAyB,EAAE9I,IAAI9C,CAAK,EAEzE,EAQAuO,SAAU,SAAU4C,EAASrW,GAEzB,IAII0d,EACAiB,EALAtkB,KAAK6V,SAASsD,WAIdkK,EAAY7N,EAAE,YAAcxV,KAAKyW,KAAK,EACtC6N,EAAY9O,EAAE,yBAA0B6N,CAAS,EAErDA,EAAUpE,KAAK,iBAAiB,EAAErR,OAAO,EACzCyV,EAAUpE,KAAK,mBAAmB,EAAErR,OAAO,EAE3B,OAAZoO,GACAsI,EAAMd,YAAY,YAAY,EAC9Bc,EAAMd,YAAY,UAAU,GAErBxH,GACPsI,EAAMd,YAAY,YAAY,EAC9Bc,EAAMb,SAAS,UAAU,EAML,UAAhB,OAHA9d,EADgB,KAAA,IAATA,GAA2D,UAAnC,OAAO3F,KAAK6V,SAAS6N,UAC7C1jB,KAAK6V,SAAS6N,UAGd/d,IACP0d,EAAUvG,OAAO,uCAAyCnX,EAAO,QAAQ,IAG7E2e,EAAMd,YAAY,UAAU,EAC5Bc,EAAMb,SAAS,YAAY,EAEP,KAAA,IAAT9d,IACkC,UAArC,OAAO3F,KAAK6V,SAAS8N,YACrBhe,EAAO3F,KAAK6V,SAAS8N,YAEb,CAAEhe,GAAQ3F,KAAK6V,SAAS+N,WAChCje,EAAO3F,KAAK+hB,MAAM/D,QAAQ,EAAEyD,iBAIhB,UAAhB,OAAO9b,GACP0d,EAAUvG,OAAO,yCAA2CnX,EAAO,QAAQ,GAGvF,EAOAqW,QAAS,WAEL,IAIIsI,EAJJ,MAAK,EAAEtkB,KAAK2xB,gBAAkB3xB,CAAAA,KAAK6V,SAASsD,YAIxCmL,EAAQ9O,EAAE,YAAcxV,KAAKyW,MAAQ,yBAAyB,GAExDic,GAAG,CAAC,EAAE/kB,IAAI,IAAM2W,EAAMoO,GAAG,CAAC,EAAE/kB,IAAI,IAItC2W,EAAM,GACCA,EAAMoO,GAAG,CAAC,EAAEnO,GAAG,QAAQ,EAG3B,KACX,EAOAzc,OAAQ,WAEJ8M,IAAIlS,EAAe1C,KAAK8b,WAAW,EAC/B+H,EAAe/O,kBAAkBsB,iBAAiBpW,KAAK+hB,MAAOrf,CAAO,EAEzE,OAAOtC,IAAI0H,OAAO+M,IAAI,yBAA0B,CAC5C+D,GAAI5Y,KAAK0iB,IACT3iB,KAAMC,KAAK+hB,MACXvL,KAAMxW,KAAKyW,MACXH,MAAO5T,EACP4Y,QAAStb,KAAK+iB,cAAc,EAC5Bc,aAAcA,CAClB,CAAC,CACL,EAOAd,cAAe,WAEX,OAAO/iB,KAAK6V,SAASsD,SACfnZ,KAAKwkB,uBAAuB,EAC5BxkB,KAAKykB,eAAe,CAC9B,EAOAA,eAAgB,WAEZ7P,IAAIuN,EAAc,GACduP,EAAc,GAClB9c,IACIlS,EAAc1C,KAAK8b,WAAW,EA4C9BrE,GA1CJzX,KAAK2xB,eAAmBjvB,CAAAA,EAAQ+vB,SAE1B,CAAEzyB,KAAK2iB,OAENjgB,EAAQ8J,eAAe,MAAM,GACR,UAAxB,OAAO9J,EAAQ+S,MACE,OAAjB/S,EAAQ+S,MACR1R,CAAAA,MAAMC,QAAQtB,EAAQ+S,IAAI,IAE1B/S,EAAQ+S,KAAO,IAGZzV,KAAK2xB,iBACRjvB,EAAQ+S,KAAKkd,SAAW,IAGxBjwB,EAAQR,OACRQ,EAAQ+S,KAAKvT,KAAOlC,KAAK6V,SAAS3T,MAGtCQ,EAAQ+S,KAAK5K,MAAQ7K,KAAK2iB,OAAS,SAAW,GAE1CjgB,EAAQkT,QACRlT,EAAQ+S,KAAOX,kBAAkBY,UAC7B,CAAEiP,MAAO,SAAWjiB,EAAQkT,KAAM,EAClClT,EAAQ+S,IACZ,GAGA/S,EAAQkhB,WACRlhB,EAAQ+S,KAAKmO,SAAW,YAG5BpO,EAAEU,KAAKxT,EAAQ+S,KAAM,SAAUvT,EAAM2I,GACjCsX,EAAWxW,KAAKzJ,EAAO,KAAO2I,EAAQ,GAAG,CAC7C,CAAC,EACD2K,EAAEU,KAAKxT,EAAQ+S,KAAM,SAAUvT,EAAM2I,GAC7B,CAAC,OAAQ,SAASQ,QAAQnJ,CAAI,EAAI,GAClCwvB,EAAY/lB,KAAKzJ,EAAO,KAAO2I,EAAQ,GAAG,CAElD,CAAC,EAEU7K,KAAK+hB,MAAM/D,QAAQ,GAE9B,OAAO5d,IAAI0H,OAAO+M,IAAI,8BAA+B,CACjDyB,MAAO5T,EACPmI,MAAuB,OAAhB7K,KAAK2iB,OAAkB3iB,KAAK2iB,OAAS,GAC5ClL,KAAMA,EACNmb,SAAU5yB,KAAK2xB,eAAiBla,EAAKmK,OAASnK,EAAKkK,OACnD7Z,OAAQ,CACJ2N,KAA0B,EAApB0M,EAAWhhB,OAAc,IAAMghB,EAAW5c,KAAK,GAAG,EAAK,GAC7D0Q,MAA4B,EAArByb,EAAYvwB,OAAc,IAAMuwB,EAAYnsB,KAAK,GAAG,EAAK,GAChE8e,SAvDU,EAwDd,CACJ,CAAC,CACL,EAOAG,uBAAwB,WAEpB5P,IAAIlS,EAAU1C,KAAK8b,WAAW,EAE9B,OAAO1b,IAAI0H,OAAO+M,IAAI,8BAA+B,CACjDyB,MAAO5T,EACPmI,MAAO7K,KAAK2iB,OAAS,SAAW,GAChCnM,KAAMxW,KAAKyW,KACf,CAAC,CACL,EAOAyL,YAAa,WAETtN,IAAI0F,EAAOta,KAEXwV,EAAE,YAAcxV,KAAKyW,MAAQ,uBAAuB,EAAE4L,MAAM,SAAU/hB,GAClEsU,IAAIie,EAAard,EAAExV,IAAI,EAAEgI,KAAK,QAAQ,EAClC4pB,EAAapc,EAAExV,IAAI,EAAEgI,KAAK,QAAQ,EAElCsS,EAAKqX,gBACLnc,EAAE,YAAc8E,EAAK7D,MAAQ,oBAAoB,EAAEhB,KAAK,WAAY,UAAU,EAC9ED,EAAExV,IAAI,EAAE2F,KAAKktB,CAAU,EACvBvY,EAAKqX,eAAiB,CAAA,IAGtBnc,EAAE,YAAc8E,EAAK7D,MAAQ,oBAAoB,EAAE2V,WAAW,UAAU,EACxE5W,EAAExV,IAAI,EAAE2F,KAAKisB,CAAU,EACvBtX,EAAKqX,eAAiB,CAAA,EAE9B,CAAC,CACL,CACJ,EAEAxX,aAAa9D,OAAOwG,KAAO,CAEvB6F,IAAK,GACLjM,MAAO,GACPsL,MAAO,KACPC,OAAQ,EACRW,OAAQ,GACR9M,SAAU,CACNlC,KAAM,OACNzR,KAAM,KACNiiB,MAAO,KACPnO,WAAY,KACZJ,MAAO,KACPiN,WAAY,KACZ3P,YAAa,KACb4P,UAAW,KACXsB,OAAQ,KACR3O,KAAM,CACF0J,MAAO,6CACX,EACAyE,SAAU,KACVD,YAAa,KACbD,UAAW,KACXvK,SAAU,KACVkL,SAAU,KACVhJ,KAAM,CAAA,EACNL,OAAQ,IACZ,EASAkF,KAAM,SAAUngB,EAAM2C,EAAS0I,GAE3BpL,KAAK+hB,MAAWhiB,EAChBC,KAAKgiB,OAAW5W,EAChBpL,KAAK0iB,IAAW3iB,EAAK0a,MAAM,EAAI,WAAa/X,EAAQ8J,eAAe,MAAM,EAAI9J,EAAQR,KAAOkJ,GAC5FpL,KAAKyW,MAAW3B,kBAAkBoD,SAAS,EAC3ClY,KAAK2iB,OAAW7N,kBAAkBC,cAAchV,EAAM2C,CAAO,EAC7D1C,KAAK6V,SAAWf,kBAAkBQ,kBAAkBvV,EAAMC,KAAK6V,SAAUnT,CAAO,CACpF,EAOAoZ,WAAY,WACR,OAAOtG,EAAEG,OAAO,CAAA,EAAM,GAAI3V,KAAK6V,QAAQ,CAC3C,EAOAsD,SAAU,SAAUyF,GAEhB5e,KAAK2iB,OAAoB3iB,KAAKse,SAAS,EACvCte,KAAK6V,SAASsD,SAAW,CAAC,CAAEyF,EAE5BpJ,EAAE,YAAcxV,KAAKyW,KAAK,EAAE8E,KACxBvb,KAAK+iB,cAAc,CACvB,CACJ,EAOAlE,KAAM,SAAUuD,GAEZ5M,EAAE,gBAAkBxV,KAAK0iB,GAAG,EAAE7D,KAAKuD,CAAQ,CAC/C,EAOA/G,KAAM,SAAU+G,GAEZ5M,EAAE,gBAAkBxV,KAAK0iB,GAAG,EAAErH,KAAK+G,CAAQ,CAC/C,EAOA9D,SAAU,WAEN,OAAOte,KAAK6V,SAASsD,SACfnZ,KAAK2iB,OACLnN,EAAE,YAAcxV,KAAKyW,MAAQ,QAAQ,EAAE,GAAGqc,KACpD,EAOA7S,SAAU,SAAUpV,GAEhB,GAAQA,aAAiBkoB,MAAaloB,aAAiB+R,SAOvD,GAHA5c,KAAK2iB,OAAS9X,EAGV7K,KAAK6V,SAASsD,SACd3D,EAAE,YAAcxV,KAAKyW,KAAK,EAAE9Q,KAAK,EAAE,MAChC,CACHiP,IAAIyO,EAAY,IAAIwO,aAEhBhnB,aAAiBkoB,KACjB1P,EAAU+B,MAAM0M,IAAIjnB,CAAK,EAGzB2K,EAAEU,KAAKrL,EAAO,SAAU0B,EAAKsQ,GACrBhS,aAAiBkoB,MACjB1P,EAAU+B,MAAM0M,IAAIjV,CAAI,CAEhC,CAAC,EAGLrH,EAAE,YAAcxV,KAAKyW,MAAQ,QAAQ,EAAE,GAAGqc,MAAQzP,EAAUyP,KAChE,CACJ,EAQA1Z,SAAU,SAAU4C,EAASrW,GAEzB,IAII0d,EACAiB,EALAtkB,KAAK6V,SAASsD,WAIdkK,EAAY7N,EAAE,YAAcxV,KAAKyW,KAAK,EACtC6N,EAAY9O,EAAE,QAAS6N,CAAS,EAEpCA,EAAUpE,KAAK,iBAAiB,EAAErR,OAAO,EACzCyV,EAAUpE,KAAK,mBAAmB,EAAErR,OAAO,EAE3B,OAAZoO,GACAsI,EAAMd,YAAY,YAAY,EAC9Bc,EAAMd,YAAY,UAAU,GAErBxH,GACPsI,EAAMd,YAAY,YAAY,EAC9Bc,EAAMb,SAAS,UAAU,EAML,UAAhB,OAHA9d,EADgB,KAAA,IAATA,GAA2D,UAAnC,OAAO3F,KAAK6V,SAAS6N,UAC7C1jB,KAAK6V,SAAS6N,UAGd/d,IACP0d,EAAUvG,OAAO,+BAAiCnX,EAAO,QAAQ,IAGrE2e,EAAMd,YAAY,UAAU,EAC5Bc,EAAMb,SAAS,YAAY,EAEP,KAAA,IAAT9d,IACkC,UAArC,OAAO3F,KAAK6V,SAAS8N,YACrBhe,EAAO3F,KAAK6V,SAAS8N,YAEb,CAAEhe,GAAQ3F,KAAK6V,SAAS+N,WAChCje,EAAO3F,KAAK+hB,MAAM/D,QAAQ,EAAEyD,iBAIhB,UAAhB,OAAO9b,GACP0d,EAAUvG,OAAO,iCAAmCnX,EAAO,QAAQ,GAG/E,EAOAqW,QAAS,WAELpH,IAAI0P,EAAQ9O,EAAE,YAAcxV,KAAKyW,MAAQ,QAAQ,EAEjD,OAAI6N,EAAM,GACCA,EAAMC,GAAG,QAAQ,EAGrB,IACX,EAOAzc,OAAQ,WAEJ8M,IAAIlS,EAAe1C,KAAK8b,WAAW,EAC/B+H,EAAe/O,kBAAkBsB,iBAAiBpW,KAAK+hB,MAAOrf,CAAO,EAEzE,OAAOtC,IAAI0H,OAAO+M,IAAI,yBAA0B,CAC5C+D,GAAI5Y,KAAK0iB,IACT3iB,KAAMC,KAAK+hB,MACXvL,KAAMxW,KAAKyW,MACXH,MAAO5T,EACP4Y,QAAStb,KAAK+iB,cAAc,EAC5Bc,aAAcA,CAClB,CAAC,CACL,EAOAd,cAAe,WAEX,OAAO/iB,KAAK6V,SAASsD,SACfnZ,KAAKwkB,uBAAuB,EAC5BxkB,KAAKykB,eAAe,CAC9B,EAOAA,eAAgB,WAEZ7P,IAAIuN,EAAe,GACfkC,EAAe,GACnBzP,IAAIlS,EAAe1C,KAAK8b,WAAW,EAC/B4I,EAAe5P,kBAAkBoD,SAAS,EAoD9C,OAlDOxV,EAAQ8J,eAAe,MAAM,GACR,UAAxB,OAAO9J,EAAQ+S,MACE,OAAjB/S,EAAQ+S,MACR1R,CAAAA,MAAMC,QAAQtB,EAAQ+S,IAAI,IAE1B/S,EAAQ+S,KAAO,IAGf/S,EAAQR,OACRQ,EAAQ+S,KAAKvT,KAAOlC,KAAK6V,SAAS3T,MAGtCQ,EAAQ+S,KAAK9B,KAAQjR,EAAQiR,KAC7BjR,EAAQ+S,KAAK5K,MAAwB,OAAhB7K,KAAK2iB,OAAkB3iB,KAAK2iB,OAAS,GAEtDjgB,EAAQkT,QACRlT,EAAQ+S,KAAOX,kBAAkBY,UAC7B,CAAEiP,MAAO,SAAWjiB,EAAQkT,KAAM,EAClClT,EAAQ+S,IACZ,GAGA/S,EAAQkhB,WACRlhB,EAAQ+S,KAAKmO,SAAW,YAIxBlhB,EAAQ8J,eAAe,UAAU,GACL,UAA5B,OAAO9J,EAAQ2hB,UACftgB,MAAMC,QAAQtB,EAAQ2hB,QAAQ,IAE9B3hB,EAAQ+S,KAAKhI,KAAOiX,EAEpBlP,EAAEU,KAAKxT,EAAQ2hB,SAAU,SAAU9X,EAAKsY,GACpCjQ,IAAIkQ,EAAe,GAEnBtP,EAAEU,KAAK2O,EAAgB,SAAU3iB,EAAM2I,GACnCia,EAAanZ,KAAKzJ,EAAO,KAAO2I,EAAQ,GAAG,CAC/C,CAAC,EAEDwZ,EAAS1Y,KAAK,CACV8J,KAA4B,EAAtBqP,EAAa3jB,OAAc,IAAM2jB,EAAavf,KAAK,GAAG,EAAK,EACrE,CAAC,CACL,CAAC,GAGLiQ,EAAEU,KAAKxT,EAAQ+S,KAAM,SAAUvT,EAAM2I,GACjCsX,EAAWxW,KAAKzJ,EAAO,KAAO2I,EAAQ,GAAG,CAC7C,CAAC,EAEMzK,IAAI0H,OAAO+M,IAAI,qBAAsB,CACxCyB,MAAO5T,EACPgiB,WAAYA,EACZ7Z,MAAuB,OAAhB7K,KAAK2iB,OAAkB3iB,KAAK2iB,OAAS,GAC5C7a,OAAQ,CACJ2N,KAA0B,EAApB0M,EAAWhhB,OAAc,IAAMghB,EAAW5c,KAAK,GAAG,EAAK,GAC7D8e,SAAUA,CACd,CACJ,CAAC,CACL,EAOAG,uBAAwB,WAEpB5P,IAAIlS,EAAU1C,KAAK8b,WAAW,EAC9BlH,IAAIjB,EAAU,OACV9I,EAAU7K,KAAK2iB,OACnB/N,IAAI6C,EAAUzX,KAAK+hB,MAAM/D,QAAQ,EAE7Btb,EAAQ8J,eAAe,MAAM,GAA6B,UAAxB,OAAO9J,EAAQiR,OACjDA,EAAOjR,EAAQiR,MAGnB,IACI,OAAQA,GACJ,IAAK,OAAkB9I,EAAQiK,kBAAkB8B,WAAW/L,CAAK,EAAG,MACpE,IAAK,iBAAkBA,EAAQiK,kBAAkBuC,eAAexM,CAAK,EAAG,MACxE,IAAK,QAAkBA,EAAQiK,kBAAkB0C,gBAAgB3M,EAAO4M,CAAI,EAAG,MAC/E,IAAK,OAAkB5M,EAAQiK,kBAAkB8C,eAAe/M,EAAO4M,CAAI,CAC/E,CAKJ,CAHE,MAAOnX,GACLsH,QAAQgW,MAAMtd,CAAC,CAEnB,CAEA,OAAOF,IAAI0H,OAAO+M,IAAI,qBAAsB,CACxCyB,MAAO5T,EACPmI,MAAOA,EACP2L,KAAMxW,KAAKyW,KACf,CAAC,CACL,CACJ,EAEO0D,YAEP,CAAE","file":"coreui-form.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.CoreUI = global.CoreUI || {}, global.CoreUI.form = factory());\n}(this, (function () { 'use strict';\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f();}else if(typeof define===\"function\"&&define.amd){define([],f);}else{var g;if(typeof window!==\"undefined\"){g=window;}else if(typeof global!==\"undefined\"){g=global;}else if(typeof self!==\"undefined\"){g=self;}else{g=this;}g.ejs=f();}})(function(){return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t);}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){\"use strict\";var fs=require(\"fs\");var path=require(\"path\");var utils=require(\"./utils\");var scopeOptionWarned=false;var _VERSION_STRING=require(\"../package.json\").version;var _DEFAULT_OPEN_DELIMITER=\"<\";var _DEFAULT_CLOSE_DELIMITER=\">\";var _DEFAULT_DELIMITER=\"%\";var _DEFAULT_LOCALS_NAME=\"locals\";var _NAME=\"ejs\";var _REGEX_STRING=\"(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)\";var _OPTS_PASSABLE_WITH_DATA=[\"delimiter\",\"scope\",\"context\",\"debug\",\"compileDebug\",\"client\",\"_with\",\"rmWhitespace\",\"strict\",\"filename\",\"async\"];var _OPTS_PASSABLE_WITH_DATA_EXPRESS=_OPTS_PASSABLE_WITH_DATA.concat(\"cache\");var _BOM=/^\\uFEFF/;var _JS_IDENTIFIER=/^[a-zA-Z_$][0-9a-zA-Z_$]*$/;exports.cache=utils.cache;exports.fileLoader=fs.readFileSync;exports.localsName=_DEFAULT_LOCALS_NAME;exports.promiseImpl=new Function(\"return this;\")().Promise;exports.resolveInclude=function(name,filename,isDir){var dirname=path.dirname;var extname=path.extname;var resolve=path.resolve;var includePath=resolve(isDir?filename:dirname(filename),name);var ext=extname(name);if(!ext){includePath+=\".ejs\";}return includePath};function resolvePaths(name,paths){var filePath;if(paths.some(function(v){filePath=exports.resolveInclude(name,v,true);return fs.existsSync(filePath)})){return filePath}}function getIncludePath(path,options){var includePath;var filePath;var views=options.views;var match=/^[A-Za-z]+:\\\\|^\\//.exec(path);if(match&&match.length){path=path.replace(/^\\/*/,\"\");if(Array.isArray(options.root)){includePath=resolvePaths(path,options.root);}else{includePath=exports.resolveInclude(path,options.root||\"/\",true);}}else{if(options.filename){filePath=exports.resolveInclude(path,options.filename);if(fs.existsSync(filePath)){includePath=filePath;}}if(!includePath&&Array.isArray(views)){includePath=resolvePaths(path,views);}if(!includePath&&typeof options.includer!==\"function\"){throw new Error('Could not find the include file \"'+options.escapeFunction(path)+'\"')}}return includePath}function handleCache(options,template){var func;var filename=options.filename;var hasTemplate=arguments.length>1;if(options.cache){if(!filename){throw new Error(\"cache option requires a filename\")}func=exports.cache.get(filename);if(func){return func}if(!hasTemplate){template=fileLoader(filename).toString().replace(_BOM,\"\");}}else if(!hasTemplate){if(!filename){throw new Error(\"Internal EJS error: no file name or template \"+\"provided\")}template=fileLoader(filename).toString().replace(_BOM,\"\");}func=exports.compile(template,options);if(options.cache){exports.cache.set(filename,func);}return func}function tryHandleCache(options,data,cb){var result;if(!cb){if(typeof exports.promiseImpl==\"function\"){return new exports.promiseImpl(function(resolve,reject){try{result=handleCache(options)(data);resolve(result);}catch(err){reject(err);}})}else{throw new Error(\"Please provide a callback function\")}}else{try{result=handleCache(options)(data);}catch(err){return cb(err)}cb(null,result);}}function fileLoader(filePath){return exports.fileLoader(filePath)}function includeFile(path,options){var opts=utils.shallowCopy(utils.createNullProtoObjWherePossible(),options);opts.filename=getIncludePath(path,opts);if(typeof options.includer===\"function\"){var includerResult=options.includer(path,opts.filename);if(includerResult){if(includerResult.filename){opts.filename=includerResult.filename;}if(includerResult.template){return handleCache(opts,includerResult.template)}}}return handleCache(opts)}function rethrow(err,str,flnm,lineno,esc){var lines=str.split(\"\\n\");var start=Math.max(lineno-3,0);var end=Math.min(lines.length,lineno+3);var filename=esc(flnm);var context=lines.slice(start,end).map(function(line,i){var curr=i+start+1;return(curr==lineno?\" >> \":\"    \")+curr+\"| \"+line}).join(\"\\n\");err.path=filename;err.message=(filename||\"ejs\")+\":\"+lineno+\"\\n\"+context+\"\\n\\n\"+err.message;throw err}function stripSemi(str){return str.replace(/;(\\s*$)/,\"$1\")}exports.compile=function compile(template,opts){var templ;if(opts&&opts.scope){if(!scopeOptionWarned){console.warn(\"`scope` option is deprecated and will be removed in EJS 3\");scopeOptionWarned=true;}if(!opts.context){opts.context=opts.scope;}delete opts.scope;}templ=new Template(template,opts);return templ.compile()};exports.render=function(template,d,o){var data=d||utils.createNullProtoObjWherePossible();var opts=o||utils.createNullProtoObjWherePossible();if(arguments.length==2){utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA);}return handleCache(opts,template)(data)};exports.renderFile=function(){var args=Array.prototype.slice.call(arguments);var filename=args.shift();var cb;var opts={filename:filename};var data;var viewOpts;if(typeof arguments[arguments.length-1]==\"function\"){cb=args.pop();}if(args.length){data=args.shift();if(args.length){utils.shallowCopy(opts,args.pop());}else{if(data.settings){if(data.settings.views){opts.views=data.settings.views;}if(data.settings[\"view cache\"]){opts.cache=true;}viewOpts=data.settings[\"view options\"];if(viewOpts){utils.shallowCopy(opts,viewOpts);}}utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA_EXPRESS);}opts.filename=filename;}else{data=utils.createNullProtoObjWherePossible();}return tryHandleCache(opts,data,cb)};exports.Template=Template;exports.clearCache=function(){exports.cache.reset();};function Template(text,opts){opts=opts||utils.createNullProtoObjWherePossible();var options=utils.createNullProtoObjWherePossible();this.templateText=text;this.mode=null;this.truncate=false;this.currentLine=1;this.source=\"\";options.client=opts.client||false;options.escapeFunction=opts.escape||opts.escapeFunction||utils.escapeXML;options.compileDebug=opts.compileDebug!==false;options.debug=!!opts.debug;options.filename=opts.filename;options.openDelimiter=opts.openDelimiter||exports.openDelimiter||_DEFAULT_OPEN_DELIMITER;options.closeDelimiter=opts.closeDelimiter||exports.closeDelimiter||_DEFAULT_CLOSE_DELIMITER;options.delimiter=opts.delimiter||exports.delimiter||_DEFAULT_DELIMITER;options.strict=opts.strict||false;options.context=opts.context;options.cache=opts.cache||false;options.rmWhitespace=opts.rmWhitespace;options.root=opts.root;options.includer=opts.includer;options.outputFunctionName=opts.outputFunctionName;options.localsName=opts.localsName||exports.localsName||_DEFAULT_LOCALS_NAME;options.views=opts.views;options.async=opts.async;options.destructuredLocals=opts.destructuredLocals;options.legacyInclude=typeof opts.legacyInclude!=\"undefined\"?!!opts.legacyInclude:true;if(options.strict){options._with=false;}else{options._with=typeof opts._with!=\"undefined\"?opts._with:true;}this.opts=options;this.regex=this.createRegex();}Template.modes={EVAL:\"eval\",ESCAPED:\"escaped\",RAW:\"raw\",COMMENT:\"comment\",LITERAL:\"literal\"};Template.prototype={createRegex:function(){var str=_REGEX_STRING;var delim=utils.escapeRegExpChars(this.opts.delimiter);var open=utils.escapeRegExpChars(this.opts.openDelimiter);var close=utils.escapeRegExpChars(this.opts.closeDelimiter);str=str.replace(/%/g,delim).replace(/</g,open).replace(/>/g,close);return new RegExp(str)},compile:function(){var src;var fn;var opts=this.opts;var prepended=\"\";var appended=\"\";var escapeFn=opts.escapeFunction;var ctor;var sanitizedFilename=opts.filename?JSON.stringify(opts.filename):\"undefined\";if(!this.source){this.generateSource();prepended+='  var __output = \"\";\\n'+\"  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n\";if(opts.outputFunctionName){if(!_JS_IDENTIFIER.test(opts.outputFunctionName)){throw new Error(\"outputFunctionName is not a valid JS identifier.\")}prepended+=\"  var \"+opts.outputFunctionName+\" = __append;\"+\"\\n\";}if(opts.localsName&&!_JS_IDENTIFIER.test(opts.localsName)){throw new Error(\"localsName is not a valid JS identifier.\")}if(opts.destructuredLocals&&opts.destructuredLocals.length){var destructuring=\"  var __locals = (\"+opts.localsName+\" || {}),\\n\";for(var i=0;i<opts.destructuredLocals.length;i++){var name=opts.destructuredLocals[i];if(!_JS_IDENTIFIER.test(name)){throw new Error(\"destructuredLocals[\"+i+\"] is not a valid JS identifier.\")}if(i>0){destructuring+=\",\\n  \";}destructuring+=name+\" = __locals.\"+name;}prepended+=destructuring+\";\\n\";}if(opts._with!==false){prepended+=\"  with (\"+opts.localsName+\" || {}) {\"+\"\\n\";appended+=\"  }\"+\"\\n\";}appended+=\"  return __output;\"+\"\\n\";this.source=prepended+this.source+appended;}if(opts.compileDebug){src=\"var __line = 1\"+\"\\n\"+\"  , __lines = \"+JSON.stringify(this.templateText)+\"\\n\"+\"  , __filename = \"+sanitizedFilename+\";\"+\"\\n\"+\"try {\"+\"\\n\"+this.source+\"} catch (e) {\"+\"\\n\"+\"  rethrow(e, __lines, __filename, __line, escapeFn);\"+\"\\n\"+\"}\"+\"\\n\";}else{src=this.source;}if(opts.client){src=\"escapeFn = escapeFn || \"+escapeFn.toString()+\";\"+\"\\n\"+src;if(opts.compileDebug){src=\"rethrow = rethrow || \"+rethrow.toString()+\";\"+\"\\n\"+src;}}if(opts.strict){src='\"use strict\";\\n'+src;}if(opts.debug){console.log(src);}if(opts.compileDebug&&opts.filename){src=src+\"\\n\"+\"//# sourceURL=\"+sanitizedFilename+\"\\n\";}try{if(opts.async){try{ctor=new Function(\"return (async function(){}).constructor;\")();}catch(e){if(e instanceof SyntaxError){throw new Error(\"This environment does not support async/await\")}else{throw e}}}else{ctor=Function;}fn=new ctor(opts.localsName+\", escapeFn, include, rethrow\",src);}catch(e){if(e instanceof SyntaxError){if(opts.filename){e.message+=\" in \"+opts.filename;}e.message+=\" while compiling ejs\\n\\n\";e.message+=\"If the above error is not helpful, you may want to try EJS-Lint:\\n\";e.message+=\"https://github.com/RyanZim/EJS-Lint\";if(!opts.async){e.message+=\"\\n\";e.message+=\"Or, if you meant to create an async function, pass `async: true` as an option.\";}}throw e}var returnedFn=opts.client?fn:function anonymous(data){var include=function(path,includeData){var d=utils.shallowCopy(utils.createNullProtoObjWherePossible(),data);if(includeData){d=utils.shallowCopy(d,includeData);}return includeFile(path,opts)(d)};return fn.apply(opts.context,[data||utils.createNullProtoObjWherePossible(),escapeFn,include,rethrow])};if(opts.filename&&typeof Object.defineProperty===\"function\"){var filename=opts.filename;var basename=path.basename(filename,path.extname(filename));try{Object.defineProperty(returnedFn,\"name\",{value:basename,writable:false,enumerable:false,configurable:true});}catch(e){}}return returnedFn},generateSource:function(){var opts=this.opts;if(opts.rmWhitespace){this.templateText=this.templateText.replace(/[\\r\\n]+/g,\"\\n\").replace(/^\\s+|\\s+$/gm,\"\");}this.templateText=this.templateText.replace(/[ \\t]*<%_/gm,\"<%_\").replace(/_%>[ \\t]*/gm,\"_%>\");var self=this;var matches=this.parseTemplateText();var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;if(matches&&matches.length){matches.forEach(function(line,index){var closing;if(line.indexOf(o+d)===0&&line.indexOf(o+d+d)!==0){closing=matches[index+2];if(!(closing==d+c||closing==\"-\"+d+c||closing==\"_\"+d+c)){throw new Error('Could not find matching close tag for \"'+line+'\".')}}self.scanLine(line);});}},parseTemplateText:function(){var str=this.templateText;var pat=this.regex;var result=pat.exec(str);var arr=[];var firstPos;while(result){firstPos=result.index;if(firstPos!==0){arr.push(str.substring(0,firstPos));str=str.slice(firstPos);}arr.push(result[0]);str=str.slice(result[0].length);result=pat.exec(str);}if(str){arr.push(str);}return arr},_addOutput:function(line){if(this.truncate){line=line.replace(/^(?:\\r\\n|\\r|\\n)/,\"\");this.truncate=false;}if(!line){return line}line=line.replace(/\\\\/g,\"\\\\\\\\\");line=line.replace(/\\n/g,\"\\\\n\");line=line.replace(/\\r/g,\"\\\\r\");line=line.replace(/\"/g,'\\\\\"');this.source+='    ; __append(\"'+line+'\")'+\"\\n\";},scanLine:function(line){var self=this;var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;var newLineCount=0;newLineCount=line.split(\"\\n\").length-1;switch(line){case o+d:case o+d+\"_\":this.mode=Template.modes.EVAL;break;case o+d+\"=\":this.mode=Template.modes.ESCAPED;break;case o+d+\"-\":this.mode=Template.modes.RAW;break;case o+d+\"#\":this.mode=Template.modes.COMMENT;break;case o+d+d:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(o+d+d,o+d)+'\")'+\"\\n\";break;case d+d+c:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(d+d+c,d+c)+'\")'+\"\\n\";break;case d+c:case\"-\"+d+c:case\"_\"+d+c:if(this.mode==Template.modes.LITERAL){this._addOutput(line);}this.mode=null;this.truncate=line.indexOf(\"-\")===0||line.indexOf(\"_\")===0;break;default:if(this.mode){switch(this.mode){case Template.modes.EVAL:case Template.modes.ESCAPED:case Template.modes.RAW:if(line.lastIndexOf(\"//\")>line.lastIndexOf(\"\\n\")){line+=\"\\n\";}}switch(this.mode){case Template.modes.EVAL:this.source+=\"    ; \"+line+\"\\n\";break;case Template.modes.ESCAPED:this.source+=\"    ; __append(escapeFn(\"+stripSemi(line)+\"))\"+\"\\n\";break;case Template.modes.RAW:this.source+=\"    ; __append(\"+stripSemi(line)+\")\"+\"\\n\";break;case Template.modes.COMMENT:break;case Template.modes.LITERAL:this._addOutput(line);break}}else{this._addOutput(line);}}if(self.opts.compileDebug&&newLineCount){this.currentLine+=newLineCount;this.source+=\"    ; __line = \"+this.currentLine+\"\\n\";}}};exports.escapeXML=utils.escapeXML;exports.__express=exports.renderFile;exports.VERSION=_VERSION_STRING;exports.name=_NAME;if(typeof window!=\"undefined\"){window.ejs=exports;}},{\"../package.json\":6,\"./utils\":2,fs:3,path:4}],2:[function(require,module,exports){\"use strict\";var regExpChars=/[|\\\\{}()[\\]^$+*?.]/g;var hasOwnProperty=Object.prototype.hasOwnProperty;var hasOwn=function(obj,key){return hasOwnProperty.apply(obj,[key])};exports.escapeRegExpChars=function(string){if(!string){return\"\"}return String(string).replace(regExpChars,\"\\\\$&\")};var _ENCODE_HTML_RULES={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&#34;\",\"'\":\"&#39;\"};var _MATCH_HTML=/[&<>'\"]/g;function encode_char(c){return _ENCODE_HTML_RULES[c]||c}var escapeFuncStr=\"var _ENCODE_HTML_RULES = {\\n\"+'      \"&\": \"&amp;\"\\n'+'    , \"<\": \"&lt;\"\\n'+'    , \">\": \"&gt;\"\\n'+'    , \\'\"\\': \"&#34;\"\\n'+'    , \"\\'\": \"&#39;\"\\n'+\"    }\\n\"+\"  , _MATCH_HTML = /[&<>'\\\"]/g;\\n\"+\"function encode_char(c) {\\n\"+\"  return _ENCODE_HTML_RULES[c] || c;\\n\"+\"};\\n\";exports.escapeXML=function(markup){return markup==undefined?\"\":String(markup).replace(_MATCH_HTML,encode_char)};function escapeXMLToString(){return Function.prototype.toString.call(this)+\";\\n\"+escapeFuncStr}try{if(typeof Object.defineProperty===\"function\"){Object.defineProperty(exports.escapeXML,\"toString\",{value:escapeXMLToString});}else{exports.escapeXML.toString=escapeXMLToString;}}catch(err){console.warn(\"Unable to set escapeXML.toString (is the Function prototype frozen?)\");}exports.shallowCopy=function(to,from){from=from||{};if(to!==null&&to!==undefined){for(var p in from){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}return to};exports.shallowCopyFromList=function(to,from,list){list=list||[];from=from||{};if(to!==null&&to!==undefined){for(var i=0;i<list.length;i++){var p=list[i];if(typeof from[p]!=\"undefined\"){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}}return to};exports.cache={_data:{},set:function(key,val){this._data[key]=val;},get:function(key){return this._data[key]},remove:function(key){delete this._data[key];},reset:function(){this._data={};}};exports.hyphenToCamel=function(str){return str.replace(/-[a-z]/g,function(match){return match[1].toUpperCase()})};exports.createNullProtoObjWherePossible=function(){if(typeof Object.create==\"function\"){return function(){return Object.create(null)}}if(!({__proto__:null}instanceof Object)){return function(){return{__proto__:null}}}return function(){return{}}}();},{}],3:[function(require,module,exports){},{}],4:[function(require,module,exports){(function(process){function normalizeArray(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1);}else if(last===\"..\"){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}if(allowAboveRoot){for(;up--;up){parts.unshift(\"..\");}}return parts}exports.resolve=function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){continue}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\";}resolvedPath=normalizeArray(filter(resolvedPath.split(\"/\"),function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"};exports.normalize=function(path){var isAbsolute=exports.isAbsolute(path),trailingSlash=substr(path,-1)===\"/\";path=normalizeArray(filter(path.split(\"/\"),function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\";}if(path&&trailingSlash){path+=\"/\";}return(isAbsolute?\"/\":\"\")+path};exports.isAbsolute=function(path){return path.charAt(0)===\"/\"};exports.join=function(){var paths=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(paths,function(p,index){if(typeof p!==\"string\"){throw new TypeError(\"Arguments to path.join must be strings\")}return p}).join(\"/\"))};exports.relative=function(from,to){from=exports.resolve(from).substr(1);to=exports.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\");}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")};exports.sep=\"/\";exports.delimiter=\":\";exports.dirname=function(path){if(typeof path!==\"string\")path=path+\"\";if(path.length===0)return\".\";var code=path.charCodeAt(0);var hasRoot=code===47;var end=-1;var matchedSlash=true;for(var i=path.length-1;i>=1;--i){code=path.charCodeAt(i);if(code===47){if(!matchedSlash){end=i;break}}else{matchedSlash=false;}}if(end===-1)return hasRoot?\"/\":\".\";if(hasRoot&&end===1){return\"/\"}return path.slice(0,end)};function basename(path){if(typeof path!==\"string\")path=path+\"\";var start=0;var end=-1;var matchedSlash=true;var i;for(i=path.length-1;i>=0;--i){if(path.charCodeAt(i)===47){if(!matchedSlash){start=i+1;break}}else if(end===-1){matchedSlash=false;end=i+1;}}if(end===-1)return\"\";return path.slice(start,end)}exports.basename=function(path,ext){var f=basename(path);if(ext&&f.substr(-1*ext.length)===ext){f=f.substr(0,f.length-ext.length);}return f};exports.extname=function(path){if(typeof path!==\"string\")path=path+\"\";var startDot=-1;var startPart=0;var end=-1;var matchedSlash=true;var preDotState=0;for(var i=path.length-1;i>=0;--i){var code=path.charCodeAt(i);if(code===47){if(!matchedSlash){startPart=i+1;break}continue}if(end===-1){matchedSlash=false;end=i+1;}if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){return\"\"}return path.slice(startDot,end)};function filter(xs,f){if(xs.filter)return xs.filter(f);var res=[];for(var i=0;i<xs.length;i++){if(f(xs[i],i,xs))res.push(xs[i]);}return res}var substr=\"ab\".substr(-1)===\"b\"?function(str,start,len){return str.substr(start,len)}:function(str,start,len){if(start<0)start=str.length+start;return str.substr(start,len)};}).call(this,require(\"_process\"));},{_process:5}],5:[function(require,module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout===\"function\"){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title=\"browser\";process.browser=true;process.env={};process.argv=[];process.version=\"\";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error(\"process.binding is not supported\")};process.cwd=function(){return\"/\"};process.chdir=function(dir){throw new Error(\"process.chdir is not supported\")};process.umask=function(){return 0};},{}],6:[function(require,module,exports){module.exports={name:\"ejs\",description:\"Embedded JavaScript templates\",keywords:[\"template\",\"engine\",\"ejs\"],version:\"3.1.8\",author:\"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)\",license:\"Apache-2.0\",bin:{ejs:\"./bin/cli.js\"},main:\"./lib/ejs.js\",jsdelivr:\"ejs.min.js\",unpkg:\"ejs.min.js\",repository:{type:\"git\",url:\"git://github.com/mde/ejs.git\"},bugs:\"https://github.com/mde/ejs/issues\",homepage:\"https://github.com/mde/ejs\",dependencies:{jake:\"^10.8.5\"},devDependencies:{browserify:\"^16.5.1\",eslint:\"^6.8.0\",\"git-directory-deploy\":\"^1.5.1\",jsdoc:\"^4.0.2\",\"lru-cache\":\"^4.0.1\",mocha:\"^10.2.0\",\"uglify-js\":\"^3.3.16\"},engines:{node:\">=0.10.0\"},scripts:{test:\"mocha -u tdd\"}};},{}]},{},[1])(1)});\n\nlet tpl = Object.create(null);\ntpl['form-error.html'] = '<div class=\"coreui-form__error alert alert-danger alert-dismissible fade show mb-3 <%= options.class %>\">\\n    <%- message %>\\n    <% if (options.dismiss) { %>\\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\\n    <% } %>\\n</div>';\ntpl['form-field-content.html'] = '<%- content %>';\ntpl['form-field-group.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__group_container mb-3\">\\n    <div class=\"coreui-form__group_label pe-2\">\\n        <h6 class=\"coreui-form__field_label_text col-form-label-sm\">\\n            <%- group.label %>\\n            <% if (group.showCollapsible) { %>\\n                <button type=\"button\" class=\"btn btn-sm btn-link btn-collapsible text-dark\">\\n                    <% if ( ! group.show) { %>\\n                    <i class=\"bi bi-chevron-right\"></i>\\n                    <% } else { %>\\n                    <i class=\"bi bi-chevron-down\"></i>\\n                    <% } %>\\n                </button>\\n            <% } %>\\n        </h6>\\n    </div>\\n    <div class=\"coreui-form__group_content\"<% if ( ! group.show) { %> style=\"display:none\"<% } %>>\\n        <%- content %>\\n    </div>\\n</div>';\ntpl['form-field-label.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__field_container d-flex flex-column flex-md-row mb-3\"\\n     <% if ( ! field.show) { %> style=\"display:none\"<% } %>>\\n    <% if (field.labelWidth !== 0 && field.labelWidth !== \\'0px\\') { %>\\n    <div class=\"coreui-form__field_label text-md-end text-sm-start pe-2\"<% if (field.labelWidth) { %> style=\"min-width:<%= field.labelWidth %>;width:<%= field.labelWidth %>\"<% } %>>\\n        <div class=\"coreui-form__field_label_content col-form-label-sm\">\\n            <% if (field.required) { %>\\n            <span class=\"coreui-form__field_label_req text-danger\">*</span>\\n            <% } %>\\n            <span class=\"coreui-form__field_label_text fw-medium\"><%- field.label %></span>\\n        </div>\\n\\n        <% if (field.description) { %>\\n        <div class=\"coreui-form__field_label_description text-muted\">\\n            <small><%- field.description %></small>\\n        </div>\\n        <% } %>\\n    </div>\\n    <% } %>\\n    <div class=\"coreui-form__field_content flex-fill pt-1\">\\n        <div class=\"d-inline-block content-<%= hash %>\">\\n            <%- content %>\\n        </div>\\n\\n        <% if (field.outContent) { %>\\n        <span class=\"coreui-form__field-content-out d-inline-block align-top pt-1 ps-1\">\\n            <%- field.outContent %>\\n        </span>\\n        <% } %>\\n\\n        <% if (attachFields && attachFields.length > 0) { %>\\n            <% $.each(attachFields, function(key, attachField) { %>\\n                <div class=\"<% if (attachField.hasOwnProperty(\\'direction\\') && attachField.direction === \\'column\\') { %>d-block mt-2<% } else { %>d-inline-block<% } %> content-<%= attachField.hash %>\">\\n                    <%- attachField.content %>\\n                </div>\\n            <% }); %>\\n        <% } %>\\n    </div>\\n</div>';\ntpl['form.html'] = '<div id=\"coreui-form-<%= form.id %>\" class=\"coreui-form mb-2\"\\n    <% if (widthSizes) { %>style=\"<%= widthSizes.join(\\';\\') %>\"<% } %>>\\n    <% if (form.title) { %>\\n    <h5 class=\"mb-4\"><%- form.title %></h5>\\n    <% } %>\\n\\n    <form action=\"<%= form.send.url %>\" method=\"<%= form.send.method %>\"<%- formAttr %>>\\n        <div class=\"coreui-form__fields d-flex justify-content-start flex-column flex-wrap\">\\n            <%- layout %>\\n        </div>\\n\\n        <% if (controls) { %>\\n        <div class=\"coreui-form__controls d-flex justify-content-start flex-sm-wrap flex-md-nowrap\">\\n            <% if (form.controlsOffset !== 0 && form.controlsOffset !== \\'0px\\') { %>\\n            <div class=\"d-none d-md-block\" style=\"width:<%= form.controlsOffset %>;min-width:<%= form.controlsOffset %>\"></div>\\n            <% } %>\\n\\n            <div class=\"d-flex justify-content-start flex-wrap gap-2\">\\n                <% $.each(controls, function(key, control) { %>\\n                <div id=\"coreui-form-<%= form.id %>-control-<%= control.index %>\" class=\"coreui-form__control_container\"\\n                     <% if ( ! control.show) { %>style=\"display:none\"<% } %>>\\n                    <%- control.content %>\\n                </div>\\n                <% }); %>\\n            </div>\\n        </div>\\n        <% } %>\\n    </form>\\n</div>';\ntpl['controls/button.html'] = '<button <%- render.attr %>><%- control.content %></button>';\ntpl['controls/link.html'] = '<a href=\"<%- control.href %>\"<%- render.attr %>><%- control.content %></a>';\ntpl['fields/checkbox.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItems.join(\\', \\') %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/color.html'] = '<% if (field.readonly) { %>\\n    <div class=\"rounded-1\" style=\"width: 14px;height: 14px;background-color: <%= value %>\"></div>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/custom.html'] = '<%- content %>';\ntpl['fields/dataset-row-readonly.html'] = '<tr class=\"coreui-form__field-dataset-item\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-2 pb-1\">\\n            <%- option.value %>\\n        </td>\\n    <% }); %>\\n</tr>';\ntpl['fields/dataset-row.html'] = '<tr class=\"coreui-form__field-dataset-item\" id=\"dataset-item-<%= hashItem %>\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-1 pb-1\">\\n        <% if (option.type === \\'select\\') { %>\\n            <select <%- option.attr %>>\\n                <% $.each(option.items, function(key, item) { %>\\n                <option <%- item.attr %>><%- item.title %></option>\\n                <% }); %>\\n            </select>\\n        <% } else if (option.type === \\'switch\\') { %>\\n            <div class=\"form-check form-switch\">\\n                <input <%- option.attr %>/>\\n            </div>\\n        <% } else { %>\\n            <input <%- option.attr %>>\\n        <% } %>\\n        </td>\\n    <% }); %>\\n\\n    <td class=\"pb-1\">\\n        <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-remove\" data-item-id=\"dataset-item-<%= hashItem %>\">\\n            <i class=\"bi bi-x text-muted\"></i>\\n        </button>\\n    </td>\\n</tr>';\ntpl['fields/dataset.html'] = '<% if (field.readonly) { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted pe-2\"><small><%= item.title %></small></td>\\n                <% }); %>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n            <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n<% } else { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted\"><small><%= item.title %></small></td>\\n                <% }); %>\\n                <td></td>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n                <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n    <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-add\"><%= lang.dataset_add %></button>\\n<% } %>';\ntpl['fields/hidden.html'] = '<% if ( ! field.readonly) { %>\\n    <input <%- render.attr %>/>\\n<% } %>';\ntpl['fields/input.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/modal-loading.html'] = '<div class=\"py-4 d-flex justify-content-center align-items-center gap-2\">\\n    <div class=\"spinner-border mr-2\"></div> <%= lang.modal_loading %>\\n</div>\\n';\ntpl['fields/modal.html'] = '<% if (field.readonly) { %>\\n    <%= text %>\\n<% } else { %>\\n    <div class=\"input-group\"<% if (render.width) { %> style=\"width:<%= render.width %>\"<% } %>>\\n        <input <%- render.attr %>/>\\n        <input type=\"hidden\" name=\"<%= field.name %>\" value=\"<%= value %>\" class=\"coreui-form-modal-value\"/>\\n        <% if ( ! field.required) { %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-clear border-secondary-subtle\" type=\"button\">\\n            <i class=\"bi bi-x\"></i>\\n        </button>\\n        <% } %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-select border-secondary-subtle\" type=\"button\"><%= lang.modal_select %></button>\\n    </div>\\n<% } %>';\ntpl['fields/passwordRepeat.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <div class=\"d-flex gap-1 align-items-center\">\\n        <input <%- render.attr %>/>\\n        <small class=\"password-text-repeat\"><%= lang.repeat %></small>\\n\\n        <% if (field.showBtn) { %>\\n            <div class=\"input-group flex-nowrap\">\\n                <input <%- render.attr2 %>/>\\n                <button class=\"btn btn-sm btn-outline-secondary border-secondary-subtle btn-password-change\" type=\"button\"\\n                        data-change=\"<%- lang.change %>\" data-cancel=\"<%- lang.cancel %>\"><%= btn_text %></button>\\n            </div>\\n        <% } else { %>\\n            <input <%- render.attr2 %>/>\\n        <% } %>\\n\\n    </div>\\n<% } %>';\ntpl['fields/radio.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItem %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/select.html'] = '<% if (field.readonly) { %>\\n    <%= render.selectedOptions.join(\\', \\') %>\\n<% } else { %>\\n    <select <%- render.attr %>>\\n        <% $.each(render.options, function(key, option) { %>\\n            <% if (option.type === \\'group\\') { %>\\n                <optgroup<%- option.attr %>/>\\n                <% $.each(option.options, function(key, groupOption) { %>\\n                    <option <%- groupOption.attr %>/><%= groupOption.text %></option>\\n                <% }); %>\\n                </optgroup>\\n            <% } else { %>\\n            <option <%- option.attr %>/><%= option.text %></option>\\n            <% } %>\\n        <% }); %>\\n    </select>\\n<% } %>';\ntpl['fields/switch.html'] = '<% if (field.readonly) { %>\\n    <%= field.valueY == value ? lang.switch_yes : lang.switch_no %>\\n<% } else { %>\\n    <div class=\"form-check form-switch\">\\n        <input <%- render.attr %>/>\\n    </div>\\n<% } %>';\ntpl['fields/textarea.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea <%- render.attr %>><%- value %></textarea>\\n<% } %>';\ntpl['fields/wysiwyg.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea name=\"<%= field.name %>\" id=\"editor-<%= editorHash %>\"><%- value %></textarea>\\n<% } %>';\n\nlet coreuiFormUtils$1 = {\r\n\r\n    /**\r\n     * Получение значения поля\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               fieldOptions\r\n     * @returns {string|number|null}\r\n     */\r\n    getFieldValue: function (form, fieldOptions) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        if (fieldOptions &&\r\n            formRecord &&\r\n            typeof fieldOptions.name === 'string' &&\r\n            typeof formRecord === 'object' &&\r\n            formRecord.hasOwnProperty(fieldOptions.name) &&\r\n            ['string', 'number', 'object'].indexOf(typeof formRecord[fieldOptions.name]) >= 0\r\n        ) {\r\n            return formRecord[fieldOptions.name];\r\n        }\r\n\r\n        return '';\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение функции из указанного текста\r\n     * @param functionName\r\n     * @param context\r\n     * @returns {null|Window}\r\n     * @private\r\n     */\r\n    getFunctionByName: function(functionName, context) {\r\n\r\n        let namespaces = functionName.split(\".\");\r\n        let func       = namespaces.pop();\r\n\r\n        context = context || window;\r\n\r\n        for (let i = 0; i < namespaces.length; i++) {\r\n            if (context.hasOwnProperty(namespaces[i])) {\r\n                context = context[namespaces[i]];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        if (typeof context[func] === 'function') {\r\n            return context[func];\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Обработка полей в полях\r\n     * @param form\r\n     * @param defaultOptions\r\n     * @param fieldOptions\r\n     */\r\n    mergeFieldOptions: function (form, defaultOptions, fieldOptions) {\r\n\r\n        let options = $.extend(true, {}, defaultOptions);\r\n\r\n        if (fieldOptions) {\r\n            if (options.hasOwnProperty('attr') && typeof options.attr === 'object' &&\r\n                fieldOptions.hasOwnProperty('attr') && typeof fieldOptions.attr === 'object'\r\n            ) {\r\n                fieldOptions.attr = this.mergeAttr(options.attr, fieldOptions.attr);\r\n            }\r\n\r\n            options = $.extend(true, {}, options, fieldOptions);\r\n        }\r\n\r\n        if (options.hasOwnProperty('width')) {\r\n            if (options.width) {\r\n                let unit = typeof options.width === 'number' ? 'px' : '';\r\n                options.width = options.width + unit;\r\n\r\n            } else if (form._options.fieldWidth && options.type !== 'color') {\r\n                let unit = typeof form._options.fieldWidth === 'number' ? 'px' : '';\r\n                options.width = form._options.fieldWidth + unit;\r\n            }\r\n        }\r\n\r\n        if (options.hasOwnProperty('labelWidth')) {\r\n            if (options.labelWidth >= 0 && options.labelWidth !== null) {\r\n                let unit = typeof options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = options.labelWidth + unit;\r\n\r\n            } else if (form._options.labelWidth) {\r\n                let unit = typeof form._options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = form._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        return options\r\n    },\r\n\r\n\r\n    /**\r\n     * Объединение атрибутов\r\n     * @param attr1\r\n     * @param attr2\r\n     * @returns {object}\r\n     */\r\n    mergeAttr: function (attr1, attr2) {\r\n\r\n        let mergeAttr = Object.assign({}, attr1);\r\n\r\n        if (typeof attr2 === 'object') {\r\n            $.each(attr2, function (name, value) {\r\n                if (mergeAttr.hasOwnProperty(name)) {\r\n                    if (name === 'class') {\r\n                        mergeAttr[name] += ' ' + value;\r\n\r\n                    } else if (name === 'style') {\r\n                        mergeAttr[name] += ';' + value;\r\n\r\n                    } else {\r\n                        mergeAttr[name] = value;\r\n                    }\r\n\r\n                } else {\r\n                    mergeAttr[name] = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return mergeAttr;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация и рендер дополнительных полей\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @returns {object}\r\n     * @private\r\n     */\r\n    getAttacheFields: function(form, options) {\r\n\r\n        let fields = [];\r\n\r\n        if (typeof options === 'object' &&\r\n            typeof(options.fields) === 'object' &&\r\n            Array.isArray(options.fields)\r\n        ) {\r\n            $.each(options.fields, function (key, field) {\r\n                let instance = form.initField(field);\r\n\r\n                if (typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                fields.push({\r\n                    hash: instance._hash,\r\n                    direction: options.hasOwnProperty('fieldsDirection') ? options.fieldsDirection : 'row',\r\n                    content: instance.renderContent()\r\n                });\r\n            });\r\n        }\r\n\r\n        return fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDate: function (value) {\r\n\r\n        if (value && value.length === 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDateTime: function (value) {\r\n\r\n        if (value && value.length >= 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n            let hour  = (\"00\" + date.getHours()).slice(-2);\r\n            let min   = (\"00\" + date.getMinutes()).slice(-2);\r\n            let sec   = (\"00\" + date.getSeconds()).slice(-2);\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year + ' ' + hour + ':' + min + ':' + sec;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateMonth: function (value, lang) {\r\n\r\n        if (value && value.length === 7) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth();\r\n\r\n            let monthLang = lang.date_months.hasOwnProperty(month) ? lang.date_months[month] : '';\r\n\r\n            value = monthLang + ' ' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateWeek: function (value, lang) {\r\n\r\n        if (value && value.length >= 7) {\r\n            let year = value.substring(0, 4);\r\n            let week = value.substring(6);\r\n\r\n            value = year + ' ' + lang.date_week + ' ' + week;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из объекта по указанному пути\r\n     * @param {object} obj\r\n     * @param {string} path\r\n     * @return {*}\r\n     */\r\n    getObjValue: function(obj, path) {\r\n\r\n        for (let i = 0, path = path.split('.'), len = path.length; i < len; i++){\r\n            obj = obj[path[i]];\r\n        }\r\n\r\n        return obj;\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка на число\r\n     * @param num\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    isNumeric: function(num) {\r\n        return (typeof(num) === 'number' || typeof(num) === \"string\" && num.trim() !== '') && ! isNaN(num);\r\n    },\r\n\r\n\r\n    /**\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    hashCode: function() {\r\n        return this.crc32((new Date().getTime() + Math.random()).toString()).toString(16);\r\n    },\r\n\r\n\r\n    /**\r\n     * Hash crc32\r\n     * @param str\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    crc32: function (str) {\r\n\r\n        for (var a, o = [], c = 0; c < 256; c++) {\r\n            a = c;\r\n            for (var f = 0; f < 8; f++) {\r\n                a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;\r\n            }\r\n            o[c] = a;\r\n        }\r\n\r\n        for (var n = -1, t = 0; t < str.length; t++) {\r\n            n = n >>> 8 ^ o[255 & (n ^ str.charCodeAt(t))];\r\n        }\r\n\r\n        return (-1 ^ n) >>> 0;\r\n    },\r\n\r\n\r\n    /**\r\n     * Округление\r\n     * @param number\r\n     * @param precision\r\n     * @returns {number}\r\n     */\r\n    round: function (number, precision) {\r\n\r\n        precision = typeof precision !== 'undefined' ? parseInt(precision) : 0;\r\n\r\n        if (precision === 0) {\r\n            return Math.round(number);\r\n\r\n        } else if (precision > 0) {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number * pow) / pow;\r\n\r\n        } else {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number / pow) * pow;\r\n        }\r\n    }\r\n};\n\nlet coreuiFormInstance = {\r\n\r\n    _options: {\r\n        id: null,\r\n        title: '',\r\n        lang: 'en',\r\n        send: {\r\n            url: '',\r\n            method: 'POST',\r\n            format: 'form',\r\n        },\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        labelWidth: 200,\r\n        controlsOffset: null,\r\n        readonly: false,\r\n        validate: false,\r\n        errorClass: '',\r\n        layout: '[column_default]',\r\n        onSubmit: null,\r\n        record: {},\r\n        fields: [],\r\n        controls: []\r\n    },\r\n\r\n    _lock: false,\r\n    _fieldsIndex: 0,\r\n    _groupsIndex: 0,\r\n    _controlsIndex: 0,\r\n    _groups: [],\r\n    _fields: [],\r\n    _controls: [],\r\n    _events: {},\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {object} options\r\n     * @private\r\n     */\r\n    _init: function (options) {\r\n\r\n        this._options.labelWidth    = coreuiForm$1.getSetting('labelWidth');\r\n        this._options.lang          = coreuiForm$1.getSetting('lang');\r\n        this._options.errorClass    = coreuiForm$1.getSetting('errorClass');\r\n        this._options.send.format = coreuiForm$1.getSetting('sendDataFormat');\r\n\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        if ( ! this._options.id) {\r\n            this._options.id = coreuiFormUtils$1.hashCode();\r\n        }\r\n\r\n        if (this._options.hasOwnProperty('labelWidth')) {\r\n            if (this._options.labelWidth >= 0 && this._options.labelWidth !== null) {\r\n                let unit = typeof this._options.labelWidth === 'number' ? 'px' : '';\r\n                this._options.labelWidth = this._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        if ( ! this._options.hasOwnProperty('controlsOffset') || this._options.controlsOffset === null) {\r\n            this._options.controlsOffset = this._options.labelWidth;\r\n        } else {\r\n            if (this._options.controlsOffset >= 0) {\r\n                let unit = typeof this._options.controlsOffset === 'number' ? 'px' : '';\r\n                this._options.controlsOffset = this._options.controlsOffset + unit;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    initEvents: function () {\r\n\r\n        let that          = this;\r\n        let formContainer = '#coreui-form-' + this._options.id + ' > form';\r\n\r\n        $(formContainer).on('submit', function () {\r\n            setTimeout(function () {\r\n                that.send.apply(that);\r\n            }, 0);\r\n            return false;\r\n        });\r\n\r\n        this._trigger('shown.coreui.form');\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение id формы\r\n     * @return {string|null}\r\n     */\r\n    getId: function () {\r\n\r\n        return this._options.hasOwnProperty('id') ? this._options.id : null;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    render: function(element) {\r\n\r\n        let that       = this;\r\n        let widthSizes = [];\r\n        let layout     = this._options.layout;\r\n        let controls   = [];\r\n        let formAttr   = [];\r\n\r\n\r\n\r\n        if (this._options.width) {\r\n            let unit = typeof this._options.width === 'number' ? 'px' : '';\r\n            widthSizes.push('width:' + this._options.width + unit);\r\n        }\r\n\r\n        if (this._options.minWidth) {\r\n            let unit = typeof this._options.minWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('min-width:' + this._options.minWidth + unit);\r\n        }\r\n\r\n        if (this._options.maxWidth) {\r\n            let unit = typeof this._options.maxWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('max-width:' + this._options.maxWidth + unit);\r\n        }\r\n\r\n\r\n\r\n        // Поля\r\n        if (typeof this._options.fields === 'object' &&\r\n            Array.isArray(this._options.fields) &&\r\n            this._options.fields.length > 0 &&\r\n            layout &&\r\n            typeof layout === 'string'\r\n        ) {\r\n            let matches        = Array.from(layout.matchAll(/\\[column_([\\w_\\d]+)\\]/g));\r\n            let columns        = [];\r\n            let columnsContent = {};\r\n\r\n            if (matches.length > 0) {\r\n                $.each(matches, function (key, match) {\r\n                    columns.push(match[1]);\r\n                });\r\n            }\r\n\r\n            if (columns.length > 0) {\r\n                $.each(this._options.fields, function (key, field) {\r\n                    let column = field.hasOwnProperty('column') && (typeof field.column === 'string' || typeof field.column === 'number')\r\n                        ? (columns.indexOf(field.column) >= 0 ? field.column : null)\r\n                        : 'default';\r\n\r\n                    if (typeof column !== 'string') {\r\n                        return;\r\n                    }\r\n\r\n                    let type     = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : '';\r\n                    let instance = null;\r\n\r\n                    if (type === 'group') {\r\n                        instance = that.initGroup(field);\r\n\r\n                    } else {\r\n                        instance = that.initField(field);\r\n                    }\r\n\r\n\r\n                    if ( ! instance || typeof instance !== 'object') {\r\n                        return;\r\n                    }\r\n\r\n                    if ( ! columnsContent.hasOwnProperty(column)) {\r\n                        columnsContent[column] = [];\r\n                    }\r\n                    columnsContent[column].push(instance.render());\r\n                });\r\n            }\r\n\r\n            if (Object.keys(columnsContent).length >= 0) {\r\n                $.each(columnsContent, function (name, fieldContents) {\r\n\r\n                    layout = layout.replace('[column_' + name + ']', fieldContents.join(''));\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        // Элементы управления\r\n        if (typeof this._options.controls === 'object' &&\r\n            Array.isArray(this._options.controls) &&\r\n            this._options.controls.length > 0\r\n        ) {\r\n            $.each(this._options.controls, function (key, control) {\r\n                let instance = that.initControl(control);\r\n\r\n                if ( ! instance || typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                controls.push({\r\n                    show: ! control.hasOwnProperty('show') || control.show,\r\n                    index: that._controlsIndex - 1,\r\n                    content: instance.render()\r\n                });\r\n            });\r\n        }\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            formAttr.push('novalidate');\r\n        }\r\n\r\n\r\n        let html = ejs.render(tpl['form.html'], {\r\n            form: this._options,\r\n            formAttr: formAttr ? ' ' + formAttr.join(' ') : '',\r\n            widthSizes: widthSizes,\r\n            layout: layout,\r\n            controls: controls,\r\n        });\r\n\r\n        if (element === undefined) {\r\n            return html;\r\n        }\r\n\r\n        // Dom element\r\n        let domElement = {};\r\n\r\n        if (typeof element === 'string') {\r\n            domElement = document.getElementById(element);\r\n\r\n            if ( ! domElement) {\r\n                return '';\r\n            }\r\n\r\n        } else if (element instanceof HTMLElement) {\r\n            domElement = element;\r\n        }\r\n\r\n\r\n        domElement.innerHTML = html;\r\n\r\n        this.initEvents();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        this._lock = true;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.lock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Разблокировка\r\n     */\r\n    unlock: function () {\r\n\r\n        this._lock = false;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.unlock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Отправка данных формы\r\n     */\r\n    send: function () {\r\n\r\n        if (this._lock) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            let isValid = this.validate();\r\n\r\n            if ( ! isValid) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let onsubmit = null;\r\n        let data     = this.getData();\r\n\r\n        if (typeof this._options.onSubmit === 'function') {\r\n            onsubmit = this._options.onSubmit;\r\n\r\n        } else if (typeof this._options.onSubmit === 'string' && this._options.onSubmit) {\r\n            let func = coreuiFormUtils$1.getFunctionByName(this._options.onSubmit);\r\n\r\n            if (typeof func === 'function') {\r\n                onsubmit = func;\r\n            } else if (typeof this._options.onSubmit === 'string') {\r\n                let onSubmitText = this._options.onSubmit;\r\n\r\n                onsubmit = function(form, data) {\r\n                    try {\r\n                        eval(onSubmitText);\r\n                    } catch (e) {\r\n                        throw Error('Incorrect onSubmit param: ' + e.message)\r\n                    }\r\n                };\r\n            }\r\n        }\r\n\r\n        if (typeof onsubmit === 'function') {\r\n            let onSubmitResult = onsubmit(this, data);\r\n\r\n            if (onSubmitResult === false) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let results    = this._trigger('send.coreui.form', this, [ this, data ]);\r\n        let isStopSend = false;\r\n\r\n        $.each(results, function(key, result) {\r\n            if (result === false) {\r\n                isStopSend = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        if (isStopSend) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.lock();\r\n\r\n        let that       = this;\r\n        let sendFormat = ['form', 'json'].indexOf(this._options.send.format) >= 0\r\n            ? this._options.send.format\r\n            : 'form';\r\n\r\n        let dataFormat  = null;\r\n        let contentType = null;\r\n\r\n        if (sendFormat === 'json') {\r\n            contentType = \"application/json; charset=utf-8\";\r\n            dataFormat  = JSON.stringify(data);\r\n\r\n        } else {\r\n            contentType = false;\r\n            dataFormat  = new FormData();\r\n\r\n            $.each(data, function (name, value) {\r\n                if (value instanceof File) {\r\n                    dataFormat.append(name, value, value.name);\r\n\r\n                } else if (value instanceof FileList) {\r\n                    $.each(value, function (key, file) {\r\n                        dataFormat.append(name, file, file.name);\r\n                    });\r\n\r\n                } else {\r\n                    dataFormat.append(name, value);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        $.ajax({\r\n            url: this._options.send.url,\r\n            method: this._options.send.method,\r\n            data: dataFormat,\r\n            contentType: contentType,\r\n            processData: false,\r\n            beforeSend: function(xhr) {\r\n                that._trigger('start-send.coreui.form', that, [ that, xhr ]);\r\n            },\r\n            success: function (result) {\r\n                that.hideError();\r\n\r\n                that._trigger('success-send.coreui.form', that, [ that, result ]);\r\n\r\n                let jsonResponse = null;\r\n\r\n                try {\r\n                    let parsedResponse = JSON.parse(result);\r\n                    if (typeof parsedResponse === 'object' &&\r\n                        parsedResponse !== null &&\r\n                        ! Array.isArray(parsedResponse)\r\n                    ) {\r\n                        jsonResponse = parsedResponse;\r\n                    }\r\n\r\n                } catch (e) {\r\n                    // ignore\r\n                }\r\n\r\n                if (jsonResponse !== null && typeof jsonResponse === 'object') {\r\n                    if (jsonResponse.hasOwnProperty('scripts') &&\r\n                        Array.isArray(jsonResponse.scripts)\r\n                    ) {\r\n                        $.each(jsonResponse.scripts, function (key, script) {\r\n                            if (typeof script === 'string') {\r\n                                let func = coreuiFormUtils$1.getFunctionByName(script);\r\n\r\n                                if (typeof func === 'function') {\r\n                                    func();\r\n                                } else {\r\n                                    eval(script);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (jsonResponse.hasOwnProperty('loadUrl') &&\r\n                        typeof jsonResponse.loadUrl === 'string'\r\n                    ) {\r\n                        location.href = jsonResponse.loadUrl;\r\n                    }\r\n                }\r\n\r\n                if (that._options.hasOwnProperty('successLoadUrl') &&\r\n                    typeof that._options.successLoadUrl === 'string'\r\n                ) {\r\n                    let successLoadUrl = that._options.successLoadUrl;\r\n\r\n                    // Замена параметров\r\n                    if (jsonResponse !== null && typeof jsonResponse === 'object') {\r\n                        const regx = new RegExp('\\\\[response\\\\.([\\\\d\\\\w\\\\.]+)\\\\]', 'uig');\r\n                        let urlParams = {};\r\n\r\n                        while (result = regx.exec(successLoadUrl)) {\r\n                            urlParams[result[0]] = result[1];\r\n                        }\r\n\r\n                        if (Object.keys(urlParams).length > 0) {\r\n                            $.each(urlParams, function (param, path) {\r\n                                let value = coreuiFormUtils$1.getObjValue(jsonResponse, path);\r\n                                value = typeof value !== 'undefined' ? value : '';\r\n\r\n                                successLoadUrl = successLoadUrl.replace(\r\n                                    new RegExp(param.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'g'),\r\n                                    value\r\n                                );\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    location.href = successLoadUrl;\r\n                }\r\n            },\r\n            error: function(xhr, textStatus, errorThrown) {\r\n                let errorMessage = that.getLang().send_error || '';\r\n                let data         = {};\r\n\r\n                try {\r\n                    let parsedResponse = JSON.parse(xhr.responseText);\r\n                    if (typeof parsedResponse === 'object' &&\r\n                        parsedResponse !== null &&\r\n                        ! Array.isArray(parsedResponse)\r\n                    ) {\r\n                        data = parsedResponse;\r\n                    }\r\n\r\n                } catch (e) {\r\n                    // ignore\r\n                }\r\n\r\n                if (data.hasOwnProperty('error_message') &&\r\n                    typeof data.error_message === 'string' &&\r\n                    data.error_message !== ''\r\n                ) {\r\n                    errorMessage = data.error_message;\r\n                }\r\n\r\n                that.showError(errorMessage);\r\n                that._trigger('error-send.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n            },\r\n            complete: function(xhr, textStatus) {\r\n                that.unlock();\r\n                that._trigger('end-send.coreui.form', that, [ that, xhr, textStatus ]);\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return this._options;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение записи\r\n     * @returns {object}\r\n     */\r\n    getRecord: function () {\r\n\r\n        if (this._options.hasOwnProperty('record') && typeof this._options.record === 'object') {\r\n            return this._options.record;\r\n        }\r\n\r\n        return {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение данных с формы\r\n     * @returns {object}\r\n     */\r\n    getData: function () {\r\n\r\n        let data = {};\r\n\r\n        $.each(this._fields, function (key, field) {\r\n            let fieldOptions = field.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name) {\r\n                data[fieldOptions.name] = field.getValue();\r\n            }\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение полей\r\n     * @returns {object}\r\n     */\r\n    getFields: function () {\r\n        return this._fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение элементов управления\r\n     * @returns {object}\r\n     */\r\n    getControls: function () {\r\n        return this._controls;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение групп полей\r\n     * @returns {object}\r\n     */\r\n    getGroups: function () {\r\n        return this._groups;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение поля\r\n     * @param {string} name\r\n     * @returns {object}\r\n     */\r\n    getField: function (name) {\r\n\r\n        let field = {};\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            let fieldOptions = fieldInstance.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name === name) {\r\n                field = fieldInstance;\r\n            }\r\n        });\r\n\r\n        return field;\r\n    },\r\n\r\n\r\n    /**\r\n     * Смена состояний полей формы\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            fieldInstance.readonly(isReadonly);\r\n        });\r\n\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                if (isReadonly) {\r\n                    control.hide();\r\n                } else {\r\n                    control.show();\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ всех элементов управления\r\n     */\r\n    showControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.show();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие всех элементов управления\r\n     */\r\n    hideControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.hide();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Валидация полей\r\n     * @return {boolean}\r\n     */\r\n    validate: function () {\r\n\r\n        let isValid = true;\r\n\r\n        $.each(this._fields, function (key, field) {\r\n\r\n            if (field.isValid() === false) {\r\n                field.validate(false);\r\n                isValid = false;\r\n\r\n            } else {\r\n                field.validate(null);\r\n            }\r\n        });\r\n\r\n        return isValid;\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ сообщения с ошибкой\r\n     * @param {string} message\r\n     * @param {object} options\r\n     */\r\n    showError: function (message, options) {\r\n\r\n        let formContainer = $('#coreui-form-' + this._options.id + ' > form');\r\n        let formError     = formContainer.find('> .coreui-form__error');\r\n\r\n        if (formError[0]) {\r\n            formError.remove();\r\n        }\r\n\r\n        options = typeof options === 'object' && ! Array.isArray(options) && options !== null ? options : {};\r\n\r\n        if (typeof this._options.errorClass === 'string' && this._options.errorClass !== '') {\r\n            options.class = options.hasOwnProperty('class') ? options.class : '';\r\n            options.class += ' ' + this._options.errorClass;\r\n        }\r\n\r\n        let errorOptions = {\r\n            class:   options.hasOwnProperty('class') && typeof options.class === 'string' ? options.class : '',\r\n            dismiss: options.hasOwnProperty('dismiss') ? !! options.dismiss : true,\r\n        };\r\n\r\n        formContainer.prepend(\r\n            ejs.render(tpl['form-error.html'], {\r\n                message: message,\r\n                options: errorOptions,\r\n            })\r\n        );\r\n\r\n\r\n        if ( ! options.hasOwnProperty('scroll') || options.scroll) {\r\n            let scrollOffset = coreuiForm$1.getSetting('errorMessageScrollOffset');\r\n\r\n            $('html,body').animate({\r\n                scrollTop : formContainer.offset().top - scrollOffset\r\n            }, 'fast');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие сообщения с ошибкой\r\n     */\r\n    hideError: function () {\r\n\r\n        $('#coreui-form-' + this._options.id + ' > form > .coreui-form__error').remove();\r\n    },\r\n\r\n\r\n    /**\r\n     * @param eventName\r\n     * @param callback\r\n     * @param context\r\n     * @param singleExec\r\n     */\r\n    on: function(eventName, callback, context, singleExec) {\r\n        if (typeof this._events[eventName] !== 'object') {\r\n            this._events[eventName] = [];\r\n        }\r\n        this._events[eventName].push({\r\n            context : context || this,\r\n            callback: callback,\r\n            singleExec: !! singleExec,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление формы\r\n     */\r\n    destruct: function () {\r\n\r\n        $('#coreui-form-' + this._options.id).remove();\r\n        delete coreuiForm$1._instances[this.getId()];\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация поля\r\n     * @param field\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initField: function (field) {\r\n\r\n        if (typeof field !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : 'input';\r\n\r\n        if (type === 'group') {\r\n            return null;\r\n        }\r\n\r\n        if ( ! coreuiForm$1.fields.hasOwnProperty(type)) {\r\n            type = 'input';\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            field.readonly = true;\r\n        }\r\n\r\n\r\n        let fieldInstance = $.extend(true, {\r\n            render:        function () {},\r\n            renderContent: function () {},\r\n            init:          function () {},\r\n            getValue:      function () {},\r\n            setValue:      function () {},\r\n            getOptions:    function () {},\r\n            show:          function () {},\r\n            hide:          function () {},\r\n            readonly:      function () {},\r\n            validate:      function () {},\r\n            isValid:       function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        fieldInstance.init(this, field, this._fieldsIndex++);\r\n\r\n        this._fields.push(fieldInstance);\r\n\r\n        return fieldInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация группы\r\n     * @param group\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initGroup: function (group) {\r\n\r\n        if (typeof group !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = group.hasOwnProperty('type') && typeof group.type === 'string' ? group.type : '';\r\n\r\n        if (type !== 'group') {\r\n            return null;\r\n        }\r\n\r\n        let groupInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            expand:     function () {},\r\n            collapse:   function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        groupInstance.init(this, group, this._groupsIndex++);\r\n\r\n        this._groups.push(groupInstance);\r\n\r\n        return groupInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация контролов\r\n     * @param control\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initControl: function (control) {\r\n\r\n        if (typeof control !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : null;\r\n\r\n        if ( ! type || ! coreuiForm$1.controls.hasOwnProperty(type)) {\r\n            return null;\r\n        }\r\n\r\n        if (type === 'submit' && this._options.readonly) {\r\n            control.show = false;\r\n        }\r\n\r\n\r\n        let controlInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            show:       function () {},\r\n            hide:       function () {},\r\n        }, coreuiForm$1.controls[type]);\r\n\r\n        controlInstance.init(this, control, this._controlsIndex++);\r\n\r\n        this._controls.push(controlInstance);\r\n\r\n        return controlInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение настроек языка\r\n     * @private\r\n     */\r\n    getLang: function () {\r\n\r\n        return coreuiForm$1.lang.hasOwnProperty(this._options.lang)\r\n            ? coreuiForm$1.lang[this._options.lang]\r\n            : coreuiForm$1.lang['ru'];\r\n    },\r\n\r\n\r\n    /**\r\n     * @param name\r\n     * @param context\r\n     * @param params\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _trigger: function(name, context, params) {\r\n\r\n        params = params || [];\r\n        let results = [];\r\n\r\n        if (this._events[name] instanceof Object && this._events[name].length > 0) {\r\n            for (var i = 0; i < this._events[name].length; i++) {\r\n                let callback = this._events[name][i].callback;\r\n\r\n                context = context || this._events[name][i].context;\r\n\r\n                results.push(\r\n                    callback.apply(context, params)\r\n                );\r\n\r\n                if (this._events[name][i].singleExec) {\r\n                    this._events[name].splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n\r\n    /**\r\n     * @param {object} control\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderControl: function (control) {\r\n\r\n        let content = '';\r\n        let type    = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : 'text';\r\n\r\n        if (coreuiForm$1.control.hasOwnProperty(type)) {\r\n            content = coreuiForm$1.control[type].render(control);\r\n        }\r\n\r\n        return content;\r\n    }\r\n};\n\nvar coreuiForm$1 = {\r\n\r\n    lang: {},\r\n    fields: {},\r\n    controls: {},\r\n\r\n    _instances: {},\r\n    _settings: {\r\n        labelWidth: 200,\r\n        lang: 'en',\r\n        class: '',\r\n        sendDataFormat: 'form',\r\n        errorMessageScrollOffset: 70\r\n    },\r\n\r\n\r\n    /**\r\n     * Создание экземпляра формы\r\n     * @param {object} options\r\n     * @returns {coreuiFormInstance}\r\n     */\r\n    create: function (options) {\r\n\r\n        let instance = $.extend(true, {}, coreuiFormInstance);\r\n        instance._init(options instanceof Object ? options : {});\r\n\r\n        let formId = instance.getId();\r\n        this._instances[formId] = instance;\r\n\r\n        return instance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение экземпляра формы по id\r\n     * @param {string} id\r\n     * @returns {coreuiFormInstance|null}\r\n     */\r\n    get: function (id) {\r\n\r\n        if ( ! this._instances.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        if ($('#coreui-form-' + this._instances[id])[0]) {\r\n            delete this._instances[id];\r\n            return null;\r\n        }\r\n\r\n        return this._instances[id];\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка настроек\r\n     * @param {object} settings\r\n     */\r\n    setSettings: function(settings) {\r\n\r\n        this._settings = $.extend({}, this._settings, settings);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения настройки\r\n     * @param {string} name\r\n     */\r\n    getSetting: function(name) {\r\n\r\n        let value = null;\r\n\r\n        if (this._settings.hasOwnProperty(name)) {\r\n            value = this._settings[name];\r\n        }\r\n\r\n        return value;\r\n    }\r\n};\n\ncoreuiForm$1.lang.ru = {\r\n    \"modal_select\": \"Выбрать\",\r\n    \"modal_loading\": \"Загрузка...\",\r\n    \"switch_yes\": \"Да\",\r\n    \"switch_no\": \"Нет\",\r\n    \"dataset_add\": \"Добавить\",\r\n    \"date_months\": ['Январь','Февраль','Март','Апрель','Май','Июнь', 'Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\r\n    \"date_week\": \"неделя\",\r\n    \"send_error\": \"Произошла ошибка. Попробуйте снова или обратитесь к администратору\",\r\n    \"required_field\": \"Обязательное поле\",\r\n    \"repeat\": \"повторите\",\r\n    \"change\": \"изменить\",\r\n    \"cancel\": \"отмена\"\r\n};\n\ncoreuiForm$1.lang.en = {\r\n    \"modal_select\": \"Select\",\r\n    \"modal_loading\": \"Loading...\",\r\n    \"switch_yes\": \"Yes\",\r\n    \"switch_no\": \"No\",\r\n    \"dataset_add\": \"Add\",\r\n    \"date_months\": [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\r\n    \"date_week\": \"week\",\r\n    \"send_error\": \"An error has occurred. Please try again or contact your administrator\",\r\n    \"required_field\": \"Required field\",\r\n    \"repeat\": \"repeat\",\r\n    \"change\": \"change\",\r\n    \"cancel\": \"cancel\"\r\n};\n\ncoreuiForm$1.controls.button = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'button',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-secondary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'button';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils$1.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.custom = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'custom',\r\n        content: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form   = form;\r\n        this._index   = index;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return this._options.content;\r\n    }\r\n};\n\ncoreuiForm$1.controls.link = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'link',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-link'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/link.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > a')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.submit = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'submit',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        show: true,\r\n        attr: {\r\n            class: 'btn btn-sm btn-primary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    unlock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        button.find('.spinner-border').remove();\r\n        button.removeAttr('disabled');\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'submit';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.checkbox = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'checkbox',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: null,\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {object}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let values = [];\r\n\r\n            $('.content-' + this._hash + ' input[type=checkbox]:checked').each(function () {\r\n                values.push($(this).val());\r\n            });\r\n\r\n            return values;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значений в поле\r\n     * @param {object|null|string|number} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=radio]').prop('checked', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' input[type=radio]').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('checked', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that            = this;\r\n        let checkboxOptions = [];\r\n        let fieldOptions    = this.getOptions();\r\n        let selectedItems   = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'checkbox',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils$1.hashCode();\r\n\r\n                if (typeof(that._value) === 'object' &&\r\n                    Array.isArray(that._value)\r\n                ) {\r\n                    $.each(that._value, function (key, itemValue) {\r\n                        if (itemValue == option.value) {\r\n                            itemAttr.checked = 'checked';\r\n                            if (option.hasOwnProperty('text') && option.text) {\r\n                                selectedItems.push(option.text);\r\n                            }\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                } else if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItems.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                checkboxOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        let value = typeof this._value === 'object' && Array.isArray(this._value)\r\n            ? this._value.join(', ')\r\n            : this._value;\r\n\r\n        return ejs.render(tpl['fields/checkbox.html'], {\r\n            field: fieldOptions,\r\n            value: value,\r\n            render: {\r\n                options: checkboxOptions,\r\n                selectedItems: selectedItems\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.color = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'color',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-color d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            value: this._value\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.custom = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _options: {\r\n        type: 'custom',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        content: '',\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     */\r\n    getValue: function () {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options         = this.getOptions();\r\n        let content         = '';\r\n        let alloyComponents = [\r\n            'coreui.table',\r\n            'coreui.layout',\r\n            'coreui.panel',\r\n            'coreui.tabs',\r\n            'coreui.info',\r\n            'coreui.chart',\r\n        ];\r\n\r\n        if (typeof options.content === 'string') {\r\n            content = options.content;\r\n\r\n        } else if (options.content instanceof Object) {\r\n            if ( ! Array.isArray(options.content)) {\r\n                options.content = [ options.content ];\r\n            }\r\n\r\n            let components = [];\r\n\r\n            for (let i = 0; i < options.content.length; i++) {\r\n                if (typeof options.content[i] === 'string') {\r\n                    components.push(options.content[i]);\r\n\r\n                } else if ( ! Array.isArray(options.content[i]) &&\r\n                        options.content[i].hasOwnProperty('component') &&\r\n                        alloyComponents.indexOf(options.content[i].component) >= 0\r\n                ) {\r\n                    let name = options.content[i].component.split('.')[1];\r\n\r\n                    if (CoreUI.hasOwnProperty(name) &&\r\n                        typeof CoreUI[name] === \"object\" &&\r\n                        CoreUI[name] !== null &&\r\n                        ! Array.isArray(CoreUI[name])\r\n                    ) {\r\n                        let instance = CoreUI[name].create(options.content[i]);\r\n                        components.push(instance.render());\r\n\r\n                        this._form.on('shown.coreui.form', instance.initEvents, instance, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            content = components.join('');\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/custom.html'], {\r\n            content: content\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.dataset = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: [],\r\n    _renderOptions: [],\r\n    _options: {\r\n        type: 'dataset',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let name = option.hasOwnProperty('name') && ['string', 'number'].indexOf(typeof (option.name)) >= 0\r\n                    ? option.name\r\n                    : '';\r\n                let type = option.hasOwnProperty('type') && typeof (option.type) === 'string'\r\n                    ? option.type\r\n                    : 'text';\r\n                let attributes = option.hasOwnProperty('attr') && typeof (option.attr) === 'object' && ! Array.isArray(option.attr)\r\n                    ? option.attr\r\n                    : {};\r\n                let items = option.hasOwnProperty('items') && typeof (option.items) === 'object' && Array.isArray(option.items)\r\n                    ? option.items\r\n                    : [];\r\n                let valueY = option.hasOwnProperty('valueY') && ['string', 'numeric'].indexOf(typeof (option.valueY)) >= 0\r\n                    ? option.valueY\r\n                    : 'Y';\r\n                let valueN = option.hasOwnProperty('valueN') && ['string', 'numeric'].indexOf(typeof (option.valueN)) >= 0\r\n                    ? option.valueN\r\n                    : 'N';\r\n\r\n                if (name) {\r\n                    attributes.name = name;\r\n                }\r\n                if (options.required) {\r\n                    attributes.required = 'required';\r\n                }\r\n\r\n                if (type === 'select') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-select form-select-sm ' + attributes.class\r\n                        : 'form-select form-select-sm';\r\n\r\n                } else if (type === 'switch') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-check-input ' + attributes.class\r\n                        : 'form-check-input';\r\n\r\n                    attributes.type = 'checkbox';\r\n                    attributes.value = valueY;\r\n\r\n                } else {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-control form-control-sm ' + attributes.class\r\n                        : 'form-control form-control-sm';\r\n\r\n                    attributes.type = type;\r\n                }\r\n\r\n\r\n                that._renderOptions.push({\r\n                    type  : type,\r\n                    name  : name,\r\n                    attr  : attributes,\r\n                    items : items,\r\n                    valueY: valueY,\r\n                    valueN: valueN,\r\n                });\r\n            });\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {array}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let container = $('.content-' + this._hash);\r\n            let data      = [];\r\n\r\n            $('.coreui-form__field-dataset-list .coreui-form__field-dataset-item', container).each(function () {\r\n                let items = {};\r\n\r\n                $.each($(this).find('input, select').serializeArray(), function (key, item) {\r\n                    if (item.name) {\r\n                        items[item.name] = item.value;\r\n                    }\r\n                });\r\n\r\n                data.push(items);\r\n            });\r\n\r\n            return data;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (typeof value !== 'object' ||\r\n            Array.isArray(value) ||\r\n            value === null\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this._value.push(value);\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash + ' .coreui-form__field-dataset-list').append(\r\n                this._renderRowReadonly(value)\r\n            );\r\n        } else {\r\n            this._eventAdd(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление всех строк\r\n     */\r\n    removeItems: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' .coreui-form__field-dataset-list').empty();\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление строки по id\r\n     * @param {int} itemId\r\n     */\r\n    removeItem: function (itemId) {\r\n\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        $('#' + itemId).hide('fast', function () {\r\n            $('#' + itemId).remove();\r\n\r\n            if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n                $(element + ' .coreui-form__field-dataset-container').hide();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRow(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRowReadonly(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        // Кнопка удаления\r\n        $(element + ' .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n\r\n        // Кнопка добавления\r\n        $(element + ' .btn-dataset-add').click(function () {\r\n            that._eventAdd();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Событие добавления\r\n     */\r\n    _eventAdd: function (row) {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n        row = row || {};\r\n\r\n        if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n            $(element + ' .coreui-form__field-dataset-container').show();\r\n        }\r\n\r\n        $(element + ' .coreui-form__field-dataset-list').append(this._renderRow(row));\r\n        $(element + ' .coreui-form__field-dataset-item:last-child .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRow: function (row) {\r\n\r\n        let rowOptions  = [];\r\n        let itemOptions = [];\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let cellValue = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n                    let itemAttr = {};\r\n\r\n\r\n                    $.each(item, function (name, value) {\r\n                        if (name !== 'title') {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    });\r\n\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemAttr.selected = 'selected';\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemAttr.selected = 'selected';\r\n                    }\r\n\r\n                    let attributes = [];\r\n                    $.each(itemAttr, function (name, value) {\r\n                        attributes.push(name + '=\"' + value + '\"');\r\n                    });\r\n\r\n                    itemOptions.push({\r\n                        attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                        title: title\r\n                    });\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                if (cellValue == option.valueY) {\r\n                    option.attr.checked = 'checked';\r\n                }\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    option.attr.value = cellValue !== null ? cellValue : '';\r\n                }\r\n            }\r\n\r\n            let attributes = [];\r\n\r\n            $.each(option.attr, function (name, value) {\r\n                attributes.push(name + '=\"' + value + '\"');\r\n            });\r\n\r\n            rowOptions.push({\r\n                type: option.type,\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                items: itemOptions\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row.html'], {\r\n            hashItem: coreuiFormUtils$1.hashCode(),\r\n            options: rowOptions,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRowReadonly: function (row) {\r\n\r\n        let rowOptions = [];\r\n        let lang       = this._form.getLang();\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let optionValue = '';\r\n            let cellValue   = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                let itemOptions = [];\r\n\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemOptions.push(itemValue);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemOptions.push(cellValue);\r\n                    }\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                let valueY = 'Y';\r\n\r\n                if (option.hasOwnProperty('valueY')) {\r\n                    valueY = option.valueY;\r\n                }\r\n\r\n                optionValue = cellValue == valueY\r\n                    ? lang.switch_yes\r\n                    : lang.switch_no;\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    optionValue = cellValue;\r\n\r\n                    switch (option.type) {\r\n                        case 'date':           optionValue = coreuiFormUtils$1.formatDate(optionValue); break;\r\n                        case 'datetime-local': optionValue = coreuiFormUtils$1.formatDateTime(optionValue); break;\r\n                        case 'month':          optionValue = coreuiFormUtils$1.formatDateMonth(optionValue, lang); break;\r\n                        case 'week':           optionValue = coreuiFormUtils$1.formatDateWeek(optionValue, lang); break;\r\n                        default: optionValue = cellValue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            rowOptions.push({\r\n                value: optionValue\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row-readonly.html'], {\r\n            options: rowOptions,\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.group = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _options: {\r\n        type: 'group',\r\n        label: '',\r\n        show: true,\r\n        showCollapsible: true,\r\n        fields: [],\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-group-\" + index;\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие группы\r\n     * @param {int} duration\r\n     */\r\n    collapse: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-down');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-right');\r\n\r\n        $(container + ' .coreui-form__group_content').slideUp(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ группы\r\n     * @param {int} duration\r\n     */\r\n    expand: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-right');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-down');\r\n\r\n        $(container + ' .coreui-form__group_content').slideDown(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-group.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            group: this._options,\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {string}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fields = [];\r\n        let that   = this;\r\n\r\n        $.each(this._options.fields, function (key, field) {\r\n\r\n            let fieldInstance = that._form.initField(field);\r\n\r\n            if (typeof fieldInstance !== 'object') {\r\n                return;\r\n            }\r\n\r\n            fields.push(fieldInstance.render());\r\n        });\r\n\r\n        return fields.join('');\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.showCollapsible) {\r\n            let that      = this;\r\n            let container = '#coreui-form-' + this._id;\r\n\r\n            $(container + ' > .coreui-form__group_label .btn-collapsible').click(function () {\r\n\r\n                if ($(container + ' > .coreui-form__group_content').is(':visible')) {\r\n                    that.collapse(80);\r\n                } else {\r\n                    that.expand(80);\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.hidden = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'hidden',\r\n        name: null,\r\n        attr: {},\r\n        required: null,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('#coreui-form-' + this._id).val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if ( ! this._options.readonly) {\r\n            $('#coreui-form-' + this._id).val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-content.html'], {\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n\r\n        options.attr.id = 'coreui-form-' + this._id;\r\n\r\n        if (options.name) {\r\n            options.attr.name = options.name;\r\n        }\r\n\r\n        options.attr.type  = 'hidden';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/hidden.html'], {\r\n            value: this._value !== null ? this._value : '',\r\n            field: options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.input = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'text',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils$1.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils$1.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils$1.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils$1.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\n/**\n * jquery.mask.js\n * @version: v1.14.16\n * @author: Igor Escobar\n *\n * Created by Igor Escobar on 2012-03-10. Please report any bug at github.com/igorescobar/jQuery-Mask-Plugin\n *\n * Copyright (c) 2012 Igor Escobar http://igorescobar.com\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* jshint laxbreak: true */\n/* jshint maxcomplexity:17 */\n/* global define */\n\n// UMD (Universal Module Definition) patterns for JavaScript modules that work everywhere.\n// https://github.com/umdjs/umd/blob/master/templates/jqueryPlugin.js\n(function (factory, jQuery, Zepto) {\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object' && typeof Meteor === 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery || Zepto);\n    }\n\n}(function ($) {\n    'use strict';\n\n    var Mask = function (el, mask, options) {\n\n        var p = {\n            invalid: [],\n            getCaret: function () {\n                try {\n                    var sel,\n                        pos = 0,\n                        ctrl = el.get(0),\n                        dSel = document.selection,\n                        cSelStart = ctrl.selectionStart;\n\n                    // IE Support\n                    if (dSel && navigator.appVersion.indexOf('MSIE 10') === -1) {\n                        sel = dSel.createRange();\n                        sel.moveStart('character', -p.val().length);\n                        pos = sel.text.length;\n                    }\n                    // Firefox support\n                    else if (cSelStart || cSelStart === '0') {\n                        pos = cSelStart;\n                    }\n\n                    return pos;\n                } catch (e) {}\n            },\n            setCaret: function(pos) {\n                try {\n                    if (el.is(':focus')) {\n                        var range, ctrl = el.get(0);\n\n                        // Firefox, WebKit, etc..\n                        if (ctrl.setSelectionRange) {\n                            ctrl.setSelectionRange(pos, pos);\n                        } else { // IE\n                            range = ctrl.createTextRange();\n                            range.collapse(true);\n                            range.moveEnd('character', pos);\n                            range.moveStart('character', pos);\n                            range.select();\n                        }\n                    }\n                } catch (e) {}\n            },\n            events: function() {\n                el\n                .on('keydown.mask', function(e) {\n                    el.data('mask-keycode', e.keyCode || e.which);\n                    el.data('mask-previus-value', el.val());\n                    el.data('mask-previus-caret-pos', p.getCaret());\n                    p.maskDigitPosMapOld = p.maskDigitPosMap;\n                })\n                .on($.jMaskGlobals.useInput ? 'input.mask' : 'keyup.mask', p.behaviour)\n                .on('paste.mask drop.mask', function() {\n                    setTimeout(function() {\n                        el.keydown().keyup();\n                    }, 100);\n                })\n                .on('change.mask', function(){\n                    el.data('changed', true);\n                })\n                .on('blur.mask', function(){\n                    if (oldValue !== p.val() && !el.data('changed')) {\n                        el.trigger('change');\n                    }\n                    el.data('changed', false);\n                })\n                // it's very important that this callback remains in this position\n                // otherwhise oldValue it's going to work buggy\n                .on('blur.mask', function() {\n                    oldValue = p.val();\n                })\n                // select all text on focus\n                .on('focus.mask', function (e) {\n                    if (options.selectOnFocus === true) {\n                        $(e.target).select();\n                    }\n                })\n                // clear the value if it not complete the mask\n                .on('focusout.mask', function() {\n                    if (options.clearIfNotMatch && !regexMask.test(p.val())) {\n                       p.val('');\n                   }\n                });\n            },\n            getRegexMask: function() {\n                var maskChunks = [], translation, pattern, optional, recursive, oRecursive, r;\n\n                for (var i = 0; i < mask.length; i++) {\n                    translation = jMask.translation[mask.charAt(i)];\n\n                    if (translation) {\n\n                        pattern = translation.pattern.toString().replace(/.{1}$|^.{1}/g, '');\n                        optional = translation.optional;\n                        recursive = translation.recursive;\n\n                        if (recursive) {\n                            maskChunks.push(mask.charAt(i));\n                            oRecursive = {digit: mask.charAt(i), pattern: pattern};\n                        } else {\n                            maskChunks.push(!optional && !recursive ? pattern : (pattern + '?'));\n                        }\n\n                    } else {\n                        maskChunks.push(mask.charAt(i).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n                    }\n                }\n\n                r = maskChunks.join('');\n\n                if (oRecursive) {\n                    r = r.replace(new RegExp('(' + oRecursive.digit + '(.*' + oRecursive.digit + ')?)'), '($1)?')\n                         .replace(new RegExp(oRecursive.digit, 'g'), oRecursive.pattern);\n                }\n\n                return new RegExp(r);\n            },\n            destroyEvents: function() {\n                el.off(['input', 'keydown', 'keyup', 'paste', 'drop', 'blur', 'focusout', ''].join('.mask '));\n            },\n            val: function(v) {\n                var isInput = el.is('input'),\n                    method = isInput ? 'val' : 'text',\n                    r;\n\n                if (arguments.length > 0) {\n                    if (el[method]() !== v) {\n                        el[method](v);\n                    }\n                    r = el;\n                } else {\n                    r = el[method]();\n                }\n\n                return r;\n            },\n            calculateCaretPosition: function(oldVal) {\n                var newVal = p.getMasked(),\n                    caretPosNew = p.getCaret();\n                if (oldVal !== newVal) {\n                    var caretPosOld = el.data('mask-previus-caret-pos') || 0,\n                        newValL = newVal.length,\n                        oldValL = oldVal.length,\n                        maskDigitsBeforeCaret = 0,\n                        maskDigitsAfterCaret = 0,\n                        maskDigitsBeforeCaretAll = 0,\n                        maskDigitsBeforeCaretAllOld = 0,\n                        i = 0;\n\n                    for (i = caretPosNew; i < newValL; i++) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsAfterCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsBeforeCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMap[i]) {\n                            maskDigitsBeforeCaretAll++;\n                        }\n                    }\n\n                    for (i = caretPosOld - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMapOld[i]) {\n                            maskDigitsBeforeCaretAllOld++;\n                        }\n                    }\n\n                    // if the cursor is at the end keep it there\n                    if (caretPosNew > oldValL) {\n                      caretPosNew = newValL * 10;\n                    } else if (caretPosOld >= caretPosNew && caretPosOld !== oldValL) {\n                        if (!p.maskDigitPosMapOld[caretPosNew])  {\n                          var caretPos = caretPosNew;\n                          caretPosNew -= maskDigitsBeforeCaretAllOld - maskDigitsBeforeCaretAll;\n                          caretPosNew -= maskDigitsBeforeCaret;\n                          if (p.maskDigitPosMap[caretPosNew])  {\n                            caretPosNew = caretPos;\n                          }\n                        }\n                    }\n                    else if (caretPosNew > caretPosOld) {\n                        caretPosNew += maskDigitsBeforeCaretAll - maskDigitsBeforeCaretAllOld;\n                        caretPosNew += maskDigitsAfterCaret;\n                    }\n                }\n                return caretPosNew;\n            },\n            behaviour: function(e) {\n                e = e || window.event;\n                p.invalid = [];\n\n                var keyCode = el.data('mask-keycode');\n\n                if ($.inArray(keyCode, jMask.byPassKeys) === -1) {\n                    var newVal = p.getMasked(),\n                        caretPos = p.getCaret(),\n                        oldVal = el.data('mask-previus-value') || '';\n\n                    // this is a compensation to devices/browsers that don't compensate\n                    // caret positioning the right way\n                    setTimeout(function() {\n                      p.setCaret(p.calculateCaretPosition(oldVal));\n                    }, $.jMaskGlobals.keyStrokeCompensation);\n\n                    p.val(newVal);\n                    p.setCaret(caretPos);\n                    return p.callbacks(e);\n                }\n            },\n            getMasked: function(skipMaskChars, val) {\n                var buf = [],\n                    value = val === undefined ? p.val() : val + '',\n                    m = 0, maskLen = mask.length,\n                    v = 0, valLen = value.length,\n                    offset = 1, addMethod = 'push',\n                    resetPos = -1,\n                    maskDigitCount = 0,\n                    maskDigitPosArr = [],\n                    lastMaskChar,\n                    check;\n\n                if (options.reverse) {\n                    addMethod = 'unshift';\n                    offset = -1;\n                    lastMaskChar = 0;\n                    m = maskLen - 1;\n                    v = valLen - 1;\n                    check = function () {\n                        return m > -1 && v > -1;\n                    };\n                } else {\n                    lastMaskChar = maskLen - 1;\n                    check = function () {\n                        return m < maskLen && v < valLen;\n                    };\n                }\n\n                var lastUntranslatedMaskChar;\n                while (check()) {\n                    var maskDigit = mask.charAt(m),\n                        valDigit = value.charAt(v),\n                        translation = jMask.translation[maskDigit];\n\n                    if (translation) {\n                        if (valDigit.match(translation.pattern)) {\n                            buf[addMethod](valDigit);\n                             if (translation.recursive) {\n                                if (resetPos === -1) {\n                                    resetPos = m;\n                                } else if (m === lastMaskChar && m !== resetPos) {\n                                    m = resetPos - offset;\n                                }\n\n                                if (lastMaskChar === resetPos) {\n                                    m -= offset;\n                                }\n                            }\n                            m += offset;\n                        } else if (valDigit === lastUntranslatedMaskChar) {\n                            // matched the last untranslated (raw) mask character that we encountered\n                            // likely an insert offset the mask character from the last entry; fall\n                            // through and only increment v\n                            maskDigitCount--;\n                            lastUntranslatedMaskChar = undefined;\n                        } else if (translation.optional) {\n                            m += offset;\n                            v -= offset;\n                        } else if (translation.fallback) {\n                            buf[addMethod](translation.fallback);\n                            m += offset;\n                            v -= offset;\n                        } else {\n                          p.invalid.push({p: v, v: valDigit, e: translation.pattern});\n                        }\n                        v += offset;\n                    } else {\n                        if (!skipMaskChars) {\n                            buf[addMethod](maskDigit);\n                        }\n\n                        if (valDigit === maskDigit) {\n                            maskDigitPosArr.push(v);\n                            v += offset;\n                        } else {\n                            lastUntranslatedMaskChar = maskDigit;\n                            maskDigitPosArr.push(v + maskDigitCount);\n                            maskDigitCount++;\n                        }\n\n                        m += offset;\n                    }\n                }\n\n                var lastMaskCharDigit = mask.charAt(lastMaskChar);\n                if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {\n                    buf.push(lastMaskCharDigit);\n                }\n\n                var newVal = buf.join('');\n                p.mapMaskdigitPositions(newVal, maskDigitPosArr, valLen);\n                return newVal;\n            },\n            mapMaskdigitPositions: function(newVal, maskDigitPosArr, valLen) {\n              var maskDiff = options.reverse ? newVal.length - valLen : 0;\n              p.maskDigitPosMap = {};\n              for (var i = 0; i < maskDigitPosArr.length; i++) {\n                p.maskDigitPosMap[maskDigitPosArr[i] + maskDiff] = 1;\n              }\n            },\n            callbacks: function (e) {\n                var val = p.val(),\n                    changed = val !== oldValue,\n                    defaultArgs = [val, e, el, options],\n                    callback = function(name, criteria, args) {\n                        if (typeof options[name] === 'function' && criteria) {\n                            options[name].apply(this, args);\n                        }\n                    };\n\n                callback('onChange', changed === true, defaultArgs);\n                callback('onKeyPress', changed === true, defaultArgs);\n                callback('onComplete', val.length === mask.length, defaultArgs);\n                callback('onInvalid', p.invalid.length > 0, [val, e, el, p.invalid, options]);\n            }\n        };\n\n        el = $(el);\n        var jMask = this, oldValue = p.val(), regexMask;\n\n        mask = typeof mask === 'function' ? mask(p.val(), undefined, el,  options) : mask;\n\n        // public methods\n        jMask.mask = mask;\n        jMask.options = options;\n        jMask.remove = function() {\n            var caret = p.getCaret();\n            if (jMask.options.placeholder) {\n                el.removeAttr('placeholder');\n            }\n            if (el.data('mask-maxlength')) {\n                el.removeAttr('maxlength');\n            }\n            p.destroyEvents();\n            p.val(jMask.getCleanVal());\n            p.setCaret(caret);\n            return el;\n        };\n\n        // get value without mask\n        jMask.getCleanVal = function() {\n           return p.getMasked(true);\n        };\n\n        // get masked value without the value being in the input or element\n        jMask.getMaskedVal = function(val) {\n           return p.getMasked(false, val);\n        };\n\n       jMask.init = function(onlyMask) {\n            onlyMask = onlyMask || false;\n            options = options || {};\n\n            jMask.clearIfNotMatch  = $.jMaskGlobals.clearIfNotMatch;\n            jMask.byPassKeys       = $.jMaskGlobals.byPassKeys;\n            jMask.translation      = $.extend({}, $.jMaskGlobals.translation, options.translation);\n\n            jMask = $.extend(true, {}, jMask, options);\n\n            regexMask = p.getRegexMask();\n\n            if (onlyMask) {\n                p.events();\n                p.val(p.getMasked());\n            } else {\n                if (options.placeholder) {\n                    el.attr('placeholder' , options.placeholder);\n                }\n\n                // this is necessary, otherwise if the user submit the form\n                // and then press the \"back\" button, the autocomplete will erase\n                // the data. Works fine on IE9+, FF, Opera, Safari.\n                if (el.data('mask')) {\n                  el.attr('autocomplete', 'off');\n                }\n\n                // detect if is necessary let the user type freely.\n                // for is a lot faster than forEach.\n                for (var i = 0, maxlength = true; i < mask.length; i++) {\n                    var translation = jMask.translation[mask.charAt(i)];\n                    if (translation && translation.recursive) {\n                        maxlength = false;\n                        break;\n                    }\n                }\n\n                if (maxlength) {\n                    el.attr('maxlength', mask.length).data('mask-maxlength', true);\n                }\n\n                p.destroyEvents();\n                p.events();\n\n                var caret = p.getCaret();\n                p.val(p.getMasked());\n                p.setCaret(caret);\n            }\n        };\n\n        jMask.init(!el.is('input'));\n    };\n\n    $.maskWatchers = {};\n    var HTMLAttributes = function () {\n        var input = $(this),\n            options = {},\n            prefix = 'data-mask-',\n            mask = input.attr('data-mask');\n\n        if (input.attr(prefix + 'reverse')) {\n            options.reverse = true;\n        }\n\n        if (input.attr(prefix + 'clearifnotmatch')) {\n            options.clearIfNotMatch = true;\n        }\n\n        if (input.attr(prefix + 'selectonfocus') === 'true') {\n           options.selectOnFocus = true;\n        }\n\n        if (notSameMaskObject(input, mask, options)) {\n            return input.data('mask', new Mask(this, mask, options));\n        }\n    },\n    notSameMaskObject = function(field, mask, options) {\n        options = options || {};\n        var maskObject = $(field).data('mask'),\n            stringify = JSON.stringify,\n            value = $(field).val() || $(field).text();\n        try {\n            if (typeof mask === 'function') {\n                mask = mask(value);\n            }\n            return typeof maskObject !== 'object' || stringify(maskObject.options) !== stringify(options) || maskObject.mask !== mask;\n        } catch (e) {}\n    },\n    eventSupported = function(eventName) {\n        var el = document.createElement('div'), isSupported;\n\n        eventName = 'on' + eventName;\n        isSupported = (eventName in el);\n\n        if ( !isSupported ) {\n            el.setAttribute(eventName, 'return;');\n            isSupported = typeof el[eventName] === 'function';\n        }\n        el = null;\n\n        return isSupported;\n    };\n\n    $.fn.mask = function(mask, options) {\n        options = options || {};\n        var selector = this.selector,\n            globals = $.jMaskGlobals,\n            interval = globals.watchInterval,\n            watchInputs = options.watchInputs || globals.watchInputs,\n            maskFunction = function() {\n                if (notSameMaskObject(this, mask, options)) {\n                    return $(this).data('mask', new Mask(this, mask, options));\n                }\n            };\n\n        $(this).each(maskFunction);\n\n        if (selector && selector !== '' && watchInputs) {\n            clearInterval($.maskWatchers[selector]);\n            $.maskWatchers[selector] = setInterval(function(){\n                $(document).find(selector).each(maskFunction);\n            }, interval);\n        }\n        return this;\n    };\n\n    $.fn.masked = function(val) {\n        return this.data('mask').getMaskedVal(val);\n    };\n\n    $.fn.unmask = function() {\n        clearInterval($.maskWatchers[this.selector]);\n        delete $.maskWatchers[this.selector];\n        return this.each(function() {\n            var dataMask = $(this).data('mask');\n            if (dataMask) {\n                dataMask.remove().removeData('mask');\n            }\n        });\n    };\n\n    $.fn.cleanVal = function() {\n        return this.data('mask').getCleanVal();\n    };\n\n    $.applyDataMask = function(selector) {\n        selector = selector || $.jMaskGlobals.maskElements;\n        var $selector = (selector instanceof $) ? selector : $(selector);\n        $selector.filter($.jMaskGlobals.dataMaskAttr).each(HTMLAttributes);\n    };\n\n    var globals = {\n        maskElements: 'input,td,span,div',\n        dataMaskAttr: '*[data-mask]',\n        dataMask: true,\n        watchInterval: 300,\n        watchInputs: true,\n        keyStrokeCompensation: 10,\n        // old versions of chrome dont work great with input event\n        useInput: !/Chrome\\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && eventSupported('input'),\n        watchDataMask: false,\n        byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91],\n        translation: {\n            '0': {pattern: /\\d/},\n            '9': {pattern: /\\d/, optional: true},\n            '#': {pattern: /\\d/, recursive: true},\n            'A': {pattern: /[a-zA-Z0-9]/},\n            'S': {pattern: /[a-zA-Z]/}\n        }\n    };\n\n    $.jMaskGlobals = $.jMaskGlobals || {};\n    globals = $.jMaskGlobals = $.extend(true, {}, globals, $.jMaskGlobals);\n\n    // looking for inputs with data-mask attribute\n    if (globals.dataMask) {\n        $.applyDataMask();\n    }\n\n    setInterval(function() {\n        if ($.jMaskGlobals.watchDataMask) {\n            $.applyDataMask();\n        }\n    }, globals.watchInterval);\n}, window.jQuery, window.Zepto));\n\ncoreuiForm$1.fields.mask = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'mask',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        value = value.replace(/[^\\d\\w]/g, '');\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'text';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : ''\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' input')\r\n            .mask(this._options.mask, this._options.options);\r\n    }\r\n};\n\ncoreuiForm$1.fields.modal = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: '',\r\n    _text: '',\r\n    _options: {\r\n        type: 'modal',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        fields: [],\r\n        options: {\r\n            title: '',\r\n            size: 'lg',\r\n            url: '',\r\n            onHidden: null,\r\n            onClear: null,\r\n            onChange: null,\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n\r\n        if (typeof options.name === 'string' &&\r\n            formRecord.hasOwnProperty(options.name) &&\r\n            ['object'].indexOf(typeof formRecord[options.name]) >= 0\r\n        ) {\r\n            let record = formRecord[options.name];\r\n\r\n            this._value = record.hasOwnProperty('value') && ['number', 'string'].indexOf(typeof(record.value)) >= 0 ? record.value : '';\r\n            this._text  = record.hasOwnProperty('text') && ['number', 'string'].indexOf(typeof(record.text)) >= 0 ? record.text : '';\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input.coreui-form-modal-value').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     * @param {string} text\r\n     */\r\n    setValue: function (value, text) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(text);\r\n\r\n        } else {\r\n            let elementValue = $('.content-' + this._hash + ' .coreui-form-modal-value');\r\n            let elementText  = $('.content-' + this._hash + ' .coreui-form-modal-text');\r\n            let oldValue     = elementValue.val();\r\n\r\n            elementValue.val(value);\r\n            elementText.val(text);\r\n\r\n\r\n            if (oldValue != value) {\r\n                let modal = this._options.hasOwnProperty('options') && typeof (this._options.options) === 'object'\r\n                    ? this._options.options\r\n                    : {};\r\n\r\n                if (modal.hasOwnProperty('onChange')) {\r\n                    if (typeof(modal.onChange) === 'function') {\r\n                        modal.onChange(this);\r\n\r\n                    } else if (typeof(modal.onChange) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onChange);\r\n\r\n                        if (typeof func === 'function') {\r\n                            func(this);\r\n                        } else {\r\n                            eval(modal.onChange);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this._form._trigger('change-modal.coreui.form', this, [this]);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fieldOptions = this.getOptions();\r\n        let attributes   = [];\r\n        let textAttr     = {\r\n            type: 'text',\r\n            readonly: 'readonly',\r\n            class: 'form-control form-control-sm coreui-form-modal-text',\r\n            value: this._text !== null ? this._text : ''\r\n        };\r\n\r\n        if (fieldOptions.required) {\r\n            textAttr.required = 'required';\r\n        }\r\n\r\n        if (fieldOptions.hasOwnProperty('attr') &&\r\n            typeof fieldOptions.attr === 'object' &&\r\n            Array.isArray(fieldOptions.attr)\r\n        ) {\r\n            textAttr = coreuiFormUtils$1.mergeAttr(textAttr, fieldOptions.attr);\r\n        }\r\n\r\n        $.each(textAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/modal.html'], {\r\n            field: fieldOptions,\r\n            value: this._value !== null ? this._value : '',\r\n            text: this._text !== null ? this._text : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                width: this._options.width,\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that  = this;\r\n        let modal = this._options.hasOwnProperty('options') && typeof(this._options.options) === 'object'\r\n            ? this._options.options\r\n            : {};\r\n\r\n\r\n        // Очистка\r\n        $('.content-' + this._hash + ' .btn-modal-clear').click(function (e) {\r\n            if (modal.hasOwnProperty('onClear')) {\r\n                if (typeof(modal.onClear) === 'function') {\r\n                    modal.onClear(that);\r\n\r\n                } else if (typeof(modal.onClear) === 'string') {\r\n                    let func = coreuiFormUtils$1.getFunctionByName(modal.onClear);\r\n\r\n                    if (typeof func === 'function') {\r\n                        func(that);\r\n                    } else {\r\n                        eval(modal.onClear);\r\n                    }\r\n                }\r\n            }\r\n\r\n            that._form._trigger('clear-modal.coreui.form', that, [ that, e ]);\r\n\r\n            that.setValue('', '');\r\n        });\r\n\r\n        // Выбор\r\n        $('.content-' + this._hash + ' .btn-modal-select').click(function (e) {\r\n            let title = modal.hasOwnProperty('title') && typeof(modal.title) === 'string'\r\n                ? modal.title\r\n                : '';\r\n\r\n            let size = modal.hasOwnProperty('size') && typeof(modal.size) === 'string'\r\n                ? modal.size\r\n                : 'lg';\r\n\r\n            let url = modal.hasOwnProperty('url') && typeof(modal.url) === 'string'\r\n                ? modal.url\r\n                : '';\r\n\r\n            if ( ! url) {\r\n                return;\r\n            }\r\n\r\n\r\n            let modalId      = coreuiFormUtils$1.hashCode();\r\n            let modalLoading = ejs.render(tpl['fields/modal-loading.html'], {\r\n                lang: that._form.getLang(),\r\n            });\r\n\r\n\r\n            if (CoreUI.hasOwnProperty('modal')) {\r\n                let onShow   = null;\r\n                let onHidden = null;\r\n\r\n                if (modal.hasOwnProperty('onHidden')) {\r\n                    if (typeof(modal.onHidden) === 'function') {\r\n                        onHidden = modal.onHidden;\r\n\r\n                    } else if (typeof(modal.onHidden) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onHidden);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onHidden = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (modal.hasOwnProperty('onShow')) {\r\n                    if (typeof(modal.onShow) === 'function') {\r\n                        onShow = modal.onShow;\r\n\r\n                    } else if (typeof(modal.onShow) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onShow);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onShow = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                CoreUI.modal.show(title, modalLoading, {\r\n                    id: modalId,\r\n                    size: size,\r\n                    onShow: onShow,\r\n                    onHidden: onHidden\r\n                });\r\n            }\r\n\r\n            $.ajax({\r\n                url: url,\r\n                method: 'GET',\r\n                beforeSend: function(xhr) {\r\n                    that._form._trigger('before-load-modal.coreui.form', that, [ that, xhr ]);\r\n                },\r\n                success: function (result) {\r\n                    $('#modal-' + modalId + ' .modal-body').html(result);\r\n                    that._form._trigger('success-load-modal.coreui.form', that, [ that, result ]);\r\n                },\r\n                error: function(xhr, textStatus, errorThrown) {\r\n                    that._form._trigger('error-load-modal.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n                },\r\n                complete: function(xhr, textStatus) {\r\n                    that._form._trigger('complete-load-modal.coreui.form', that, [ that, xhr, textStatus ]);\r\n                },\r\n            });\r\n\r\n\r\n            that._form._trigger('select-modal.coreui.form', that, [ that, e ]);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.number = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'number',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block',\r\n            step: 'any'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null,\r\n        precision: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        // Установка точности\r\n        if (this._options.precision === null) {\r\n            let precision = 0;\r\n\r\n            if (this._options.attr.hasOwnProperty('step') &&\r\n                this._options.attr.step !== 'any' &&\r\n                ['string', 'number'].indexOf(typeof this._options.attr.step) >= 0\r\n            ) {\r\n                let match = $.trim(this._options.attr.step.toString()).match(/\\.(\\d+)$/);\r\n\r\n                if (match && match.hasOwnProperty(1)) {\r\n                    precision = match ? match[1].length : precision;\r\n                }\r\n            }\r\n\r\n            this._options.precision = precision;\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0 ||\r\n            ! value.toString().match(/^\\-?\\d+\\.?\\d*$/)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.precision >= 0) {\r\n            value = coreuiFormUtils$1.round(value, this._options.precision);\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('min')) {\r\n            value = value < Number(this._options.attr.min)\r\n                ? Number(this._options.attr.min)\r\n                : value;\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('max')) {\r\n            value = value > Number(this._options.attr.max)\r\n                ? Number(this._options.attr.max)\r\n                : value;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = $.extend(true, {}, this._options);\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'number';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('.content-' + this._hash + ' input').keydown(function (e) {\r\n            let k = e.keyCode || e.which;\r\n            let ok = k >= 35 && k <= 40 ||      // arrows\r\n                k >= 96 && k <= 105 ||     // 0-9 numpad\r\n                k === 189 || k === 109 ||  // minus\r\n                k === 110 || k === 190 ||  // dot\r\n                k === 9 ||  //tab\r\n                k === 46 || //del\r\n                k === 8 ||  // backspaces\r\n                ( ! e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)\r\n\r\n            if ( ! ok || (e.ctrlKey && e.altKey)) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' input').blur(function (e) {\r\n            let value = $(this).val();\r\n\r\n            if (that._options.precision >= 0) {\r\n                value = coreuiFormUtils$1.round(value, that._options.precision);\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('min')) {\r\n                value = value < Number(that._options.attr.min)\r\n                    ? Number(that._options.attr.min)\r\n                    : value;\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('max')) {\r\n                value = value > Number(that._options.attr.max)\r\n                    ? Number(that._options.attr.max)\r\n                    : value;\r\n            }\r\n\r\n            $(this).val(value);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.radio = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'radio',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input[type=radio]:checked').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            let that         = this;\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options)\r\n            ) {\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value') && option.value == value) {\r\n                        let text = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                            ? option.text\r\n                            : '';\r\n\r\n                        $('.content-' + that._hash).text(text);\r\n                        that._value = value;\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n\r\n        } else {\r\n            let input = $('.content-' + this._hash + ' input[type=radio][value=\"' + value + '\"]');\r\n\r\n            if (input[0]) {\r\n                input.prop('checked', true);\r\n                this._value = value;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            let value = this.getValue();\r\n            return typeof value === 'string' && value !== '';\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that         = this;\r\n        let radioOptions = [];\r\n        let fieldOptions = this.getOptions();\r\n        let selectedItem = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'radio',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText   = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils$1.hashCode();\r\n\r\n                if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItem.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                radioOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        return ejs.render(tpl['fields/radio.html'], {\r\n            field: fieldOptions,\r\n            value: this._value,\r\n            render: {\r\n                options: radioOptions,\r\n                selectedItem: selectedItem\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.range = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'range',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-range d-inline-block pt-1'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'range';\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.select = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'select',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @returns {array|string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            if (this._options.hasOwnProperty('attr') &&\r\n                typeof this._options.attr === 'object' &&\r\n                this._options.attr !== null &&\r\n                ! Array.isArray(this._options.attr) &&\r\n                this._options.attr.hasOwnProperty('multiple')\r\n            ) {\r\n                let values = [];\r\n\r\n                $('.content-' + this._hash + ' select option:selected').each(function () {\r\n                    values.push($(this).val());\r\n                });\r\n\r\n                return values;\r\n\r\n            } else {\r\n                return $('.content-' + this._hash + ' select option:selected').val()\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' select > option').prop('selected', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' select > option').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('selected', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let select    = $('select', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            select.removeClass('is-invalid');\r\n            select.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            select.removeClass('is-invalid');\r\n            select.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            select.removeClass('is-valid');\r\n            select.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let select = $('.content-' + this._hash + ' select');\r\n\r\n        if (this._options.required && select.val() === '') {\r\n            return false;\r\n        }\r\n\r\n        if (select[0]) {\r\n            return select.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let that          = this;\r\n        let options       = this.getOptions();\r\n        let attributes    = [];\r\n        let selectOptions = [];\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            options.options !== null\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n\r\n                if (typeof option === 'string' || typeof option === 'number') {\r\n                    selectOptions.push(that._renderOption({\r\n                        type: 'option',\r\n                        value: key,\r\n                        text: option\r\n                    }));\r\n\r\n                } else if (typeof option === 'object') {\r\n                    let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                        ? option.type\r\n                        : 'option';\r\n\r\n                    if (type === 'group') {\r\n                        let renderAttr   = [];\r\n                        let groupAttr    = {};\r\n                        let groupOptions = [];\r\n\r\n                        if (option.hasOwnProperty('attr') &&\r\n                            typeof option.attr === 'object' &&\r\n                            option.attr !== null &&\r\n                            ! Array.isArray(option.attr)\r\n                        ) {\r\n                            groupAttr = option.attr;\r\n                        }\r\n\r\n                        if (option.hasOwnProperty('label') && ['string', 'number'].indexOf(typeof(option.label)) >= 0) {\r\n                            groupAttr.label = option.label;\r\n                        }\r\n\r\n                        $.each(groupAttr, function (name, value) {\r\n                            renderAttr.push(name + '=\"' + value + '\"');\r\n                        });\r\n\r\n                        if (Array.isArray(option.options)) {\r\n                            $.each(option.options, function (key, groupOption) {\r\n                                groupOptions.push(that._renderOption(groupOption));\r\n                            });\r\n                        }\r\n\r\n                        selectOptions.push({\r\n                            type: 'group',\r\n                            attr: renderAttr.length > 0 ? (' ' + renderAttr.join(' ')) : '',\r\n                            options: groupOptions,\r\n                        });\r\n\r\n                    } else {\r\n                        selectOptions.push(that._renderOption(option));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                options: selectOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let that            = this;\r\n        let options         = this.getOptions();\r\n        let selectedOptions = [];\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                    ? option.type\r\n                    : 'option';\r\n\r\n                if (type === 'group') {\r\n                    if (Array.isArray(option.options)) {\r\n                        $.each(option.options, function (key, groupOption) {\r\n                            let optionText = groupOption.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(groupOption.text)) >= 0\r\n                                ? groupOption.text\r\n                                : '';\r\n\r\n                            if ( ! optionText || optionText === '') {\r\n                                return;\r\n                            }\r\n\r\n                            if (Array.isArray(that._value)) {\r\n                                $.each(that._value, function (key, itemValue) {\r\n                                    if (itemValue == groupOption.value) {\r\n                                        selectedOptions.push(optionText);\r\n                                        return false;\r\n                                    }\r\n                                });\r\n\r\n                            } else if (that._value == groupOption.value) {\r\n                                selectedOptions.push(optionText);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                } else {\r\n                    let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                        ? option.text\r\n                        : '';\r\n\r\n                    if ( ! optionText || optionText === '') {\r\n                        return;\r\n                    }\r\n\r\n                    if (Array.isArray(that._value)) {\r\n                        $.each(that._value, function (key, itemValue) {\r\n                            if (itemValue == option.value) {\r\n                                selectedOptions.push(optionText);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (that._value == option.value) {\r\n                        selectedOptions.push(optionText);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            render: {\r\n                selectedOptions: selectedOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Сборка опции\r\n     * @param option\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _renderOption: function (option) {\r\n\r\n        let optionAttr = [];\r\n        let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n            ? option.text\r\n            : '';\r\n\r\n        $.each(option, function (name, value) {\r\n            if (name !== 'text') {\r\n                optionAttr.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n\r\n        if (Array.isArray(this._value)) {\r\n            $.each(this._value, function (key, itemValue) {\r\n                if (itemValue == option.value) {\r\n                    optionAttr.push('selected=\"selected\"');\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        } else if (this._value == option.value) {\r\n            optionAttr.push('selected=\"selected\"');\r\n        }\r\n\r\n        return {\r\n            type: 'option',\r\n            text: optionText,\r\n            attr: optionAttr.length > 0 ? (' ' + optionAttr.join(' ')) : ''\r\n        };\r\n    }\r\n};\n\ncoreuiForm$1.fields.switch = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'switch',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        valueY: 'Y',\r\n        valueN: 'N',\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=checkbox]').prop('checked', value === this._options.valueY);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container       = $('.content-' + this._hash);\r\n        let switchContainer = $('.form-switch', container);\r\n        let inputs          = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n        let itemAttr   = {\r\n            type: 'checkbox',\r\n            class: 'form-check-input',\r\n            value: options.valueY\r\n        };\r\n\r\n\r\n        if (options.name) {\r\n            itemAttr.name = this._options.name;\r\n        }\r\n\r\n        if (options.required) {\r\n            itemAttr.required = 'required';\r\n        }\r\n\r\n        if (options.hasOwnProperty('attr') &&\r\n            typeof options.attr === 'object' &&\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            itemAttr = coreuiFormUtils$1.mergeAttr(itemAttr, options.attr);\r\n        }\r\n\r\n        if (this._value === options.valueY) {\r\n            itemAttr.checked = 'checked';\r\n        }\r\n\r\n        $.each(itemAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/switch.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.textarea = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'textarea',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' textarea').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' textarea').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let textarea  = $('textarea', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            textarea.removeClass('is-valid');\r\n            textarea.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' textarea');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/textarea.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.wysiwyg = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _editor: null,\r\n    _editorHash: null,\r\n    _options: {\r\n        type: 'wysiwyg',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        height: null,\r\n        minHeight: null,\r\n        maxHeight: null,\r\n        options: {},\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        readonly: false,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form       = form;\r\n        this._index      = index;\r\n        this._id         = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash       = coreuiFormUtils$1.hashCode();\r\n        this._editorHash = coreuiFormUtils$1.hashCode();\r\n        this._value      = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options    = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @return {string|null}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        } else {\r\n            return this._editor ? this._editor.getContent() : this._value;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            if (this._editor) {\r\n                this._editor.setContent(value);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/wysiwyg.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            editorHash: this._editorHash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let tinyMceOptions = {};\r\n        let than           = this;\r\n        let textareaId     = 'editor-' + this._editorHash;\r\n\r\n        if (typeof this._options.options === 'object' &&\r\n            ! Array.isArray(this._options.options) &&\r\n            Object.keys(this._options.options).length > 0\r\n        ) {\r\n            tinyMceOptions = this._options.options;\r\n\r\n        } else if (this._options.options === 'simple') {\r\n            tinyMceOptions = {\r\n                plugins: 'image lists anchor charmap',\r\n                toolbar: 'blocks | bold italic underline | alignleft aligncenter ' +\r\n                         'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                         'forecolor backcolor removeformat',\r\n                menubar: false,\r\n                branding: false\r\n            };\r\n\r\n        } else {\r\n            tinyMceOptions = {\r\n                promotion: false,\r\n                branding: false,\r\n                plugins: 'preview importcss searchreplace autolink autosave save directionality code ' +\r\n                         'visualblocks visualchars fullscreen image link media template codesample table ' +\r\n                         'charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',\r\n                menubar: 'file edit view insert format tools table help',\r\n                toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | ' +\r\n                         'alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | ' +\r\n                         'forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen ' +\r\n                         'preview save print | insertfile image media template link anchor codesample | ltr rtl',\r\n            };\r\n        }\r\n\r\n        tinyMceOptions.selector = '#editor-' + this._editorHash;\r\n\r\n        if (['string', 'number'].indexOf(typeof this._options.width) >= 0) {\r\n            tinyMceOptions.width = this._options.width;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minWidth) >= 0) {\r\n            tinyMceOptions.min_width = this._options.minWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxWidth) >= 0) {\r\n            tinyMceOptions.max_width = this._options.maxWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.height) >= 0) {\r\n            tinyMceOptions.height = this._options.height;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minHeight) >= 0) {\r\n            tinyMceOptions.min_height = this._options.minHeight;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxHeight) >= 0) {\r\n            tinyMceOptions.max_height = this._options.maxHeight;\r\n        }\r\n\r\n        tinymce.init(tinyMceOptions).then(function () {\r\n            than._editor = tinymce.get(textareaId);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.passwordRepeat = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _isChangeState: true,\r\n    _value: '',\r\n    _options: {\r\n        type: 'password',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            type: 'password',\r\n            class: 'form-control form-control-sm d-inline-block flex-shrink-0'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        showBtn: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        }\r\n\r\n        let pass = $('.content-' + this._hash + ' input[type=\"password\"]').eq(0);\r\n\r\n        if (typeof pass.attr('disabled') !== 'undefined' && pass.attr('disabled') !== false) {\r\n            return '';\r\n        }\r\n\r\n        return pass.val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value ? '******' : '');\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=\"password\"]').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input[type=\"password\"]', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        if ( ! this._isChangeState || this._options.readonly) {\r\n            return true;\r\n        }\r\n\r\n        let input = $('.content-' + this._hash + ' input[type=\"password\"]');\r\n\r\n        if (input.eq(0).val() !== input.eq(1).val()) {\r\n            return false;\r\n        }\r\n\r\n        if (input[0]) {\r\n            return input.eq(0).is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes  = [];\r\n        let attributes2 = [];\r\n        let datalist    = [];\r\n        let options     = this.getOptions();\r\n\r\n        this._isChangeState = ! options.showBtn\r\n            ? true\r\n            : ! this._value;\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if ( ! this._isChangeState) {\r\n            options.attr.disabled = '';\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.value = this._value ? '******' : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n        $.each(options.attr, function (name, value) {\r\n            if (['name', 'value'].indexOf(name) < 0) {\r\n                attributes2.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n        let lang = this._form.getLang();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: lang,\r\n            btn_text: this._isChangeState ? lang.cancel : lang.change,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                attr2: attributes2.length > 0 ? (' ' + attributes2.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value ? '******' : '',\r\n            hash: this._hash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' .btn-password-change').click(function (e) {\r\n            let textChange = $(this).data('change');\r\n            let textCancel = $(this).data('cancel');\r\n\r\n            if (that._isChangeState) {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').attr('disabled', 'disabled');\r\n                $(this).text(textChange);\r\n                that._isChangeState = false;\r\n\r\n            } else {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').removeAttr('disabled');\r\n                $(this).text(textCancel);\r\n                that._isChangeState = true;\r\n            }\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.file = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'file',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {File[]}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input')[0].files;\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {File|File[]} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if ( ! (value instanceof File) &&  ! (value instanceof FileList)) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text('');\r\n        } else {\r\n            let container = new DataTransfer();\r\n\r\n            if (value instanceof File) {\r\n                container.items.add(value);\r\n\r\n            } else {\r\n                $.each(value, function (key, file) {\r\n                    if (value instanceof File) {\r\n                        container.items.add(file);\r\n                    }\r\n                });\r\n            }\r\n\r\n            $('.content-' + this._hash + ' input')[0].files = container.files;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils$1.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils$1.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils$1.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils$1.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\nreturn coreuiForm$1;\n\n})));\n"]}