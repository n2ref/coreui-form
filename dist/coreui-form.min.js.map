{"version":3,"sources":["coreui-form.min.js"],"names":["global","factory","exports","module","define","amd","CoreUI","form","this","f","window","self","ejs","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","fs","path","utils","scopeOptionWarned","_VERSION_STRING","version","_DEFAULT_LOCALS_NAME","_OPTS_PASSABLE_WITH_DATA","_OPTS_PASSABLE_WITH_DATA_EXPRESS","concat","_BOM","_JS_IDENTIFIER","resolvePaths","name","paths","filePath","some","v","resolveInclude","existsSync","handleCache","options","template","func","filename","hasTemplate","arguments","cache","get","fileLoader","toString","replace","compile","set","includeFile","opts","shallowCopy","createNullProtoObjWherePossible","includePath","views","match","exec","Array","isArray","root","includer","escapeFunction","includerResult","rethrow","err","str","flnm","lineno","esc","lines","split","start","Math","max","end","min","context","slice","map","line","curr","join","message","stripSemi","Template","text","templateText","mode","truncate","currentLine","source","client","escape","escapeXML","compileDebug","debug","openDelimiter","closeDelimiter","delimiter","strict","rmWhitespace","outputFunctionName","localsName","async","destructuredLocals","legacyInclude","_with","regex","createRegex","readFileSync","promiseImpl","Function","Promise","isDir","dirname","extname","resolve","scope","console","warn","render","d","data","shallowCopyFromList","renderFile","cb","result","args","prototype","shift","pop","settings","viewOpts","reject","clearCache","reset","modes","EVAL","ESCAPED","RAW","COMMENT","LITERAL","delim","escapeRegExpChars","open","close","RegExp","fn","prepended","appended","escapeFn","sanitizedFilename","JSON","stringify","generateSource","test","destructuring","src","log","ctor","SyntaxError","returnedFn","apply","includeData","Object","defineProperty","basename","value","writable","enumerable","configurable","matches","parseTemplateText","forEach","index","indexOf","closing","scanLine","firstPos","pat","arr","push","substring","_addOutput","newLineCount","lastIndexOf","__express","VERSION","../package.json","./utils","2","hasOwn","obj","key","hasOwnProperty","regExpChars","_ENCODE_HTML_RULES","string","String","&","<",">","\"","'","_MATCH_HTML","encode_char","escapeXMLToString","markup","undefined","to","from","list","_data","val","remove","hyphenToCamel","toUpperCase","create","__proto__","3","4","process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","resolvedPath","resolvedAbsolute","cwd","TypeError","charAt","normalize","isAbsolute","trailingSlash","substr","relative","trim","fromParts","toParts","samePartsLength","outputParts","sep","hasRoot","charCodeAt","matchedSlash","ext","startDot","startPart","preDotState","len","_process","5","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","marker","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","6","description","keywords","author","license","bin","main","jsdelivr","unpkg","repository","type","url","bugs","homepage","dependencies","jake","devDependencies","browserify","eslint","git-directory-deploy","jsdoc","lru-cache","mocha","uglify-js","engines","node","scripts","let","tpl","coreuiFormUtils$1","getFieldValue","formRecord","getRecord","fieldOptions","getFunctionByName","functionName","namespaces","mergeFieldOptions","defaultOptions","$","attr","mergeAttr","extend","width","_options","fieldWidth","unit","labelWidth","attr2","each","tryHandleCache","getAttacheFields","fields","field","instance","hash","_hash","direction","fieldsDirection","formatDate","templ","day","month","Date","date","getMonth","getDate","year","formatDateTime","getHours","getSeconds","formatDateMonth","lang","getFullYear","date_months","formatDateWeek","isNumeric","num","isNaN","hashCode","crc32","getTime","random","round","number","precision","pow","parseInt","coreuiFormInstance","id","send","method","format","minWidth","maxWidth","controlsOffset","readonly","validate","errorClass","layout","onSubmit","record","controls","_lock","_fieldsIndex","_groupsIndex","_controlsIndex","_groups","_fields","_controls","_events","_init","coreuiForm$1","getSetting","include","initEvents","that","formContainer","_trigger","getId","element","widthSizes","formAttr","matchAll","columns","column","initGroup","initField","columnsContent","keys","fieldContents","control","show","html","getElementById","HTMLElement","domElement","innerHTML","lock","controlOptions","unlock","getOptions","isValid","getData","onsubmit","eval","onSubmitResult","results","isStopSend","sendFormat","dataFormat","contentType","FormData","File","append","FileList","file","ajax","beforeSend","xhr","parsedResponse","parse","jsonResponse","script","loadUrl","location","href","error","textStatus","errorThrown","errorMessage","send_error","responseText","error_message","complete","getValue","getFields","getControls","getGroups","getField","fieldInstance","isReadonly","hide","showControls","hideControls","showError","formError","find","class","dismiss","prepend","scroll","animate","scrollTop","offset","top","scrollOffset","hideError","callback","singleExec","eventName","destruct","_instances","init","group","groupInstance","initControl","controlInstance","getLang","assign","params","_renderControl","content","renderContent","_settings","hour","formId","setSettings","ru","modal_select","modal_loading","switch_yes","switch_no","dataset_add","date_week","repeat","change","cancel","en","required_field","button","_form","_index","onClick","_initEvents","attributes","duration","event","custom","link","click","submit","removeAttr","coreuiFormUtils","checkbox","_id","_value","label","inline","errorText","errorOptions","values","setValue","collapse","empty","selectedItems","option","prop","itemValue","container","lastInput","removeClass","inputs","sendDataFormat","errorMessageScrollOffset","addClass","validText","invalidText","required","attachFields","checkboxOptions","itemAttr","optionText","checked","color","outContent","attach","input","is","_renderContent","datalist","datalistId","style","itemAttributes","datalistAttr","alloyComponents","components","component","_renderOptions","items","valueY","valueN","serializeArray","item","_eventAdd","removeItems","itemId","rows","headers","row","_renderRow","_renderContentReadonly","dataset","_renderRowReadonly","removeItem","rowOptions","itemOptions","cellValue","cellItemValue","selected","optionValue","showCollapsible","slideUp","expand","slideDown","hidden","hashItem","Meteor","jQuery","Zepto","Mask","regexMask","invalid","getCaret","sel","ctrl","el","dSel","document","selection","createRange","moveStart","cSelStart","pos","range","setSelectionRange","createTextRange","moveEnd","select","events","keyCode","which","maskDigitPosMapOld","maskDigitPosMap","jMaskGlobals","useInput","behaviour","keydown","keyup","oldValue","trigger","selectOnFocus","clearIfNotMatch","pattern","optional","recursive","oRecursive","maskChunks","mask","translation","jMask","navigator","appVersion","digit","destroyEvents","oldVal","newVal","getMasked","caretPosOld","newValL","oldValL","maskDigitsBeforeCaret","maskDigitsAfterCaret","maskDigitsBeforeCaretAll","maskDigitsBeforeCaretAllOld","caretPosNew","caretPos","byPassKeys","setCaret","calculateCaretPosition","keyStrokeCompensation","lastMaskChar","lastUntranslatedMaskChar","addMethod","resetPos","maskDigitCount","maskDigitPosArr","check","valLen","maskLen","m","valDigit","buf","fallback","skipMaskChars","maskDigit","lastMaskCharDigit","mapMaskdigitPositions","maskDiff","reverse","callbacks","criteria","changed","defaultArgs","placeholder","getCleanVal","getMaskedVal","onlyMask","maxlength","caret","HTMLAttributes","prefix","notSameMaskObject","maskObject","maskWatchers","selector","interval","globals","watchInterval","watchInputs","setInterval","maskFunction","masked","unmask","clearInterval","dataMask","removeData","cleanVal","isSupported","applyDataMask","setAttribute","maskElements","dataMaskAttr","userAgent","watchDataMask","$selector","modal","size","onHidden","onClear","onChange","_text","elementText","elementValue","modalId","modalLoading","onShow","textAttr","Number","success","step","ok","k","radioOptions","selectedItem","shiftKey","ctrlKey","altKey","blur","radio","selectOptions","renderAttr","groupOptions","groupAttr","_renderOption","selectedOptions","optionAttr","switchContainer","textarea","wysiwyg","groupOption","_editor","getContent","switch","editorHash","tinyMceOptions","textareaId","branding","plugins","menubar","toolbar","max_width","tinymce","then","_isChangeState","btn_text","attributes2","textChange","height","maxHeight","setContent","_editorHash","than","promotion","min_width","minHeight","min_height","max_height","passwordRepeat","showBtn","eq","disabled","textCancel","files","DataTransfer","add"],"mappings":"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","file":"coreui-form.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.CoreUI = global.CoreUI || {}, global.CoreUI.form = factory());\n}(this, (function () { 'use strict';\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f();}else if(typeof define===\"function\"&&define.amd){define([],f);}else{var g;if(typeof window!==\"undefined\"){g=window;}else if(typeof global!==\"undefined\"){g=global;}else if(typeof self!==\"undefined\"){g=self;}else{g=this;}g.ejs=f();}})(function(){return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t);}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){\"use strict\";var fs=require(\"fs\");var path=require(\"path\");var utils=require(\"./utils\");var scopeOptionWarned=false;var _VERSION_STRING=require(\"../package.json\").version;var _DEFAULT_OPEN_DELIMITER=\"<\";var _DEFAULT_CLOSE_DELIMITER=\">\";var _DEFAULT_DELIMITER=\"%\";var _DEFAULT_LOCALS_NAME=\"locals\";var _NAME=\"ejs\";var _REGEX_STRING=\"(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)\";var _OPTS_PASSABLE_WITH_DATA=[\"delimiter\",\"scope\",\"context\",\"debug\",\"compileDebug\",\"client\",\"_with\",\"rmWhitespace\",\"strict\",\"filename\",\"async\"];var _OPTS_PASSABLE_WITH_DATA_EXPRESS=_OPTS_PASSABLE_WITH_DATA.concat(\"cache\");var _BOM=/^\\uFEFF/;var _JS_IDENTIFIER=/^[a-zA-Z_$][0-9a-zA-Z_$]*$/;exports.cache=utils.cache;exports.fileLoader=fs.readFileSync;exports.localsName=_DEFAULT_LOCALS_NAME;exports.promiseImpl=new Function(\"return this;\")().Promise;exports.resolveInclude=function(name,filename,isDir){var dirname=path.dirname;var extname=path.extname;var resolve=path.resolve;var includePath=resolve(isDir?filename:dirname(filename),name);var ext=extname(name);if(!ext){includePath+=\".ejs\";}return includePath};function resolvePaths(name,paths){var filePath;if(paths.some(function(v){filePath=exports.resolveInclude(name,v,true);return fs.existsSync(filePath)})){return filePath}}function getIncludePath(path,options){var includePath;var filePath;var views=options.views;var match=/^[A-Za-z]+:\\\\|^\\//.exec(path);if(match&&match.length){path=path.replace(/^\\/*/,\"\");if(Array.isArray(options.root)){includePath=resolvePaths(path,options.root);}else{includePath=exports.resolveInclude(path,options.root||\"/\",true);}}else{if(options.filename){filePath=exports.resolveInclude(path,options.filename);if(fs.existsSync(filePath)){includePath=filePath;}}if(!includePath&&Array.isArray(views)){includePath=resolvePaths(path,views);}if(!includePath&&typeof options.includer!==\"function\"){throw new Error('Could not find the include file \"'+options.escapeFunction(path)+'\"')}}return includePath}function handleCache(options,template){var func;var filename=options.filename;var hasTemplate=arguments.length>1;if(options.cache){if(!filename){throw new Error(\"cache option requires a filename\")}func=exports.cache.get(filename);if(func){return func}if(!hasTemplate){template=fileLoader(filename).toString().replace(_BOM,\"\");}}else if(!hasTemplate){if(!filename){throw new Error(\"Internal EJS error: no file name or template \"+\"provided\")}template=fileLoader(filename).toString().replace(_BOM,\"\");}func=exports.compile(template,options);if(options.cache){exports.cache.set(filename,func);}return func}function tryHandleCache(options,data,cb){var result;if(!cb){if(typeof exports.promiseImpl==\"function\"){return new exports.promiseImpl(function(resolve,reject){try{result=handleCache(options)(data);resolve(result);}catch(err){reject(err);}})}else{throw new Error(\"Please provide a callback function\")}}else{try{result=handleCache(options)(data);}catch(err){return cb(err)}cb(null,result);}}function fileLoader(filePath){return exports.fileLoader(filePath)}function includeFile(path,options){var opts=utils.shallowCopy(utils.createNullProtoObjWherePossible(),options);opts.filename=getIncludePath(path,opts);if(typeof options.includer===\"function\"){var includerResult=options.includer(path,opts.filename);if(includerResult){if(includerResult.filename){opts.filename=includerResult.filename;}if(includerResult.template){return handleCache(opts,includerResult.template)}}}return handleCache(opts)}function rethrow(err,str,flnm,lineno,esc){var lines=str.split(\"\\n\");var start=Math.max(lineno-3,0);var end=Math.min(lines.length,lineno+3);var filename=esc(flnm);var context=lines.slice(start,end).map(function(line,i){var curr=i+start+1;return(curr==lineno?\" >> \":\"    \")+curr+\"| \"+line}).join(\"\\n\");err.path=filename;err.message=(filename||\"ejs\")+\":\"+lineno+\"\\n\"+context+\"\\n\\n\"+err.message;throw err}function stripSemi(str){return str.replace(/;(\\s*$)/,\"$1\")}exports.compile=function compile(template,opts){var templ;if(opts&&opts.scope){if(!scopeOptionWarned){console.warn(\"`scope` option is deprecated and will be removed in EJS 3\");scopeOptionWarned=true;}if(!opts.context){opts.context=opts.scope;}delete opts.scope;}templ=new Template(template,opts);return templ.compile()};exports.render=function(template,d,o){var data=d||utils.createNullProtoObjWherePossible();var opts=o||utils.createNullProtoObjWherePossible();if(arguments.length==2){utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA);}return handleCache(opts,template)(data)};exports.renderFile=function(){var args=Array.prototype.slice.call(arguments);var filename=args.shift();var cb;var opts={filename:filename};var data;var viewOpts;if(typeof arguments[arguments.length-1]==\"function\"){cb=args.pop();}if(args.length){data=args.shift();if(args.length){utils.shallowCopy(opts,args.pop());}else{if(data.settings){if(data.settings.views){opts.views=data.settings.views;}if(data.settings[\"view cache\"]){opts.cache=true;}viewOpts=data.settings[\"view options\"];if(viewOpts){utils.shallowCopy(opts,viewOpts);}}utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA_EXPRESS);}opts.filename=filename;}else{data=utils.createNullProtoObjWherePossible();}return tryHandleCache(opts,data,cb)};exports.Template=Template;exports.clearCache=function(){exports.cache.reset();};function Template(text,opts){opts=opts||utils.createNullProtoObjWherePossible();var options=utils.createNullProtoObjWherePossible();this.templateText=text;this.mode=null;this.truncate=false;this.currentLine=1;this.source=\"\";options.client=opts.client||false;options.escapeFunction=opts.escape||opts.escapeFunction||utils.escapeXML;options.compileDebug=opts.compileDebug!==false;options.debug=!!opts.debug;options.filename=opts.filename;options.openDelimiter=opts.openDelimiter||exports.openDelimiter||_DEFAULT_OPEN_DELIMITER;options.closeDelimiter=opts.closeDelimiter||exports.closeDelimiter||_DEFAULT_CLOSE_DELIMITER;options.delimiter=opts.delimiter||exports.delimiter||_DEFAULT_DELIMITER;options.strict=opts.strict||false;options.context=opts.context;options.cache=opts.cache||false;options.rmWhitespace=opts.rmWhitespace;options.root=opts.root;options.includer=opts.includer;options.outputFunctionName=opts.outputFunctionName;options.localsName=opts.localsName||exports.localsName||_DEFAULT_LOCALS_NAME;options.views=opts.views;options.async=opts.async;options.destructuredLocals=opts.destructuredLocals;options.legacyInclude=typeof opts.legacyInclude!=\"undefined\"?!!opts.legacyInclude:true;if(options.strict){options._with=false;}else{options._with=typeof opts._with!=\"undefined\"?opts._with:true;}this.opts=options;this.regex=this.createRegex();}Template.modes={EVAL:\"eval\",ESCAPED:\"escaped\",RAW:\"raw\",COMMENT:\"comment\",LITERAL:\"literal\"};Template.prototype={createRegex:function(){var str=_REGEX_STRING;var delim=utils.escapeRegExpChars(this.opts.delimiter);var open=utils.escapeRegExpChars(this.opts.openDelimiter);var close=utils.escapeRegExpChars(this.opts.closeDelimiter);str=str.replace(/%/g,delim).replace(/</g,open).replace(/>/g,close);return new RegExp(str)},compile:function(){var src;var fn;var opts=this.opts;var prepended=\"\";var appended=\"\";var escapeFn=opts.escapeFunction;var ctor;var sanitizedFilename=opts.filename?JSON.stringify(opts.filename):\"undefined\";if(!this.source){this.generateSource();prepended+='  var __output = \"\";\\n'+\"  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n\";if(opts.outputFunctionName){if(!_JS_IDENTIFIER.test(opts.outputFunctionName)){throw new Error(\"outputFunctionName is not a valid JS identifier.\")}prepended+=\"  var \"+opts.outputFunctionName+\" = __append;\"+\"\\n\";}if(opts.localsName&&!_JS_IDENTIFIER.test(opts.localsName)){throw new Error(\"localsName is not a valid JS identifier.\")}if(opts.destructuredLocals&&opts.destructuredLocals.length){var destructuring=\"  var __locals = (\"+opts.localsName+\" || {}),\\n\";for(var i=0;i<opts.destructuredLocals.length;i++){var name=opts.destructuredLocals[i];if(!_JS_IDENTIFIER.test(name)){throw new Error(\"destructuredLocals[\"+i+\"] is not a valid JS identifier.\")}if(i>0){destructuring+=\",\\n  \";}destructuring+=name+\" = __locals.\"+name;}prepended+=destructuring+\";\\n\";}if(opts._with!==false){prepended+=\"  with (\"+opts.localsName+\" || {}) {\"+\"\\n\";appended+=\"  }\"+\"\\n\";}appended+=\"  return __output;\"+\"\\n\";this.source=prepended+this.source+appended;}if(opts.compileDebug){src=\"var __line = 1\"+\"\\n\"+\"  , __lines = \"+JSON.stringify(this.templateText)+\"\\n\"+\"  , __filename = \"+sanitizedFilename+\";\"+\"\\n\"+\"try {\"+\"\\n\"+this.source+\"} catch (e) {\"+\"\\n\"+\"  rethrow(e, __lines, __filename, __line, escapeFn);\"+\"\\n\"+\"}\"+\"\\n\";}else{src=this.source;}if(opts.client){src=\"escapeFn = escapeFn || \"+escapeFn.toString()+\";\"+\"\\n\"+src;if(opts.compileDebug){src=\"rethrow = rethrow || \"+rethrow.toString()+\";\"+\"\\n\"+src;}}if(opts.strict){src='\"use strict\";\\n'+src;}if(opts.debug){console.log(src);}if(opts.compileDebug&&opts.filename){src=src+\"\\n\"+\"//# sourceURL=\"+sanitizedFilename+\"\\n\";}try{if(opts.async){try{ctor=new Function(\"return (async function(){}).constructor;\")();}catch(e){if(e instanceof SyntaxError){throw new Error(\"This environment does not support async/await\")}else{throw e}}}else{ctor=Function;}fn=new ctor(opts.localsName+\", escapeFn, include, rethrow\",src);}catch(e){if(e instanceof SyntaxError){if(opts.filename){e.message+=\" in \"+opts.filename;}e.message+=\" while compiling ejs\\n\\n\";e.message+=\"If the above error is not helpful, you may want to try EJS-Lint:\\n\";e.message+=\"https://github.com/RyanZim/EJS-Lint\";if(!opts.async){e.message+=\"\\n\";e.message+=\"Or, if you meant to create an async function, pass `async: true` as an option.\";}}throw e}var returnedFn=opts.client?fn:function anonymous(data){var include=function(path,includeData){var d=utils.shallowCopy(utils.createNullProtoObjWherePossible(),data);if(includeData){d=utils.shallowCopy(d,includeData);}return includeFile(path,opts)(d)};return fn.apply(opts.context,[data||utils.createNullProtoObjWherePossible(),escapeFn,include,rethrow])};if(opts.filename&&typeof Object.defineProperty===\"function\"){var filename=opts.filename;var basename=path.basename(filename,path.extname(filename));try{Object.defineProperty(returnedFn,\"name\",{value:basename,writable:false,enumerable:false,configurable:true});}catch(e){}}return returnedFn},generateSource:function(){var opts=this.opts;if(opts.rmWhitespace){this.templateText=this.templateText.replace(/[\\r\\n]+/g,\"\\n\").replace(/^\\s+|\\s+$/gm,\"\");}this.templateText=this.templateText.replace(/[ \\t]*<%_/gm,\"<%_\").replace(/_%>[ \\t]*/gm,\"_%>\");var self=this;var matches=this.parseTemplateText();var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;if(matches&&matches.length){matches.forEach(function(line,index){var closing;if(line.indexOf(o+d)===0&&line.indexOf(o+d+d)!==0){closing=matches[index+2];if(!(closing==d+c||closing==\"-\"+d+c||closing==\"_\"+d+c)){throw new Error('Could not find matching close tag for \"'+line+'\".')}}self.scanLine(line);});}},parseTemplateText:function(){var str=this.templateText;var pat=this.regex;var result=pat.exec(str);var arr=[];var firstPos;while(result){firstPos=result.index;if(firstPos!==0){arr.push(str.substring(0,firstPos));str=str.slice(firstPos);}arr.push(result[0]);str=str.slice(result[0].length);result=pat.exec(str);}if(str){arr.push(str);}return arr},_addOutput:function(line){if(this.truncate){line=line.replace(/^(?:\\r\\n|\\r|\\n)/,\"\");this.truncate=false;}if(!line){return line}line=line.replace(/\\\\/g,\"\\\\\\\\\");line=line.replace(/\\n/g,\"\\\\n\");line=line.replace(/\\r/g,\"\\\\r\");line=line.replace(/\"/g,'\\\\\"');this.source+='    ; __append(\"'+line+'\")'+\"\\n\";},scanLine:function(line){var self=this;var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;var newLineCount=0;newLineCount=line.split(\"\\n\").length-1;switch(line){case o+d:case o+d+\"_\":this.mode=Template.modes.EVAL;break;case o+d+\"=\":this.mode=Template.modes.ESCAPED;break;case o+d+\"-\":this.mode=Template.modes.RAW;break;case o+d+\"#\":this.mode=Template.modes.COMMENT;break;case o+d+d:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(o+d+d,o+d)+'\")'+\"\\n\";break;case d+d+c:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(d+d+c,d+c)+'\")'+\"\\n\";break;case d+c:case\"-\"+d+c:case\"_\"+d+c:if(this.mode==Template.modes.LITERAL){this._addOutput(line);}this.mode=null;this.truncate=line.indexOf(\"-\")===0||line.indexOf(\"_\")===0;break;default:if(this.mode){switch(this.mode){case Template.modes.EVAL:case Template.modes.ESCAPED:case Template.modes.RAW:if(line.lastIndexOf(\"//\")>line.lastIndexOf(\"\\n\")){line+=\"\\n\";}}switch(this.mode){case Template.modes.EVAL:this.source+=\"    ; \"+line+\"\\n\";break;case Template.modes.ESCAPED:this.source+=\"    ; __append(escapeFn(\"+stripSemi(line)+\"))\"+\"\\n\";break;case Template.modes.RAW:this.source+=\"    ; __append(\"+stripSemi(line)+\")\"+\"\\n\";break;case Template.modes.COMMENT:break;case Template.modes.LITERAL:this._addOutput(line);break}}else{this._addOutput(line);}}if(self.opts.compileDebug&&newLineCount){this.currentLine+=newLineCount;this.source+=\"    ; __line = \"+this.currentLine+\"\\n\";}}};exports.escapeXML=utils.escapeXML;exports.__express=exports.renderFile;exports.VERSION=_VERSION_STRING;exports.name=_NAME;if(typeof window!=\"undefined\"){window.ejs=exports;}},{\"../package.json\":6,\"./utils\":2,fs:3,path:4}],2:[function(require,module,exports){\"use strict\";var regExpChars=/[|\\\\{}()[\\]^$+*?.]/g;var hasOwnProperty=Object.prototype.hasOwnProperty;var hasOwn=function(obj,key){return hasOwnProperty.apply(obj,[key])};exports.escapeRegExpChars=function(string){if(!string){return\"\"}return String(string).replace(regExpChars,\"\\\\$&\")};var _ENCODE_HTML_RULES={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&#34;\",\"'\":\"&#39;\"};var _MATCH_HTML=/[&<>'\"]/g;function encode_char(c){return _ENCODE_HTML_RULES[c]||c}var escapeFuncStr=\"var _ENCODE_HTML_RULES = {\\n\"+'      \"&\": \"&amp;\"\\n'+'    , \"<\": \"&lt;\"\\n'+'    , \">\": \"&gt;\"\\n'+'    , \\'\"\\': \"&#34;\"\\n'+'    , \"\\'\": \"&#39;\"\\n'+\"    }\\n\"+\"  , _MATCH_HTML = /[&<>'\\\"]/g;\\n\"+\"function encode_char(c) {\\n\"+\"  return _ENCODE_HTML_RULES[c] || c;\\n\"+\"};\\n\";exports.escapeXML=function(markup){return markup==undefined?\"\":String(markup).replace(_MATCH_HTML,encode_char)};function escapeXMLToString(){return Function.prototype.toString.call(this)+\";\\n\"+escapeFuncStr}try{if(typeof Object.defineProperty===\"function\"){Object.defineProperty(exports.escapeXML,\"toString\",{value:escapeXMLToString});}else{exports.escapeXML.toString=escapeXMLToString;}}catch(err){console.warn(\"Unable to set escapeXML.toString (is the Function prototype frozen?)\");}exports.shallowCopy=function(to,from){from=from||{};if(to!==null&&to!==undefined){for(var p in from){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}return to};exports.shallowCopyFromList=function(to,from,list){list=list||[];from=from||{};if(to!==null&&to!==undefined){for(var i=0;i<list.length;i++){var p=list[i];if(typeof from[p]!=\"undefined\"){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}}return to};exports.cache={_data:{},set:function(key,val){this._data[key]=val;},get:function(key){return this._data[key]},remove:function(key){delete this._data[key];},reset:function(){this._data={};}};exports.hyphenToCamel=function(str){return str.replace(/-[a-z]/g,function(match){return match[1].toUpperCase()})};exports.createNullProtoObjWherePossible=function(){if(typeof Object.create==\"function\"){return function(){return Object.create(null)}}if(!({__proto__:null}instanceof Object)){return function(){return{__proto__:null}}}return function(){return{}}}();},{}],3:[function(require,module,exports){},{}],4:[function(require,module,exports){(function(process){function normalizeArray(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1);}else if(last===\"..\"){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}if(allowAboveRoot){for(;up--;up){parts.unshift(\"..\");}}return parts}exports.resolve=function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){continue}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\";}resolvedPath=normalizeArray(filter(resolvedPath.split(\"/\"),function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"};exports.normalize=function(path){var isAbsolute=exports.isAbsolute(path),trailingSlash=substr(path,-1)===\"/\";path=normalizeArray(filter(path.split(\"/\"),function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\";}if(path&&trailingSlash){path+=\"/\";}return(isAbsolute?\"/\":\"\")+path};exports.isAbsolute=function(path){return path.charAt(0)===\"/\"};exports.join=function(){var paths=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(paths,function(p,index){if(typeof p!==\"string\"){throw new TypeError(\"Arguments to path.join must be strings\")}return p}).join(\"/\"))};exports.relative=function(from,to){from=exports.resolve(from).substr(1);to=exports.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\");}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")};exports.sep=\"/\";exports.delimiter=\":\";exports.dirname=function(path){if(typeof path!==\"string\")path=path+\"\";if(path.length===0)return\".\";var code=path.charCodeAt(0);var hasRoot=code===47;var end=-1;var matchedSlash=true;for(var i=path.length-1;i>=1;--i){code=path.charCodeAt(i);if(code===47){if(!matchedSlash){end=i;break}}else{matchedSlash=false;}}if(end===-1)return hasRoot?\"/\":\".\";if(hasRoot&&end===1){return\"/\"}return path.slice(0,end)};function basename(path){if(typeof path!==\"string\")path=path+\"\";var start=0;var end=-1;var matchedSlash=true;var i;for(i=path.length-1;i>=0;--i){if(path.charCodeAt(i)===47){if(!matchedSlash){start=i+1;break}}else if(end===-1){matchedSlash=false;end=i+1;}}if(end===-1)return\"\";return path.slice(start,end)}exports.basename=function(path,ext){var f=basename(path);if(ext&&f.substr(-1*ext.length)===ext){f=f.substr(0,f.length-ext.length);}return f};exports.extname=function(path){if(typeof path!==\"string\")path=path+\"\";var startDot=-1;var startPart=0;var end=-1;var matchedSlash=true;var preDotState=0;for(var i=path.length-1;i>=0;--i){var code=path.charCodeAt(i);if(code===47){if(!matchedSlash){startPart=i+1;break}continue}if(end===-1){matchedSlash=false;end=i+1;}if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){return\"\"}return path.slice(startDot,end)};function filter(xs,f){if(xs.filter)return xs.filter(f);var res=[];for(var i=0;i<xs.length;i++){if(f(xs[i],i,xs))res.push(xs[i]);}return res}var substr=\"ab\".substr(-1)===\"b\"?function(str,start,len){return str.substr(start,len)}:function(str,start,len){if(start<0)start=str.length+start;return str.substr(start,len)};}).call(this,require(\"_process\"));},{_process:5}],5:[function(require,module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout===\"function\"){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title=\"browser\";process.browser=true;process.env={};process.argv=[];process.version=\"\";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error(\"process.binding is not supported\")};process.cwd=function(){return\"/\"};process.chdir=function(dir){throw new Error(\"process.chdir is not supported\")};process.umask=function(){return 0};},{}],6:[function(require,module,exports){module.exports={name:\"ejs\",description:\"Embedded JavaScript templates\",keywords:[\"template\",\"engine\",\"ejs\"],version:\"3.1.8\",author:\"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)\",license:\"Apache-2.0\",bin:{ejs:\"./bin/cli.js\"},main:\"./lib/ejs.js\",jsdelivr:\"ejs.min.js\",unpkg:\"ejs.min.js\",repository:{type:\"git\",url:\"git://github.com/mde/ejs.git\"},bugs:\"https://github.com/mde/ejs/issues\",homepage:\"https://github.com/mde/ejs\",dependencies:{jake:\"^10.8.5\"},devDependencies:{browserify:\"^16.5.1\",eslint:\"^6.8.0\",\"git-directory-deploy\":\"^1.5.1\",jsdoc:\"^4.0.2\",\"lru-cache\":\"^4.0.1\",mocha:\"^10.2.0\",\"uglify-js\":\"^3.3.16\"},engines:{node:\">=0.10.0\"},scripts:{test:\"mocha -u tdd\"}};},{}]},{},[1])(1)});\n\nlet tpl = Object.create(null);\ntpl['form-error.html'] = '<div class=\"coreui-form__error alert alert-danger alert-dismissible fade show mb-3 <%= options.class %>\">\\n    <%- message %>\\n    <% if (options.dismiss) { %>\\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\\n    <% } %>\\n</div>';\ntpl['form-field-content.html'] = '<%- content %>';\ntpl['form-field-group.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__group_container mb-3\">\\n    <div class=\"coreui-form__group_label pe-2\">\\n        <h6 class=\"coreui-form__field_label_text col-form-label-sm\">\\n            <%- group.label %>\\n            <% if (group.showCollapsible) { %>\\n                <button type=\"button\" class=\"btn btn-sm btn-link btn-collapsible text-dark\">\\n                    <% if ( ! group.show) { %>\\n                    <i class=\"bi bi-chevron-right\"></i>\\n                    <% } else { %>\\n                    <i class=\"bi bi-chevron-down\"></i>\\n                    <% } %>\\n                </button>\\n            <% } %>\\n        </h6>\\n    </div>\\n    <div class=\"coreui-form__group_content\"<% if ( ! group.show) { %> style=\"display:none\"<% } %>>\\n        <%- content %>\\n    </div>\\n</div>';\ntpl['form-field-label.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__field_container d-flex flex-column flex-md-row mb-3\"\\n     <% if ( ! field.show) { %> style=\"display:none\"<% } %>>\\n    <% if (field.labelWidth !== 0 && field.labelWidth !== \\'0px\\') { %>\\n    <div class=\"coreui-form__field_label text-md-end text-sm-start pe-2\"<% if (field.labelWidth) { %> style=\"min-width:<%= field.labelWidth %>;width:<%= field.labelWidth %>\"<% } %>>\\n        <div class=\"coreui-form__field_label_content col-form-label-sm\">\\n            <% if (field.required) { %>\\n            <span class=\"coreui-form__field_label_req text-danger\">*</span>\\n            <% } %>\\n            <span class=\"coreui-form__field_label_text fw-medium\"><%- field.label %></span>\\n        </div>\\n\\n        <% if (field.description) { %>\\n        <div class=\"coreui-form__field_label_description text-muted\">\\n            <small><%- field.description %></small>\\n        </div>\\n        <% } %>\\n    </div>\\n    <% } %>\\n    <div class=\"coreui-form__field_content flex-fill pt-1\">\\n        <div class=\"d-inline-block content-<%= hash %>\">\\n            <%- content %>\\n        </div>\\n\\n        <% if (field.outContent) { %>\\n        <span class=\"coreui-form__field-content-out d-inline-block align-top pt-1 ps-1\">\\n            <%- field.outContent %>\\n        </span>\\n        <% } %>\\n\\n        <% if (attachFields && attachFields.length > 0) { %>\\n            <% $.each(attachFields, function(key, attachField) { %>\\n                <div class=\"<% if (attachField.hasOwnProperty(\\'direction\\') && attachField.direction === \\'column\\') { %>d-block mt-2<% } else { %>d-inline-block<% } %> content-<%= attachField.hash %>\">\\n                    <%- attachField.content %>\\n                </div>\\n            <% }); %>\\n        <% } %>\\n    </div>\\n</div>';\ntpl['form.html'] = '<div id=\"coreui-form-<%= form.id %>\" class=\"coreui-form mb-2\"\\n    <% if (widthSizes) { %>style=\"<%= widthSizes.join(\\';\\') %>\"<% } %>>\\n    <% if (form.title) { %>\\n    <h5 class=\"mb-4\"><%- form.title %></h5>\\n    <% } %>\\n\\n    <form action=\"<%= form.send.url %>\" method=\"<%= form.send.method %>\"<%- formAttr %>>\\n        <div class=\"coreui-form__fields d-flex justify-content-start flex-column flex-wrap\">\\n            <%- layout %>\\n        </div>\\n\\n        <% if (controls) { %>\\n        <div class=\"coreui-form__controls d-flex justify-content-start flex-sm-wrap flex-md-nowrap\">\\n            <% if (form.controlsOffset !== 0 && form.controlsOffset !== \\'0px\\') { %>\\n            <div class=\"d-none d-md-block\" style=\"width:<%= form.controlsOffset %>;min-width:<%= form.controlsOffset %>\"></div>\\n            <% } %>\\n\\n            <div class=\"d-flex justify-content-start flex-wrap gap-2\">\\n                <% $.each(controls, function(key, control) { %>\\n                <div id=\"coreui-form-<%= form.id %>-control-<%= control.index %>\" class=\"coreui-form__control_container\"\\n                     <% if ( ! control.show) { %>style=\"display:none\"<% } %>>\\n                    <%- control.content %>\\n                </div>\\n                <% }); %>\\n            </div>\\n        </div>\\n        <% } %>\\n    </form>\\n</div>';\ntpl['controls/button.html'] = '<button <%- render.attr %>><%- control.content %></button>';\ntpl['controls/link.html'] = '<a href=\"<%- control.href %>\"<%- render.attr %>><%- control.content %></a>';\ntpl['fields/checkbox.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItems.join(\\', \\') %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/color.html'] = '<% if (field.readonly) { %>\\n    <div class=\"rounded-1\" style=\"width: 14px;height: 14px;background-color: <%= value %>\"></div>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/custom.html'] = '<%- content %>';\ntpl['fields/dataset-row-readonly.html'] = '<tr class=\"coreui-form__field-dataset-item\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-2 pb-1\">\\n            <%- option.value %>\\n        </td>\\n    <% }); %>\\n</tr>';\ntpl['fields/dataset-row.html'] = '<tr class=\"coreui-form__field-dataset-item\" id=\"dataset-item-<%= hashItem %>\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-1 pb-1\">\\n        <% if (option.type === \\'select\\') { %>\\n            <select <%- option.attr %>>\\n                <% $.each(option.items, function(key, item) { %>\\n                <option <%- item.attr %>><%- item.title %></option>\\n                <% }); %>\\n            </select>\\n        <% } else if (option.type === \\'switch\\') { %>\\n            <div class=\"form-check form-switch\">\\n                <input <%- option.attr %>/>\\n            </div>\\n        <% } else { %>\\n            <input <%- option.attr %>>\\n        <% } %>\\n        </td>\\n    <% }); %>\\n\\n    <td class=\"pb-1\">\\n        <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-remove\" data-item-id=\"dataset-item-<%= hashItem %>\">\\n            <i class=\"bi bi-x text-muted\"></i>\\n        </button>\\n    </td>\\n</tr>';\ntpl['fields/dataset.html'] = '<% if (field.readonly) { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted pe-2\"><small><%= item.title %></small></td>\\n                <% }); %>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n            <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n<% } else { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted\"><small><%= item.title %></small></td>\\n                <% }); %>\\n                <td></td>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n                <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n    <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-add\"><%= lang.dataset_add %></button>\\n<% } %>';\ntpl['fields/hidden.html'] = '<% if ( ! field.readonly) { %>\\n    <input <%- render.attr %>/>\\n<% } %>';\ntpl['fields/input.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/modal-loading.html'] = '<div class=\"py-4 d-flex justify-content-center align-items-center gap-2\">\\n    <div class=\"spinner-border mr-2\"></div> <%= lang.modal_loading %>\\n</div>\\n';\ntpl['fields/modal.html'] = '<% if (field.readonly) { %>\\n    <%= text %>\\n<% } else { %>\\n    <div class=\"input-group\"<% if (render.width) { %> style=\"width:<%= render.width %>\"<% } %>>\\n        <input <%- render.attr %>/>\\n        <input type=\"hidden\" name=\"<%= field.name %>\" value=\"<%= value %>\" class=\"coreui-form-modal-value\"/>\\n        <% if ( ! field.required) { %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-clear border-secondary-subtle\" type=\"button\">\\n            <i class=\"bi bi-x\"></i>\\n        </button>\\n        <% } %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-select border-secondary-subtle\" type=\"button\"><%= lang.modal_select %></button>\\n    </div>\\n<% } %>';\ntpl['fields/passwordRepeat.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <div class=\"d-flex gap-1 align-items-center\">\\n        <input <%- render.attr %>/>\\n        <small class=\"password-text-repeat\"><%= lang.repeat %></small>\\n\\n        <% if (field.showBtn) { %>\\n            <div class=\"input-group flex-nowrap\">\\n                <input <%- render.attr2 %>/>\\n                <button class=\"btn btn-sm btn-outline-secondary border-secondary-subtle btn-password-change\" type=\"button\"\\n                        data-change=\"<%- lang.change %>\" data-cancel=\"<%- lang.cancel %>\"><%= btn_text %></button>\\n            </div>\\n        <% } else { %>\\n            <input <%- render.attr2 %>/>\\n        <% } %>\\n\\n    </div>\\n<% } %>';\ntpl['fields/radio.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItem %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/select.html'] = '<% if (field.readonly) { %>\\n    <%= render.selectedOptions.join(\\', \\') %>\\n<% } else { %>\\n    <select <%- render.attr %>>\\n        <% $.each(render.options, function(key, option) { %>\\n            <% if (option.type === \\'group\\') { %>\\n                <optgroup<%- option.attr %>/>\\n                <% $.each(option.options, function(key, groupOption) { %>\\n                    <option <%- groupOption.attr %>/><%= groupOption.text %></option>\\n                <% }); %>\\n                </optgroup>\\n            <% } else { %>\\n            <option <%- option.attr %>/><%= option.text %></option>\\n            <% } %>\\n        <% }); %>\\n    </select>\\n<% } %>';\ntpl['fields/switch.html'] = '<% if (field.readonly) { %>\\n    <%= field.valueY == value ? lang.switch_yes : lang.switch_no %>\\n<% } else { %>\\n    <div class=\"form-check form-switch\">\\n        <input <%- render.attr %>/>\\n    </div>\\n<% } %>';\ntpl['fields/textarea.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea <%- render.attr %>><%- value %></textarea>\\n<% } %>';\ntpl['fields/wysiwyg.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea name=\"<%= field.name %>\" id=\"editor-<%= editorHash %>\"><%- value %></textarea>\\n<% } %>';\n\nlet coreuiFormUtils$1 = {\r\n\r\n    /**\r\n     * Получение значения поля\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               fieldOptions\r\n     * @returns {string|number|null}\r\n     */\r\n    getFieldValue: function (form, fieldOptions) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        if (fieldOptions &&\r\n            formRecord &&\r\n            typeof fieldOptions.name === 'string' &&\r\n            typeof formRecord === 'object' &&\r\n            formRecord.hasOwnProperty(fieldOptions.name) &&\r\n            ['string', 'number', 'object'].indexOf(typeof formRecord[fieldOptions.name]) >= 0\r\n        ) {\r\n            return formRecord[fieldOptions.name];\r\n        }\r\n\r\n        return '';\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение функции из указанного текста\r\n     * @param functionName\r\n     * @param context\r\n     * @returns {null|Window}\r\n     * @private\r\n     */\r\n    getFunctionByName: function(functionName, context) {\r\n\r\n        let namespaces = functionName.split(\".\");\r\n        let func       = namespaces.pop();\r\n\r\n        context = context || window;\r\n\r\n        for (let i = 0; i < namespaces.length; i++) {\r\n            if (context.hasOwnProperty(namespaces[i])) {\r\n                context = context[namespaces[i]];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        if (typeof context[func] === 'function') {\r\n            return context[func];\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Обработка полей в полях\r\n     * @param form\r\n     * @param defaultOptions\r\n     * @param fieldOptions\r\n     */\r\n    mergeFieldOptions: function (form, defaultOptions, fieldOptions) {\r\n\r\n        let options = $.extend(true, {}, defaultOptions);\r\n\r\n        if (fieldOptions) {\r\n            if (options.hasOwnProperty('attr') && typeof options.attr === 'object' &&\r\n                fieldOptions.hasOwnProperty('attr') && typeof fieldOptions.attr === 'object'\r\n            ) {\r\n                fieldOptions.attr = this.mergeAttr(options.attr, fieldOptions.attr);\r\n            }\r\n\r\n            options = $.extend(true, {}, options, fieldOptions);\r\n        }\r\n\r\n        if (options.hasOwnProperty('width')) {\r\n            if (options.width) {\r\n                let unit = typeof options.width === 'number' ? 'px' : '';\r\n                options.width = options.width + unit;\r\n\r\n            } else if (form._options.fieldWidth && options.type !== 'color') {\r\n                let unit = typeof form._options.fieldWidth === 'number' ? 'px' : '';\r\n                options.width = form._options.fieldWidth + unit;\r\n            }\r\n        }\r\n\r\n        if (options.hasOwnProperty('labelWidth')) {\r\n            if (options.labelWidth >= 0 && options.labelWidth !== null) {\r\n                let unit = typeof options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = options.labelWidth + unit;\r\n\r\n            } else if (form._options.labelWidth) {\r\n                let unit = typeof form._options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = form._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        return options\r\n    },\r\n\r\n\r\n    /**\r\n     * Объединение атрибутов\r\n     * @param attr1\r\n     * @param attr2\r\n     * @returns {object}\r\n     */\r\n    mergeAttr: function (attr1, attr2) {\r\n\r\n        let mergeAttr = Object.assign({}, attr1);\r\n\r\n        if (typeof attr2 === 'object') {\r\n            $.each(attr2, function (name, value) {\r\n                if (mergeAttr.hasOwnProperty(name)) {\r\n                    if (name === 'class') {\r\n                        mergeAttr[name] += ' ' + value;\r\n\r\n                    } else if (name === 'style') {\r\n                        mergeAttr[name] += ';' + value;\r\n\r\n                    } else {\r\n                        mergeAttr[name] = value;\r\n                    }\r\n\r\n                } else {\r\n                    mergeAttr[name] = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return mergeAttr;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация и рендер дополнительных полей\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @returns {object}\r\n     * @private\r\n     */\r\n    getAttacheFields: function(form, options) {\r\n\r\n        let fields = [];\r\n\r\n        if (typeof options === 'object' &&\r\n            typeof(options.fields) === 'object' &&\r\n            Array.isArray(options.fields)\r\n        ) {\r\n            $.each(options.fields, function (key, field) {\r\n                let instance = form.initField(field);\r\n\r\n                if (typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                fields.push({\r\n                    hash: instance._hash,\r\n                    direction: options.hasOwnProperty('fieldsDirection') ? options.fieldsDirection : 'row',\r\n                    content: instance.renderContent()\r\n                });\r\n            });\r\n        }\r\n\r\n        return fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDate: function (value) {\r\n\r\n        if (value && value.length === 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDateTime: function (value) {\r\n\r\n        if (value && value.length >= 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n            let hour  = (\"00\" + date.getHours()).slice(-2);\r\n            let min   = (\"00\" + date.getMinutes()).slice(-2);\r\n            let sec   = (\"00\" + date.getSeconds()).slice(-2);\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year + ' ' + hour + ':' + min + ':' + sec;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateMonth: function (value, lang) {\r\n\r\n        if (value && value.length === 7) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth();\r\n\r\n            let monthLang = lang.date_months.hasOwnProperty(month) ? lang.date_months[month] : '';\r\n\r\n            value = monthLang + ' ' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateWeek: function (value, lang) {\r\n\r\n        if (value && value.length >= 7) {\r\n            let year = value.substring(0, 4);\r\n            let week = value.substring(6);\r\n\r\n            value = year + ' ' + lang.date_week + ' ' + week;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка на число\r\n     * @param num\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    isNumeric: function(num) {\r\n        return (typeof(num) === 'number' || typeof(num) === \"string\" && num.trim() !== '') && ! isNaN(num);\r\n    },\r\n\r\n\r\n    /**\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    hashCode: function() {\r\n        return this.crc32((new Date().getTime() + Math.random()).toString()).toString(16);\r\n    },\r\n\r\n\r\n    /**\r\n     * Hash crc32\r\n     * @param str\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    crc32: function (str) {\r\n\r\n        for (var a, o = [], c = 0; c < 256; c++) {\r\n            a = c;\r\n            for (var f = 0; f < 8; f++) {\r\n                a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;\r\n            }\r\n            o[c] = a;\r\n        }\r\n\r\n        for (var n = -1, t = 0; t < str.length; t++) {\r\n            n = n >>> 8 ^ o[255 & (n ^ str.charCodeAt(t))];\r\n        }\r\n\r\n        return (-1 ^ n) >>> 0;\r\n    },\r\n\r\n\r\n    /**\r\n     * Округление\r\n     * @param number\r\n     * @param precision\r\n     * @returns {number}\r\n     */\r\n    round: function (number, precision) {\r\n\r\n        precision = typeof precision !== 'undefined' ? parseInt(precision) : 0;\r\n\r\n        if (precision === 0) {\r\n            return Math.round(number);\r\n\r\n        } else if (precision > 0) {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number * pow) / pow;\r\n\r\n        } else {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number / pow) * pow;\r\n        }\r\n    }\r\n};\n\nlet coreuiFormInstance = {\r\n\r\n    _options: {\r\n        id: null,\r\n        title: '',\r\n        lang: 'en',\r\n        send: {\r\n            url: '',\r\n            method: 'POST',\r\n            format: 'form',\r\n        },\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        labelWidth: 200,\r\n        controlsOffset: null,\r\n        readonly: false,\r\n        validate: false,\r\n        errorClass: '',\r\n        layout: '[column_default]',\r\n        onSubmit: null,\r\n        record: {},\r\n        fields: [],\r\n        controls: []\r\n    },\r\n\r\n    _lock: false,\r\n    _fieldsIndex: 0,\r\n    _groupsIndex: 0,\r\n    _controlsIndex: 0,\r\n    _groups: [],\r\n    _fields: [],\r\n    _controls: [],\r\n    _events: {},\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {object} options\r\n     * @private\r\n     */\r\n    _init: function (options) {\r\n\r\n        this._options.labelWidth    = coreuiForm$1.getSetting('labelWidth');\r\n        this._options.lang          = coreuiForm$1.getSetting('lang');\r\n        this._options.errorClass    = coreuiForm$1.getSetting('errorClass');\r\n        this._options.send.format = coreuiForm$1.getSetting('sendDataFormat');\r\n\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        if ( ! this._options.id) {\r\n            this._options.id = coreuiFormUtils$1.hashCode();\r\n        }\r\n\r\n        if (this._options.hasOwnProperty('labelWidth')) {\r\n            if (this._options.labelWidth >= 0 && this._options.labelWidth !== null) {\r\n                let unit = typeof this._options.labelWidth === 'number' ? 'px' : '';\r\n                this._options.labelWidth = this._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        if ( ! this._options.hasOwnProperty('controlsOffset') || this._options.controlsOffset === null) {\r\n            this._options.controlsOffset = this._options.labelWidth;\r\n        } else {\r\n            if (this._options.controlsOffset >= 0) {\r\n                let unit = typeof this._options.controlsOffset === 'number' ? 'px' : '';\r\n                this._options.controlsOffset = this._options.controlsOffset + unit;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    initEvents: function () {\r\n\r\n        let that          = this;\r\n        let formContainer = '#coreui-form-' + this._options.id + ' > form';\r\n\r\n        $(formContainer).on('submit', function () {\r\n            setTimeout(function () {\r\n                that.send.apply(that);\r\n            }, 0);\r\n            return false;\r\n        });\r\n\r\n        this._trigger('shown.coreui.form');\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение id формы\r\n     * @return {string|null}\r\n     */\r\n    getId: function () {\r\n\r\n        return this._options.hasOwnProperty('id') ? this._options.id : null;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    render: function(element) {\r\n\r\n        let that       = this;\r\n        let widthSizes = [];\r\n        let layout     = this._options.layout;\r\n        let controls   = [];\r\n        let formAttr   = [];\r\n\r\n\r\n\r\n        if (this._options.width) {\r\n            let unit = typeof this._options.width === 'number' ? 'px' : '';\r\n            widthSizes.push('width:' + this._options.width + unit);\r\n        }\r\n\r\n        if (this._options.minWidth) {\r\n            let unit = typeof this._options.minWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('min-width:' + this._options.minWidth + unit);\r\n        }\r\n\r\n        if (this._options.maxWidth) {\r\n            let unit = typeof this._options.maxWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('max-width:' + this._options.maxWidth + unit);\r\n        }\r\n\r\n\r\n\r\n        // Поля\r\n        if (typeof this._options.fields === 'object' &&\r\n            Array.isArray(this._options.fields) &&\r\n            this._options.fields.length > 0 &&\r\n            layout &&\r\n            typeof layout === 'string'\r\n        ) {\r\n            let matches        = Array.from(layout.matchAll(/\\[column_([\\w_\\d]+)\\]/g));\r\n            let columns        = [];\r\n            let columnsContent = {};\r\n\r\n            if (matches.length > 0) {\r\n                $.each(matches, function (key, match) {\r\n                    columns.push(match[1]);\r\n                });\r\n            }\r\n\r\n            if (columns.length > 0) {\r\n                $.each(this._options.fields, function (key, field) {\r\n                    let column = field.hasOwnProperty('column') && (typeof field.column === 'string' || typeof field.column === 'number')\r\n                        ? (columns.indexOf(field.column) >= 0 ? field.column : null)\r\n                        : 'default';\r\n\r\n                    if (typeof column !== 'string') {\r\n                        return;\r\n                    }\r\n\r\n                    let type     = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : '';\r\n                    let instance = null;\r\n\r\n                    if (type === 'group') {\r\n                        instance = that.initGroup(field);\r\n\r\n                    } else {\r\n                        instance = that.initField(field);\r\n                    }\r\n\r\n\r\n                    if ( ! instance || typeof instance !== 'object') {\r\n                        return;\r\n                    }\r\n\r\n                    if ( ! columnsContent.hasOwnProperty(column)) {\r\n                        columnsContent[column] = [];\r\n                    }\r\n                    columnsContent[column].push(instance.render());\r\n                });\r\n            }\r\n\r\n            if (Object.keys(columnsContent).length >= 0) {\r\n                $.each(columnsContent, function (name, fieldContents) {\r\n\r\n                    layout = layout.replace('[column_' + name + ']', fieldContents.join(''));\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        // Элементы управления\r\n        if (typeof this._options.controls === 'object' &&\r\n            Array.isArray(this._options.controls) &&\r\n            this._options.controls.length > 0\r\n        ) {\r\n            $.each(this._options.controls, function (key, control) {\r\n                let instance = that.initControl(control);\r\n\r\n                if ( ! instance || typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                controls.push({\r\n                    show: ! control.hasOwnProperty('show') || control.show,\r\n                    index: that._controlsIndex - 1,\r\n                    content: instance.render()\r\n                });\r\n            });\r\n        }\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            formAttr.push('novalidate');\r\n        }\r\n\r\n\r\n        let html = ejs.render(tpl['form.html'], {\r\n            form: this._options,\r\n            formAttr: formAttr ? ' ' + formAttr.join(' ') : '',\r\n            widthSizes: widthSizes,\r\n            layout: layout,\r\n            controls: controls,\r\n        });\r\n\r\n        if (element === undefined) {\r\n            return html;\r\n        }\r\n\r\n        // Dom element\r\n        let domElement = {};\r\n\r\n        if (typeof element === 'string') {\r\n            domElement = document.getElementById(element);\r\n\r\n            if ( ! domElement) {\r\n                return '';\r\n            }\r\n\r\n        } else if (element instanceof HTMLElement) {\r\n            domElement = element;\r\n        }\r\n\r\n\r\n        domElement.innerHTML = html;\r\n\r\n        this.initEvents();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        this._lock = true;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.lock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Разблокировка\r\n     */\r\n    unlock: function () {\r\n\r\n        this._lock = false;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.unlock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Отправка данных формы\r\n     */\r\n    send: function () {\r\n\r\n        if (this._lock) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            let isValid = this.validate();\r\n\r\n            if ( ! isValid) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let onsubmit = null;\r\n        let data     = this.getData();\r\n\r\n        if (typeof this._options.onSubmit === 'function') {\r\n            onsubmit = this._options.onSubmit;\r\n\r\n        } else if (typeof this._options.onSubmit === 'string') {\r\n            let func = coreuiFormUtils$1.getFunctionByName(this._options.onSubmit);\r\n            if (typeof func === 'function') {\r\n                onsubmit = func;\r\n            } else if (typeof func === 'string') {\r\n                eval(func);\r\n            }\r\n        }\r\n\r\n        if (typeof onsubmit === 'function') {\r\n            let onSubmitResult = onsubmit(this, data);\r\n\r\n            if (onSubmitResult === false) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let results    = this._trigger('send.coreui.form', this, [ this, data ]);\r\n        let isStopSend = false;\r\n\r\n        $.each(results, function(key, result) {\r\n            if (result === false) {\r\n                isStopSend = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        if (isStopSend) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.lock();\r\n\r\n        let that       = this;\r\n        let sendFormat = ['form', 'json'].indexOf(this._options.send.format) >= 0\r\n            ? this._options.send.format\r\n            : 'form';\r\n\r\n        let dataFormat  = null;\r\n        let contentType = null;\r\n\r\n        if (sendFormat === 'json') {\r\n            contentType = \"application/json; charset=utf-8\";\r\n            dataFormat  = JSON.stringify(data);\r\n\r\n        } else {\r\n            contentType = false;\r\n            dataFormat  = new FormData();\r\n\r\n            $.each(data, function (name, value) {\r\n                if (value instanceof File) {\r\n                    dataFormat.append(name, value, value.name);\r\n\r\n                } else if (value instanceof FileList) {\r\n                    $.each(value, function (key, file) {\r\n                        dataFormat.append(name, file, file.name);\r\n                    });\r\n\r\n                } else {\r\n                    dataFormat.append(name, value);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        $.ajax({\r\n            url: this._options.send.url,\r\n            method: this._options.send.method,\r\n            data: dataFormat,\r\n            contentType: contentType,\r\n            beforeSend: function(xhr) {\r\n                that._trigger('start-send.coreui.form', that, [ that, xhr ]);\r\n            },\r\n            success: function (result) {\r\n                that.hideError();\r\n\r\n                that._trigger('success-send.coreui.form', that, [ that, result ]);\r\n\r\n                let jsonResponse = null;\r\n\r\n                try {\r\n                    let parsedResponse = JSON.parse(result);\r\n                    if (typeof parsedResponse === 'object' &&\r\n                        parsedResponse !== null &&\r\n                        ! Array.isArray(parsedResponse)\r\n                    ) {\r\n                        jsonResponse = parsedResponse;\r\n                    }\r\n\r\n                } catch (e) {\r\n                    // ignore\r\n                }\r\n\r\n                if (jsonResponse !== null && typeof jsonResponse === 'object') {\r\n                    if (jsonResponse.hasOwnProperty('scripts') &&\r\n                        Array.isArray(jsonResponse.scripts)\r\n                    ) {\r\n                        $.each(jsonResponse.scripts, function (key, script) {\r\n                            if (typeof script === 'string') {\r\n                                let func = coreuiFormUtils$1.getFunctionByName(script);\r\n\r\n                                if (typeof func === 'function') {\r\n                                    func();\r\n                                } else {\r\n                                    eval(script);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (jsonResponse.hasOwnProperty('loadUrl') &&\r\n                        typeof jsonResponse.loadUrl === 'string'\r\n                    ) {\r\n                        location.href = jsonResponse.loadUrl;\r\n                    }\r\n                }\r\n            },\r\n            error: function(xhr, textStatus, errorThrown) {\r\n                let errorMessage = that.getLang().send_error || '';\r\n                let data         = {};\r\n\r\n                try {\r\n                    let parsedResponse = JSON.parse(xhr.responseText);\r\n                    if (typeof parsedResponse === 'object' &&\r\n                        parsedResponse !== null &&\r\n                        ! Array.isArray(parsedResponse)\r\n                    ) {\r\n                        data = parsedResponse;\r\n                    }\r\n\r\n                } catch (e) {\r\n                    // ignore\r\n                }\r\n\r\n                if (data.hasOwnProperty('error_message') &&\r\n                    typeof data.error_message === 'string' &&\r\n                    data.error_message !== ''\r\n                ) {\r\n                    errorMessage = data.error_message;\r\n                }\r\n\r\n                that.showError(errorMessage);\r\n                that._trigger('error-send.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n            },\r\n            complete: function(xhr, textStatus) {\r\n                that.unlock();\r\n                that._trigger('end-send.coreui.form', that, [ that, xhr, textStatus ]);\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return this._options;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение записи\r\n     * @returns {object}\r\n     */\r\n    getRecord: function () {\r\n\r\n        if (this._options.hasOwnProperty('record') && typeof this._options.record === 'object') {\r\n            return this._options.record;\r\n        }\r\n\r\n        return {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение данных с формы\r\n     * @returns {object}\r\n     */\r\n    getData: function () {\r\n\r\n        let data = {};\r\n\r\n        $.each(this._fields, function (key, field) {\r\n            let fieldOptions = field.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name) {\r\n                data[fieldOptions.name] = field.getValue();\r\n            }\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение полей\r\n     * @returns {object}\r\n     */\r\n    getFields: function () {\r\n        return this._fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение элементов управления\r\n     * @returns {object}\r\n     */\r\n    getControls: function () {\r\n        return this._controls;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение групп полей\r\n     * @returns {object}\r\n     */\r\n    getGroups: function () {\r\n        return this._groups;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение поля\r\n     * @param {string} name\r\n     * @returns {object}\r\n     */\r\n    getField: function (name) {\r\n\r\n        let field = {};\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            let fieldOptions = fieldInstance.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name === name) {\r\n                field = fieldInstance;\r\n            }\r\n        });\r\n\r\n        return field;\r\n    },\r\n\r\n\r\n    /**\r\n     * Смена состояний полей формы\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            fieldInstance.readonly(isReadonly);\r\n        });\r\n\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                if (isReadonly) {\r\n                    control.hide();\r\n                } else {\r\n                    control.show();\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ всех элементов управления\r\n     */\r\n    showControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.show();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие всех элементов управления\r\n     */\r\n    hideControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.hide();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Валидация полей\r\n     * @return {boolean}\r\n     */\r\n    validate: function () {\r\n\r\n        let isValid = true;\r\n\r\n        $.each(this._fields, function (key, field) {\r\n\r\n            if (field.isValid() === false) {\r\n                field.validate(false);\r\n                isValid = false;\r\n\r\n            } else {\r\n                field.validate(null);\r\n            }\r\n        });\r\n\r\n        return isValid;\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ сообщения с ошибкой\r\n     * @param {string} message\r\n     * @param {object} options\r\n     */\r\n    showError: function (message, options) {\r\n\r\n        let formContainer = $('#coreui-form-' + this._options.id + ' > form');\r\n        let formError     = formContainer.find('> .coreui-form__error');\r\n\r\n        if (formError[0]) {\r\n            formError.remove();\r\n        }\r\n\r\n        options = typeof options === 'object' && ! Array.isArray(options) && options !== null ? options : {};\r\n\r\n        if (typeof this._options.errorClass === 'string' && this._options.errorClass !== '') {\r\n            options.class = options.hasOwnProperty('class') ? options.class : '';\r\n            options.class += ' ' + this._options.errorClass;\r\n        }\r\n\r\n        let errorOptions = {\r\n            class:   options.hasOwnProperty('class') && typeof options.class === 'string' ? options.class : '',\r\n            dismiss: options.hasOwnProperty('dismiss') ? !! options.dismiss : true,\r\n        };\r\n\r\n        formContainer.prepend(\r\n            ejs.render(tpl['form-error.html'], {\r\n                message: message,\r\n                options: errorOptions,\r\n            })\r\n        );\r\n\r\n\r\n        if ( ! options.hasOwnProperty('scroll') || options.scroll) {\r\n            let scrollOffset = coreuiForm$1.getSetting('errorMessageScrollOffset');\r\n\r\n            $('html,body').animate({\r\n                scrollTop : formContainer.offset().top - scrollOffset\r\n            }, 'fast');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие сообщения с ошибкой\r\n     */\r\n    hideError: function () {\r\n\r\n        $('#coreui-form-' + this._options.id + ' > form > .coreui-form__error').remove();\r\n    },\r\n\r\n\r\n    /**\r\n     * @param eventName\r\n     * @param callback\r\n     * @param context\r\n     * @param singleExec\r\n     */\r\n    on: function(eventName, callback, context, singleExec) {\r\n        if (typeof this._events[eventName] !== 'object') {\r\n            this._events[eventName] = [];\r\n        }\r\n        this._events[eventName].push({\r\n            context : context || this,\r\n            callback: callback,\r\n            singleExec: !! singleExec,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление формы\r\n     */\r\n    destruct: function () {\r\n\r\n        $('#coreui-form-' + this._options.id).remove();\r\n        delete coreuiForm$1._instances[this.getId()];\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация поля\r\n     * @param field\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initField: function (field) {\r\n\r\n        if (typeof field !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : 'input';\r\n\r\n        if (type === 'group') {\r\n            return null;\r\n        }\r\n\r\n        if ( ! coreuiForm$1.fields.hasOwnProperty(type)) {\r\n            type = 'input';\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            field.readonly = true;\r\n        }\r\n\r\n\r\n        let fieldInstance = $.extend(true, {\r\n            render:        function () {},\r\n            renderContent: function () {},\r\n            init:          function () {},\r\n            getValue:      function () {},\r\n            setValue:      function () {},\r\n            getOptions:    function () {},\r\n            show:          function () {},\r\n            hide:          function () {},\r\n            readonly:      function () {},\r\n            validate:      function () {},\r\n            isValid:       function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        fieldInstance.init(this, field, this._fieldsIndex++);\r\n\r\n        this._fields.push(fieldInstance);\r\n\r\n        return fieldInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация группы\r\n     * @param group\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initGroup: function (group) {\r\n\r\n        if (typeof group !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = group.hasOwnProperty('type') && typeof group.type === 'string' ? group.type : '';\r\n\r\n        if (type !== 'group') {\r\n            return null;\r\n        }\r\n\r\n        let groupInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            expand:     function () {},\r\n            collapse:   function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        groupInstance.init(this, group, this._groupsIndex++);\r\n\r\n        this._groups.push(groupInstance);\r\n\r\n        return groupInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация контролов\r\n     * @param control\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initControl: function (control) {\r\n\r\n        if (typeof control !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : null;\r\n\r\n        if ( ! type || ! coreuiForm$1.controls.hasOwnProperty(type)) {\r\n            return null;\r\n        }\r\n\r\n        if (type === 'submit' && this._options.readonly) {\r\n            control.show = false;\r\n        }\r\n\r\n\r\n        let controlInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            show:       function () {},\r\n            hide:       function () {},\r\n        }, coreuiForm$1.controls[type]);\r\n\r\n        controlInstance.init(this, control, this._controlsIndex++);\r\n\r\n        this._controls.push(controlInstance);\r\n\r\n        return controlInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение настроек языка\r\n     * @private\r\n     */\r\n    getLang: function () {\r\n\r\n        return coreuiForm$1.lang.hasOwnProperty(this._options.lang)\r\n            ? coreuiForm$1.lang[this._options.lang]\r\n            : coreuiForm$1.lang['ru'];\r\n    },\r\n\r\n\r\n    /**\r\n     * @param name\r\n     * @param context\r\n     * @param params\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _trigger: function(name, context, params) {\r\n\r\n        params = params || [];\r\n        let results = [];\r\n\r\n        if (this._events[name] instanceof Object && this._events[name].length > 0) {\r\n            for (var i = 0; i < this._events[name].length; i++) {\r\n                let callback = this._events[name][i].callback;\r\n\r\n                context = context || this._events[name][i].context;\r\n\r\n                results.push(\r\n                    callback.apply(context, params)\r\n                );\r\n\r\n                if (this._events[name][i].singleExec) {\r\n                    this._events[name].splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n\r\n    /**\r\n     * @param {object} control\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderControl: function (control) {\r\n\r\n        let content = '';\r\n        let type    = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : 'text';\r\n\r\n        if (coreuiForm$1.control.hasOwnProperty(type)) {\r\n            content = coreuiForm$1.control[type].render(control);\r\n        }\r\n\r\n        return content;\r\n    }\r\n};\n\nvar coreuiForm$1 = {\r\n\r\n    lang: {},\r\n    fields: {},\r\n    controls: {},\r\n\r\n    _instances: {},\r\n    _settings: {\r\n        labelWidth: 200,\r\n        lang: 'en',\r\n        class: '',\r\n        sendDataFormat: 'form',\r\n        errorMessageScrollOffset: 70\r\n    },\r\n\r\n\r\n    /**\r\n     * Создание экземпляра формы\r\n     * @param {object} options\r\n     * @returns {coreuiFormInstance}\r\n     */\r\n    create: function (options) {\r\n\r\n        let instance = $.extend(true, {}, coreuiFormInstance);\r\n        instance._init(options instanceof Object ? options : {});\r\n\r\n        let formId = instance.getId();\r\n        this._instances[formId] = instance;\r\n\r\n        return instance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение экземпляра формы по id\r\n     * @param {string} id\r\n     * @returns {coreuiFormInstance|null}\r\n     */\r\n    get: function (id) {\r\n\r\n        if ( ! this._instances.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        if ($('#coreui-form-' + this._instances[id])[0]) {\r\n            delete this._instances[id];\r\n            return null;\r\n        }\r\n\r\n        return this._instances[id];\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка настроек\r\n     * @param {object} settings\r\n     */\r\n    setSettings: function(settings) {\r\n\r\n        this._settings = $.extend({}, this._settings, settings);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения настройки\r\n     * @param {string} name\r\n     */\r\n    getSetting: function(name) {\r\n\r\n        let value = null;\r\n\r\n        if (this._settings.hasOwnProperty(name)) {\r\n            value = this._settings[name];\r\n        }\r\n\r\n        return value;\r\n    }\r\n};\n\ncoreuiForm$1.lang.ru = {\r\n    \"modal_select\": \"Выбрать\",\r\n    \"modal_loading\": \"Загрузка...\",\r\n    \"switch_yes\": \"Да\",\r\n    \"switch_no\": \"Нет\",\r\n    \"dataset_add\": \"Добавить\",\r\n    \"date_months\": ['Январь','Февраль','Март','Апрель','Май','Июнь', 'Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\r\n    \"date_week\": \"неделя\",\r\n    \"send_error\": \"Произошла ошибка. Попробуйте снова или обратитесь к администратору\",\r\n    \"required_field\": \"Обязательное поле\",\r\n    \"repeat\": \"повторите\",\r\n    \"change\": \"изменить\",\r\n    \"cancel\": \"отмена\"\r\n};\n\ncoreuiForm$1.lang.en = {\r\n    \"modal_select\": \"Select\",\r\n    \"modal_loading\": \"Loading...\",\r\n    \"switch_yes\": \"Yes\",\r\n    \"switch_no\": \"No\",\r\n    \"dataset_add\": \"Add\",\r\n    \"date_months\": [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\r\n    \"date_week\": \"week\",\r\n    \"send_error\": \"An error has occurred. Please try again or contact your administrator\",\r\n    \"required_field\": \"Required field\",\r\n    \"repeat\": \"repeat\",\r\n    \"change\": \"change\",\r\n    \"cancel\": \"cancel\"\r\n};\n\ncoreuiForm$1.controls.button = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'button',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-secondary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'button';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils$1.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.custom = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'custom',\r\n        content: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form   = form;\r\n        this._index   = index;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return this._options.content;\r\n    }\r\n};\n\ncoreuiForm$1.controls.link = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'link',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-link'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/link.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > a')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.submit = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'submit',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        show: true,\r\n        attr: {\r\n            class: 'btn btn-sm btn-primary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    unlock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        button.find('.spinner-border').remove();\r\n        button.removeAttr('disabled');\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'submit';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.checkbox = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'checkbox',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: null,\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {object}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let values = [];\r\n\r\n            $('.content-' + this._hash + ' input[type=checkbox]:checked').each(function () {\r\n                values.push($(this).val());\r\n            });\r\n\r\n            return values;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значений в поле\r\n     * @param {object|null|string|number} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=radio]').prop('checked', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' input[type=radio]').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('checked', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that            = this;\r\n        let checkboxOptions = [];\r\n        let fieldOptions    = this.getOptions();\r\n        let selectedItems   = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'checkbox',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils$1.hashCode();\r\n\r\n                if (typeof(that._value) === 'object' &&\r\n                    Array.isArray(that._value)\r\n                ) {\r\n                    $.each(that._value, function (key, itemValue) {\r\n                        if (itemValue == option.value) {\r\n                            itemAttr.checked = 'checked';\r\n                            if (option.hasOwnProperty('text') && option.text) {\r\n                                selectedItems.push(option.text);\r\n                            }\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                } else if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItems.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                checkboxOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        let value = typeof this._value === 'object' && Array.isArray(this._value)\r\n            ? this._value.join(', ')\r\n            : this._value;\r\n\r\n        return ejs.render(tpl['fields/checkbox.html'], {\r\n            field: fieldOptions,\r\n            value: value,\r\n            render: {\r\n                options: checkboxOptions,\r\n                selectedItems: selectedItems\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.color = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'color',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-color d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            value: this._value\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.custom = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _options: {\r\n        type: 'custom',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        content: '',\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     */\r\n    getValue: function () {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options         = this.getOptions();\r\n        let content         = '';\r\n        let alloyComponents = [\r\n            'coreui.table',\r\n            'coreui.layout',\r\n            'coreui.panel',\r\n            'coreui.tabs',\r\n            'coreui.info',\r\n            'coreui.chart',\r\n        ];\r\n\r\n        if (typeof options.content === 'string') {\r\n            content = options.content;\r\n\r\n        } else if (options.content instanceof Object) {\r\n            if ( ! Array.isArray(options.content)) {\r\n                options.content = [ options.content ];\r\n            }\r\n\r\n            let components = [];\r\n\r\n            for (let i = 0; i < options.content.length; i++) {\r\n                if (typeof options.content[i] === 'string') {\r\n                    components.push(options.content[i]);\r\n\r\n                } else if ( ! Array.isArray(options.content[i]) &&\r\n                        options.content[i].hasOwnProperty('component') &&\r\n                        alloyComponents.indexOf(options.content[i].component) >= 0\r\n                ) {\r\n                    let name = options.content[i].component.split('.')[1];\r\n\r\n                    if (CoreUI.hasOwnProperty(name) &&\r\n                        typeof CoreUI[name] === \"object\" &&\r\n                        CoreUI[name] !== null &&\r\n                        ! Array.isArray(CoreUI[name])\r\n                    ) {\r\n                        let instance = CoreUI[name].create(options.content[i]);\r\n                        components.push(instance.render());\r\n\r\n                        this._form.on('shown.coreui.form', instance.initEvents, instance, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            content = components.join('');\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/custom.html'], {\r\n            content: content\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.dataset = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: [],\r\n    _renderOptions: [],\r\n    _options: {\r\n        type: 'dataset',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let name = option.hasOwnProperty('name') && ['string', 'number'].indexOf(typeof (option.name)) >= 0\r\n                    ? option.name\r\n                    : '';\r\n                let type = option.hasOwnProperty('type') && typeof (option.type) === 'string'\r\n                    ? option.type\r\n                    : 'text';\r\n                let attributes = option.hasOwnProperty('attr') && typeof (option.attr) === 'object' && ! Array.isArray(option.attr)\r\n                    ? option.attr\r\n                    : {};\r\n                let items = option.hasOwnProperty('items') && typeof (option.items) === 'object' && Array.isArray(option.items)\r\n                    ? option.items\r\n                    : [];\r\n                let valueY = option.hasOwnProperty('valueY') && ['string', 'numeric'].indexOf(typeof (option.valueY)) >= 0\r\n                    ? option.valueY\r\n                    : 'Y';\r\n                let valueN = option.hasOwnProperty('valueN') && ['string', 'numeric'].indexOf(typeof (option.valueN)) >= 0\r\n                    ? option.valueN\r\n                    : 'N';\r\n\r\n                if (name) {\r\n                    attributes.name = name;\r\n                }\r\n                if (options.required) {\r\n                    attributes.required = 'required';\r\n                }\r\n\r\n                if (type === 'select') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-select form-select-sm ' + attributes.class\r\n                        : 'form-select form-select-sm';\r\n\r\n                } else if (type === 'switch') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-check-input ' + attributes.class\r\n                        : 'form-check-input';\r\n\r\n                    attributes.type = 'checkbox';\r\n                    attributes.value = valueY;\r\n\r\n                } else {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-control form-control-sm ' + attributes.class\r\n                        : 'form-control form-control-sm';\r\n\r\n                    attributes.type = type;\r\n                }\r\n\r\n\r\n                that._renderOptions.push({\r\n                    type  : type,\r\n                    name  : name,\r\n                    attr  : attributes,\r\n                    items : items,\r\n                    valueY: valueY,\r\n                    valueN: valueN,\r\n                });\r\n            });\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {array}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let container = $('.content-' + this._hash);\r\n            let data      = [];\r\n\r\n            $('.coreui-form__field-dataset-list .coreui-form__field-dataset-item', container).each(function () {\r\n                let items = {};\r\n\r\n                $.each($(this).find('input, select').serializeArray(), function (key, item) {\r\n                    if (item.name) {\r\n                        items[item.name] = item.value;\r\n                    }\r\n                });\r\n\r\n                data.push(items);\r\n            });\r\n\r\n            return data;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (typeof value !== 'object' ||\r\n            Array.isArray(value) ||\r\n            value === null\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this._value.push(value);\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash + ' .coreui-form__field-dataset-list').append(\r\n                this._renderRowReadonly(value)\r\n            );\r\n        } else {\r\n            this._eventAdd(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление всех строк\r\n     */\r\n    removeItems: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' .coreui-form__field-dataset-list').empty();\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление строки по id\r\n     * @param {int} itemId\r\n     */\r\n    removeItem: function (itemId) {\r\n\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        $('#' + itemId).hide('fast', function () {\r\n            $('#' + itemId).remove();\r\n\r\n            if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n                $(element + ' .coreui-form__field-dataset-container').hide();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRow(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRowReadonly(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        // Кнопка удаления\r\n        $(element + ' .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n\r\n        // Кнопка добавления\r\n        $(element + ' .btn-dataset-add').click(function () {\r\n            that._eventAdd();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Событие добавления\r\n     */\r\n    _eventAdd: function (row) {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n        row = row || {};\r\n\r\n        if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n            $(element + ' .coreui-form__field-dataset-container').show();\r\n        }\r\n\r\n        $(element + ' .coreui-form__field-dataset-list').append(this._renderRow(row));\r\n        $(element + ' .coreui-form__field-dataset-item:last-child .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRow: function (row) {\r\n\r\n        let rowOptions  = [];\r\n        let itemOptions = [];\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let cellValue = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n                    let itemAttr = {};\r\n\r\n\r\n                    $.each(item, function (name, value) {\r\n                        if (name !== 'title') {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    });\r\n\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemAttr.selected = 'selected';\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemAttr.selected = 'selected';\r\n                    }\r\n\r\n                    let attributes = [];\r\n                    $.each(itemAttr, function (name, value) {\r\n                        attributes.push(name + '=\"' + value + '\"');\r\n                    });\r\n\r\n                    itemOptions.push({\r\n                        attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                        title: title\r\n                    });\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                if (cellValue == option.valueY) {\r\n                    option.attr.checked = 'checked';\r\n                }\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    option.attr.value = cellValue !== null ? cellValue : '';\r\n                }\r\n            }\r\n\r\n            let attributes = [];\r\n\r\n            $.each(option.attr, function (name, value) {\r\n                attributes.push(name + '=\"' + value + '\"');\r\n            });\r\n\r\n            rowOptions.push({\r\n                type: option.type,\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                items: itemOptions\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row.html'], {\r\n            hashItem: coreuiFormUtils$1.hashCode(),\r\n            options: rowOptions,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRowReadonly: function (row) {\r\n\r\n        let rowOptions = [];\r\n        let lang       = this._form.getLang();\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let optionValue = '';\r\n            let cellValue   = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                let itemOptions = [];\r\n\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemOptions.push(itemValue);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemOptions.push(cellValue);\r\n                    }\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                let valueY = 'Y';\r\n\r\n                if (option.hasOwnProperty('valueY')) {\r\n                    valueY = option.valueY;\r\n                }\r\n\r\n                optionValue = cellValue == valueY\r\n                    ? lang.switch_yes\r\n                    : lang.switch_no;\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    optionValue = cellValue;\r\n\r\n                    switch (option.type) {\r\n                        case 'date':           optionValue = coreuiFormUtils$1.formatDate(optionValue); break;\r\n                        case 'datetime-local': optionValue = coreuiFormUtils$1.formatDateTime(optionValue); break;\r\n                        case 'month':          optionValue = coreuiFormUtils$1.formatDateMonth(optionValue, lang); break;\r\n                        case 'week':           optionValue = coreuiFormUtils$1.formatDateWeek(optionValue, lang); break;\r\n                        default: optionValue = cellValue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            rowOptions.push({\r\n                value: optionValue\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row-readonly.html'], {\r\n            options: rowOptions,\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.group = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _options: {\r\n        type: 'group',\r\n        label: '',\r\n        show: true,\r\n        showCollapsible: true,\r\n        fields: [],\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-group-\" + index;\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие группы\r\n     * @param {int} duration\r\n     */\r\n    collapse: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-down');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-right');\r\n\r\n        $(container + ' .coreui-form__group_content').slideUp(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ группы\r\n     * @param {int} duration\r\n     */\r\n    expand: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-right');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-down');\r\n\r\n        $(container + ' .coreui-form__group_content').slideDown(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-group.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            group: this._options,\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {string}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fields = [];\r\n        let that   = this;\r\n\r\n        $.each(this._options.fields, function (key, field) {\r\n\r\n            let fieldInstance = that._form.initField(field);\r\n\r\n            if (typeof fieldInstance !== 'object') {\r\n                return;\r\n            }\r\n\r\n            fields.push(fieldInstance.render());\r\n        });\r\n\r\n        return fields.join('');\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.showCollapsible) {\r\n            let that      = this;\r\n            let container = '#coreui-form-' + this._id;\r\n\r\n            $(container + ' > .coreui-form__group_label .btn-collapsible').click(function () {\r\n\r\n                if ($(container + ' > .coreui-form__group_content').is(':visible')) {\r\n                    that.collapse(80);\r\n                } else {\r\n                    that.expand(80);\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.hidden = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'hidden',\r\n        name: null,\r\n        attr: {},\r\n        required: null,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('#coreui-form-' + this._id).val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if ( ! this._options.readonly) {\r\n            $('#coreui-form-' + this._id).val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-content.html'], {\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n\r\n        options.attr.id = 'coreui-form-' + this._id;\r\n\r\n        if (options.name) {\r\n            options.attr.name = options.name;\r\n        }\r\n\r\n        options.attr.type  = 'hidden';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/hidden.html'], {\r\n            value: this._value !== null ? this._value : '',\r\n            field: options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.input = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'text',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils$1.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils$1.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils$1.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils$1.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\n/**\n * jquery.mask.js\n * @version: v1.14.16\n * @author: Igor Escobar\n *\n * Created by Igor Escobar on 2012-03-10. Please report any bug at github.com/igorescobar/jQuery-Mask-Plugin\n *\n * Copyright (c) 2012 Igor Escobar http://igorescobar.com\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* jshint laxbreak: true */\n/* jshint maxcomplexity:17 */\n/* global define */\n\n// UMD (Universal Module Definition) patterns for JavaScript modules that work everywhere.\n// https://github.com/umdjs/umd/blob/master/templates/jqueryPlugin.js\n(function (factory, jQuery, Zepto) {\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object' && typeof Meteor === 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery || Zepto);\n    }\n\n}(function ($) {\n    'use strict';\n\n    var Mask = function (el, mask, options) {\n\n        var p = {\n            invalid: [],\n            getCaret: function () {\n                try {\n                    var sel,\n                        pos = 0,\n                        ctrl = el.get(0),\n                        dSel = document.selection,\n                        cSelStart = ctrl.selectionStart;\n\n                    // IE Support\n                    if (dSel && navigator.appVersion.indexOf('MSIE 10') === -1) {\n                        sel = dSel.createRange();\n                        sel.moveStart('character', -p.val().length);\n                        pos = sel.text.length;\n                    }\n                    // Firefox support\n                    else if (cSelStart || cSelStart === '0') {\n                        pos = cSelStart;\n                    }\n\n                    return pos;\n                } catch (e) {}\n            },\n            setCaret: function(pos) {\n                try {\n                    if (el.is(':focus')) {\n                        var range, ctrl = el.get(0);\n\n                        // Firefox, WebKit, etc..\n                        if (ctrl.setSelectionRange) {\n                            ctrl.setSelectionRange(pos, pos);\n                        } else { // IE\n                            range = ctrl.createTextRange();\n                            range.collapse(true);\n                            range.moveEnd('character', pos);\n                            range.moveStart('character', pos);\n                            range.select();\n                        }\n                    }\n                } catch (e) {}\n            },\n            events: function() {\n                el\n                .on('keydown.mask', function(e) {\n                    el.data('mask-keycode', e.keyCode || e.which);\n                    el.data('mask-previus-value', el.val());\n                    el.data('mask-previus-caret-pos', p.getCaret());\n                    p.maskDigitPosMapOld = p.maskDigitPosMap;\n                })\n                .on($.jMaskGlobals.useInput ? 'input.mask' : 'keyup.mask', p.behaviour)\n                .on('paste.mask drop.mask', function() {\n                    setTimeout(function() {\n                        el.keydown().keyup();\n                    }, 100);\n                })\n                .on('change.mask', function(){\n                    el.data('changed', true);\n                })\n                .on('blur.mask', function(){\n                    if (oldValue !== p.val() && !el.data('changed')) {\n                        el.trigger('change');\n                    }\n                    el.data('changed', false);\n                })\n                // it's very important that this callback remains in this position\n                // otherwhise oldValue it's going to work buggy\n                .on('blur.mask', function() {\n                    oldValue = p.val();\n                })\n                // select all text on focus\n                .on('focus.mask', function (e) {\n                    if (options.selectOnFocus === true) {\n                        $(e.target).select();\n                    }\n                })\n                // clear the value if it not complete the mask\n                .on('focusout.mask', function() {\n                    if (options.clearIfNotMatch && !regexMask.test(p.val())) {\n                       p.val('');\n                   }\n                });\n            },\n            getRegexMask: function() {\n                var maskChunks = [], translation, pattern, optional, recursive, oRecursive, r;\n\n                for (var i = 0; i < mask.length; i++) {\n                    translation = jMask.translation[mask.charAt(i)];\n\n                    if (translation) {\n\n                        pattern = translation.pattern.toString().replace(/.{1}$|^.{1}/g, '');\n                        optional = translation.optional;\n                        recursive = translation.recursive;\n\n                        if (recursive) {\n                            maskChunks.push(mask.charAt(i));\n                            oRecursive = {digit: mask.charAt(i), pattern: pattern};\n                        } else {\n                            maskChunks.push(!optional && !recursive ? pattern : (pattern + '?'));\n                        }\n\n                    } else {\n                        maskChunks.push(mask.charAt(i).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n                    }\n                }\n\n                r = maskChunks.join('');\n\n                if (oRecursive) {\n                    r = r.replace(new RegExp('(' + oRecursive.digit + '(.*' + oRecursive.digit + ')?)'), '($1)?')\n                         .replace(new RegExp(oRecursive.digit, 'g'), oRecursive.pattern);\n                }\n\n                return new RegExp(r);\n            },\n            destroyEvents: function() {\n                el.off(['input', 'keydown', 'keyup', 'paste', 'drop', 'blur', 'focusout', ''].join('.mask '));\n            },\n            val: function(v) {\n                var isInput = el.is('input'),\n                    method = isInput ? 'val' : 'text',\n                    r;\n\n                if (arguments.length > 0) {\n                    if (el[method]() !== v) {\n                        el[method](v);\n                    }\n                    r = el;\n                } else {\n                    r = el[method]();\n                }\n\n                return r;\n            },\n            calculateCaretPosition: function(oldVal) {\n                var newVal = p.getMasked(),\n                    caretPosNew = p.getCaret();\n                if (oldVal !== newVal) {\n                    var caretPosOld = el.data('mask-previus-caret-pos') || 0,\n                        newValL = newVal.length,\n                        oldValL = oldVal.length,\n                        maskDigitsBeforeCaret = 0,\n                        maskDigitsAfterCaret = 0,\n                        maskDigitsBeforeCaretAll = 0,\n                        maskDigitsBeforeCaretAllOld = 0,\n                        i = 0;\n\n                    for (i = caretPosNew; i < newValL; i++) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsAfterCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsBeforeCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMap[i]) {\n                            maskDigitsBeforeCaretAll++;\n                        }\n                    }\n\n                    for (i = caretPosOld - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMapOld[i]) {\n                            maskDigitsBeforeCaretAllOld++;\n                        }\n                    }\n\n                    // if the cursor is at the end keep it there\n                    if (caretPosNew > oldValL) {\n                      caretPosNew = newValL * 10;\n                    } else if (caretPosOld >= caretPosNew && caretPosOld !== oldValL) {\n                        if (!p.maskDigitPosMapOld[caretPosNew])  {\n                          var caretPos = caretPosNew;\n                          caretPosNew -= maskDigitsBeforeCaretAllOld - maskDigitsBeforeCaretAll;\n                          caretPosNew -= maskDigitsBeforeCaret;\n                          if (p.maskDigitPosMap[caretPosNew])  {\n                            caretPosNew = caretPos;\n                          }\n                        }\n                    }\n                    else if (caretPosNew > caretPosOld) {\n                        caretPosNew += maskDigitsBeforeCaretAll - maskDigitsBeforeCaretAllOld;\n                        caretPosNew += maskDigitsAfterCaret;\n                    }\n                }\n                return caretPosNew;\n            },\n            behaviour: function(e) {\n                e = e || window.event;\n                p.invalid = [];\n\n                var keyCode = el.data('mask-keycode');\n\n                if ($.inArray(keyCode, jMask.byPassKeys) === -1) {\n                    var newVal = p.getMasked(),\n                        caretPos = p.getCaret(),\n                        oldVal = el.data('mask-previus-value') || '';\n\n                    // this is a compensation to devices/browsers that don't compensate\n                    // caret positioning the right way\n                    setTimeout(function() {\n                      p.setCaret(p.calculateCaretPosition(oldVal));\n                    }, $.jMaskGlobals.keyStrokeCompensation);\n\n                    p.val(newVal);\n                    p.setCaret(caretPos);\n                    return p.callbacks(e);\n                }\n            },\n            getMasked: function(skipMaskChars, val) {\n                var buf = [],\n                    value = val === undefined ? p.val() : val + '',\n                    m = 0, maskLen = mask.length,\n                    v = 0, valLen = value.length,\n                    offset = 1, addMethod = 'push',\n                    resetPos = -1,\n                    maskDigitCount = 0,\n                    maskDigitPosArr = [],\n                    lastMaskChar,\n                    check;\n\n                if (options.reverse) {\n                    addMethod = 'unshift';\n                    offset = -1;\n                    lastMaskChar = 0;\n                    m = maskLen - 1;\n                    v = valLen - 1;\n                    check = function () {\n                        return m > -1 && v > -1;\n                    };\n                } else {\n                    lastMaskChar = maskLen - 1;\n                    check = function () {\n                        return m < maskLen && v < valLen;\n                    };\n                }\n\n                var lastUntranslatedMaskChar;\n                while (check()) {\n                    var maskDigit = mask.charAt(m),\n                        valDigit = value.charAt(v),\n                        translation = jMask.translation[maskDigit];\n\n                    if (translation) {\n                        if (valDigit.match(translation.pattern)) {\n                            buf[addMethod](valDigit);\n                             if (translation.recursive) {\n                                if (resetPos === -1) {\n                                    resetPos = m;\n                                } else if (m === lastMaskChar && m !== resetPos) {\n                                    m = resetPos - offset;\n                                }\n\n                                if (lastMaskChar === resetPos) {\n                                    m -= offset;\n                                }\n                            }\n                            m += offset;\n                        } else if (valDigit === lastUntranslatedMaskChar) {\n                            // matched the last untranslated (raw) mask character that we encountered\n                            // likely an insert offset the mask character from the last entry; fall\n                            // through and only increment v\n                            maskDigitCount--;\n                            lastUntranslatedMaskChar = undefined;\n                        } else if (translation.optional) {\n                            m += offset;\n                            v -= offset;\n                        } else if (translation.fallback) {\n                            buf[addMethod](translation.fallback);\n                            m += offset;\n                            v -= offset;\n                        } else {\n                          p.invalid.push({p: v, v: valDigit, e: translation.pattern});\n                        }\n                        v += offset;\n                    } else {\n                        if (!skipMaskChars) {\n                            buf[addMethod](maskDigit);\n                        }\n\n                        if (valDigit === maskDigit) {\n                            maskDigitPosArr.push(v);\n                            v += offset;\n                        } else {\n                            lastUntranslatedMaskChar = maskDigit;\n                            maskDigitPosArr.push(v + maskDigitCount);\n                            maskDigitCount++;\n                        }\n\n                        m += offset;\n                    }\n                }\n\n                var lastMaskCharDigit = mask.charAt(lastMaskChar);\n                if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {\n                    buf.push(lastMaskCharDigit);\n                }\n\n                var newVal = buf.join('');\n                p.mapMaskdigitPositions(newVal, maskDigitPosArr, valLen);\n                return newVal;\n            },\n            mapMaskdigitPositions: function(newVal, maskDigitPosArr, valLen) {\n              var maskDiff = options.reverse ? newVal.length - valLen : 0;\n              p.maskDigitPosMap = {};\n              for (var i = 0; i < maskDigitPosArr.length; i++) {\n                p.maskDigitPosMap[maskDigitPosArr[i] + maskDiff] = 1;\n              }\n            },\n            callbacks: function (e) {\n                var val = p.val(),\n                    changed = val !== oldValue,\n                    defaultArgs = [val, e, el, options],\n                    callback = function(name, criteria, args) {\n                        if (typeof options[name] === 'function' && criteria) {\n                            options[name].apply(this, args);\n                        }\n                    };\n\n                callback('onChange', changed === true, defaultArgs);\n                callback('onKeyPress', changed === true, defaultArgs);\n                callback('onComplete', val.length === mask.length, defaultArgs);\n                callback('onInvalid', p.invalid.length > 0, [val, e, el, p.invalid, options]);\n            }\n        };\n\n        el = $(el);\n        var jMask = this, oldValue = p.val(), regexMask;\n\n        mask = typeof mask === 'function' ? mask(p.val(), undefined, el,  options) : mask;\n\n        // public methods\n        jMask.mask = mask;\n        jMask.options = options;\n        jMask.remove = function() {\n            var caret = p.getCaret();\n            if (jMask.options.placeholder) {\n                el.removeAttr('placeholder');\n            }\n            if (el.data('mask-maxlength')) {\n                el.removeAttr('maxlength');\n            }\n            p.destroyEvents();\n            p.val(jMask.getCleanVal());\n            p.setCaret(caret);\n            return el;\n        };\n\n        // get value without mask\n        jMask.getCleanVal = function() {\n           return p.getMasked(true);\n        };\n\n        // get masked value without the value being in the input or element\n        jMask.getMaskedVal = function(val) {\n           return p.getMasked(false, val);\n        };\n\n       jMask.init = function(onlyMask) {\n            onlyMask = onlyMask || false;\n            options = options || {};\n\n            jMask.clearIfNotMatch  = $.jMaskGlobals.clearIfNotMatch;\n            jMask.byPassKeys       = $.jMaskGlobals.byPassKeys;\n            jMask.translation      = $.extend({}, $.jMaskGlobals.translation, options.translation);\n\n            jMask = $.extend(true, {}, jMask, options);\n\n            regexMask = p.getRegexMask();\n\n            if (onlyMask) {\n                p.events();\n                p.val(p.getMasked());\n            } else {\n                if (options.placeholder) {\n                    el.attr('placeholder' , options.placeholder);\n                }\n\n                // this is necessary, otherwise if the user submit the form\n                // and then press the \"back\" button, the autocomplete will erase\n                // the data. Works fine on IE9+, FF, Opera, Safari.\n                if (el.data('mask')) {\n                  el.attr('autocomplete', 'off');\n                }\n\n                // detect if is necessary let the user type freely.\n                // for is a lot faster than forEach.\n                for (var i = 0, maxlength = true; i < mask.length; i++) {\n                    var translation = jMask.translation[mask.charAt(i)];\n                    if (translation && translation.recursive) {\n                        maxlength = false;\n                        break;\n                    }\n                }\n\n                if (maxlength) {\n                    el.attr('maxlength', mask.length).data('mask-maxlength', true);\n                }\n\n                p.destroyEvents();\n                p.events();\n\n                var caret = p.getCaret();\n                p.val(p.getMasked());\n                p.setCaret(caret);\n            }\n        };\n\n        jMask.init(!el.is('input'));\n    };\n\n    $.maskWatchers = {};\n    var HTMLAttributes = function () {\n        var input = $(this),\n            options = {},\n            prefix = 'data-mask-',\n            mask = input.attr('data-mask');\n\n        if (input.attr(prefix + 'reverse')) {\n            options.reverse = true;\n        }\n\n        if (input.attr(prefix + 'clearifnotmatch')) {\n            options.clearIfNotMatch = true;\n        }\n\n        if (input.attr(prefix + 'selectonfocus') === 'true') {\n           options.selectOnFocus = true;\n        }\n\n        if (notSameMaskObject(input, mask, options)) {\n            return input.data('mask', new Mask(this, mask, options));\n        }\n    },\n    notSameMaskObject = function(field, mask, options) {\n        options = options || {};\n        var maskObject = $(field).data('mask'),\n            stringify = JSON.stringify,\n            value = $(field).val() || $(field).text();\n        try {\n            if (typeof mask === 'function') {\n                mask = mask(value);\n            }\n            return typeof maskObject !== 'object' || stringify(maskObject.options) !== stringify(options) || maskObject.mask !== mask;\n        } catch (e) {}\n    },\n    eventSupported = function(eventName) {\n        var el = document.createElement('div'), isSupported;\n\n        eventName = 'on' + eventName;\n        isSupported = (eventName in el);\n\n        if ( !isSupported ) {\n            el.setAttribute(eventName, 'return;');\n            isSupported = typeof el[eventName] === 'function';\n        }\n        el = null;\n\n        return isSupported;\n    };\n\n    $.fn.mask = function(mask, options) {\n        options = options || {};\n        var selector = this.selector,\n            globals = $.jMaskGlobals,\n            interval = globals.watchInterval,\n            watchInputs = options.watchInputs || globals.watchInputs,\n            maskFunction = function() {\n                if (notSameMaskObject(this, mask, options)) {\n                    return $(this).data('mask', new Mask(this, mask, options));\n                }\n            };\n\n        $(this).each(maskFunction);\n\n        if (selector && selector !== '' && watchInputs) {\n            clearInterval($.maskWatchers[selector]);\n            $.maskWatchers[selector] = setInterval(function(){\n                $(document).find(selector).each(maskFunction);\n            }, interval);\n        }\n        return this;\n    };\n\n    $.fn.masked = function(val) {\n        return this.data('mask').getMaskedVal(val);\n    };\n\n    $.fn.unmask = function() {\n        clearInterval($.maskWatchers[this.selector]);\n        delete $.maskWatchers[this.selector];\n        return this.each(function() {\n            var dataMask = $(this).data('mask');\n            if (dataMask) {\n                dataMask.remove().removeData('mask');\n            }\n        });\n    };\n\n    $.fn.cleanVal = function() {\n        return this.data('mask').getCleanVal();\n    };\n\n    $.applyDataMask = function(selector) {\n        selector = selector || $.jMaskGlobals.maskElements;\n        var $selector = (selector instanceof $) ? selector : $(selector);\n        $selector.filter($.jMaskGlobals.dataMaskAttr).each(HTMLAttributes);\n    };\n\n    var globals = {\n        maskElements: 'input,td,span,div',\n        dataMaskAttr: '*[data-mask]',\n        dataMask: true,\n        watchInterval: 300,\n        watchInputs: true,\n        keyStrokeCompensation: 10,\n        // old versions of chrome dont work great with input event\n        useInput: !/Chrome\\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && eventSupported('input'),\n        watchDataMask: false,\n        byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91],\n        translation: {\n            '0': {pattern: /\\d/},\n            '9': {pattern: /\\d/, optional: true},\n            '#': {pattern: /\\d/, recursive: true},\n            'A': {pattern: /[a-zA-Z0-9]/},\n            'S': {pattern: /[a-zA-Z]/}\n        }\n    };\n\n    $.jMaskGlobals = $.jMaskGlobals || {};\n    globals = $.jMaskGlobals = $.extend(true, {}, globals, $.jMaskGlobals);\n\n    // looking for inputs with data-mask attribute\n    if (globals.dataMask) {\n        $.applyDataMask();\n    }\n\n    setInterval(function() {\n        if ($.jMaskGlobals.watchDataMask) {\n            $.applyDataMask();\n        }\n    }, globals.watchInterval);\n}, window.jQuery, window.Zepto));\n\ncoreuiForm$1.fields.mask = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'mask',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        value = value.replace(/[^\\d\\w]/g, '');\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'text';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : ''\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' input')\r\n            .mask(this._options.mask, this._options.options);\r\n    }\r\n};\n\ncoreuiForm$1.fields.modal = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: '',\r\n    _text: '',\r\n    _options: {\r\n        type: 'modal',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        fields: [],\r\n        options: {\r\n            title: '',\r\n            size: 'lg',\r\n            url: '',\r\n            onHidden: null,\r\n            onClear: null,\r\n            onChange: null,\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n\r\n        if (typeof options.name === 'string' &&\r\n            formRecord.hasOwnProperty(options.name) &&\r\n            ['object'].indexOf(typeof formRecord[options.name]) >= 0\r\n        ) {\r\n            let record = formRecord[options.name];\r\n\r\n            this._value = record.hasOwnProperty('value') && ['number', 'string'].indexOf(typeof(record.value)) >= 0 ? record.value : '';\r\n            this._text  = record.hasOwnProperty('text') && ['number', 'string'].indexOf(typeof(record.text)) >= 0 ? record.text : '';\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input.coreui-form-modal-value').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     * @param {string} text\r\n     */\r\n    setValue: function (value, text) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(text);\r\n\r\n        } else {\r\n            let elementValue = $('.content-' + this._hash + ' .coreui-form-modal-value');\r\n            let elementText  = $('.content-' + this._hash + ' .coreui-form-modal-text');\r\n            let oldValue     = elementValue.val();\r\n\r\n            elementValue.val(value);\r\n            elementText.val(text);\r\n\r\n\r\n            if (oldValue != value) {\r\n                let modal = this._options.hasOwnProperty('options') && typeof (this._options.options) === 'object'\r\n                    ? this._options.options\r\n                    : {};\r\n\r\n                if (modal.hasOwnProperty('onChange')) {\r\n                    if (typeof(modal.onChange) === 'function') {\r\n                        modal.onChange(this);\r\n\r\n                    } else if (typeof(modal.onChange) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onChange);\r\n\r\n                        if (typeof func === 'function') {\r\n                            func(this);\r\n                        } else {\r\n                            eval(modal.onChange);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this._form._trigger('change-modal.coreui.form', this, [this]);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fieldOptions = this.getOptions();\r\n        let attributes   = [];\r\n        let textAttr     = {\r\n            type: 'text',\r\n            readonly: 'readonly',\r\n            class: 'form-control form-control-sm coreui-form-modal-text',\r\n            value: this._text !== null ? this._text : ''\r\n        };\r\n\r\n        if (fieldOptions.required) {\r\n            textAttr.required = 'required';\r\n        }\r\n\r\n        if (fieldOptions.hasOwnProperty('attr') &&\r\n            typeof fieldOptions.attr === 'object' &&\r\n            Array.isArray(fieldOptions.attr)\r\n        ) {\r\n            textAttr = coreuiFormUtils$1.mergeAttr(textAttr, fieldOptions.attr);\r\n        }\r\n\r\n        $.each(textAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/modal.html'], {\r\n            field: fieldOptions,\r\n            value: this._value !== null ? this._value : '',\r\n            text: this._text !== null ? this._text : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                width: this._options.width,\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that  = this;\r\n        let modal = this._options.hasOwnProperty('options') && typeof(this._options.options) === 'object'\r\n            ? this._options.options\r\n            : {};\r\n\r\n\r\n        // Очистка\r\n        $('.content-' + this._hash + ' .btn-modal-clear').click(function (e) {\r\n            if (modal.hasOwnProperty('onClear')) {\r\n                if (typeof(modal.onClear) === 'function') {\r\n                    modal.onClear(that);\r\n\r\n                } else if (typeof(modal.onClear) === 'string') {\r\n                    let func = coreuiFormUtils$1.getFunctionByName(modal.onClear);\r\n\r\n                    if (typeof func === 'function') {\r\n                        func(that);\r\n                    } else {\r\n                        eval(modal.onClear);\r\n                    }\r\n                }\r\n            }\r\n\r\n            that._form._trigger('clear-modal.coreui.form', that, [ that, e ]);\r\n\r\n            that.setValue('', '');\r\n        });\r\n\r\n        // Выбор\r\n        $('.content-' + this._hash + ' .btn-modal-select').click(function (e) {\r\n            let title = modal.hasOwnProperty('title') && typeof(modal.title) === 'string'\r\n                ? modal.title\r\n                : '';\r\n\r\n            let size = modal.hasOwnProperty('size') && typeof(modal.size) === 'string'\r\n                ? modal.size\r\n                : 'lg';\r\n\r\n            let url = modal.hasOwnProperty('url') && typeof(modal.url) === 'string'\r\n                ? modal.url\r\n                : '';\r\n\r\n            if ( ! url) {\r\n                return;\r\n            }\r\n\r\n\r\n            let modalId      = coreuiFormUtils$1.hashCode();\r\n            let modalLoading = ejs.render(tpl['fields/modal-loading.html'], {\r\n                lang: that._form.getLang(),\r\n            });\r\n\r\n\r\n            if (CoreUI.hasOwnProperty('modal')) {\r\n                let onShow   = null;\r\n                let onHidden = null;\r\n\r\n                if (modal.hasOwnProperty('onHidden')) {\r\n                    if (typeof(modal.onHidden) === 'function') {\r\n                        onHidden = modal.onHidden;\r\n\r\n                    } else if (typeof(modal.onHidden) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onHidden);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onHidden = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (modal.hasOwnProperty('onShow')) {\r\n                    if (typeof(modal.onShow) === 'function') {\r\n                        onShow = modal.onShow;\r\n\r\n                    } else if (typeof(modal.onShow) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onShow);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onShow = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                CoreUI.modal.show(title, modalLoading, {\r\n                    id: modalId,\r\n                    size: size,\r\n                    onShow: onShow,\r\n                    onHidden: onHidden\r\n                });\r\n            }\r\n\r\n            $.ajax({\r\n                url: url,\r\n                method: 'GET',\r\n                beforeSend: function(xhr) {\r\n                    that._form._trigger('before-load-modal.coreui.form', that, [ that, xhr ]);\r\n                },\r\n                success: function (result) {\r\n                    $('#modal-' + modalId + ' .modal-body').html(result);\r\n                    that._form._trigger('success-load-modal.coreui.form', that, [ that, result ]);\r\n                },\r\n                error: function(xhr, textStatus, errorThrown) {\r\n                    that._form._trigger('error-load-modal.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n                },\r\n                complete: function(xhr, textStatus) {\r\n                    that._form._trigger('complete-load-modal.coreui.form', that, [ that, xhr, textStatus ]);\r\n                },\r\n            });\r\n\r\n\r\n            that._form._trigger('select-modal.coreui.form', that, [ that, e ]);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.number = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'number',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block',\r\n            step: 'any'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null,\r\n        precision: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        // Установка точности\r\n        if (this._options.precision === null) {\r\n            let precision = 0;\r\n\r\n            if (this._options.attr.hasOwnProperty('step') &&\r\n                this._options.attr.step !== 'any' &&\r\n                ['string', 'number'].indexOf(typeof this._options.attr.step) >= 0\r\n            ) {\r\n                let match = $.trim(this._options.attr.step.toString()).match(/\\.(\\d+)$/);\r\n\r\n                if (match && match.hasOwnProperty(1)) {\r\n                    precision = match ? match[1].length : precision;\r\n                }\r\n            }\r\n\r\n            this._options.precision = precision;\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0 ||\r\n            ! value.toString().match(/^\\-?\\d+\\.?\\d*$/)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.precision >= 0) {\r\n            value = coreuiFormUtils$1.round(value, this._options.precision);\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('min')) {\r\n            value = value < Number(this._options.attr.min)\r\n                ? Number(this._options.attr.min)\r\n                : value;\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('max')) {\r\n            value = value > Number(this._options.attr.max)\r\n                ? Number(this._options.attr.max)\r\n                : value;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = $.extend(true, {}, this._options);\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'number';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('.content-' + this._hash + ' input').keydown(function (e) {\r\n            let k = e.keyCode || e.which;\r\n            let ok = k >= 35 && k <= 40 ||      // arrows\r\n                k >= 96 && k <= 105 ||     // 0-9 numpad\r\n                k === 189 || k === 109 ||  // minus\r\n                k === 110 || k === 190 ||  // dot\r\n                k === 9 ||  //tab\r\n                k === 46 || //del\r\n                k === 8 ||  // backspaces\r\n                ( ! e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)\r\n\r\n            if ( ! ok || (e.ctrlKey && e.altKey)) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' input').blur(function (e) {\r\n            let value = $(this).val();\r\n\r\n            if (that._options.precision >= 0) {\r\n                value = coreuiFormUtils$1.round(value, that._options.precision);\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('min')) {\r\n                value = value < Number(that._options.attr.min)\r\n                    ? Number(that._options.attr.min)\r\n                    : value;\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('max')) {\r\n                value = value > Number(that._options.attr.max)\r\n                    ? Number(that._options.attr.max)\r\n                    : value;\r\n            }\r\n\r\n            $(this).val(value);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.radio = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'radio',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input[type=radio]:checked').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            let that         = this;\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options)\r\n            ) {\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value') && option.value == value) {\r\n                        let text = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                            ? option.text\r\n                            : '';\r\n\r\n                        $('.content-' + that._hash).text(text);\r\n                        that._value = value;\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n\r\n        } else {\r\n            let input = $('.content-' + this._hash + ' input[type=radio][value=\"' + value + '\"]');\r\n\r\n            if (input[0]) {\r\n                input.prop('checked', true);\r\n                this._value = value;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            let value = this.getValue();\r\n            return typeof value === 'string' && value !== '';\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that         = this;\r\n        let radioOptions = [];\r\n        let fieldOptions = this.getOptions();\r\n        let selectedItem = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'radio',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText   = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils$1.hashCode();\r\n\r\n                if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItem.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                radioOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        return ejs.render(tpl['fields/radio.html'], {\r\n            field: fieldOptions,\r\n            value: this._value,\r\n            render: {\r\n                options: radioOptions,\r\n                selectedItem: selectedItem\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.range = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'range',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-range d-inline-block pt-1'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'range';\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.select = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'select',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @returns {array|string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            if (this._options.hasOwnProperty('attr') &&\r\n                typeof this._options.attr === 'object' &&\r\n                this._options.attr !== null &&\r\n                ! Array.isArray(this._options.attr) &&\r\n                this._options.attr.hasOwnProperty('multiple')\r\n            ) {\r\n                let values = [];\r\n\r\n                $('.content-' + this._hash + ' select option:selected').each(function () {\r\n                    values.push($(this).val());\r\n                });\r\n\r\n                return values;\r\n\r\n            } else {\r\n                return $('.content-' + this._hash + ' select option:selected').val()\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' select > option').prop('selected', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' select > option').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('selected', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let select    = $('select', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            select.removeClass('is-invalid');\r\n            select.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            select.removeClass('is-invalid');\r\n            select.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            select.removeClass('is-valid');\r\n            select.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let select = $('.content-' + this._hash + ' select');\r\n\r\n        if (this._options.required && select.val() === '') {\r\n            return false;\r\n        }\r\n\r\n        if (select[0]) {\r\n            return select.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let that          = this;\r\n        let options       = this.getOptions();\r\n        let attributes    = [];\r\n        let selectOptions = [];\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            options.options !== null\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n\r\n                if (typeof option === 'string' || typeof option === 'number') {\r\n                    selectOptions.push(that._renderOption({\r\n                        type: 'option',\r\n                        value: key,\r\n                        text: option\r\n                    }));\r\n\r\n                } else if (typeof option === 'object') {\r\n                    let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                        ? option.type\r\n                        : 'option';\r\n\r\n                    if (type === 'group') {\r\n                        let renderAttr   = [];\r\n                        let groupAttr    = {};\r\n                        let groupOptions = [];\r\n\r\n                        if (option.hasOwnProperty('attr') &&\r\n                            typeof option.attr === 'object' &&\r\n                            option.attr !== null &&\r\n                            ! Array.isArray(option.attr)\r\n                        ) {\r\n                            groupAttr = option.attr;\r\n                        }\r\n\r\n                        if (option.hasOwnProperty('label') && ['string', 'number'].indexOf(typeof(option.label)) >= 0) {\r\n                            groupAttr.label = option.label;\r\n                        }\r\n\r\n                        $.each(groupAttr, function (name, value) {\r\n                            renderAttr.push(name + '=\"' + value + '\"');\r\n                        });\r\n\r\n                        if (Array.isArray(option.options)) {\r\n                            $.each(option.options, function (key, groupOption) {\r\n                                groupOptions.push(that._renderOption(groupOption));\r\n                            });\r\n                        }\r\n\r\n                        selectOptions.push({\r\n                            type: 'group',\r\n                            attr: renderAttr.length > 0 ? (' ' + renderAttr.join(' ')) : '',\r\n                            options: groupOptions,\r\n                        });\r\n\r\n                    } else {\r\n                        selectOptions.push(that._renderOption(option));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                options: selectOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let that            = this;\r\n        let options         = this.getOptions();\r\n        let selectedOptions = [];\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                    ? option.type\r\n                    : 'option';\r\n\r\n                if (type === 'group') {\r\n                    if (Array.isArray(option.options)) {\r\n                        $.each(option.options, function (key, groupOption) {\r\n                            let optionText = groupOption.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(groupOption.text)) >= 0\r\n                                ? groupOption.text\r\n                                : '';\r\n\r\n                            if ( ! optionText || optionText === '') {\r\n                                return;\r\n                            }\r\n\r\n                            if (Array.isArray(that._value)) {\r\n                                $.each(that._value, function (key, itemValue) {\r\n                                    if (itemValue == groupOption.value) {\r\n                                        selectedOptions.push(optionText);\r\n                                        return false;\r\n                                    }\r\n                                });\r\n\r\n                            } else if (that._value == groupOption.value) {\r\n                                selectedOptions.push(optionText);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                } else {\r\n                    let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                        ? option.text\r\n                        : '';\r\n\r\n                    if ( ! optionText || optionText === '') {\r\n                        return;\r\n                    }\r\n\r\n                    if (Array.isArray(that._value)) {\r\n                        $.each(that._value, function (key, itemValue) {\r\n                            if (itemValue == option.value) {\r\n                                selectedOptions.push(optionText);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (that._value == option.value) {\r\n                        selectedOptions.push(optionText);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            render: {\r\n                selectedOptions: selectedOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Сборка опции\r\n     * @param option\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _renderOption: function (option) {\r\n\r\n        let optionAttr = [];\r\n        let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n            ? option.text\r\n            : '';\r\n\r\n        $.each(option, function (name, value) {\r\n            if (name !== 'text') {\r\n                optionAttr.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n\r\n        if (Array.isArray(this._value)) {\r\n            $.each(this._value, function (key, itemValue) {\r\n                if (itemValue == option.value) {\r\n                    optionAttr.push('selected=\"selected\"');\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        } else if (this._value == option.value) {\r\n            optionAttr.push('selected=\"selected\"');\r\n        }\r\n\r\n        return {\r\n            type: 'option',\r\n            text: optionText,\r\n            attr: optionAttr.length > 0 ? (' ' + optionAttr.join(' ')) : ''\r\n        };\r\n    }\r\n};\n\ncoreuiForm$1.fields.switch = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'switch',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        valueY: 'Y',\r\n        valueN: 'N',\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=checkbox]').prop('checked', value === this._options.valueY);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container       = $('.content-' + this._hash);\r\n        let switchContainer = $('.form-switch', container);\r\n        let inputs          = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n        let itemAttr   = {\r\n            type: 'checkbox',\r\n            class: 'form-check-input',\r\n            value: options.valueY\r\n        };\r\n\r\n\r\n        if (options.name) {\r\n            itemAttr.name = this._options.name;\r\n        }\r\n\r\n        if (options.required) {\r\n            itemAttr.required = 'required';\r\n        }\r\n\r\n        if (options.hasOwnProperty('attr') &&\r\n            typeof options.attr === 'object' &&\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            itemAttr = coreuiFormUtils$1.mergeAttr(itemAttr, options.attr);\r\n        }\r\n\r\n        if (this._value === options.valueY) {\r\n            itemAttr.checked = 'checked';\r\n        }\r\n\r\n        $.each(itemAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/switch.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.textarea = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'textarea',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' textarea').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' textarea').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let textarea  = $('textarea', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            textarea.removeClass('is-valid');\r\n            textarea.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' textarea');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/textarea.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.wysiwyg = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _editor: null,\r\n    _editorHash: null,\r\n    _options: {\r\n        type: 'wysiwyg',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        height: null,\r\n        minHeight: null,\r\n        maxHeight: null,\r\n        options: {},\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        readonly: false,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form       = form;\r\n        this._index      = index;\r\n        this._id         = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash       = coreuiFormUtils$1.hashCode();\r\n        this._editorHash = coreuiFormUtils$1.hashCode();\r\n        this._value      = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options    = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @return {string|null}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        } else {\r\n            return this._editor ? this._editor.getContent() : this._value;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            if (this._editor) {\r\n                this._editor.setContent(value);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/wysiwyg.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            editorHash: this._editorHash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let tinyMceOptions = {};\r\n        let than           = this;\r\n        let textareaId     = 'editor-' + this._editorHash;\r\n\r\n        if (typeof this._options.options === 'object' &&\r\n            ! Array.isArray(this._options.options) &&\r\n            Object.keys(this._options.options).length > 0\r\n        ) {\r\n            tinyMceOptions = this._options.options;\r\n\r\n        } else if (this._options.options === 'simple') {\r\n            tinyMceOptions = {\r\n                plugins: 'image lists anchor charmap',\r\n                toolbar: 'blocks | bold italic underline | alignleft aligncenter ' +\r\n                         'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                         'forecolor backcolor removeformat',\r\n                menubar: false,\r\n                branding: false\r\n            };\r\n\r\n        } else {\r\n            tinyMceOptions = {\r\n                promotion: false,\r\n                branding: false,\r\n                plugins: 'preview importcss searchreplace autolink autosave save directionality code ' +\r\n                         'visualblocks visualchars fullscreen image link media template codesample table ' +\r\n                         'charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',\r\n                menubar: 'file edit view insert format tools table help',\r\n                toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | ' +\r\n                         'alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | ' +\r\n                         'forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen ' +\r\n                         'preview save print | insertfile image media template link anchor codesample | ltr rtl',\r\n            };\r\n        }\r\n\r\n        tinyMceOptions.selector = '#editor-' + this._editorHash;\r\n\r\n        if (['string', 'number'].indexOf(typeof this._options.width) >= 0) {\r\n            tinyMceOptions.width = this._options.width;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minWidth) >= 0) {\r\n            tinyMceOptions.min_width = this._options.minWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxWidth) >= 0) {\r\n            tinyMceOptions.max_width = this._options.maxWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.height) >= 0) {\r\n            tinyMceOptions.height = this._options.height;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minHeight) >= 0) {\r\n            tinyMceOptions.min_height = this._options.minHeight;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxHeight) >= 0) {\r\n            tinyMceOptions.max_height = this._options.maxHeight;\r\n        }\r\n\r\n        tinymce.init(tinyMceOptions).then(function () {\r\n            than._editor = tinymce.get(textareaId);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.passwordRepeat = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _isChangeState: true,\r\n    _value: '',\r\n    _options: {\r\n        type: 'password',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            type: 'password',\r\n            class: 'form-control form-control-sm d-inline-block flex-shrink-0'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        showBtn: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input[type=\"password\"]').eq(0).val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value ? '******' : '');\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=\"password\"]').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input[type=\"password\"]', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        if ( ! this._isChangeState || this._options.readonly) {\r\n            return true;\r\n        }\r\n\r\n        let input = $('.content-' + this._hash + ' input[type=\"password\"]');\r\n\r\n        if (input.eq(0).val() !== input.eq(1).val()) {\r\n            return false;\r\n        }\r\n\r\n        if (input[0]) {\r\n            return input.eq(0).is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes  = [];\r\n        let attributes2 = [];\r\n        let datalist    = [];\r\n        let options     = this.getOptions();\r\n\r\n        this._isChangeState = ! options.showBtn\r\n            ? true\r\n            : ! this._value;\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if ( ! this._isChangeState) {\r\n            options.attr.disabled = '';\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.value = this._value ? '******' : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n        $.each(options.attr, function (name, value) {\r\n            if (['name', 'value'].indexOf(name) < 0) {\r\n                attributes2.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n        let lang = this._form.getLang();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: lang,\r\n            btn_text: this._isChangeState ? lang.cancel : lang.change,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                attr2: attributes2.length > 0 ? (' ' + attributes2.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value ? '******' : '',\r\n            hash: this._hash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' .btn-password-change').click(function (e) {\r\n            let textChange = $(this).data('change');\r\n            let textCancel = $(this).data('cancel');\r\n\r\n            if (that._isChangeState) {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').attr('disabled', 'disabled');\r\n                $(this).text(textChange);\r\n                that._isChangeState = false;\r\n\r\n            } else {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').removeAttr('disabled');\r\n                $(this).text(textCancel);\r\n                that._isChangeState = true;\r\n            }\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.file = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'file',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {File[]}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input')[0].files;\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {File|File[]} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if ( ! (value instanceof File) &&  ! (value instanceof FileList)) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text('');\r\n        } else {\r\n            let container = new DataTransfer();\r\n\r\n            if (value instanceof File) {\r\n                container.items.add(value);\r\n\r\n            } else {\r\n                $.each(value, function (key, file) {\r\n                    if (value instanceof File) {\r\n                        container.items.add(file);\r\n                    }\r\n                });\r\n            }\r\n\r\n            $('.content-' + this._hash + ' input')[0].files = container.files;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils$1.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils$1.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils$1.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils$1.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\nreturn coreuiForm$1;\n\n})));\n"]}