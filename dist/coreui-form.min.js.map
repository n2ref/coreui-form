{"version":3,"sources":["coreui-form.min.js"],"names":["global","factory","exports","module","define","amd","CoreUI","form","this","f","window","self","ejs","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","fs","path","utils","scopeOptionWarned","_VERSION_STRING","version","_DEFAULT_LOCALS_NAME","_OPTS_PASSABLE_WITH_DATA","_OPTS_PASSABLE_WITH_DATA_EXPRESS","concat","_BOM","_JS_IDENTIFIER","resolvePaths","name","paths","filePath","some","v","resolveInclude","existsSync","handleCache","options","template","func","filename","hasTemplate","arguments","cache","get","fileLoader","toString","replace","compile","set","includeFile","opts","shallowCopy","createNullProtoObjWherePossible","includePath","views","match","exec","Array","isArray","root","includer","escapeFunction","includerResult","rethrow","err","str","flnm","lineno","esc","lines","split","start","Math","max","end","min","context","slice","map","line","curr","join","message","stripSemi","Template","text","templateText","mode","truncate","currentLine","source","client","escape","escapeXML","compileDebug","debug","openDelimiter","closeDelimiter","delimiter","strict","rmWhitespace","outputFunctionName","localsName","async","destructuredLocals","legacyInclude","_with","regex","createRegex","readFileSync","promiseImpl","Function","Promise","isDir","dirname","extname","resolve","scope","console","warn","render","d","data","shallowCopyFromList","renderFile","cb","result","args","prototype","shift","pop","settings","viewOpts","reject","clearCache","reset","modes","EVAL","ESCAPED","RAW","COMMENT","LITERAL","delim","escapeRegExpChars","open","close","RegExp","fn","prepended","appended","escapeFn","sanitizedFilename","JSON","stringify","generateSource","test","destructuring","src","log","ctor","SyntaxError","returnedFn","apply","includeData","Object","defineProperty","basename","value","writable","enumerable","configurable","matches","parseTemplateText","forEach","index","indexOf","closing","scanLine","firstPos","pat","arr","push","substring","_addOutput","newLineCount","lastIndexOf","__express","VERSION","../package.json","./utils","2","hasOwn","obj","key","hasOwnProperty","regExpChars","_ENCODE_HTML_RULES","string","String","&","<",">","\"","'","_MATCH_HTML","encode_char","escapeXMLToString","markup","undefined","to","from","list","_data","val","remove","hyphenToCamel","toUpperCase","create","__proto__","3","4","process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","resolvedPath","resolvedAbsolute","cwd","TypeError","charAt","normalize","isAbsolute","trailingSlash","substr","relative","trim","fromParts","toParts","samePartsLength","outputParts","sep","hasRoot","charCodeAt","matchedSlash","ext","startDot","startPart","preDotState","len","_process","5","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","marker","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","6","description","keywords","author","license","bin","main","jsdelivr","unpkg","repository","type","url","bugs","homepage","dependencies","jake","devDependencies","browserify","eslint","git-directory-deploy","jsdoc","lru-cache","mocha","uglify-js","engines","node","scripts","let","tpl","coreuiFormUtils$1","getFieldValue","formRecord","getRecord","fieldOptions","getFunctionByName","functionName","namespaces","mergeFieldOptions","defaultOptions","$","attr","mergeAttr","extend","width","_options","fieldWidth","unit","labelWidth","attr2","each","tryHandleCache","getAttacheFields","fields","field","instance","hash","_hash","direction","fieldsDirection","formatDate","templ","day","month","Date","date","getMonth","getDate","year","formatDateTime","getHours","getSeconds","formatDateMonth","lang","getFullYear","date_months","formatDateWeek","isNumeric","num","isNaN","hashCode","crc32","getTime","random","round","number","precision","pow","parseInt","coreuiFormInstance","id","send","method","format","minWidth","maxWidth","controlsOffset","readonly","validate","errorClass","layout","onSubmit","record","controls","_lock","_fieldsIndex","_groupsIndex","_controlsIndex","_groups","_fields","_controls","_events","_init","coreuiForm$1","getSetting","include","initEvents","that","formContainer","_trigger","getId","element","widthSizes","formAttr","matchAll","columns","column","initGroup","initField","columnsContent","keys","fieldContents","control","show","html","getElementById","HTMLElement","domElement","innerHTML","lock","controlOptions","unlock","getOptions","isValid","getData","onsubmit","onSubmitText","eval","onSubmitResult","results","isStopSend","sendFormat","dataFormat","contentType","FormData","append","FileList","file","ajax","processData","beforeSend","xhr","success","hideError","parsedResponse","jsonResponse","script","loadUrl","location","href","error","textStatus","errorThrown","parse","responseText","error_message","showError","errorMessage","complete","getValue","getFields","getControls","getGroups","getField","fieldInstance","isReadonly","hide","showControls","hideControls","formError","find","errorOptions","class","dismiss","prepend","scroll","scrollOffset","animate","offset","top","eventName","callback","singleExec","destruct","_instances","init","setValue","group","groupInstance","expand","collapse","initControl","controlInstance","getLang","attr1","params","_renderControl","content","_settings","errorMessageScrollOffset","formId","monthLang","setSettings","modal_select","modal_loading","switch_yes","switch_no","dataset_add","date_week","send_error","required_field","repeat","change","cancel","en","button","_index","_form","_initEvents","attributes","duration","onClick","event","click","submit","removeAttr","coreuiFormUtils","checkbox","_id","_value","label","outContent","renderContent","values","empty","selectedItems","option","prop","itemValue","lastInput","inputs","container","removeClass","sendDataFormat","addClass","validText","invalidText","required","attachFields","checkboxOptions","itemAttr","optionText","checked","color","datalist","link","input","is","_renderContent","datalistId","style","itemAttributes","datalistAttr","inline","errorText","_renderContentReadonly","custom","components","alloyComponents","component","dataset","_renderOptions","attach","items","valueY","valueN","serializeArray","item","_renderRowReadonly","_eventAdd","removeItems","removeItem","itemId","rows","headers","row","_renderRow","rowOptions","itemOptions","cellValue","cellItemValue","selected","hashItem","optionValue","showCollapsible","slideUp","slideDown","jQuery","Zepto","Meteor","mask","invalid","getCaret","sel","pos","dSel","document","selection","cSelStart","ctrl","selectionStart","navigator","appVersion","moveStart","setCaret","range","el","setSelectionRange","createTextRange","moveEnd","select","events","keyCode","which","maskDigitPosMapOld","maskDigitPosMap","jMaskGlobals","useInput","behaviour","keydown","keyup","oldValue","trigger","selectOnFocus","Mask","regexMask","getRegexMask","pattern","optional","recursive","oRecursive","maskChunks","createRange","translation","digit","destroyEvents","calculateCaretPosition","getMasked","caretPosNew","oldVal","newVal","target","caretPosOld","newValL","oldValL","maskDigitsBeforeCaret","maskDigitsAfterCaret","maskDigitsBeforeCaretAll","maskDigitsBeforeCaretAllOld","caretPos","isInput","jMask","byPassKeys","keyStrokeCompensation","lastMaskChar","m","maskLen","resetPos","maskDigitCount","reverse","addMethod","valLen","maskDigit","valDigit","lastUntranslatedMaskChar","fallback","skipMaskChars","buf","maskDigitPosArr","lastMaskCharDigit","check","mapMaskdigitPositions","maskDiff","callbacks","criteria","defaultArgs","changed","caret","placeholder","getCleanVal","getMaskedVal","onlyMask","clearIfNotMatch","maxlength","prefix","notSameMaskObject","maskObject","maskWatchers","selector","HTMLAttributes","globals","watchInterval","watchInputs","setInterval","maskFunction","unmask","clearInterval","dataMask","removeData","isSupported","applyDataMask","maskElements","dataMaskAttr","interval","userAgent","watchDataMask","A","S","$selector","onHidden","onChange","_text","size","onClear","modal","elementText","elementValue","modalLoading","textAttr","modalId","Number","onShow","step","radioOptions","selectedItem","k","ctrlKey","altKey","preventDefault","blur","radio","selectOptions","groupAttr","groupOptions","renderAttr","selectedOptions","groupOption","_renderOption","optionAttr","switchContainer","textarea","wysiwyg","_editorHash","setContent","switch","editorHash","tinyMceOptions","textareaId","branding","menubar","toolbar","than","_editor","passwordRepeat","attributes2","_isChangeState","File","height","minHeight","maxHeight","getContent","plugins","promotion","min_width","max_width","min_height","max_height","tinymce","then","showBtn","pass","eq","disabled","btn_text","textChange","textCancel","files","DataTransfer","add"],"mappings":"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","file":"coreui-form.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.CoreUI = global.CoreUI || {}, global.CoreUI.form = factory());\n}(this, (function () { 'use strict';\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f();}else if(typeof define===\"function\"&&define.amd){define([],f);}else{var g;if(typeof window!==\"undefined\"){g=window;}else if(typeof global!==\"undefined\"){g=global;}else if(typeof self!==\"undefined\"){g=self;}else{g=this;}g.ejs=f();}})(function(){return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t);}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){\"use strict\";var fs=require(\"fs\");var path=require(\"path\");var utils=require(\"./utils\");var scopeOptionWarned=false;var _VERSION_STRING=require(\"../package.json\").version;var _DEFAULT_OPEN_DELIMITER=\"<\";var _DEFAULT_CLOSE_DELIMITER=\">\";var _DEFAULT_DELIMITER=\"%\";var _DEFAULT_LOCALS_NAME=\"locals\";var _NAME=\"ejs\";var _REGEX_STRING=\"(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)\";var _OPTS_PASSABLE_WITH_DATA=[\"delimiter\",\"scope\",\"context\",\"debug\",\"compileDebug\",\"client\",\"_with\",\"rmWhitespace\",\"strict\",\"filename\",\"async\"];var _OPTS_PASSABLE_WITH_DATA_EXPRESS=_OPTS_PASSABLE_WITH_DATA.concat(\"cache\");var _BOM=/^\\uFEFF/;var _JS_IDENTIFIER=/^[a-zA-Z_$][0-9a-zA-Z_$]*$/;exports.cache=utils.cache;exports.fileLoader=fs.readFileSync;exports.localsName=_DEFAULT_LOCALS_NAME;exports.promiseImpl=new Function(\"return this;\")().Promise;exports.resolveInclude=function(name,filename,isDir){var dirname=path.dirname;var extname=path.extname;var resolve=path.resolve;var includePath=resolve(isDir?filename:dirname(filename),name);var ext=extname(name);if(!ext){includePath+=\".ejs\";}return includePath};function resolvePaths(name,paths){var filePath;if(paths.some(function(v){filePath=exports.resolveInclude(name,v,true);return fs.existsSync(filePath)})){return filePath}}function getIncludePath(path,options){var includePath;var filePath;var views=options.views;var match=/^[A-Za-z]+:\\\\|^\\//.exec(path);if(match&&match.length){path=path.replace(/^\\/*/,\"\");if(Array.isArray(options.root)){includePath=resolvePaths(path,options.root);}else{includePath=exports.resolveInclude(path,options.root||\"/\",true);}}else{if(options.filename){filePath=exports.resolveInclude(path,options.filename);if(fs.existsSync(filePath)){includePath=filePath;}}if(!includePath&&Array.isArray(views)){includePath=resolvePaths(path,views);}if(!includePath&&typeof options.includer!==\"function\"){throw new Error('Could not find the include file \"'+options.escapeFunction(path)+'\"')}}return includePath}function handleCache(options,template){var func;var filename=options.filename;var hasTemplate=arguments.length>1;if(options.cache){if(!filename){throw new Error(\"cache option requires a filename\")}func=exports.cache.get(filename);if(func){return func}if(!hasTemplate){template=fileLoader(filename).toString().replace(_BOM,\"\");}}else if(!hasTemplate){if(!filename){throw new Error(\"Internal EJS error: no file name or template \"+\"provided\")}template=fileLoader(filename).toString().replace(_BOM,\"\");}func=exports.compile(template,options);if(options.cache){exports.cache.set(filename,func);}return func}function tryHandleCache(options,data,cb){var result;if(!cb){if(typeof exports.promiseImpl==\"function\"){return new exports.promiseImpl(function(resolve,reject){try{result=handleCache(options)(data);resolve(result);}catch(err){reject(err);}})}else{throw new Error(\"Please provide a callback function\")}}else{try{result=handleCache(options)(data);}catch(err){return cb(err)}cb(null,result);}}function fileLoader(filePath){return exports.fileLoader(filePath)}function includeFile(path,options){var opts=utils.shallowCopy(utils.createNullProtoObjWherePossible(),options);opts.filename=getIncludePath(path,opts);if(typeof options.includer===\"function\"){var includerResult=options.includer(path,opts.filename);if(includerResult){if(includerResult.filename){opts.filename=includerResult.filename;}if(includerResult.template){return handleCache(opts,includerResult.template)}}}return handleCache(opts)}function rethrow(err,str,flnm,lineno,esc){var lines=str.split(\"\\n\");var start=Math.max(lineno-3,0);var end=Math.min(lines.length,lineno+3);var filename=esc(flnm);var context=lines.slice(start,end).map(function(line,i){var curr=i+start+1;return(curr==lineno?\" >> \":\"    \")+curr+\"| \"+line}).join(\"\\n\");err.path=filename;err.message=(filename||\"ejs\")+\":\"+lineno+\"\\n\"+context+\"\\n\\n\"+err.message;throw err}function stripSemi(str){return str.replace(/;(\\s*$)/,\"$1\")}exports.compile=function compile(template,opts){var templ;if(opts&&opts.scope){if(!scopeOptionWarned){console.warn(\"`scope` option is deprecated and will be removed in EJS 3\");scopeOptionWarned=true;}if(!opts.context){opts.context=opts.scope;}delete opts.scope;}templ=new Template(template,opts);return templ.compile()};exports.render=function(template,d,o){var data=d||utils.createNullProtoObjWherePossible();var opts=o||utils.createNullProtoObjWherePossible();if(arguments.length==2){utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA);}return handleCache(opts,template)(data)};exports.renderFile=function(){var args=Array.prototype.slice.call(arguments);var filename=args.shift();var cb;var opts={filename:filename};var data;var viewOpts;if(typeof arguments[arguments.length-1]==\"function\"){cb=args.pop();}if(args.length){data=args.shift();if(args.length){utils.shallowCopy(opts,args.pop());}else{if(data.settings){if(data.settings.views){opts.views=data.settings.views;}if(data.settings[\"view cache\"]){opts.cache=true;}viewOpts=data.settings[\"view options\"];if(viewOpts){utils.shallowCopy(opts,viewOpts);}}utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA_EXPRESS);}opts.filename=filename;}else{data=utils.createNullProtoObjWherePossible();}return tryHandleCache(opts,data,cb)};exports.Template=Template;exports.clearCache=function(){exports.cache.reset();};function Template(text,opts){opts=opts||utils.createNullProtoObjWherePossible();var options=utils.createNullProtoObjWherePossible();this.templateText=text;this.mode=null;this.truncate=false;this.currentLine=1;this.source=\"\";options.client=opts.client||false;options.escapeFunction=opts.escape||opts.escapeFunction||utils.escapeXML;options.compileDebug=opts.compileDebug!==false;options.debug=!!opts.debug;options.filename=opts.filename;options.openDelimiter=opts.openDelimiter||exports.openDelimiter||_DEFAULT_OPEN_DELIMITER;options.closeDelimiter=opts.closeDelimiter||exports.closeDelimiter||_DEFAULT_CLOSE_DELIMITER;options.delimiter=opts.delimiter||exports.delimiter||_DEFAULT_DELIMITER;options.strict=opts.strict||false;options.context=opts.context;options.cache=opts.cache||false;options.rmWhitespace=opts.rmWhitespace;options.root=opts.root;options.includer=opts.includer;options.outputFunctionName=opts.outputFunctionName;options.localsName=opts.localsName||exports.localsName||_DEFAULT_LOCALS_NAME;options.views=opts.views;options.async=opts.async;options.destructuredLocals=opts.destructuredLocals;options.legacyInclude=typeof opts.legacyInclude!=\"undefined\"?!!opts.legacyInclude:true;if(options.strict){options._with=false;}else{options._with=typeof opts._with!=\"undefined\"?opts._with:true;}this.opts=options;this.regex=this.createRegex();}Template.modes={EVAL:\"eval\",ESCAPED:\"escaped\",RAW:\"raw\",COMMENT:\"comment\",LITERAL:\"literal\"};Template.prototype={createRegex:function(){var str=_REGEX_STRING;var delim=utils.escapeRegExpChars(this.opts.delimiter);var open=utils.escapeRegExpChars(this.opts.openDelimiter);var close=utils.escapeRegExpChars(this.opts.closeDelimiter);str=str.replace(/%/g,delim).replace(/</g,open).replace(/>/g,close);return new RegExp(str)},compile:function(){var src;var fn;var opts=this.opts;var prepended=\"\";var appended=\"\";var escapeFn=opts.escapeFunction;var ctor;var sanitizedFilename=opts.filename?JSON.stringify(opts.filename):\"undefined\";if(!this.source){this.generateSource();prepended+='  var __output = \"\";\\n'+\"  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n\";if(opts.outputFunctionName){if(!_JS_IDENTIFIER.test(opts.outputFunctionName)){throw new Error(\"outputFunctionName is not a valid JS identifier.\")}prepended+=\"  var \"+opts.outputFunctionName+\" = __append;\"+\"\\n\";}if(opts.localsName&&!_JS_IDENTIFIER.test(opts.localsName)){throw new Error(\"localsName is not a valid JS identifier.\")}if(opts.destructuredLocals&&opts.destructuredLocals.length){var destructuring=\"  var __locals = (\"+opts.localsName+\" || {}),\\n\";for(var i=0;i<opts.destructuredLocals.length;i++){var name=opts.destructuredLocals[i];if(!_JS_IDENTIFIER.test(name)){throw new Error(\"destructuredLocals[\"+i+\"] is not a valid JS identifier.\")}if(i>0){destructuring+=\",\\n  \";}destructuring+=name+\" = __locals.\"+name;}prepended+=destructuring+\";\\n\";}if(opts._with!==false){prepended+=\"  with (\"+opts.localsName+\" || {}) {\"+\"\\n\";appended+=\"  }\"+\"\\n\";}appended+=\"  return __output;\"+\"\\n\";this.source=prepended+this.source+appended;}if(opts.compileDebug){src=\"var __line = 1\"+\"\\n\"+\"  , __lines = \"+JSON.stringify(this.templateText)+\"\\n\"+\"  , __filename = \"+sanitizedFilename+\";\"+\"\\n\"+\"try {\"+\"\\n\"+this.source+\"} catch (e) {\"+\"\\n\"+\"  rethrow(e, __lines, __filename, __line, escapeFn);\"+\"\\n\"+\"}\"+\"\\n\";}else{src=this.source;}if(opts.client){src=\"escapeFn = escapeFn || \"+escapeFn.toString()+\";\"+\"\\n\"+src;if(opts.compileDebug){src=\"rethrow = rethrow || \"+rethrow.toString()+\";\"+\"\\n\"+src;}}if(opts.strict){src='\"use strict\";\\n'+src;}if(opts.debug){console.log(src);}if(opts.compileDebug&&opts.filename){src=src+\"\\n\"+\"//# sourceURL=\"+sanitizedFilename+\"\\n\";}try{if(opts.async){try{ctor=new Function(\"return (async function(){}).constructor;\")();}catch(e){if(e instanceof SyntaxError){throw new Error(\"This environment does not support async/await\")}else{throw e}}}else{ctor=Function;}fn=new ctor(opts.localsName+\", escapeFn, include, rethrow\",src);}catch(e){if(e instanceof SyntaxError){if(opts.filename){e.message+=\" in \"+opts.filename;}e.message+=\" while compiling ejs\\n\\n\";e.message+=\"If the above error is not helpful, you may want to try EJS-Lint:\\n\";e.message+=\"https://github.com/RyanZim/EJS-Lint\";if(!opts.async){e.message+=\"\\n\";e.message+=\"Or, if you meant to create an async function, pass `async: true` as an option.\";}}throw e}var returnedFn=opts.client?fn:function anonymous(data){var include=function(path,includeData){var d=utils.shallowCopy(utils.createNullProtoObjWherePossible(),data);if(includeData){d=utils.shallowCopy(d,includeData);}return includeFile(path,opts)(d)};return fn.apply(opts.context,[data||utils.createNullProtoObjWherePossible(),escapeFn,include,rethrow])};if(opts.filename&&typeof Object.defineProperty===\"function\"){var filename=opts.filename;var basename=path.basename(filename,path.extname(filename));try{Object.defineProperty(returnedFn,\"name\",{value:basename,writable:false,enumerable:false,configurable:true});}catch(e){}}return returnedFn},generateSource:function(){var opts=this.opts;if(opts.rmWhitespace){this.templateText=this.templateText.replace(/[\\r\\n]+/g,\"\\n\").replace(/^\\s+|\\s+$/gm,\"\");}this.templateText=this.templateText.replace(/[ \\t]*<%_/gm,\"<%_\").replace(/_%>[ \\t]*/gm,\"_%>\");var self=this;var matches=this.parseTemplateText();var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;if(matches&&matches.length){matches.forEach(function(line,index){var closing;if(line.indexOf(o+d)===0&&line.indexOf(o+d+d)!==0){closing=matches[index+2];if(!(closing==d+c||closing==\"-\"+d+c||closing==\"_\"+d+c)){throw new Error('Could not find matching close tag for \"'+line+'\".')}}self.scanLine(line);});}},parseTemplateText:function(){var str=this.templateText;var pat=this.regex;var result=pat.exec(str);var arr=[];var firstPos;while(result){firstPos=result.index;if(firstPos!==0){arr.push(str.substring(0,firstPos));str=str.slice(firstPos);}arr.push(result[0]);str=str.slice(result[0].length);result=pat.exec(str);}if(str){arr.push(str);}return arr},_addOutput:function(line){if(this.truncate){line=line.replace(/^(?:\\r\\n|\\r|\\n)/,\"\");this.truncate=false;}if(!line){return line}line=line.replace(/\\\\/g,\"\\\\\\\\\");line=line.replace(/\\n/g,\"\\\\n\");line=line.replace(/\\r/g,\"\\\\r\");line=line.replace(/\"/g,'\\\\\"');this.source+='    ; __append(\"'+line+'\")'+\"\\n\";},scanLine:function(line){var self=this;var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;var newLineCount=0;newLineCount=line.split(\"\\n\").length-1;switch(line){case o+d:case o+d+\"_\":this.mode=Template.modes.EVAL;break;case o+d+\"=\":this.mode=Template.modes.ESCAPED;break;case o+d+\"-\":this.mode=Template.modes.RAW;break;case o+d+\"#\":this.mode=Template.modes.COMMENT;break;case o+d+d:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(o+d+d,o+d)+'\")'+\"\\n\";break;case d+d+c:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(d+d+c,d+c)+'\")'+\"\\n\";break;case d+c:case\"-\"+d+c:case\"_\"+d+c:if(this.mode==Template.modes.LITERAL){this._addOutput(line);}this.mode=null;this.truncate=line.indexOf(\"-\")===0||line.indexOf(\"_\")===0;break;default:if(this.mode){switch(this.mode){case Template.modes.EVAL:case Template.modes.ESCAPED:case Template.modes.RAW:if(line.lastIndexOf(\"//\")>line.lastIndexOf(\"\\n\")){line+=\"\\n\";}}switch(this.mode){case Template.modes.EVAL:this.source+=\"    ; \"+line+\"\\n\";break;case Template.modes.ESCAPED:this.source+=\"    ; __append(escapeFn(\"+stripSemi(line)+\"))\"+\"\\n\";break;case Template.modes.RAW:this.source+=\"    ; __append(\"+stripSemi(line)+\")\"+\"\\n\";break;case Template.modes.COMMENT:break;case Template.modes.LITERAL:this._addOutput(line);break}}else{this._addOutput(line);}}if(self.opts.compileDebug&&newLineCount){this.currentLine+=newLineCount;this.source+=\"    ; __line = \"+this.currentLine+\"\\n\";}}};exports.escapeXML=utils.escapeXML;exports.__express=exports.renderFile;exports.VERSION=_VERSION_STRING;exports.name=_NAME;if(typeof window!=\"undefined\"){window.ejs=exports;}},{\"../package.json\":6,\"./utils\":2,fs:3,path:4}],2:[function(require,module,exports){\"use strict\";var regExpChars=/[|\\\\{}()[\\]^$+*?.]/g;var hasOwnProperty=Object.prototype.hasOwnProperty;var hasOwn=function(obj,key){return hasOwnProperty.apply(obj,[key])};exports.escapeRegExpChars=function(string){if(!string){return\"\"}return String(string).replace(regExpChars,\"\\\\$&\")};var _ENCODE_HTML_RULES={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&#34;\",\"'\":\"&#39;\"};var _MATCH_HTML=/[&<>'\"]/g;function encode_char(c){return _ENCODE_HTML_RULES[c]||c}var escapeFuncStr=\"var _ENCODE_HTML_RULES = {\\n\"+'      \"&\": \"&amp;\"\\n'+'    , \"<\": \"&lt;\"\\n'+'    , \">\": \"&gt;\"\\n'+'    , \\'\"\\': \"&#34;\"\\n'+'    , \"\\'\": \"&#39;\"\\n'+\"    }\\n\"+\"  , _MATCH_HTML = /[&<>'\\\"]/g;\\n\"+\"function encode_char(c) {\\n\"+\"  return _ENCODE_HTML_RULES[c] || c;\\n\"+\"};\\n\";exports.escapeXML=function(markup){return markup==undefined?\"\":String(markup).replace(_MATCH_HTML,encode_char)};function escapeXMLToString(){return Function.prototype.toString.call(this)+\";\\n\"+escapeFuncStr}try{if(typeof Object.defineProperty===\"function\"){Object.defineProperty(exports.escapeXML,\"toString\",{value:escapeXMLToString});}else{exports.escapeXML.toString=escapeXMLToString;}}catch(err){console.warn(\"Unable to set escapeXML.toString (is the Function prototype frozen?)\");}exports.shallowCopy=function(to,from){from=from||{};if(to!==null&&to!==undefined){for(var p in from){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}return to};exports.shallowCopyFromList=function(to,from,list){list=list||[];from=from||{};if(to!==null&&to!==undefined){for(var i=0;i<list.length;i++){var p=list[i];if(typeof from[p]!=\"undefined\"){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}}return to};exports.cache={_data:{},set:function(key,val){this._data[key]=val;},get:function(key){return this._data[key]},remove:function(key){delete this._data[key];},reset:function(){this._data={};}};exports.hyphenToCamel=function(str){return str.replace(/-[a-z]/g,function(match){return match[1].toUpperCase()})};exports.createNullProtoObjWherePossible=function(){if(typeof Object.create==\"function\"){return function(){return Object.create(null)}}if(!({__proto__:null}instanceof Object)){return function(){return{__proto__:null}}}return function(){return{}}}();},{}],3:[function(require,module,exports){},{}],4:[function(require,module,exports){(function(process){function normalizeArray(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1);}else if(last===\"..\"){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}if(allowAboveRoot){for(;up--;up){parts.unshift(\"..\");}}return parts}exports.resolve=function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){continue}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\";}resolvedPath=normalizeArray(filter(resolvedPath.split(\"/\"),function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"};exports.normalize=function(path){var isAbsolute=exports.isAbsolute(path),trailingSlash=substr(path,-1)===\"/\";path=normalizeArray(filter(path.split(\"/\"),function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\";}if(path&&trailingSlash){path+=\"/\";}return(isAbsolute?\"/\":\"\")+path};exports.isAbsolute=function(path){return path.charAt(0)===\"/\"};exports.join=function(){var paths=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(paths,function(p,index){if(typeof p!==\"string\"){throw new TypeError(\"Arguments to path.join must be strings\")}return p}).join(\"/\"))};exports.relative=function(from,to){from=exports.resolve(from).substr(1);to=exports.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\");}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")};exports.sep=\"/\";exports.delimiter=\":\";exports.dirname=function(path){if(typeof path!==\"string\")path=path+\"\";if(path.length===0)return\".\";var code=path.charCodeAt(0);var hasRoot=code===47;var end=-1;var matchedSlash=true;for(var i=path.length-1;i>=1;--i){code=path.charCodeAt(i);if(code===47){if(!matchedSlash){end=i;break}}else{matchedSlash=false;}}if(end===-1)return hasRoot?\"/\":\".\";if(hasRoot&&end===1){return\"/\"}return path.slice(0,end)};function basename(path){if(typeof path!==\"string\")path=path+\"\";var start=0;var end=-1;var matchedSlash=true;var i;for(i=path.length-1;i>=0;--i){if(path.charCodeAt(i)===47){if(!matchedSlash){start=i+1;break}}else if(end===-1){matchedSlash=false;end=i+1;}}if(end===-1)return\"\";return path.slice(start,end)}exports.basename=function(path,ext){var f=basename(path);if(ext&&f.substr(-1*ext.length)===ext){f=f.substr(0,f.length-ext.length);}return f};exports.extname=function(path){if(typeof path!==\"string\")path=path+\"\";var startDot=-1;var startPart=0;var end=-1;var matchedSlash=true;var preDotState=0;for(var i=path.length-1;i>=0;--i){var code=path.charCodeAt(i);if(code===47){if(!matchedSlash){startPart=i+1;break}continue}if(end===-1){matchedSlash=false;end=i+1;}if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){return\"\"}return path.slice(startDot,end)};function filter(xs,f){if(xs.filter)return xs.filter(f);var res=[];for(var i=0;i<xs.length;i++){if(f(xs[i],i,xs))res.push(xs[i]);}return res}var substr=\"ab\".substr(-1)===\"b\"?function(str,start,len){return str.substr(start,len)}:function(str,start,len){if(start<0)start=str.length+start;return str.substr(start,len)};}).call(this,require(\"_process\"));},{_process:5}],5:[function(require,module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout===\"function\"){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title=\"browser\";process.browser=true;process.env={};process.argv=[];process.version=\"\";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error(\"process.binding is not supported\")};process.cwd=function(){return\"/\"};process.chdir=function(dir){throw new Error(\"process.chdir is not supported\")};process.umask=function(){return 0};},{}],6:[function(require,module,exports){module.exports={name:\"ejs\",description:\"Embedded JavaScript templates\",keywords:[\"template\",\"engine\",\"ejs\"],version:\"3.1.8\",author:\"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)\",license:\"Apache-2.0\",bin:{ejs:\"./bin/cli.js\"},main:\"./lib/ejs.js\",jsdelivr:\"ejs.min.js\",unpkg:\"ejs.min.js\",repository:{type:\"git\",url:\"git://github.com/mde/ejs.git\"},bugs:\"https://github.com/mde/ejs/issues\",homepage:\"https://github.com/mde/ejs\",dependencies:{jake:\"^10.8.5\"},devDependencies:{browserify:\"^16.5.1\",eslint:\"^6.8.0\",\"git-directory-deploy\":\"^1.5.1\",jsdoc:\"^4.0.2\",\"lru-cache\":\"^4.0.1\",mocha:\"^10.2.0\",\"uglify-js\":\"^3.3.16\"},engines:{node:\">=0.10.0\"},scripts:{test:\"mocha -u tdd\"}};},{}]},{},[1])(1)});\n\nlet tpl = Object.create(null);\ntpl['form-error.html'] = '<div class=\"coreui-form__error alert alert-danger alert-dismissible fade show mb-3 <%= options.class %>\">\\n    <%- message %>\\n    <% if (options.dismiss) { %>\\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\\n    <% } %>\\n</div>';\ntpl['form-field-content.html'] = '<%- content %>';\ntpl['form-field-group.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__group_container mb-3\">\\n    <div class=\"coreui-form__group_label pe-2\">\\n        <h6 class=\"coreui-form__field_label_text col-form-label-sm\">\\n            <%- group.label %>\\n            <% if (group.showCollapsible) { %>\\n                <button type=\"button\" class=\"btn btn-sm btn-link btn-collapsible text-dark\">\\n                    <% if ( ! group.show) { %>\\n                    <i class=\"bi bi-chevron-right\"></i>\\n                    <% } else { %>\\n                    <i class=\"bi bi-chevron-down\"></i>\\n                    <% } %>\\n                </button>\\n            <% } %>\\n        </h6>\\n    </div>\\n    <div class=\"coreui-form__group_content\"<% if ( ! group.show) { %> style=\"display:none\"<% } %>>\\n        <%- content %>\\n    </div>\\n</div>';\ntpl['form-field-label.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__field_container d-flex flex-column flex-md-row mb-3\"\\n     <% if ( ! field.show) { %> style=\"display:none\"<% } %>>\\n    <% if (field.labelWidth !== 0 && field.labelWidth !== \\'0px\\') { %>\\n    <div class=\"coreui-form__field_label text-md-end text-sm-start pe-2\"<% if (field.labelWidth) { %> style=\"min-width:<%= field.labelWidth %>;width:<%= field.labelWidth %>\"<% } %>>\\n        <div class=\"coreui-form__field_label_content col-form-label-sm\">\\n            <% if (field.required) { %>\\n            <span class=\"coreui-form__field_label_req text-danger\">*</span>\\n            <% } %>\\n            <span class=\"coreui-form__field_label_text fw-medium\"><%- field.label %></span>\\n        </div>\\n\\n        <% if (field.description) { %>\\n        <div class=\"coreui-form__field_label_description text-muted\">\\n            <small><%- field.description %></small>\\n        </div>\\n        <% } %>\\n    </div>\\n    <% } %>\\n    <div class=\"coreui-form__field_content flex-fill pt-1\">\\n        <div class=\"d-inline-block content-<%= hash %>\">\\n            <%- content %>\\n        </div>\\n\\n        <% if (field.outContent) { %>\\n        <span class=\"coreui-form__field-content-out d-inline-block align-top pt-1 ps-1\">\\n            <%- field.outContent %>\\n        </span>\\n        <% } %>\\n\\n        <% if (attachFields && attachFields.length > 0) { %>\\n            <% $.each(attachFields, function(key, attachField) { %>\\n                <div class=\"<% if (attachField.hasOwnProperty(\\'direction\\') && attachField.direction === \\'column\\') { %>d-block mt-2<% } else { %>d-inline-block<% } %> content-<%= attachField.hash %>\">\\n                    <%- attachField.content %>\\n                </div>\\n            <% }); %>\\n        <% } %>\\n    </div>\\n</div>';\ntpl['form.html'] = '<div id=\"coreui-form-<%= form.id %>\" class=\"coreui-form mb-2\"\\n    <% if (widthSizes) { %>style=\"<%= widthSizes.join(\\';\\') %>\"<% } %>>\\n    <% if (form.title) { %>\\n    <h5 class=\"mb-4\"><%- form.title %></h5>\\n    <% } %>\\n\\n    <form action=\"<%= form.send.url %>\" method=\"<%= form.send.method %>\"<%- formAttr %>>\\n        <div class=\"coreui-form__fields d-flex justify-content-start flex-column flex-wrap\">\\n            <%- layout %>\\n        </div>\\n\\n        <% if (controls) { %>\\n        <div class=\"coreui-form__controls d-flex justify-content-start flex-sm-wrap flex-md-nowrap\">\\n            <% if (form.controlsOffset !== 0 && form.controlsOffset !== \\'0px\\') { %>\\n            <div class=\"d-none d-md-block\" style=\"width:<%= form.controlsOffset %>;min-width:<%= form.controlsOffset %>\"></div>\\n            <% } %>\\n\\n            <div class=\"d-flex justify-content-start flex-wrap gap-2\">\\n                <% $.each(controls, function(key, control) { %>\\n                <div id=\"coreui-form-<%= form.id %>-control-<%= control.index %>\" class=\"coreui-form__control_container\"\\n                     <% if ( ! control.show) { %>style=\"display:none\"<% } %>>\\n                    <%- control.content %>\\n                </div>\\n                <% }); %>\\n            </div>\\n        </div>\\n        <% } %>\\n    </form>\\n</div>';\ntpl['controls/button.html'] = '<button <%- render.attr %>><%- control.content %></button>';\ntpl['controls/link.html'] = '<a href=\"<%- control.href %>\"<%- render.attr %>><%- control.content %></a>';\ntpl['fields/checkbox.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItems.join(\\', \\') %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/color.html'] = '<% if (field.readonly) { %>\\n    <div class=\"rounded-1\" style=\"width: 14px;height: 14px;background-color: <%= value %>\"></div>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/custom.html'] = '<%- content %>';\ntpl['fields/dataset-row-readonly.html'] = '<tr class=\"coreui-form__field-dataset-item\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-2 pb-1\">\\n            <%- option.value %>\\n        </td>\\n    <% }); %>\\n</tr>';\ntpl['fields/dataset-row.html'] = '<tr class=\"coreui-form__field-dataset-item\" id=\"dataset-item-<%= hashItem %>\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-1 pb-1\">\\n        <% if (option.type === \\'select\\') { %>\\n            <select <%- option.attr %>>\\n                <% $.each(option.items, function(key, item) { %>\\n                <option <%- item.attr %>><%- item.title %></option>\\n                <% }); %>\\n            </select>\\n        <% } else if (option.type === \\'switch\\') { %>\\n            <div class=\"form-check form-switch\">\\n                <input <%- option.attr %>/>\\n            </div>\\n        <% } else { %>\\n            <input <%- option.attr %>>\\n        <% } %>\\n        </td>\\n    <% }); %>\\n\\n    <td class=\"pb-1\">\\n        <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-remove\" data-item-id=\"dataset-item-<%= hashItem %>\">\\n            <i class=\"bi bi-x text-muted\"></i>\\n        </button>\\n    </td>\\n</tr>';\ntpl['fields/dataset.html'] = '<% if (field.readonly) { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted pe-2\"><small><%= item.title %></small></td>\\n                <% }); %>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n            <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n<% } else { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted\"><small><%= item.title %></small></td>\\n                <% }); %>\\n                <td></td>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n                <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n    <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-add\"><%= lang.dataset_add %></button>\\n<% } %>';\ntpl['fields/hidden.html'] = '<% if ( ! field.readonly) { %>\\n    <input <%- render.attr %>/>\\n<% } %>';\ntpl['fields/input.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/modal-loading.html'] = '<div class=\"py-4 d-flex justify-content-center align-items-center gap-2\">\\n    <div class=\"spinner-border mr-2\"></div> <%= lang.modal_loading %>\\n</div>\\n';\ntpl['fields/modal.html'] = '<% if (field.readonly) { %>\\n    <%= text %>\\n<% } else { %>\\n    <div class=\"input-group\"<% if (render.width) { %> style=\"width:<%= render.width %>\"<% } %>>\\n        <input <%- render.attr %>/>\\n        <input type=\"hidden\" name=\"<%= field.name %>\" value=\"<%= value %>\" class=\"coreui-form-modal-value\"/>\\n        <% if ( ! field.required) { %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-clear border-secondary-subtle\" type=\"button\">\\n            <i class=\"bi bi-x\"></i>\\n        </button>\\n        <% } %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-select border-secondary-subtle\" type=\"button\"><%= lang.modal_select %></button>\\n    </div>\\n<% } %>';\ntpl['fields/passwordRepeat.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <div class=\"d-flex gap-1 align-items-center\">\\n        <input <%- render.attr %>/>\\n        <small class=\"password-text-repeat\"><%= lang.repeat %></small>\\n\\n        <% if (field.showBtn) { %>\\n            <div class=\"input-group flex-nowrap\">\\n                <input <%- render.attr2 %>/>\\n                <button class=\"btn btn-sm btn-outline-secondary border-secondary-subtle btn-password-change\" type=\"button\"\\n                        data-change=\"<%- lang.change %>\" data-cancel=\"<%- lang.cancel %>\"><%= btn_text %></button>\\n            </div>\\n        <% } else { %>\\n            <input <%- render.attr2 %>/>\\n        <% } %>\\n\\n    </div>\\n<% } %>';\ntpl['fields/radio.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItem %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/select.html'] = '<% if (field.readonly) { %>\\n    <%= render.selectedOptions.join(\\', \\') %>\\n<% } else { %>\\n    <select <%- render.attr %>>\\n        <% $.each(render.options, function(key, option) { %>\\n            <% if (option.type === \\'group\\') { %>\\n                <optgroup<%- option.attr %>/>\\n                <% $.each(option.options, function(key, groupOption) { %>\\n                    <option <%- groupOption.attr %>/><%= groupOption.text %></option>\\n                <% }); %>\\n                </optgroup>\\n            <% } else { %>\\n            <option <%- option.attr %>/><%= option.text %></option>\\n            <% } %>\\n        <% }); %>\\n    </select>\\n<% } %>';\ntpl['fields/switch.html'] = '<% if (field.readonly) { %>\\n    <%= field.valueY == value ? lang.switch_yes : lang.switch_no %>\\n<% } else { %>\\n    <div class=\"form-check form-switch\">\\n        <input <%- render.attr %>/>\\n    </div>\\n<% } %>';\ntpl['fields/textarea.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea <%- render.attr %>><%- value %></textarea>\\n<% } %>';\ntpl['fields/wysiwyg.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea name=\"<%= field.name %>\" id=\"editor-<%= editorHash %>\"><%- value %></textarea>\\n<% } %>';\n\nlet coreuiFormUtils$1 = {\r\n\r\n    /**\r\n     * Получение значения поля\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               fieldOptions\r\n     * @returns {string|number|null}\r\n     */\r\n    getFieldValue: function (form, fieldOptions) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        if (fieldOptions &&\r\n            formRecord &&\r\n            typeof fieldOptions.name === 'string' &&\r\n            typeof formRecord === 'object' &&\r\n            formRecord.hasOwnProperty(fieldOptions.name) &&\r\n            ['string', 'number', 'object'].indexOf(typeof formRecord[fieldOptions.name]) >= 0\r\n        ) {\r\n            return formRecord[fieldOptions.name];\r\n        }\r\n\r\n        return '';\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение функции из указанного текста\r\n     * @param functionName\r\n     * @param context\r\n     * @returns {null|Window}\r\n     * @private\r\n     */\r\n    getFunctionByName: function(functionName, context) {\r\n\r\n        let namespaces = functionName.split(\".\");\r\n        let func       = namespaces.pop();\r\n\r\n        context = context || window;\r\n\r\n        for (let i = 0; i < namespaces.length; i++) {\r\n            if (context.hasOwnProperty(namespaces[i])) {\r\n                context = context[namespaces[i]];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        if (typeof context[func] === 'function') {\r\n            return context[func];\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Обработка полей в полях\r\n     * @param form\r\n     * @param defaultOptions\r\n     * @param fieldOptions\r\n     */\r\n    mergeFieldOptions: function (form, defaultOptions, fieldOptions) {\r\n\r\n        let options = $.extend(true, {}, defaultOptions);\r\n\r\n        if (fieldOptions) {\r\n            if (options.hasOwnProperty('attr') && typeof options.attr === 'object' &&\r\n                fieldOptions.hasOwnProperty('attr') && typeof fieldOptions.attr === 'object'\r\n            ) {\r\n                fieldOptions.attr = this.mergeAttr(options.attr, fieldOptions.attr);\r\n            }\r\n\r\n            options = $.extend(true, {}, options, fieldOptions);\r\n        }\r\n\r\n        if (options.hasOwnProperty('width')) {\r\n            if (options.width) {\r\n                let unit = typeof options.width === 'number' ? 'px' : '';\r\n                options.width = options.width + unit;\r\n\r\n            } else if (form._options.fieldWidth && options.type !== 'color') {\r\n                let unit = typeof form._options.fieldWidth === 'number' ? 'px' : '';\r\n                options.width = form._options.fieldWidth + unit;\r\n            }\r\n        }\r\n\r\n        if (options.hasOwnProperty('labelWidth')) {\r\n            if (options.labelWidth >= 0 && options.labelWidth !== null) {\r\n                let unit = typeof options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = options.labelWidth + unit;\r\n\r\n            } else if (form._options.labelWidth) {\r\n                let unit = typeof form._options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = form._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        return options\r\n    },\r\n\r\n\r\n    /**\r\n     * Объединение атрибутов\r\n     * @param attr1\r\n     * @param attr2\r\n     * @returns {object}\r\n     */\r\n    mergeAttr: function (attr1, attr2) {\r\n\r\n        let mergeAttr = Object.assign({}, attr1);\r\n\r\n        if (typeof attr2 === 'object') {\r\n            $.each(attr2, function (name, value) {\r\n                if (mergeAttr.hasOwnProperty(name)) {\r\n                    if (name === 'class') {\r\n                        mergeAttr[name] += ' ' + value;\r\n\r\n                    } else if (name === 'style') {\r\n                        mergeAttr[name] += ';' + value;\r\n\r\n                    } else {\r\n                        mergeAttr[name] = value;\r\n                    }\r\n\r\n                } else {\r\n                    mergeAttr[name] = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return mergeAttr;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация и рендер дополнительных полей\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @returns {object}\r\n     * @private\r\n     */\r\n    getAttacheFields: function(form, options) {\r\n\r\n        let fields = [];\r\n\r\n        if (typeof options === 'object' &&\r\n            typeof(options.fields) === 'object' &&\r\n            Array.isArray(options.fields)\r\n        ) {\r\n            $.each(options.fields, function (key, field) {\r\n                let instance = form.initField(field);\r\n\r\n                if (typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                fields.push({\r\n                    hash: instance._hash,\r\n                    direction: options.hasOwnProperty('fieldsDirection') ? options.fieldsDirection : 'row',\r\n                    content: instance.renderContent()\r\n                });\r\n            });\r\n        }\r\n\r\n        return fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDate: function (value) {\r\n\r\n        if (value && value.length === 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDateTime: function (value) {\r\n\r\n        if (value && value.length >= 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n            let hour  = (\"00\" + date.getHours()).slice(-2);\r\n            let min   = (\"00\" + date.getMinutes()).slice(-2);\r\n            let sec   = (\"00\" + date.getSeconds()).slice(-2);\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year + ' ' + hour + ':' + min + ':' + sec;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateMonth: function (value, lang) {\r\n\r\n        if (value && value.length === 7) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth();\r\n\r\n            let monthLang = lang.date_months.hasOwnProperty(month) ? lang.date_months[month] : '';\r\n\r\n            value = monthLang + ' ' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateWeek: function (value, lang) {\r\n\r\n        if (value && value.length >= 7) {\r\n            let year = value.substring(0, 4);\r\n            let week = value.substring(6);\r\n\r\n            value = year + ' ' + lang.date_week + ' ' + week;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка на число\r\n     * @param num\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    isNumeric: function(num) {\r\n        return (typeof(num) === 'number' || typeof(num) === \"string\" && num.trim() !== '') && ! isNaN(num);\r\n    },\r\n\r\n\r\n    /**\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    hashCode: function() {\r\n        return this.crc32((new Date().getTime() + Math.random()).toString()).toString(16);\r\n    },\r\n\r\n\r\n    /**\r\n     * Hash crc32\r\n     * @param str\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    crc32: function (str) {\r\n\r\n        for (var a, o = [], c = 0; c < 256; c++) {\r\n            a = c;\r\n            for (var f = 0; f < 8; f++) {\r\n                a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;\r\n            }\r\n            o[c] = a;\r\n        }\r\n\r\n        for (var n = -1, t = 0; t < str.length; t++) {\r\n            n = n >>> 8 ^ o[255 & (n ^ str.charCodeAt(t))];\r\n        }\r\n\r\n        return (-1 ^ n) >>> 0;\r\n    },\r\n\r\n\r\n    /**\r\n     * Округление\r\n     * @param number\r\n     * @param precision\r\n     * @returns {number}\r\n     */\r\n    round: function (number, precision) {\r\n\r\n        precision = typeof precision !== 'undefined' ? parseInt(precision) : 0;\r\n\r\n        if (precision === 0) {\r\n            return Math.round(number);\r\n\r\n        } else if (precision > 0) {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number * pow) / pow;\r\n\r\n        } else {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number / pow) * pow;\r\n        }\r\n    }\r\n};\n\nlet coreuiFormInstance = {\r\n\r\n    _options: {\r\n        id: null,\r\n        title: '',\r\n        lang: 'en',\r\n        send: {\r\n            url: '',\r\n            method: 'POST',\r\n            format: 'form',\r\n        },\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        labelWidth: 200,\r\n        controlsOffset: null,\r\n        readonly: false,\r\n        validate: false,\r\n        errorClass: '',\r\n        layout: '[column_default]',\r\n        onSubmit: null,\r\n        record: {},\r\n        fields: [],\r\n        controls: []\r\n    },\r\n\r\n    _lock: false,\r\n    _fieldsIndex: 0,\r\n    _groupsIndex: 0,\r\n    _controlsIndex: 0,\r\n    _groups: [],\r\n    _fields: [],\r\n    _controls: [],\r\n    _events: {},\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {object} options\r\n     * @private\r\n     */\r\n    _init: function (options) {\r\n\r\n        this._options.labelWidth    = coreuiForm$1.getSetting('labelWidth');\r\n        this._options.lang          = coreuiForm$1.getSetting('lang');\r\n        this._options.errorClass    = coreuiForm$1.getSetting('errorClass');\r\n        this._options.send.format = coreuiForm$1.getSetting('sendDataFormat');\r\n\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        if ( ! this._options.id) {\r\n            this._options.id = coreuiFormUtils$1.hashCode();\r\n        }\r\n\r\n        if (this._options.hasOwnProperty('labelWidth')) {\r\n            if (this._options.labelWidth >= 0 && this._options.labelWidth !== null) {\r\n                let unit = typeof this._options.labelWidth === 'number' ? 'px' : '';\r\n                this._options.labelWidth = this._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        if ( ! this._options.hasOwnProperty('controlsOffset') || this._options.controlsOffset === null) {\r\n            this._options.controlsOffset = this._options.labelWidth;\r\n        } else {\r\n            if (this._options.controlsOffset >= 0) {\r\n                let unit = typeof this._options.controlsOffset === 'number' ? 'px' : '';\r\n                this._options.controlsOffset = this._options.controlsOffset + unit;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    initEvents: function () {\r\n\r\n        let that          = this;\r\n        let formContainer = '#coreui-form-' + this._options.id + ' > form';\r\n\r\n        $(formContainer).on('submit', function () {\r\n            setTimeout(function () {\r\n                that.send.apply(that);\r\n            }, 0);\r\n            return false;\r\n        });\r\n\r\n        this._trigger('shown.coreui.form');\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение id формы\r\n     * @return {string|null}\r\n     */\r\n    getId: function () {\r\n\r\n        return this._options.hasOwnProperty('id') ? this._options.id : null;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    render: function(element) {\r\n\r\n        let that       = this;\r\n        let widthSizes = [];\r\n        let layout     = this._options.layout;\r\n        let controls   = [];\r\n        let formAttr   = [];\r\n\r\n\r\n\r\n        if (this._options.width) {\r\n            let unit = typeof this._options.width === 'number' ? 'px' : '';\r\n            widthSizes.push('width:' + this._options.width + unit);\r\n        }\r\n\r\n        if (this._options.minWidth) {\r\n            let unit = typeof this._options.minWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('min-width:' + this._options.minWidth + unit);\r\n        }\r\n\r\n        if (this._options.maxWidth) {\r\n            let unit = typeof this._options.maxWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('max-width:' + this._options.maxWidth + unit);\r\n        }\r\n\r\n\r\n\r\n        // Поля\r\n        if (typeof this._options.fields === 'object' &&\r\n            Array.isArray(this._options.fields) &&\r\n            this._options.fields.length > 0 &&\r\n            layout &&\r\n            typeof layout === 'string'\r\n        ) {\r\n            let matches        = Array.from(layout.matchAll(/\\[column_([\\w_\\d]+)\\]/g));\r\n            let columns        = [];\r\n            let columnsContent = {};\r\n\r\n            if (matches.length > 0) {\r\n                $.each(matches, function (key, match) {\r\n                    columns.push(match[1]);\r\n                });\r\n            }\r\n\r\n            if (columns.length > 0) {\r\n                $.each(this._options.fields, function (key, field) {\r\n                    let column = field.hasOwnProperty('column') && (typeof field.column === 'string' || typeof field.column === 'number')\r\n                        ? (columns.indexOf(field.column) >= 0 ? field.column : null)\r\n                        : 'default';\r\n\r\n                    if (typeof column !== 'string') {\r\n                        return;\r\n                    }\r\n\r\n                    let type     = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : '';\r\n                    let instance = null;\r\n\r\n                    if (type === 'group') {\r\n                        instance = that.initGroup(field);\r\n\r\n                    } else {\r\n                        instance = that.initField(field);\r\n                    }\r\n\r\n\r\n                    if ( ! instance || typeof instance !== 'object') {\r\n                        return;\r\n                    }\r\n\r\n                    if ( ! columnsContent.hasOwnProperty(column)) {\r\n                        columnsContent[column] = [];\r\n                    }\r\n                    columnsContent[column].push(instance.render());\r\n                });\r\n            }\r\n\r\n            if (Object.keys(columnsContent).length >= 0) {\r\n                $.each(columnsContent, function (name, fieldContents) {\r\n\r\n                    layout = layout.replace('[column_' + name + ']', fieldContents.join(''));\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        // Элементы управления\r\n        if (typeof this._options.controls === 'object' &&\r\n            Array.isArray(this._options.controls) &&\r\n            this._options.controls.length > 0\r\n        ) {\r\n            $.each(this._options.controls, function (key, control) {\r\n                let instance = that.initControl(control);\r\n\r\n                if ( ! instance || typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                controls.push({\r\n                    show: ! control.hasOwnProperty('show') || control.show,\r\n                    index: that._controlsIndex - 1,\r\n                    content: instance.render()\r\n                });\r\n            });\r\n        }\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            formAttr.push('novalidate');\r\n        }\r\n\r\n\r\n        let html = ejs.render(tpl['form.html'], {\r\n            form: this._options,\r\n            formAttr: formAttr ? ' ' + formAttr.join(' ') : '',\r\n            widthSizes: widthSizes,\r\n            layout: layout,\r\n            controls: controls,\r\n        });\r\n\r\n        if (element === undefined) {\r\n            return html;\r\n        }\r\n\r\n        // Dom element\r\n        let domElement = {};\r\n\r\n        if (typeof element === 'string') {\r\n            domElement = document.getElementById(element);\r\n\r\n            if ( ! domElement) {\r\n                return '';\r\n            }\r\n\r\n        } else if (element instanceof HTMLElement) {\r\n            domElement = element;\r\n        }\r\n\r\n\r\n        domElement.innerHTML = html;\r\n\r\n        this.initEvents();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        this._lock = true;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.lock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Разблокировка\r\n     */\r\n    unlock: function () {\r\n\r\n        this._lock = false;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.unlock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Отправка данных формы\r\n     */\r\n    send: function () {\r\n\r\n        if (this._lock) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            let isValid = this.validate();\r\n\r\n            if ( ! isValid) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let onsubmit = null;\r\n        let data     = this.getData();\r\n\r\n        if (typeof this._options.onSubmit === 'function') {\r\n            onsubmit = this._options.onSubmit;\r\n\r\n        } else if (typeof this._options.onSubmit === 'string' && this._options.onSubmit) {\r\n            let func = coreuiFormUtils$1.getFunctionByName(this._options.onSubmit);\r\n\r\n            if (typeof func === 'function') {\r\n                onsubmit = func;\r\n            } else if (typeof this._options.onSubmit === 'string') {\r\n                let onSubmitText = this._options.onSubmit;\r\n\r\n                onsubmit = function(form, data) {\r\n                    try {\r\n                        eval(onSubmitText);\r\n                    } catch (e) {\r\n                        throw Error('Incorrect onSubmit param: ' + e.message)\r\n                    }\r\n                };\r\n            }\r\n        }\r\n\r\n        if (typeof onsubmit === 'function') {\r\n            let onSubmitResult = onsubmit(this, data);\r\n\r\n            if (onSubmitResult === false) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let results    = this._trigger('send.coreui.form', this, [ this, data ]);\r\n        let isStopSend = false;\r\n\r\n        $.each(results, function(key, result) {\r\n            if (result === false) {\r\n                isStopSend = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        if (isStopSend) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.lock();\r\n\r\n        let that       = this;\r\n        let sendFormat = ['form', 'json'].indexOf(this._options.send.format) >= 0\r\n            ? this._options.send.format\r\n            : 'form';\r\n\r\n        let dataFormat  = null;\r\n        let contentType = null;\r\n\r\n        if (sendFormat === 'json') {\r\n            contentType = \"application/json; charset=utf-8\";\r\n            dataFormat  = JSON.stringify(data);\r\n\r\n        } else {\r\n            contentType = false;\r\n            dataFormat  = new FormData();\r\n\r\n            $.each(data, function (name, value) {\r\n                if (value instanceof File) {\r\n                    dataFormat.append(name, value, value.name);\r\n\r\n                } else if (value instanceof FileList) {\r\n                    $.each(value, function (key, file) {\r\n                        dataFormat.append(name, file, file.name);\r\n                    });\r\n\r\n                } else {\r\n                    dataFormat.append(name, value);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        $.ajax({\r\n            url: this._options.send.url,\r\n            method: this._options.send.method,\r\n            data: dataFormat,\r\n            contentType: contentType,\r\n            processData: false,\r\n            beforeSend: function(xhr) {\r\n                that._trigger('start-send.coreui.form', that, [ that, xhr ]);\r\n            },\r\n            success: function (result) {\r\n                that.hideError();\r\n\r\n                that._trigger('success-send.coreui.form', that, [ that, result ]);\r\n\r\n                let jsonResponse = null;\r\n\r\n                try {\r\n                    let parsedResponse = JSON.parse(result);\r\n                    if (typeof parsedResponse === 'object' &&\r\n                        parsedResponse !== null &&\r\n                        ! Array.isArray(parsedResponse)\r\n                    ) {\r\n                        jsonResponse = parsedResponse;\r\n                    }\r\n\r\n                } catch (e) {\r\n                    // ignore\r\n                }\r\n\r\n                if (jsonResponse !== null && typeof jsonResponse === 'object') {\r\n                    if (jsonResponse.hasOwnProperty('scripts') &&\r\n                        Array.isArray(jsonResponse.scripts)\r\n                    ) {\r\n                        $.each(jsonResponse.scripts, function (key, script) {\r\n                            if (typeof script === 'string') {\r\n                                let func = coreuiFormUtils$1.getFunctionByName(script);\r\n\r\n                                if (typeof func === 'function') {\r\n                                    func();\r\n                                } else {\r\n                                    eval(script);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (jsonResponse.hasOwnProperty('loadUrl') &&\r\n                        typeof jsonResponse.loadUrl === 'string'\r\n                    ) {\r\n                        location.href = jsonResponse.loadUrl;\r\n                    }\r\n                }\r\n            },\r\n            error: function(xhr, textStatus, errorThrown) {\r\n                let errorMessage = that.getLang().send_error || '';\r\n                let data         = {};\r\n\r\n                try {\r\n                    let parsedResponse = JSON.parse(xhr.responseText);\r\n                    if (typeof parsedResponse === 'object' &&\r\n                        parsedResponse !== null &&\r\n                        ! Array.isArray(parsedResponse)\r\n                    ) {\r\n                        data = parsedResponse;\r\n                    }\r\n\r\n                } catch (e) {\r\n                    // ignore\r\n                }\r\n\r\n                if (data.hasOwnProperty('error_message') &&\r\n                    typeof data.error_message === 'string' &&\r\n                    data.error_message !== ''\r\n                ) {\r\n                    errorMessage = data.error_message;\r\n                }\r\n\r\n                that.showError(errorMessage);\r\n                that._trigger('error-send.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n            },\r\n            complete: function(xhr, textStatus) {\r\n                that.unlock();\r\n                that._trigger('end-send.coreui.form', that, [ that, xhr, textStatus ]);\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return this._options;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение записи\r\n     * @returns {object}\r\n     */\r\n    getRecord: function () {\r\n\r\n        if (this._options.hasOwnProperty('record') && typeof this._options.record === 'object') {\r\n            return this._options.record;\r\n        }\r\n\r\n        return {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение данных с формы\r\n     * @returns {object}\r\n     */\r\n    getData: function () {\r\n\r\n        let data = {};\r\n\r\n        $.each(this._fields, function (key, field) {\r\n            let fieldOptions = field.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name) {\r\n                data[fieldOptions.name] = field.getValue();\r\n            }\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение полей\r\n     * @returns {object}\r\n     */\r\n    getFields: function () {\r\n        return this._fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение элементов управления\r\n     * @returns {object}\r\n     */\r\n    getControls: function () {\r\n        return this._controls;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение групп полей\r\n     * @returns {object}\r\n     */\r\n    getGroups: function () {\r\n        return this._groups;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение поля\r\n     * @param {string} name\r\n     * @returns {object}\r\n     */\r\n    getField: function (name) {\r\n\r\n        let field = {};\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            let fieldOptions = fieldInstance.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name === name) {\r\n                field = fieldInstance;\r\n            }\r\n        });\r\n\r\n        return field;\r\n    },\r\n\r\n\r\n    /**\r\n     * Смена состояний полей формы\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            fieldInstance.readonly(isReadonly);\r\n        });\r\n\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                if (isReadonly) {\r\n                    control.hide();\r\n                } else {\r\n                    control.show();\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ всех элементов управления\r\n     */\r\n    showControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.show();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие всех элементов управления\r\n     */\r\n    hideControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.hide();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Валидация полей\r\n     * @return {boolean}\r\n     */\r\n    validate: function () {\r\n\r\n        let isValid = true;\r\n\r\n        $.each(this._fields, function (key, field) {\r\n\r\n            if (field.isValid() === false) {\r\n                field.validate(false);\r\n                isValid = false;\r\n\r\n            } else {\r\n                field.validate(null);\r\n            }\r\n        });\r\n\r\n        return isValid;\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ сообщения с ошибкой\r\n     * @param {string} message\r\n     * @param {object} options\r\n     */\r\n    showError: function (message, options) {\r\n\r\n        let formContainer = $('#coreui-form-' + this._options.id + ' > form');\r\n        let formError     = formContainer.find('> .coreui-form__error');\r\n\r\n        if (formError[0]) {\r\n            formError.remove();\r\n        }\r\n\r\n        options = typeof options === 'object' && ! Array.isArray(options) && options !== null ? options : {};\r\n\r\n        if (typeof this._options.errorClass === 'string' && this._options.errorClass !== '') {\r\n            options.class = options.hasOwnProperty('class') ? options.class : '';\r\n            options.class += ' ' + this._options.errorClass;\r\n        }\r\n\r\n        let errorOptions = {\r\n            class:   options.hasOwnProperty('class') && typeof options.class === 'string' ? options.class : '',\r\n            dismiss: options.hasOwnProperty('dismiss') ? !! options.dismiss : true,\r\n        };\r\n\r\n        formContainer.prepend(\r\n            ejs.render(tpl['form-error.html'], {\r\n                message: message,\r\n                options: errorOptions,\r\n            })\r\n        );\r\n\r\n\r\n        if ( ! options.hasOwnProperty('scroll') || options.scroll) {\r\n            let scrollOffset = coreuiForm$1.getSetting('errorMessageScrollOffset');\r\n\r\n            $('html,body').animate({\r\n                scrollTop : formContainer.offset().top - scrollOffset\r\n            }, 'fast');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие сообщения с ошибкой\r\n     */\r\n    hideError: function () {\r\n\r\n        $('#coreui-form-' + this._options.id + ' > form > .coreui-form__error').remove();\r\n    },\r\n\r\n\r\n    /**\r\n     * @param eventName\r\n     * @param callback\r\n     * @param context\r\n     * @param singleExec\r\n     */\r\n    on: function(eventName, callback, context, singleExec) {\r\n        if (typeof this._events[eventName] !== 'object') {\r\n            this._events[eventName] = [];\r\n        }\r\n        this._events[eventName].push({\r\n            context : context || this,\r\n            callback: callback,\r\n            singleExec: !! singleExec,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление формы\r\n     */\r\n    destruct: function () {\r\n\r\n        $('#coreui-form-' + this._options.id).remove();\r\n        delete coreuiForm$1._instances[this.getId()];\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация поля\r\n     * @param field\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initField: function (field) {\r\n\r\n        if (typeof field !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : 'input';\r\n\r\n        if (type === 'group') {\r\n            return null;\r\n        }\r\n\r\n        if ( ! coreuiForm$1.fields.hasOwnProperty(type)) {\r\n            type = 'input';\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            field.readonly = true;\r\n        }\r\n\r\n\r\n        let fieldInstance = $.extend(true, {\r\n            render:        function () {},\r\n            renderContent: function () {},\r\n            init:          function () {},\r\n            getValue:      function () {},\r\n            setValue:      function () {},\r\n            getOptions:    function () {},\r\n            show:          function () {},\r\n            hide:          function () {},\r\n            readonly:      function () {},\r\n            validate:      function () {},\r\n            isValid:       function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        fieldInstance.init(this, field, this._fieldsIndex++);\r\n\r\n        this._fields.push(fieldInstance);\r\n\r\n        return fieldInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация группы\r\n     * @param group\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initGroup: function (group) {\r\n\r\n        if (typeof group !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = group.hasOwnProperty('type') && typeof group.type === 'string' ? group.type : '';\r\n\r\n        if (type !== 'group') {\r\n            return null;\r\n        }\r\n\r\n        let groupInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            expand:     function () {},\r\n            collapse:   function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        groupInstance.init(this, group, this._groupsIndex++);\r\n\r\n        this._groups.push(groupInstance);\r\n\r\n        return groupInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация контролов\r\n     * @param control\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initControl: function (control) {\r\n\r\n        if (typeof control !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : null;\r\n\r\n        if ( ! type || ! coreuiForm$1.controls.hasOwnProperty(type)) {\r\n            return null;\r\n        }\r\n\r\n        if (type === 'submit' && this._options.readonly) {\r\n            control.show = false;\r\n        }\r\n\r\n\r\n        let controlInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            show:       function () {},\r\n            hide:       function () {},\r\n        }, coreuiForm$1.controls[type]);\r\n\r\n        controlInstance.init(this, control, this._controlsIndex++);\r\n\r\n        this._controls.push(controlInstance);\r\n\r\n        return controlInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение настроек языка\r\n     * @private\r\n     */\r\n    getLang: function () {\r\n\r\n        return coreuiForm$1.lang.hasOwnProperty(this._options.lang)\r\n            ? coreuiForm$1.lang[this._options.lang]\r\n            : coreuiForm$1.lang['ru'];\r\n    },\r\n\r\n\r\n    /**\r\n     * @param name\r\n     * @param context\r\n     * @param params\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _trigger: function(name, context, params) {\r\n\r\n        params = params || [];\r\n        let results = [];\r\n\r\n        if (this._events[name] instanceof Object && this._events[name].length > 0) {\r\n            for (var i = 0; i < this._events[name].length; i++) {\r\n                let callback = this._events[name][i].callback;\r\n\r\n                context = context || this._events[name][i].context;\r\n\r\n                results.push(\r\n                    callback.apply(context, params)\r\n                );\r\n\r\n                if (this._events[name][i].singleExec) {\r\n                    this._events[name].splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n\r\n    /**\r\n     * @param {object} control\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderControl: function (control) {\r\n\r\n        let content = '';\r\n        let type    = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : 'text';\r\n\r\n        if (coreuiForm$1.control.hasOwnProperty(type)) {\r\n            content = coreuiForm$1.control[type].render(control);\r\n        }\r\n\r\n        return content;\r\n    }\r\n};\n\nvar coreuiForm$1 = {\r\n\r\n    lang: {},\r\n    fields: {},\r\n    controls: {},\r\n\r\n    _instances: {},\r\n    _settings: {\r\n        labelWidth: 200,\r\n        lang: 'en',\r\n        class: '',\r\n        sendDataFormat: 'form',\r\n        errorMessageScrollOffset: 70\r\n    },\r\n\r\n\r\n    /**\r\n     * Создание экземпляра формы\r\n     * @param {object} options\r\n     * @returns {coreuiFormInstance}\r\n     */\r\n    create: function (options) {\r\n\r\n        let instance = $.extend(true, {}, coreuiFormInstance);\r\n        instance._init(options instanceof Object ? options : {});\r\n\r\n        let formId = instance.getId();\r\n        this._instances[formId] = instance;\r\n\r\n        return instance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение экземпляра формы по id\r\n     * @param {string} id\r\n     * @returns {coreuiFormInstance|null}\r\n     */\r\n    get: function (id) {\r\n\r\n        if ( ! this._instances.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        if ($('#coreui-form-' + this._instances[id])[0]) {\r\n            delete this._instances[id];\r\n            return null;\r\n        }\r\n\r\n        return this._instances[id];\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка настроек\r\n     * @param {object} settings\r\n     */\r\n    setSettings: function(settings) {\r\n\r\n        this._settings = $.extend({}, this._settings, settings);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения настройки\r\n     * @param {string} name\r\n     */\r\n    getSetting: function(name) {\r\n\r\n        let value = null;\r\n\r\n        if (this._settings.hasOwnProperty(name)) {\r\n            value = this._settings[name];\r\n        }\r\n\r\n        return value;\r\n    }\r\n};\n\ncoreuiForm$1.lang.ru = {\r\n    \"modal_select\": \"Выбрать\",\r\n    \"modal_loading\": \"Загрузка...\",\r\n    \"switch_yes\": \"Да\",\r\n    \"switch_no\": \"Нет\",\r\n    \"dataset_add\": \"Добавить\",\r\n    \"date_months\": ['Январь','Февраль','Март','Апрель','Май','Июнь', 'Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\r\n    \"date_week\": \"неделя\",\r\n    \"send_error\": \"Произошла ошибка. Попробуйте снова или обратитесь к администратору\",\r\n    \"required_field\": \"Обязательное поле\",\r\n    \"repeat\": \"повторите\",\r\n    \"change\": \"изменить\",\r\n    \"cancel\": \"отмена\"\r\n};\n\ncoreuiForm$1.lang.en = {\r\n    \"modal_select\": \"Select\",\r\n    \"modal_loading\": \"Loading...\",\r\n    \"switch_yes\": \"Yes\",\r\n    \"switch_no\": \"No\",\r\n    \"dataset_add\": \"Add\",\r\n    \"date_months\": [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\r\n    \"date_week\": \"week\",\r\n    \"send_error\": \"An error has occurred. Please try again or contact your administrator\",\r\n    \"required_field\": \"Required field\",\r\n    \"repeat\": \"repeat\",\r\n    \"change\": \"change\",\r\n    \"cancel\": \"cancel\"\r\n};\n\ncoreuiForm$1.controls.button = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'button',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-secondary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'button';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils$1.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.custom = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'custom',\r\n        content: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form   = form;\r\n        this._index   = index;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return this._options.content;\r\n    }\r\n};\n\ncoreuiForm$1.controls.link = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'link',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-link'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/link.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > a')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.submit = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'submit',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        show: true,\r\n        attr: {\r\n            class: 'btn btn-sm btn-primary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    unlock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        button.find('.spinner-border').remove();\r\n        button.removeAttr('disabled');\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'submit';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.checkbox = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'checkbox',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: null,\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {object}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let values = [];\r\n\r\n            $('.content-' + this._hash + ' input[type=checkbox]:checked').each(function () {\r\n                values.push($(this).val());\r\n            });\r\n\r\n            return values;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значений в поле\r\n     * @param {object|null|string|number} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=radio]').prop('checked', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' input[type=radio]').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('checked', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that            = this;\r\n        let checkboxOptions = [];\r\n        let fieldOptions    = this.getOptions();\r\n        let selectedItems   = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'checkbox',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils$1.hashCode();\r\n\r\n                if (typeof(that._value) === 'object' &&\r\n                    Array.isArray(that._value)\r\n                ) {\r\n                    $.each(that._value, function (key, itemValue) {\r\n                        if (itemValue == option.value) {\r\n                            itemAttr.checked = 'checked';\r\n                            if (option.hasOwnProperty('text') && option.text) {\r\n                                selectedItems.push(option.text);\r\n                            }\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                } else if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItems.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                checkboxOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        let value = typeof this._value === 'object' && Array.isArray(this._value)\r\n            ? this._value.join(', ')\r\n            : this._value;\r\n\r\n        return ejs.render(tpl['fields/checkbox.html'], {\r\n            field: fieldOptions,\r\n            value: value,\r\n            render: {\r\n                options: checkboxOptions,\r\n                selectedItems: selectedItems\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.color = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'color',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-color d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            value: this._value\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.custom = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _options: {\r\n        type: 'custom',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        content: '',\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     */\r\n    getValue: function () {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options         = this.getOptions();\r\n        let content         = '';\r\n        let alloyComponents = [\r\n            'coreui.table',\r\n            'coreui.layout',\r\n            'coreui.panel',\r\n            'coreui.tabs',\r\n            'coreui.info',\r\n            'coreui.chart',\r\n        ];\r\n\r\n        if (typeof options.content === 'string') {\r\n            content = options.content;\r\n\r\n        } else if (options.content instanceof Object) {\r\n            if ( ! Array.isArray(options.content)) {\r\n                options.content = [ options.content ];\r\n            }\r\n\r\n            let components = [];\r\n\r\n            for (let i = 0; i < options.content.length; i++) {\r\n                if (typeof options.content[i] === 'string') {\r\n                    components.push(options.content[i]);\r\n\r\n                } else if ( ! Array.isArray(options.content[i]) &&\r\n                        options.content[i].hasOwnProperty('component') &&\r\n                        alloyComponents.indexOf(options.content[i].component) >= 0\r\n                ) {\r\n                    let name = options.content[i].component.split('.')[1];\r\n\r\n                    if (CoreUI.hasOwnProperty(name) &&\r\n                        typeof CoreUI[name] === \"object\" &&\r\n                        CoreUI[name] !== null &&\r\n                        ! Array.isArray(CoreUI[name])\r\n                    ) {\r\n                        let instance = CoreUI[name].create(options.content[i]);\r\n                        components.push(instance.render());\r\n\r\n                        this._form.on('shown.coreui.form', instance.initEvents, instance, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            content = components.join('');\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/custom.html'], {\r\n            content: content\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.dataset = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: [],\r\n    _renderOptions: [],\r\n    _options: {\r\n        type: 'dataset',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let name = option.hasOwnProperty('name') && ['string', 'number'].indexOf(typeof (option.name)) >= 0\r\n                    ? option.name\r\n                    : '';\r\n                let type = option.hasOwnProperty('type') && typeof (option.type) === 'string'\r\n                    ? option.type\r\n                    : 'text';\r\n                let attributes = option.hasOwnProperty('attr') && typeof (option.attr) === 'object' && ! Array.isArray(option.attr)\r\n                    ? option.attr\r\n                    : {};\r\n                let items = option.hasOwnProperty('items') && typeof (option.items) === 'object' && Array.isArray(option.items)\r\n                    ? option.items\r\n                    : [];\r\n                let valueY = option.hasOwnProperty('valueY') && ['string', 'numeric'].indexOf(typeof (option.valueY)) >= 0\r\n                    ? option.valueY\r\n                    : 'Y';\r\n                let valueN = option.hasOwnProperty('valueN') && ['string', 'numeric'].indexOf(typeof (option.valueN)) >= 0\r\n                    ? option.valueN\r\n                    : 'N';\r\n\r\n                if (name) {\r\n                    attributes.name = name;\r\n                }\r\n                if (options.required) {\r\n                    attributes.required = 'required';\r\n                }\r\n\r\n                if (type === 'select') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-select form-select-sm ' + attributes.class\r\n                        : 'form-select form-select-sm';\r\n\r\n                } else if (type === 'switch') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-check-input ' + attributes.class\r\n                        : 'form-check-input';\r\n\r\n                    attributes.type = 'checkbox';\r\n                    attributes.value = valueY;\r\n\r\n                } else {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-control form-control-sm ' + attributes.class\r\n                        : 'form-control form-control-sm';\r\n\r\n                    attributes.type = type;\r\n                }\r\n\r\n\r\n                that._renderOptions.push({\r\n                    type  : type,\r\n                    name  : name,\r\n                    attr  : attributes,\r\n                    items : items,\r\n                    valueY: valueY,\r\n                    valueN: valueN,\r\n                });\r\n            });\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {array}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let container = $('.content-' + this._hash);\r\n            let data      = [];\r\n\r\n            $('.coreui-form__field-dataset-list .coreui-form__field-dataset-item', container).each(function () {\r\n                let items = {};\r\n\r\n                $.each($(this).find('input, select').serializeArray(), function (key, item) {\r\n                    if (item.name) {\r\n                        items[item.name] = item.value;\r\n                    }\r\n                });\r\n\r\n                data.push(items);\r\n            });\r\n\r\n            return data;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (typeof value !== 'object' ||\r\n            Array.isArray(value) ||\r\n            value === null\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this._value.push(value);\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash + ' .coreui-form__field-dataset-list').append(\r\n                this._renderRowReadonly(value)\r\n            );\r\n        } else {\r\n            this._eventAdd(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление всех строк\r\n     */\r\n    removeItems: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' .coreui-form__field-dataset-list').empty();\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление строки по id\r\n     * @param {int} itemId\r\n     */\r\n    removeItem: function (itemId) {\r\n\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        $('#' + itemId).hide('fast', function () {\r\n            $('#' + itemId).remove();\r\n\r\n            if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n                $(element + ' .coreui-form__field-dataset-container').hide();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRow(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRowReadonly(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        // Кнопка удаления\r\n        $(element + ' .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n\r\n        // Кнопка добавления\r\n        $(element + ' .btn-dataset-add').click(function () {\r\n            that._eventAdd();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Событие добавления\r\n     */\r\n    _eventAdd: function (row) {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n        row = row || {};\r\n\r\n        if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n            $(element + ' .coreui-form__field-dataset-container').show();\r\n        }\r\n\r\n        $(element + ' .coreui-form__field-dataset-list').append(this._renderRow(row));\r\n        $(element + ' .coreui-form__field-dataset-item:last-child .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRow: function (row) {\r\n\r\n        let rowOptions  = [];\r\n        let itemOptions = [];\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let cellValue = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n                    let itemAttr = {};\r\n\r\n\r\n                    $.each(item, function (name, value) {\r\n                        if (name !== 'title') {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    });\r\n\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemAttr.selected = 'selected';\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemAttr.selected = 'selected';\r\n                    }\r\n\r\n                    let attributes = [];\r\n                    $.each(itemAttr, function (name, value) {\r\n                        attributes.push(name + '=\"' + value + '\"');\r\n                    });\r\n\r\n                    itemOptions.push({\r\n                        attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                        title: title\r\n                    });\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                if (cellValue == option.valueY) {\r\n                    option.attr.checked = 'checked';\r\n                }\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    option.attr.value = cellValue !== null ? cellValue : '';\r\n                }\r\n            }\r\n\r\n            let attributes = [];\r\n\r\n            $.each(option.attr, function (name, value) {\r\n                attributes.push(name + '=\"' + value + '\"');\r\n            });\r\n\r\n            rowOptions.push({\r\n                type: option.type,\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                items: itemOptions\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row.html'], {\r\n            hashItem: coreuiFormUtils$1.hashCode(),\r\n            options: rowOptions,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRowReadonly: function (row) {\r\n\r\n        let rowOptions = [];\r\n        let lang       = this._form.getLang();\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let optionValue = '';\r\n            let cellValue   = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                let itemOptions = [];\r\n\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemOptions.push(itemValue);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemOptions.push(cellValue);\r\n                    }\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                let valueY = 'Y';\r\n\r\n                if (option.hasOwnProperty('valueY')) {\r\n                    valueY = option.valueY;\r\n                }\r\n\r\n                optionValue = cellValue == valueY\r\n                    ? lang.switch_yes\r\n                    : lang.switch_no;\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    optionValue = cellValue;\r\n\r\n                    switch (option.type) {\r\n                        case 'date':           optionValue = coreuiFormUtils$1.formatDate(optionValue); break;\r\n                        case 'datetime-local': optionValue = coreuiFormUtils$1.formatDateTime(optionValue); break;\r\n                        case 'month':          optionValue = coreuiFormUtils$1.formatDateMonth(optionValue, lang); break;\r\n                        case 'week':           optionValue = coreuiFormUtils$1.formatDateWeek(optionValue, lang); break;\r\n                        default: optionValue = cellValue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            rowOptions.push({\r\n                value: optionValue\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row-readonly.html'], {\r\n            options: rowOptions,\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.group = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _options: {\r\n        type: 'group',\r\n        label: '',\r\n        show: true,\r\n        showCollapsible: true,\r\n        fields: [],\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-group-\" + index;\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие группы\r\n     * @param {int} duration\r\n     */\r\n    collapse: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-down');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-right');\r\n\r\n        $(container + ' .coreui-form__group_content').slideUp(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ группы\r\n     * @param {int} duration\r\n     */\r\n    expand: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-right');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-down');\r\n\r\n        $(container + ' .coreui-form__group_content').slideDown(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-group.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            group: this._options,\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {string}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fields = [];\r\n        let that   = this;\r\n\r\n        $.each(this._options.fields, function (key, field) {\r\n\r\n            let fieldInstance = that._form.initField(field);\r\n\r\n            if (typeof fieldInstance !== 'object') {\r\n                return;\r\n            }\r\n\r\n            fields.push(fieldInstance.render());\r\n        });\r\n\r\n        return fields.join('');\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.showCollapsible) {\r\n            let that      = this;\r\n            let container = '#coreui-form-' + this._id;\r\n\r\n            $(container + ' > .coreui-form__group_label .btn-collapsible').click(function () {\r\n\r\n                if ($(container + ' > .coreui-form__group_content').is(':visible')) {\r\n                    that.collapse(80);\r\n                } else {\r\n                    that.expand(80);\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.hidden = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'hidden',\r\n        name: null,\r\n        attr: {},\r\n        required: null,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('#coreui-form-' + this._id).val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if ( ! this._options.readonly) {\r\n            $('#coreui-form-' + this._id).val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-content.html'], {\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n\r\n        options.attr.id = 'coreui-form-' + this._id;\r\n\r\n        if (options.name) {\r\n            options.attr.name = options.name;\r\n        }\r\n\r\n        options.attr.type  = 'hidden';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/hidden.html'], {\r\n            value: this._value !== null ? this._value : '',\r\n            field: options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.input = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'text',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils$1.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils$1.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils$1.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils$1.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\n/**\n * jquery.mask.js\n * @version: v1.14.16\n * @author: Igor Escobar\n *\n * Created by Igor Escobar on 2012-03-10. Please report any bug at github.com/igorescobar/jQuery-Mask-Plugin\n *\n * Copyright (c) 2012 Igor Escobar http://igorescobar.com\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* jshint laxbreak: true */\n/* jshint maxcomplexity:17 */\n/* global define */\n\n// UMD (Universal Module Definition) patterns for JavaScript modules that work everywhere.\n// https://github.com/umdjs/umd/blob/master/templates/jqueryPlugin.js\n(function (factory, jQuery, Zepto) {\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object' && typeof Meteor === 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery || Zepto);\n    }\n\n}(function ($) {\n    'use strict';\n\n    var Mask = function (el, mask, options) {\n\n        var p = {\n            invalid: [],\n            getCaret: function () {\n                try {\n                    var sel,\n                        pos = 0,\n                        ctrl = el.get(0),\n                        dSel = document.selection,\n                        cSelStart = ctrl.selectionStart;\n\n                    // IE Support\n                    if (dSel && navigator.appVersion.indexOf('MSIE 10') === -1) {\n                        sel = dSel.createRange();\n                        sel.moveStart('character', -p.val().length);\n                        pos = sel.text.length;\n                    }\n                    // Firefox support\n                    else if (cSelStart || cSelStart === '0') {\n                        pos = cSelStart;\n                    }\n\n                    return pos;\n                } catch (e) {}\n            },\n            setCaret: function(pos) {\n                try {\n                    if (el.is(':focus')) {\n                        var range, ctrl = el.get(0);\n\n                        // Firefox, WebKit, etc..\n                        if (ctrl.setSelectionRange) {\n                            ctrl.setSelectionRange(pos, pos);\n                        } else { // IE\n                            range = ctrl.createTextRange();\n                            range.collapse(true);\n                            range.moveEnd('character', pos);\n                            range.moveStart('character', pos);\n                            range.select();\n                        }\n                    }\n                } catch (e) {}\n            },\n            events: function() {\n                el\n                .on('keydown.mask', function(e) {\n                    el.data('mask-keycode', e.keyCode || e.which);\n                    el.data('mask-previus-value', el.val());\n                    el.data('mask-previus-caret-pos', p.getCaret());\n                    p.maskDigitPosMapOld = p.maskDigitPosMap;\n                })\n                .on($.jMaskGlobals.useInput ? 'input.mask' : 'keyup.mask', p.behaviour)\n                .on('paste.mask drop.mask', function() {\n                    setTimeout(function() {\n                        el.keydown().keyup();\n                    }, 100);\n                })\n                .on('change.mask', function(){\n                    el.data('changed', true);\n                })\n                .on('blur.mask', function(){\n                    if (oldValue !== p.val() && !el.data('changed')) {\n                        el.trigger('change');\n                    }\n                    el.data('changed', false);\n                })\n                // it's very important that this callback remains in this position\n                // otherwhise oldValue it's going to work buggy\n                .on('blur.mask', function() {\n                    oldValue = p.val();\n                })\n                // select all text on focus\n                .on('focus.mask', function (e) {\n                    if (options.selectOnFocus === true) {\n                        $(e.target).select();\n                    }\n                })\n                // clear the value if it not complete the mask\n                .on('focusout.mask', function() {\n                    if (options.clearIfNotMatch && !regexMask.test(p.val())) {\n                       p.val('');\n                   }\n                });\n            },\n            getRegexMask: function() {\n                var maskChunks = [], translation, pattern, optional, recursive, oRecursive, r;\n\n                for (var i = 0; i < mask.length; i++) {\n                    translation = jMask.translation[mask.charAt(i)];\n\n                    if (translation) {\n\n                        pattern = translation.pattern.toString().replace(/.{1}$|^.{1}/g, '');\n                        optional = translation.optional;\n                        recursive = translation.recursive;\n\n                        if (recursive) {\n                            maskChunks.push(mask.charAt(i));\n                            oRecursive = {digit: mask.charAt(i), pattern: pattern};\n                        } else {\n                            maskChunks.push(!optional && !recursive ? pattern : (pattern + '?'));\n                        }\n\n                    } else {\n                        maskChunks.push(mask.charAt(i).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n                    }\n                }\n\n                r = maskChunks.join('');\n\n                if (oRecursive) {\n                    r = r.replace(new RegExp('(' + oRecursive.digit + '(.*' + oRecursive.digit + ')?)'), '($1)?')\n                         .replace(new RegExp(oRecursive.digit, 'g'), oRecursive.pattern);\n                }\n\n                return new RegExp(r);\n            },\n            destroyEvents: function() {\n                el.off(['input', 'keydown', 'keyup', 'paste', 'drop', 'blur', 'focusout', ''].join('.mask '));\n            },\n            val: function(v) {\n                var isInput = el.is('input'),\n                    method = isInput ? 'val' : 'text',\n                    r;\n\n                if (arguments.length > 0) {\n                    if (el[method]() !== v) {\n                        el[method](v);\n                    }\n                    r = el;\n                } else {\n                    r = el[method]();\n                }\n\n                return r;\n            },\n            calculateCaretPosition: function(oldVal) {\n                var newVal = p.getMasked(),\n                    caretPosNew = p.getCaret();\n                if (oldVal !== newVal) {\n                    var caretPosOld = el.data('mask-previus-caret-pos') || 0,\n                        newValL = newVal.length,\n                        oldValL = oldVal.length,\n                        maskDigitsBeforeCaret = 0,\n                        maskDigitsAfterCaret = 0,\n                        maskDigitsBeforeCaretAll = 0,\n                        maskDigitsBeforeCaretAllOld = 0,\n                        i = 0;\n\n                    for (i = caretPosNew; i < newValL; i++) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsAfterCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsBeforeCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMap[i]) {\n                            maskDigitsBeforeCaretAll++;\n                        }\n                    }\n\n                    for (i = caretPosOld - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMapOld[i]) {\n                            maskDigitsBeforeCaretAllOld++;\n                        }\n                    }\n\n                    // if the cursor is at the end keep it there\n                    if (caretPosNew > oldValL) {\n                      caretPosNew = newValL * 10;\n                    } else if (caretPosOld >= caretPosNew && caretPosOld !== oldValL) {\n                        if (!p.maskDigitPosMapOld[caretPosNew])  {\n                          var caretPos = caretPosNew;\n                          caretPosNew -= maskDigitsBeforeCaretAllOld - maskDigitsBeforeCaretAll;\n                          caretPosNew -= maskDigitsBeforeCaret;\n                          if (p.maskDigitPosMap[caretPosNew])  {\n                            caretPosNew = caretPos;\n                          }\n                        }\n                    }\n                    else if (caretPosNew > caretPosOld) {\n                        caretPosNew += maskDigitsBeforeCaretAll - maskDigitsBeforeCaretAllOld;\n                        caretPosNew += maskDigitsAfterCaret;\n                    }\n                }\n                return caretPosNew;\n            },\n            behaviour: function(e) {\n                e = e || window.event;\n                p.invalid = [];\n\n                var keyCode = el.data('mask-keycode');\n\n                if ($.inArray(keyCode, jMask.byPassKeys) === -1) {\n                    var newVal = p.getMasked(),\n                        caretPos = p.getCaret(),\n                        oldVal = el.data('mask-previus-value') || '';\n\n                    // this is a compensation to devices/browsers that don't compensate\n                    // caret positioning the right way\n                    setTimeout(function() {\n                      p.setCaret(p.calculateCaretPosition(oldVal));\n                    }, $.jMaskGlobals.keyStrokeCompensation);\n\n                    p.val(newVal);\n                    p.setCaret(caretPos);\n                    return p.callbacks(e);\n                }\n            },\n            getMasked: function(skipMaskChars, val) {\n                var buf = [],\n                    value = val === undefined ? p.val() : val + '',\n                    m = 0, maskLen = mask.length,\n                    v = 0, valLen = value.length,\n                    offset = 1, addMethod = 'push',\n                    resetPos = -1,\n                    maskDigitCount = 0,\n                    maskDigitPosArr = [],\n                    lastMaskChar,\n                    check;\n\n                if (options.reverse) {\n                    addMethod = 'unshift';\n                    offset = -1;\n                    lastMaskChar = 0;\n                    m = maskLen - 1;\n                    v = valLen - 1;\n                    check = function () {\n                        return m > -1 && v > -1;\n                    };\n                } else {\n                    lastMaskChar = maskLen - 1;\n                    check = function () {\n                        return m < maskLen && v < valLen;\n                    };\n                }\n\n                var lastUntranslatedMaskChar;\n                while (check()) {\n                    var maskDigit = mask.charAt(m),\n                        valDigit = value.charAt(v),\n                        translation = jMask.translation[maskDigit];\n\n                    if (translation) {\n                        if (valDigit.match(translation.pattern)) {\n                            buf[addMethod](valDigit);\n                             if (translation.recursive) {\n                                if (resetPos === -1) {\n                                    resetPos = m;\n                                } else if (m === lastMaskChar && m !== resetPos) {\n                                    m = resetPos - offset;\n                                }\n\n                                if (lastMaskChar === resetPos) {\n                                    m -= offset;\n                                }\n                            }\n                            m += offset;\n                        } else if (valDigit === lastUntranslatedMaskChar) {\n                            // matched the last untranslated (raw) mask character that we encountered\n                            // likely an insert offset the mask character from the last entry; fall\n                            // through and only increment v\n                            maskDigitCount--;\n                            lastUntranslatedMaskChar = undefined;\n                        } else if (translation.optional) {\n                            m += offset;\n                            v -= offset;\n                        } else if (translation.fallback) {\n                            buf[addMethod](translation.fallback);\n                            m += offset;\n                            v -= offset;\n                        } else {\n                          p.invalid.push({p: v, v: valDigit, e: translation.pattern});\n                        }\n                        v += offset;\n                    } else {\n                        if (!skipMaskChars) {\n                            buf[addMethod](maskDigit);\n                        }\n\n                        if (valDigit === maskDigit) {\n                            maskDigitPosArr.push(v);\n                            v += offset;\n                        } else {\n                            lastUntranslatedMaskChar = maskDigit;\n                            maskDigitPosArr.push(v + maskDigitCount);\n                            maskDigitCount++;\n                        }\n\n                        m += offset;\n                    }\n                }\n\n                var lastMaskCharDigit = mask.charAt(lastMaskChar);\n                if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {\n                    buf.push(lastMaskCharDigit);\n                }\n\n                var newVal = buf.join('');\n                p.mapMaskdigitPositions(newVal, maskDigitPosArr, valLen);\n                return newVal;\n            },\n            mapMaskdigitPositions: function(newVal, maskDigitPosArr, valLen) {\n              var maskDiff = options.reverse ? newVal.length - valLen : 0;\n              p.maskDigitPosMap = {};\n              for (var i = 0; i < maskDigitPosArr.length; i++) {\n                p.maskDigitPosMap[maskDigitPosArr[i] + maskDiff] = 1;\n              }\n            },\n            callbacks: function (e) {\n                var val = p.val(),\n                    changed = val !== oldValue,\n                    defaultArgs = [val, e, el, options],\n                    callback = function(name, criteria, args) {\n                        if (typeof options[name] === 'function' && criteria) {\n                            options[name].apply(this, args);\n                        }\n                    };\n\n                callback('onChange', changed === true, defaultArgs);\n                callback('onKeyPress', changed === true, defaultArgs);\n                callback('onComplete', val.length === mask.length, defaultArgs);\n                callback('onInvalid', p.invalid.length > 0, [val, e, el, p.invalid, options]);\n            }\n        };\n\n        el = $(el);\n        var jMask = this, oldValue = p.val(), regexMask;\n\n        mask = typeof mask === 'function' ? mask(p.val(), undefined, el,  options) : mask;\n\n        // public methods\n        jMask.mask = mask;\n        jMask.options = options;\n        jMask.remove = function() {\n            var caret = p.getCaret();\n            if (jMask.options.placeholder) {\n                el.removeAttr('placeholder');\n            }\n            if (el.data('mask-maxlength')) {\n                el.removeAttr('maxlength');\n            }\n            p.destroyEvents();\n            p.val(jMask.getCleanVal());\n            p.setCaret(caret);\n            return el;\n        };\n\n        // get value without mask\n        jMask.getCleanVal = function() {\n           return p.getMasked(true);\n        };\n\n        // get masked value without the value being in the input or element\n        jMask.getMaskedVal = function(val) {\n           return p.getMasked(false, val);\n        };\n\n       jMask.init = function(onlyMask) {\n            onlyMask = onlyMask || false;\n            options = options || {};\n\n            jMask.clearIfNotMatch  = $.jMaskGlobals.clearIfNotMatch;\n            jMask.byPassKeys       = $.jMaskGlobals.byPassKeys;\n            jMask.translation      = $.extend({}, $.jMaskGlobals.translation, options.translation);\n\n            jMask = $.extend(true, {}, jMask, options);\n\n            regexMask = p.getRegexMask();\n\n            if (onlyMask) {\n                p.events();\n                p.val(p.getMasked());\n            } else {\n                if (options.placeholder) {\n                    el.attr('placeholder' , options.placeholder);\n                }\n\n                // this is necessary, otherwise if the user submit the form\n                // and then press the \"back\" button, the autocomplete will erase\n                // the data. Works fine on IE9+, FF, Opera, Safari.\n                if (el.data('mask')) {\n                  el.attr('autocomplete', 'off');\n                }\n\n                // detect if is necessary let the user type freely.\n                // for is a lot faster than forEach.\n                for (var i = 0, maxlength = true; i < mask.length; i++) {\n                    var translation = jMask.translation[mask.charAt(i)];\n                    if (translation && translation.recursive) {\n                        maxlength = false;\n                        break;\n                    }\n                }\n\n                if (maxlength) {\n                    el.attr('maxlength', mask.length).data('mask-maxlength', true);\n                }\n\n                p.destroyEvents();\n                p.events();\n\n                var caret = p.getCaret();\n                p.val(p.getMasked());\n                p.setCaret(caret);\n            }\n        };\n\n        jMask.init(!el.is('input'));\n    };\n\n    $.maskWatchers = {};\n    var HTMLAttributes = function () {\n        var input = $(this),\n            options = {},\n            prefix = 'data-mask-',\n            mask = input.attr('data-mask');\n\n        if (input.attr(prefix + 'reverse')) {\n            options.reverse = true;\n        }\n\n        if (input.attr(prefix + 'clearifnotmatch')) {\n            options.clearIfNotMatch = true;\n        }\n\n        if (input.attr(prefix + 'selectonfocus') === 'true') {\n           options.selectOnFocus = true;\n        }\n\n        if (notSameMaskObject(input, mask, options)) {\n            return input.data('mask', new Mask(this, mask, options));\n        }\n    },\n    notSameMaskObject = function(field, mask, options) {\n        options = options || {};\n        var maskObject = $(field).data('mask'),\n            stringify = JSON.stringify,\n            value = $(field).val() || $(field).text();\n        try {\n            if (typeof mask === 'function') {\n                mask = mask(value);\n            }\n            return typeof maskObject !== 'object' || stringify(maskObject.options) !== stringify(options) || maskObject.mask !== mask;\n        } catch (e) {}\n    },\n    eventSupported = function(eventName) {\n        var el = document.createElement('div'), isSupported;\n\n        eventName = 'on' + eventName;\n        isSupported = (eventName in el);\n\n        if ( !isSupported ) {\n            el.setAttribute(eventName, 'return;');\n            isSupported = typeof el[eventName] === 'function';\n        }\n        el = null;\n\n        return isSupported;\n    };\n\n    $.fn.mask = function(mask, options) {\n        options = options || {};\n        var selector = this.selector,\n            globals = $.jMaskGlobals,\n            interval = globals.watchInterval,\n            watchInputs = options.watchInputs || globals.watchInputs,\n            maskFunction = function() {\n                if (notSameMaskObject(this, mask, options)) {\n                    return $(this).data('mask', new Mask(this, mask, options));\n                }\n            };\n\n        $(this).each(maskFunction);\n\n        if (selector && selector !== '' && watchInputs) {\n            clearInterval($.maskWatchers[selector]);\n            $.maskWatchers[selector] = setInterval(function(){\n                $(document).find(selector).each(maskFunction);\n            }, interval);\n        }\n        return this;\n    };\n\n    $.fn.masked = function(val) {\n        return this.data('mask').getMaskedVal(val);\n    };\n\n    $.fn.unmask = function() {\n        clearInterval($.maskWatchers[this.selector]);\n        delete $.maskWatchers[this.selector];\n        return this.each(function() {\n            var dataMask = $(this).data('mask');\n            if (dataMask) {\n                dataMask.remove().removeData('mask');\n            }\n        });\n    };\n\n    $.fn.cleanVal = function() {\n        return this.data('mask').getCleanVal();\n    };\n\n    $.applyDataMask = function(selector) {\n        selector = selector || $.jMaskGlobals.maskElements;\n        var $selector = (selector instanceof $) ? selector : $(selector);\n        $selector.filter($.jMaskGlobals.dataMaskAttr).each(HTMLAttributes);\n    };\n\n    var globals = {\n        maskElements: 'input,td,span,div',\n        dataMaskAttr: '*[data-mask]',\n        dataMask: true,\n        watchInterval: 300,\n        watchInputs: true,\n        keyStrokeCompensation: 10,\n        // old versions of chrome dont work great with input event\n        useInput: !/Chrome\\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && eventSupported('input'),\n        watchDataMask: false,\n        byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91],\n        translation: {\n            '0': {pattern: /\\d/},\n            '9': {pattern: /\\d/, optional: true},\n            '#': {pattern: /\\d/, recursive: true},\n            'A': {pattern: /[a-zA-Z0-9]/},\n            'S': {pattern: /[a-zA-Z]/}\n        }\n    };\n\n    $.jMaskGlobals = $.jMaskGlobals || {};\n    globals = $.jMaskGlobals = $.extend(true, {}, globals, $.jMaskGlobals);\n\n    // looking for inputs with data-mask attribute\n    if (globals.dataMask) {\n        $.applyDataMask();\n    }\n\n    setInterval(function() {\n        if ($.jMaskGlobals.watchDataMask) {\n            $.applyDataMask();\n        }\n    }, globals.watchInterval);\n}, window.jQuery, window.Zepto));\n\ncoreuiForm$1.fields.mask = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'mask',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        value = value.replace(/[^\\d\\w]/g, '');\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'text';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : ''\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' input')\r\n            .mask(this._options.mask, this._options.options);\r\n    }\r\n};\n\ncoreuiForm$1.fields.modal = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: '',\r\n    _text: '',\r\n    _options: {\r\n        type: 'modal',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        fields: [],\r\n        options: {\r\n            title: '',\r\n            size: 'lg',\r\n            url: '',\r\n            onHidden: null,\r\n            onClear: null,\r\n            onChange: null,\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n\r\n        if (typeof options.name === 'string' &&\r\n            formRecord.hasOwnProperty(options.name) &&\r\n            ['object'].indexOf(typeof formRecord[options.name]) >= 0\r\n        ) {\r\n            let record = formRecord[options.name];\r\n\r\n            this._value = record.hasOwnProperty('value') && ['number', 'string'].indexOf(typeof(record.value)) >= 0 ? record.value : '';\r\n            this._text  = record.hasOwnProperty('text') && ['number', 'string'].indexOf(typeof(record.text)) >= 0 ? record.text : '';\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input.coreui-form-modal-value').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     * @param {string} text\r\n     */\r\n    setValue: function (value, text) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(text);\r\n\r\n        } else {\r\n            let elementValue = $('.content-' + this._hash + ' .coreui-form-modal-value');\r\n            let elementText  = $('.content-' + this._hash + ' .coreui-form-modal-text');\r\n            let oldValue     = elementValue.val();\r\n\r\n            elementValue.val(value);\r\n            elementText.val(text);\r\n\r\n\r\n            if (oldValue != value) {\r\n                let modal = this._options.hasOwnProperty('options') && typeof (this._options.options) === 'object'\r\n                    ? this._options.options\r\n                    : {};\r\n\r\n                if (modal.hasOwnProperty('onChange')) {\r\n                    if (typeof(modal.onChange) === 'function') {\r\n                        modal.onChange(this);\r\n\r\n                    } else if (typeof(modal.onChange) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onChange);\r\n\r\n                        if (typeof func === 'function') {\r\n                            func(this);\r\n                        } else {\r\n                            eval(modal.onChange);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this._form._trigger('change-modal.coreui.form', this, [this]);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fieldOptions = this.getOptions();\r\n        let attributes   = [];\r\n        let textAttr     = {\r\n            type: 'text',\r\n            readonly: 'readonly',\r\n            class: 'form-control form-control-sm coreui-form-modal-text',\r\n            value: this._text !== null ? this._text : ''\r\n        };\r\n\r\n        if (fieldOptions.required) {\r\n            textAttr.required = 'required';\r\n        }\r\n\r\n        if (fieldOptions.hasOwnProperty('attr') &&\r\n            typeof fieldOptions.attr === 'object' &&\r\n            Array.isArray(fieldOptions.attr)\r\n        ) {\r\n            textAttr = coreuiFormUtils$1.mergeAttr(textAttr, fieldOptions.attr);\r\n        }\r\n\r\n        $.each(textAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/modal.html'], {\r\n            field: fieldOptions,\r\n            value: this._value !== null ? this._value : '',\r\n            text: this._text !== null ? this._text : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                width: this._options.width,\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that  = this;\r\n        let modal = this._options.hasOwnProperty('options') && typeof(this._options.options) === 'object'\r\n            ? this._options.options\r\n            : {};\r\n\r\n\r\n        // Очистка\r\n        $('.content-' + this._hash + ' .btn-modal-clear').click(function (e) {\r\n            if (modal.hasOwnProperty('onClear')) {\r\n                if (typeof(modal.onClear) === 'function') {\r\n                    modal.onClear(that);\r\n\r\n                } else if (typeof(modal.onClear) === 'string') {\r\n                    let func = coreuiFormUtils$1.getFunctionByName(modal.onClear);\r\n\r\n                    if (typeof func === 'function') {\r\n                        func(that);\r\n                    } else {\r\n                        eval(modal.onClear);\r\n                    }\r\n                }\r\n            }\r\n\r\n            that._form._trigger('clear-modal.coreui.form', that, [ that, e ]);\r\n\r\n            that.setValue('', '');\r\n        });\r\n\r\n        // Выбор\r\n        $('.content-' + this._hash + ' .btn-modal-select').click(function (e) {\r\n            let title = modal.hasOwnProperty('title') && typeof(modal.title) === 'string'\r\n                ? modal.title\r\n                : '';\r\n\r\n            let size = modal.hasOwnProperty('size') && typeof(modal.size) === 'string'\r\n                ? modal.size\r\n                : 'lg';\r\n\r\n            let url = modal.hasOwnProperty('url') && typeof(modal.url) === 'string'\r\n                ? modal.url\r\n                : '';\r\n\r\n            if ( ! url) {\r\n                return;\r\n            }\r\n\r\n\r\n            let modalId      = coreuiFormUtils$1.hashCode();\r\n            let modalLoading = ejs.render(tpl['fields/modal-loading.html'], {\r\n                lang: that._form.getLang(),\r\n            });\r\n\r\n\r\n            if (CoreUI.hasOwnProperty('modal')) {\r\n                let onShow   = null;\r\n                let onHidden = null;\r\n\r\n                if (modal.hasOwnProperty('onHidden')) {\r\n                    if (typeof(modal.onHidden) === 'function') {\r\n                        onHidden = modal.onHidden;\r\n\r\n                    } else if (typeof(modal.onHidden) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onHidden);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onHidden = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (modal.hasOwnProperty('onShow')) {\r\n                    if (typeof(modal.onShow) === 'function') {\r\n                        onShow = modal.onShow;\r\n\r\n                    } else if (typeof(modal.onShow) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onShow);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onShow = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                CoreUI.modal.show(title, modalLoading, {\r\n                    id: modalId,\r\n                    size: size,\r\n                    onShow: onShow,\r\n                    onHidden: onHidden\r\n                });\r\n            }\r\n\r\n            $.ajax({\r\n                url: url,\r\n                method: 'GET',\r\n                beforeSend: function(xhr) {\r\n                    that._form._trigger('before-load-modal.coreui.form', that, [ that, xhr ]);\r\n                },\r\n                success: function (result) {\r\n                    $('#modal-' + modalId + ' .modal-body').html(result);\r\n                    that._form._trigger('success-load-modal.coreui.form', that, [ that, result ]);\r\n                },\r\n                error: function(xhr, textStatus, errorThrown) {\r\n                    that._form._trigger('error-load-modal.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n                },\r\n                complete: function(xhr, textStatus) {\r\n                    that._form._trigger('complete-load-modal.coreui.form', that, [ that, xhr, textStatus ]);\r\n                },\r\n            });\r\n\r\n\r\n            that._form._trigger('select-modal.coreui.form', that, [ that, e ]);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.number = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'number',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block',\r\n            step: 'any'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null,\r\n        precision: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        // Установка точности\r\n        if (this._options.precision === null) {\r\n            let precision = 0;\r\n\r\n            if (this._options.attr.hasOwnProperty('step') &&\r\n                this._options.attr.step !== 'any' &&\r\n                ['string', 'number'].indexOf(typeof this._options.attr.step) >= 0\r\n            ) {\r\n                let match = $.trim(this._options.attr.step.toString()).match(/\\.(\\d+)$/);\r\n\r\n                if (match && match.hasOwnProperty(1)) {\r\n                    precision = match ? match[1].length : precision;\r\n                }\r\n            }\r\n\r\n            this._options.precision = precision;\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0 ||\r\n            ! value.toString().match(/^\\-?\\d+\\.?\\d*$/)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.precision >= 0) {\r\n            value = coreuiFormUtils$1.round(value, this._options.precision);\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('min')) {\r\n            value = value < Number(this._options.attr.min)\r\n                ? Number(this._options.attr.min)\r\n                : value;\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('max')) {\r\n            value = value > Number(this._options.attr.max)\r\n                ? Number(this._options.attr.max)\r\n                : value;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = $.extend(true, {}, this._options);\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'number';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('.content-' + this._hash + ' input').keydown(function (e) {\r\n            let k = e.keyCode || e.which;\r\n            let ok = k >= 35 && k <= 40 ||      // arrows\r\n                k >= 96 && k <= 105 ||     // 0-9 numpad\r\n                k === 189 || k === 109 ||  // minus\r\n                k === 110 || k === 190 ||  // dot\r\n                k === 9 ||  //tab\r\n                k === 46 || //del\r\n                k === 8 ||  // backspaces\r\n                ( ! e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)\r\n\r\n            if ( ! ok || (e.ctrlKey && e.altKey)) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' input').blur(function (e) {\r\n            let value = $(this).val();\r\n\r\n            if (that._options.precision >= 0) {\r\n                value = coreuiFormUtils$1.round(value, that._options.precision);\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('min')) {\r\n                value = value < Number(that._options.attr.min)\r\n                    ? Number(that._options.attr.min)\r\n                    : value;\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('max')) {\r\n                value = value > Number(that._options.attr.max)\r\n                    ? Number(that._options.attr.max)\r\n                    : value;\r\n            }\r\n\r\n            $(this).val(value);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.radio = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'radio',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input[type=radio]:checked').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            let that         = this;\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options)\r\n            ) {\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value') && option.value == value) {\r\n                        let text = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                            ? option.text\r\n                            : '';\r\n\r\n                        $('.content-' + that._hash).text(text);\r\n                        that._value = value;\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n\r\n        } else {\r\n            let input = $('.content-' + this._hash + ' input[type=radio][value=\"' + value + '\"]');\r\n\r\n            if (input[0]) {\r\n                input.prop('checked', true);\r\n                this._value = value;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            let value = this.getValue();\r\n            return typeof value === 'string' && value !== '';\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that         = this;\r\n        let radioOptions = [];\r\n        let fieldOptions = this.getOptions();\r\n        let selectedItem = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'radio',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText   = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils$1.hashCode();\r\n\r\n                if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItem.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                radioOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        return ejs.render(tpl['fields/radio.html'], {\r\n            field: fieldOptions,\r\n            value: this._value,\r\n            render: {\r\n                options: radioOptions,\r\n                selectedItem: selectedItem\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.range = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'range',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-range d-inline-block pt-1'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'range';\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.select = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'select',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @returns {array|string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            if (this._options.hasOwnProperty('attr') &&\r\n                typeof this._options.attr === 'object' &&\r\n                this._options.attr !== null &&\r\n                ! Array.isArray(this._options.attr) &&\r\n                this._options.attr.hasOwnProperty('multiple')\r\n            ) {\r\n                let values = [];\r\n\r\n                $('.content-' + this._hash + ' select option:selected').each(function () {\r\n                    values.push($(this).val());\r\n                });\r\n\r\n                return values;\r\n\r\n            } else {\r\n                return $('.content-' + this._hash + ' select option:selected').val()\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' select > option').prop('selected', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' select > option').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('selected', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let select    = $('select', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            select.removeClass('is-invalid');\r\n            select.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            select.removeClass('is-invalid');\r\n            select.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            select.removeClass('is-valid');\r\n            select.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let select = $('.content-' + this._hash + ' select');\r\n\r\n        if (this._options.required && select.val() === '') {\r\n            return false;\r\n        }\r\n\r\n        if (select[0]) {\r\n            return select.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let that          = this;\r\n        let options       = this.getOptions();\r\n        let attributes    = [];\r\n        let selectOptions = [];\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            options.options !== null\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n\r\n                if (typeof option === 'string' || typeof option === 'number') {\r\n                    selectOptions.push(that._renderOption({\r\n                        type: 'option',\r\n                        value: key,\r\n                        text: option\r\n                    }));\r\n\r\n                } else if (typeof option === 'object') {\r\n                    let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                        ? option.type\r\n                        : 'option';\r\n\r\n                    if (type === 'group') {\r\n                        let renderAttr   = [];\r\n                        let groupAttr    = {};\r\n                        let groupOptions = [];\r\n\r\n                        if (option.hasOwnProperty('attr') &&\r\n                            typeof option.attr === 'object' &&\r\n                            option.attr !== null &&\r\n                            ! Array.isArray(option.attr)\r\n                        ) {\r\n                            groupAttr = option.attr;\r\n                        }\r\n\r\n                        if (option.hasOwnProperty('label') && ['string', 'number'].indexOf(typeof(option.label)) >= 0) {\r\n                            groupAttr.label = option.label;\r\n                        }\r\n\r\n                        $.each(groupAttr, function (name, value) {\r\n                            renderAttr.push(name + '=\"' + value + '\"');\r\n                        });\r\n\r\n                        if (Array.isArray(option.options)) {\r\n                            $.each(option.options, function (key, groupOption) {\r\n                                groupOptions.push(that._renderOption(groupOption));\r\n                            });\r\n                        }\r\n\r\n                        selectOptions.push({\r\n                            type: 'group',\r\n                            attr: renderAttr.length > 0 ? (' ' + renderAttr.join(' ')) : '',\r\n                            options: groupOptions,\r\n                        });\r\n\r\n                    } else {\r\n                        selectOptions.push(that._renderOption(option));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                options: selectOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let that            = this;\r\n        let options         = this.getOptions();\r\n        let selectedOptions = [];\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                    ? option.type\r\n                    : 'option';\r\n\r\n                if (type === 'group') {\r\n                    if (Array.isArray(option.options)) {\r\n                        $.each(option.options, function (key, groupOption) {\r\n                            let optionText = groupOption.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(groupOption.text)) >= 0\r\n                                ? groupOption.text\r\n                                : '';\r\n\r\n                            if ( ! optionText || optionText === '') {\r\n                                return;\r\n                            }\r\n\r\n                            if (Array.isArray(that._value)) {\r\n                                $.each(that._value, function (key, itemValue) {\r\n                                    if (itemValue == groupOption.value) {\r\n                                        selectedOptions.push(optionText);\r\n                                        return false;\r\n                                    }\r\n                                });\r\n\r\n                            } else if (that._value == groupOption.value) {\r\n                                selectedOptions.push(optionText);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                } else {\r\n                    let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                        ? option.text\r\n                        : '';\r\n\r\n                    if ( ! optionText || optionText === '') {\r\n                        return;\r\n                    }\r\n\r\n                    if (Array.isArray(that._value)) {\r\n                        $.each(that._value, function (key, itemValue) {\r\n                            if (itemValue == option.value) {\r\n                                selectedOptions.push(optionText);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (that._value == option.value) {\r\n                        selectedOptions.push(optionText);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            render: {\r\n                selectedOptions: selectedOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Сборка опции\r\n     * @param option\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _renderOption: function (option) {\r\n\r\n        let optionAttr = [];\r\n        let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n            ? option.text\r\n            : '';\r\n\r\n        $.each(option, function (name, value) {\r\n            if (name !== 'text') {\r\n                optionAttr.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n\r\n        if (Array.isArray(this._value)) {\r\n            $.each(this._value, function (key, itemValue) {\r\n                if (itemValue == option.value) {\r\n                    optionAttr.push('selected=\"selected\"');\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        } else if (this._value == option.value) {\r\n            optionAttr.push('selected=\"selected\"');\r\n        }\r\n\r\n        return {\r\n            type: 'option',\r\n            text: optionText,\r\n            attr: optionAttr.length > 0 ? (' ' + optionAttr.join(' ')) : ''\r\n        };\r\n    }\r\n};\n\ncoreuiForm$1.fields.switch = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'switch',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        valueY: 'Y',\r\n        valueN: 'N',\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=checkbox]').prop('checked', value === this._options.valueY);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container       = $('.content-' + this._hash);\r\n        let switchContainer = $('.form-switch', container);\r\n        let inputs          = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n        let itemAttr   = {\r\n            type: 'checkbox',\r\n            class: 'form-check-input',\r\n            value: options.valueY\r\n        };\r\n\r\n\r\n        if (options.name) {\r\n            itemAttr.name = this._options.name;\r\n        }\r\n\r\n        if (options.required) {\r\n            itemAttr.required = 'required';\r\n        }\r\n\r\n        if (options.hasOwnProperty('attr') &&\r\n            typeof options.attr === 'object' &&\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            itemAttr = coreuiFormUtils$1.mergeAttr(itemAttr, options.attr);\r\n        }\r\n\r\n        if (this._value === options.valueY) {\r\n            itemAttr.checked = 'checked';\r\n        }\r\n\r\n        $.each(itemAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/switch.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.textarea = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'textarea',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' textarea').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' textarea').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let textarea  = $('textarea', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            textarea.removeClass('is-valid');\r\n            textarea.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' textarea');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/textarea.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.wysiwyg = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _editor: null,\r\n    _editorHash: null,\r\n    _options: {\r\n        type: 'wysiwyg',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        height: null,\r\n        minHeight: null,\r\n        maxHeight: null,\r\n        options: {},\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        readonly: false,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form       = form;\r\n        this._index      = index;\r\n        this._id         = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash       = coreuiFormUtils$1.hashCode();\r\n        this._editorHash = coreuiFormUtils$1.hashCode();\r\n        this._value      = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options    = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @return {string|null}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        } else {\r\n            return this._editor ? this._editor.getContent() : this._value;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            if (this._editor) {\r\n                this._editor.setContent(value);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/wysiwyg.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            editorHash: this._editorHash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let tinyMceOptions = {};\r\n        let than           = this;\r\n        let textareaId     = 'editor-' + this._editorHash;\r\n\r\n        if (typeof this._options.options === 'object' &&\r\n            ! Array.isArray(this._options.options) &&\r\n            Object.keys(this._options.options).length > 0\r\n        ) {\r\n            tinyMceOptions = this._options.options;\r\n\r\n        } else if (this._options.options === 'simple') {\r\n            tinyMceOptions = {\r\n                plugins: 'image lists anchor charmap',\r\n                toolbar: 'blocks | bold italic underline | alignleft aligncenter ' +\r\n                         'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                         'forecolor backcolor removeformat',\r\n                menubar: false,\r\n                branding: false\r\n            };\r\n\r\n        } else {\r\n            tinyMceOptions = {\r\n                promotion: false,\r\n                branding: false,\r\n                plugins: 'preview importcss searchreplace autolink autosave save directionality code ' +\r\n                         'visualblocks visualchars fullscreen image link media template codesample table ' +\r\n                         'charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',\r\n                menubar: 'file edit view insert format tools table help',\r\n                toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | ' +\r\n                         'alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | ' +\r\n                         'forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen ' +\r\n                         'preview save print | insertfile image media template link anchor codesample | ltr rtl',\r\n            };\r\n        }\r\n\r\n        tinyMceOptions.selector = '#editor-' + this._editorHash;\r\n\r\n        if (['string', 'number'].indexOf(typeof this._options.width) >= 0) {\r\n            tinyMceOptions.width = this._options.width;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minWidth) >= 0) {\r\n            tinyMceOptions.min_width = this._options.minWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxWidth) >= 0) {\r\n            tinyMceOptions.max_width = this._options.maxWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.height) >= 0) {\r\n            tinyMceOptions.height = this._options.height;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minHeight) >= 0) {\r\n            tinyMceOptions.min_height = this._options.minHeight;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxHeight) >= 0) {\r\n            tinyMceOptions.max_height = this._options.maxHeight;\r\n        }\r\n\r\n        tinymce.init(tinyMceOptions).then(function () {\r\n            than._editor = tinymce.get(textareaId);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.passwordRepeat = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _isChangeState: true,\r\n    _value: '',\r\n    _options: {\r\n        type: 'password',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            type: 'password',\r\n            class: 'form-control form-control-sm d-inline-block flex-shrink-0'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        showBtn: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        }\r\n\r\n        let pass = $('.content-' + this._hash + ' input[type=\"password\"]').eq(0);\r\n\r\n        if (typeof pass.attr('disabled') !== 'undefined' && pass.attr('disabled') !== false) {\r\n            return '';\r\n        }\r\n\r\n        return pass.val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value ? '******' : '');\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=\"password\"]').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input[type=\"password\"]', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        if ( ! this._isChangeState || this._options.readonly) {\r\n            return true;\r\n        }\r\n\r\n        let input = $('.content-' + this._hash + ' input[type=\"password\"]');\r\n\r\n        if (input.eq(0).val() !== input.eq(1).val()) {\r\n            return false;\r\n        }\r\n\r\n        if (input[0]) {\r\n            return input.eq(0).is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes  = [];\r\n        let attributes2 = [];\r\n        let datalist    = [];\r\n        let options     = this.getOptions();\r\n\r\n        this._isChangeState = ! options.showBtn\r\n            ? true\r\n            : ! this._value;\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if ( ! this._isChangeState) {\r\n            options.attr.disabled = '';\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.value = this._value ? '******' : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n        $.each(options.attr, function (name, value) {\r\n            if (['name', 'value'].indexOf(name) < 0) {\r\n                attributes2.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n        let lang = this._form.getLang();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: lang,\r\n            btn_text: this._isChangeState ? lang.cancel : lang.change,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                attr2: attributes2.length > 0 ? (' ' + attributes2.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value ? '******' : '',\r\n            hash: this._hash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' .btn-password-change').click(function (e) {\r\n            let textChange = $(this).data('change');\r\n            let textCancel = $(this).data('cancel');\r\n\r\n            if (that._isChangeState) {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').attr('disabled', 'disabled');\r\n                $(this).text(textChange);\r\n                that._isChangeState = false;\r\n\r\n            } else {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').removeAttr('disabled');\r\n                $(this).text(textCancel);\r\n                that._isChangeState = true;\r\n            }\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.file = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'file',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {File[]}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input')[0].files;\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {File|File[]} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if ( ! (value instanceof File) &&  ! (value instanceof FileList)) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text('');\r\n        } else {\r\n            let container = new DataTransfer();\r\n\r\n            if (value instanceof File) {\r\n                container.items.add(value);\r\n\r\n            } else {\r\n                $.each(value, function (key, file) {\r\n                    if (value instanceof File) {\r\n                        container.items.add(file);\r\n                    }\r\n                });\r\n            }\r\n\r\n            $('.content-' + this._hash + ' input')[0].files = container.files;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils$1.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils$1.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils$1.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils$1.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\nreturn coreuiForm$1;\n\n})));\n"]}