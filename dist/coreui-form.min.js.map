{"version":3,"sources":["coreui-form.min.js"],"names":["global","factory","exports","module","define","amd","CoreUI","form","this","f","window","self","ejs","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","fs","path","utils","scopeOptionWarned","_VERSION_STRING","version","_DEFAULT_LOCALS_NAME","_OPTS_PASSABLE_WITH_DATA","_OPTS_PASSABLE_WITH_DATA_EXPRESS","concat","_BOM","_JS_IDENTIFIER","resolvePaths","name","paths","filePath","some","v","resolveInclude","existsSync","handleCache","options","template","func","filename","hasTemplate","arguments","cache","get","fileLoader","toString","replace","compile","set","includeFile","opts","shallowCopy","createNullProtoObjWherePossible","includePath","views","match","exec","Array","isArray","root","includer","escapeFunction","includerResult","rethrow","err","str","flnm","lineno","esc","lines","split","start","Math","max","end","min","context","slice","map","line","curr","join","message","stripSemi","Template","text","templateText","mode","truncate","currentLine","source","client","escape","escapeXML","compileDebug","debug","openDelimiter","closeDelimiter","delimiter","strict","rmWhitespace","outputFunctionName","localsName","async","destructuredLocals","legacyInclude","_with","regex","createRegex","readFileSync","promiseImpl","Function","Promise","isDir","dirname","extname","resolve","scope","console","warn","render","d","data","shallowCopyFromList","renderFile","cb","result","args","prototype","shift","pop","settings","viewOpts","reject","clearCache","reset","modes","EVAL","ESCAPED","RAW","COMMENT","LITERAL","delim","escapeRegExpChars","open","close","RegExp","fn","prepended","appended","escapeFn","sanitizedFilename","JSON","stringify","generateSource","test","destructuring","src","log","ctor","SyntaxError","returnedFn","apply","includeData","Object","defineProperty","basename","value","writable","enumerable","configurable","matches","parseTemplateText","forEach","index","indexOf","closing","scanLine","firstPos","pat","arr","push","substring","_addOutput","newLineCount","lastIndexOf","__express","VERSION","../package.json","./utils","2","hasOwn","obj","key","hasOwnProperty","regExpChars","_ENCODE_HTML_RULES","string","String","&","<",">","\"","'","_MATCH_HTML","encode_char","escapeXMLToString","markup","undefined","to","from","list","_data","val","remove","hyphenToCamel","toUpperCase","create","__proto__","3","4","process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","resolvedPath","resolvedAbsolute","cwd","TypeError","charAt","normalize","isAbsolute","trailingSlash","substr","relative","trim","fromParts","toParts","samePartsLength","outputParts","sep","hasRoot","charCodeAt","matchedSlash","ext","startDot","startPart","preDotState","len","_process","5","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","marker","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","6","description","keywords","author","license","bin","main","jsdelivr","unpkg","repository","type","url","bugs","homepage","dependencies","jake","devDependencies","browserify","eslint","git-directory-deploy","jsdoc","lru-cache","mocha","uglify-js","engines","node","scripts","let","tpl","coreuiFormUtils$1","getFieldValue","formRecord","getRecord","fieldOptions","getFunctionByName","functionName","namespaces","mergeFieldOptions","defaultOptions","$","attr","mergeAttr","extend","width","_options","fieldWidth","unit","labelWidth","attr2","each","tryHandleCache","getAttacheFields","fields","field","instance","hash","_hash","direction","fieldsDirection","formatDate","templ","day","month","Date","date","getMonth","getDate","year","formatDateTime","getHours","getSeconds","formatDateMonth","lang","getFullYear","date_months","formatDateWeek","isNumeric","num","isNaN","hashCode","crc32","getTime","random","round","number","precision","pow","parseInt","coreuiFormInstance","id","send","method","format","minWidth","maxWidth","controlsOffset","readonly","validate","errorClass","layout","onSubmit","record","controls","_lock","_fieldsIndex","_groupsIndex","_controlsIndex","_groups","_fields","_controls","_events","_init","coreuiForm$1","getSetting","include","initEvents","that","formContainer","_trigger","getId","widthSizes","formAttr","matchAll","columns","column","initField","columnsContent","keys","fieldContents","control","initControl","show","content","html","element","domElement","document","getElementById","HTMLElement","innerHTML","lock","controlOptions","getOptions","unlock","isValid","getData","onsubmit","eval","onSubmitResult","results","isStopSend","sendFormat","dataFormat","contentType","FormData","File","append","FileList","file","ajax","beforeSend","xhr","success","jsonResponse","parsedResponse","parse","script","loadUrl","location","error","textStatus","getLang","send_error","responseText","error_message","errorThrown","complete","getValue","getFields","getControls","getGroups","getField","fieldInstance","isReadonly","showControls","hideControls","showError","formError","find","class","dismiss","scroll","scrollTop","offset","top","scrollOffset","hideError","singleExec","eventName","callback","destruct","_instances","renderContent","setValue","hide","init","group","groupInstance","controlInstance","attr1","params","_renderControl","_settings","monthLang","setSettings","ru","modal_loading","switch_yes","switch_no","dataset_add","date_week","required_field","change","cancel","en","modal_select","repeat","button","_form","_index","href","onClick","_initEvents","attributes","duration","prepend","click","event","custom","coreuiFormUtils","submit","removeAttr","checkbox","_id","_value","errorText","errorOptions","required","values","initGroup","empty","option","selectedItems","prop","itemValue","expand","container","inputs","removeClass","errorMessageScrollOffset","addClass","validText","invalidText","lastInput","attachFields","checkboxOptions","itemAttr","optionText","checked","color","label","outContent","datalist","input","datalistId","style","itemAttributes","datalistAttr","_renderContentReadonly","components","alloyComponents","component","_renderOptions","attach","items","valueY","valueN","item","_renderRowReadonly","_eventAdd","removeItems","removeItem","itemId","_renderContent","rows","headers","row","_renderRow","rowOptions","itemOptions","cellValue","cellItemValue","selected","optionValue","showCollapsible","collapse","slideUp","slideDown","is","hashItem","Meteor","jQuery","Zepto","Mask","regexMask","invalid","getCaret","pos","ctrl","el","cSelStart","selectionStart","dSel","navigator","appVersion","sel","createRange","setCaret","range","setSelectionRange","createTextRange","moveEnd","moveStart","select","events","keyCode","which","maskDigitPosMapOld","maskDigitPosMap","jMaskGlobals","useInput","behaviour","keydown","keyup","oldValue","trigger","target","clearIfNotMatch","mask","getRegexMask","pattern","optional","recursive","oRecursive","maskChunks","translation","selection","digit","destroyEvents","calculateCaretPosition","oldVal","newVal","caretPosOld","newValL","oldValL","maskDigitsBeforeCaret","maskDigitsAfterCaret","maskDigitsBeforeCaretAll","maskDigitsBeforeCaretAllOld","selectOnFocus","caretPosNew","jMask","caretPos","isInput","byPassKeys","getMasked","keyStrokeCompensation","callbacks","lastUntranslatedMaskChar","valLen","addMethod","resetPos","maskDigitCount","maskDigitPosArr","m","maskLen","lastMaskChar","maskDigit","valDigit","fallback","skipMaskChars","reverse","lastMaskCharDigit","buf","check","mapMaskdigitPositions","maskDiff","criteria","changed","defaultArgs","placeholder","caret","getCleanVal","getMaskedVal","onlyMask","maxlength","HTMLAttributes","prefix","notSameMaskObject","maskObject","maskWatchers","selector","globals","watchInterval","watchInputs","maskFunction","clearInterval","setInterval","interval","unmask","dataMask","removeData","eventSupported","isSupported","applyDataMask","maskElements","dataMaskAttr","userAgent","watchDataMask","S","cleanVal","$selector","onClear","onChange","modal","_text","size","onHidden","elementValue","elementText","textAttr","modalId","modalLoading","onShow","step","k","Number","selectedItem","radioOptions","shiftKey","ctrlKey","altKey","preventDefault","blur","radio","inline","renderAttr","groupAttr","groupOptions","selectOptions","_renderOption","groupOption","selectedOptions","optionAttr","switchContainer","textarea","wysiwyg","switch","editorHash","tinyMceOptions","textareaId","promotion","plugins","menubar","toolbar","_editorHash","max_height","tinymce","then","than","_editor","_isChangeState","eq","attributes2","btn_text","textCancel","DataTransfer","minHeight","getContent","setContent","branding","min_width","max_width","height","min_height","maxHeight","passwordRepeat","showBtn","disabled","textChange","files","add"],"mappings":"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","file":"coreui-form.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.CoreUI = global.CoreUI || {}, global.CoreUI.form = factory());\n}(this, (function () { 'use strict';\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f();}else if(typeof define===\"function\"&&define.amd){define([],f);}else{var g;if(typeof window!==\"undefined\"){g=window;}else if(typeof global!==\"undefined\"){g=global;}else if(typeof self!==\"undefined\"){g=self;}else{g=this;}g.ejs=f();}})(function(){return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t);}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){\"use strict\";var fs=require(\"fs\");var path=require(\"path\");var utils=require(\"./utils\");var scopeOptionWarned=false;var _VERSION_STRING=require(\"../package.json\").version;var _DEFAULT_OPEN_DELIMITER=\"<\";var _DEFAULT_CLOSE_DELIMITER=\">\";var _DEFAULT_DELIMITER=\"%\";var _DEFAULT_LOCALS_NAME=\"locals\";var _NAME=\"ejs\";var _REGEX_STRING=\"(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)\";var _OPTS_PASSABLE_WITH_DATA=[\"delimiter\",\"scope\",\"context\",\"debug\",\"compileDebug\",\"client\",\"_with\",\"rmWhitespace\",\"strict\",\"filename\",\"async\"];var _OPTS_PASSABLE_WITH_DATA_EXPRESS=_OPTS_PASSABLE_WITH_DATA.concat(\"cache\");var _BOM=/^\\uFEFF/;var _JS_IDENTIFIER=/^[a-zA-Z_$][0-9a-zA-Z_$]*$/;exports.cache=utils.cache;exports.fileLoader=fs.readFileSync;exports.localsName=_DEFAULT_LOCALS_NAME;exports.promiseImpl=new Function(\"return this;\")().Promise;exports.resolveInclude=function(name,filename,isDir){var dirname=path.dirname;var extname=path.extname;var resolve=path.resolve;var includePath=resolve(isDir?filename:dirname(filename),name);var ext=extname(name);if(!ext){includePath+=\".ejs\";}return includePath};function resolvePaths(name,paths){var filePath;if(paths.some(function(v){filePath=exports.resolveInclude(name,v,true);return fs.existsSync(filePath)})){return filePath}}function getIncludePath(path,options){var includePath;var filePath;var views=options.views;var match=/^[A-Za-z]+:\\\\|^\\//.exec(path);if(match&&match.length){path=path.replace(/^\\/*/,\"\");if(Array.isArray(options.root)){includePath=resolvePaths(path,options.root);}else{includePath=exports.resolveInclude(path,options.root||\"/\",true);}}else{if(options.filename){filePath=exports.resolveInclude(path,options.filename);if(fs.existsSync(filePath)){includePath=filePath;}}if(!includePath&&Array.isArray(views)){includePath=resolvePaths(path,views);}if(!includePath&&typeof options.includer!==\"function\"){throw new Error('Could not find the include file \"'+options.escapeFunction(path)+'\"')}}return includePath}function handleCache(options,template){var func;var filename=options.filename;var hasTemplate=arguments.length>1;if(options.cache){if(!filename){throw new Error(\"cache option requires a filename\")}func=exports.cache.get(filename);if(func){return func}if(!hasTemplate){template=fileLoader(filename).toString().replace(_BOM,\"\");}}else if(!hasTemplate){if(!filename){throw new Error(\"Internal EJS error: no file name or template \"+\"provided\")}template=fileLoader(filename).toString().replace(_BOM,\"\");}func=exports.compile(template,options);if(options.cache){exports.cache.set(filename,func);}return func}function tryHandleCache(options,data,cb){var result;if(!cb){if(typeof exports.promiseImpl==\"function\"){return new exports.promiseImpl(function(resolve,reject){try{result=handleCache(options)(data);resolve(result);}catch(err){reject(err);}})}else{throw new Error(\"Please provide a callback function\")}}else{try{result=handleCache(options)(data);}catch(err){return cb(err)}cb(null,result);}}function fileLoader(filePath){return exports.fileLoader(filePath)}function includeFile(path,options){var opts=utils.shallowCopy(utils.createNullProtoObjWherePossible(),options);opts.filename=getIncludePath(path,opts);if(typeof options.includer===\"function\"){var includerResult=options.includer(path,opts.filename);if(includerResult){if(includerResult.filename){opts.filename=includerResult.filename;}if(includerResult.template){return handleCache(opts,includerResult.template)}}}return handleCache(opts)}function rethrow(err,str,flnm,lineno,esc){var lines=str.split(\"\\n\");var start=Math.max(lineno-3,0);var end=Math.min(lines.length,lineno+3);var filename=esc(flnm);var context=lines.slice(start,end).map(function(line,i){var curr=i+start+1;return(curr==lineno?\" >> \":\"    \")+curr+\"| \"+line}).join(\"\\n\");err.path=filename;err.message=(filename||\"ejs\")+\":\"+lineno+\"\\n\"+context+\"\\n\\n\"+err.message;throw err}function stripSemi(str){return str.replace(/;(\\s*$)/,\"$1\")}exports.compile=function compile(template,opts){var templ;if(opts&&opts.scope){if(!scopeOptionWarned){console.warn(\"`scope` option is deprecated and will be removed in EJS 3\");scopeOptionWarned=true;}if(!opts.context){opts.context=opts.scope;}delete opts.scope;}templ=new Template(template,opts);return templ.compile()};exports.render=function(template,d,o){var data=d||utils.createNullProtoObjWherePossible();var opts=o||utils.createNullProtoObjWherePossible();if(arguments.length==2){utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA);}return handleCache(opts,template)(data)};exports.renderFile=function(){var args=Array.prototype.slice.call(arguments);var filename=args.shift();var cb;var opts={filename:filename};var data;var viewOpts;if(typeof arguments[arguments.length-1]==\"function\"){cb=args.pop();}if(args.length){data=args.shift();if(args.length){utils.shallowCopy(opts,args.pop());}else{if(data.settings){if(data.settings.views){opts.views=data.settings.views;}if(data.settings[\"view cache\"]){opts.cache=true;}viewOpts=data.settings[\"view options\"];if(viewOpts){utils.shallowCopy(opts,viewOpts);}}utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA_EXPRESS);}opts.filename=filename;}else{data=utils.createNullProtoObjWherePossible();}return tryHandleCache(opts,data,cb)};exports.Template=Template;exports.clearCache=function(){exports.cache.reset();};function Template(text,opts){opts=opts||utils.createNullProtoObjWherePossible();var options=utils.createNullProtoObjWherePossible();this.templateText=text;this.mode=null;this.truncate=false;this.currentLine=1;this.source=\"\";options.client=opts.client||false;options.escapeFunction=opts.escape||opts.escapeFunction||utils.escapeXML;options.compileDebug=opts.compileDebug!==false;options.debug=!!opts.debug;options.filename=opts.filename;options.openDelimiter=opts.openDelimiter||exports.openDelimiter||_DEFAULT_OPEN_DELIMITER;options.closeDelimiter=opts.closeDelimiter||exports.closeDelimiter||_DEFAULT_CLOSE_DELIMITER;options.delimiter=opts.delimiter||exports.delimiter||_DEFAULT_DELIMITER;options.strict=opts.strict||false;options.context=opts.context;options.cache=opts.cache||false;options.rmWhitespace=opts.rmWhitespace;options.root=opts.root;options.includer=opts.includer;options.outputFunctionName=opts.outputFunctionName;options.localsName=opts.localsName||exports.localsName||_DEFAULT_LOCALS_NAME;options.views=opts.views;options.async=opts.async;options.destructuredLocals=opts.destructuredLocals;options.legacyInclude=typeof opts.legacyInclude!=\"undefined\"?!!opts.legacyInclude:true;if(options.strict){options._with=false;}else{options._with=typeof opts._with!=\"undefined\"?opts._with:true;}this.opts=options;this.regex=this.createRegex();}Template.modes={EVAL:\"eval\",ESCAPED:\"escaped\",RAW:\"raw\",COMMENT:\"comment\",LITERAL:\"literal\"};Template.prototype={createRegex:function(){var str=_REGEX_STRING;var delim=utils.escapeRegExpChars(this.opts.delimiter);var open=utils.escapeRegExpChars(this.opts.openDelimiter);var close=utils.escapeRegExpChars(this.opts.closeDelimiter);str=str.replace(/%/g,delim).replace(/</g,open).replace(/>/g,close);return new RegExp(str)},compile:function(){var src;var fn;var opts=this.opts;var prepended=\"\";var appended=\"\";var escapeFn=opts.escapeFunction;var ctor;var sanitizedFilename=opts.filename?JSON.stringify(opts.filename):\"undefined\";if(!this.source){this.generateSource();prepended+='  var __output = \"\";\\n'+\"  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n\";if(opts.outputFunctionName){if(!_JS_IDENTIFIER.test(opts.outputFunctionName)){throw new Error(\"outputFunctionName is not a valid JS identifier.\")}prepended+=\"  var \"+opts.outputFunctionName+\" = __append;\"+\"\\n\";}if(opts.localsName&&!_JS_IDENTIFIER.test(opts.localsName)){throw new Error(\"localsName is not a valid JS identifier.\")}if(opts.destructuredLocals&&opts.destructuredLocals.length){var destructuring=\"  var __locals = (\"+opts.localsName+\" || {}),\\n\";for(var i=0;i<opts.destructuredLocals.length;i++){var name=opts.destructuredLocals[i];if(!_JS_IDENTIFIER.test(name)){throw new Error(\"destructuredLocals[\"+i+\"] is not a valid JS identifier.\")}if(i>0){destructuring+=\",\\n  \";}destructuring+=name+\" = __locals.\"+name;}prepended+=destructuring+\";\\n\";}if(opts._with!==false){prepended+=\"  with (\"+opts.localsName+\" || {}) {\"+\"\\n\";appended+=\"  }\"+\"\\n\";}appended+=\"  return __output;\"+\"\\n\";this.source=prepended+this.source+appended;}if(opts.compileDebug){src=\"var __line = 1\"+\"\\n\"+\"  , __lines = \"+JSON.stringify(this.templateText)+\"\\n\"+\"  , __filename = \"+sanitizedFilename+\";\"+\"\\n\"+\"try {\"+\"\\n\"+this.source+\"} catch (e) {\"+\"\\n\"+\"  rethrow(e, __lines, __filename, __line, escapeFn);\"+\"\\n\"+\"}\"+\"\\n\";}else{src=this.source;}if(opts.client){src=\"escapeFn = escapeFn || \"+escapeFn.toString()+\";\"+\"\\n\"+src;if(opts.compileDebug){src=\"rethrow = rethrow || \"+rethrow.toString()+\";\"+\"\\n\"+src;}}if(opts.strict){src='\"use strict\";\\n'+src;}if(opts.debug){console.log(src);}if(opts.compileDebug&&opts.filename){src=src+\"\\n\"+\"//# sourceURL=\"+sanitizedFilename+\"\\n\";}try{if(opts.async){try{ctor=new Function(\"return (async function(){}).constructor;\")();}catch(e){if(e instanceof SyntaxError){throw new Error(\"This environment does not support async/await\")}else{throw e}}}else{ctor=Function;}fn=new ctor(opts.localsName+\", escapeFn, include, rethrow\",src);}catch(e){if(e instanceof SyntaxError){if(opts.filename){e.message+=\" in \"+opts.filename;}e.message+=\" while compiling ejs\\n\\n\";e.message+=\"If the above error is not helpful, you may want to try EJS-Lint:\\n\";e.message+=\"https://github.com/RyanZim/EJS-Lint\";if(!opts.async){e.message+=\"\\n\";e.message+=\"Or, if you meant to create an async function, pass `async: true` as an option.\";}}throw e}var returnedFn=opts.client?fn:function anonymous(data){var include=function(path,includeData){var d=utils.shallowCopy(utils.createNullProtoObjWherePossible(),data);if(includeData){d=utils.shallowCopy(d,includeData);}return includeFile(path,opts)(d)};return fn.apply(opts.context,[data||utils.createNullProtoObjWherePossible(),escapeFn,include,rethrow])};if(opts.filename&&typeof Object.defineProperty===\"function\"){var filename=opts.filename;var basename=path.basename(filename,path.extname(filename));try{Object.defineProperty(returnedFn,\"name\",{value:basename,writable:false,enumerable:false,configurable:true});}catch(e){}}return returnedFn},generateSource:function(){var opts=this.opts;if(opts.rmWhitespace){this.templateText=this.templateText.replace(/[\\r\\n]+/g,\"\\n\").replace(/^\\s+|\\s+$/gm,\"\");}this.templateText=this.templateText.replace(/[ \\t]*<%_/gm,\"<%_\").replace(/_%>[ \\t]*/gm,\"_%>\");var self=this;var matches=this.parseTemplateText();var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;if(matches&&matches.length){matches.forEach(function(line,index){var closing;if(line.indexOf(o+d)===0&&line.indexOf(o+d+d)!==0){closing=matches[index+2];if(!(closing==d+c||closing==\"-\"+d+c||closing==\"_\"+d+c)){throw new Error('Could not find matching close tag for \"'+line+'\".')}}self.scanLine(line);});}},parseTemplateText:function(){var str=this.templateText;var pat=this.regex;var result=pat.exec(str);var arr=[];var firstPos;while(result){firstPos=result.index;if(firstPos!==0){arr.push(str.substring(0,firstPos));str=str.slice(firstPos);}arr.push(result[0]);str=str.slice(result[0].length);result=pat.exec(str);}if(str){arr.push(str);}return arr},_addOutput:function(line){if(this.truncate){line=line.replace(/^(?:\\r\\n|\\r|\\n)/,\"\");this.truncate=false;}if(!line){return line}line=line.replace(/\\\\/g,\"\\\\\\\\\");line=line.replace(/\\n/g,\"\\\\n\");line=line.replace(/\\r/g,\"\\\\r\");line=line.replace(/\"/g,'\\\\\"');this.source+='    ; __append(\"'+line+'\")'+\"\\n\";},scanLine:function(line){var self=this;var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;var newLineCount=0;newLineCount=line.split(\"\\n\").length-1;switch(line){case o+d:case o+d+\"_\":this.mode=Template.modes.EVAL;break;case o+d+\"=\":this.mode=Template.modes.ESCAPED;break;case o+d+\"-\":this.mode=Template.modes.RAW;break;case o+d+\"#\":this.mode=Template.modes.COMMENT;break;case o+d+d:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(o+d+d,o+d)+'\")'+\"\\n\";break;case d+d+c:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(d+d+c,d+c)+'\")'+\"\\n\";break;case d+c:case\"-\"+d+c:case\"_\"+d+c:if(this.mode==Template.modes.LITERAL){this._addOutput(line);}this.mode=null;this.truncate=line.indexOf(\"-\")===0||line.indexOf(\"_\")===0;break;default:if(this.mode){switch(this.mode){case Template.modes.EVAL:case Template.modes.ESCAPED:case Template.modes.RAW:if(line.lastIndexOf(\"//\")>line.lastIndexOf(\"\\n\")){line+=\"\\n\";}}switch(this.mode){case Template.modes.EVAL:this.source+=\"    ; \"+line+\"\\n\";break;case Template.modes.ESCAPED:this.source+=\"    ; __append(escapeFn(\"+stripSemi(line)+\"))\"+\"\\n\";break;case Template.modes.RAW:this.source+=\"    ; __append(\"+stripSemi(line)+\")\"+\"\\n\";break;case Template.modes.COMMENT:break;case Template.modes.LITERAL:this._addOutput(line);break}}else{this._addOutput(line);}}if(self.opts.compileDebug&&newLineCount){this.currentLine+=newLineCount;this.source+=\"    ; __line = \"+this.currentLine+\"\\n\";}}};exports.escapeXML=utils.escapeXML;exports.__express=exports.renderFile;exports.VERSION=_VERSION_STRING;exports.name=_NAME;if(typeof window!=\"undefined\"){window.ejs=exports;}},{\"../package.json\":6,\"./utils\":2,fs:3,path:4}],2:[function(require,module,exports){\"use strict\";var regExpChars=/[|\\\\{}()[\\]^$+*?.]/g;var hasOwnProperty=Object.prototype.hasOwnProperty;var hasOwn=function(obj,key){return hasOwnProperty.apply(obj,[key])};exports.escapeRegExpChars=function(string){if(!string){return\"\"}return String(string).replace(regExpChars,\"\\\\$&\")};var _ENCODE_HTML_RULES={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&#34;\",\"'\":\"&#39;\"};var _MATCH_HTML=/[&<>'\"]/g;function encode_char(c){return _ENCODE_HTML_RULES[c]||c}var escapeFuncStr=\"var _ENCODE_HTML_RULES = {\\n\"+'      \"&\": \"&amp;\"\\n'+'    , \"<\": \"&lt;\"\\n'+'    , \">\": \"&gt;\"\\n'+'    , \\'\"\\': \"&#34;\"\\n'+'    , \"\\'\": \"&#39;\"\\n'+\"    }\\n\"+\"  , _MATCH_HTML = /[&<>'\\\"]/g;\\n\"+\"function encode_char(c) {\\n\"+\"  return _ENCODE_HTML_RULES[c] || c;\\n\"+\"};\\n\";exports.escapeXML=function(markup){return markup==undefined?\"\":String(markup).replace(_MATCH_HTML,encode_char)};function escapeXMLToString(){return Function.prototype.toString.call(this)+\";\\n\"+escapeFuncStr}try{if(typeof Object.defineProperty===\"function\"){Object.defineProperty(exports.escapeXML,\"toString\",{value:escapeXMLToString});}else{exports.escapeXML.toString=escapeXMLToString;}}catch(err){console.warn(\"Unable to set escapeXML.toString (is the Function prototype frozen?)\");}exports.shallowCopy=function(to,from){from=from||{};if(to!==null&&to!==undefined){for(var p in from){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}return to};exports.shallowCopyFromList=function(to,from,list){list=list||[];from=from||{};if(to!==null&&to!==undefined){for(var i=0;i<list.length;i++){var p=list[i];if(typeof from[p]!=\"undefined\"){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}}return to};exports.cache={_data:{},set:function(key,val){this._data[key]=val;},get:function(key){return this._data[key]},remove:function(key){delete this._data[key];},reset:function(){this._data={};}};exports.hyphenToCamel=function(str){return str.replace(/-[a-z]/g,function(match){return match[1].toUpperCase()})};exports.createNullProtoObjWherePossible=function(){if(typeof Object.create==\"function\"){return function(){return Object.create(null)}}if(!({__proto__:null}instanceof Object)){return function(){return{__proto__:null}}}return function(){return{}}}();},{}],3:[function(require,module,exports){},{}],4:[function(require,module,exports){(function(process){function normalizeArray(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1);}else if(last===\"..\"){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}if(allowAboveRoot){for(;up--;up){parts.unshift(\"..\");}}return parts}exports.resolve=function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){continue}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\";}resolvedPath=normalizeArray(filter(resolvedPath.split(\"/\"),function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"};exports.normalize=function(path){var isAbsolute=exports.isAbsolute(path),trailingSlash=substr(path,-1)===\"/\";path=normalizeArray(filter(path.split(\"/\"),function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\";}if(path&&trailingSlash){path+=\"/\";}return(isAbsolute?\"/\":\"\")+path};exports.isAbsolute=function(path){return path.charAt(0)===\"/\"};exports.join=function(){var paths=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(paths,function(p,index){if(typeof p!==\"string\"){throw new TypeError(\"Arguments to path.join must be strings\")}return p}).join(\"/\"))};exports.relative=function(from,to){from=exports.resolve(from).substr(1);to=exports.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\");}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")};exports.sep=\"/\";exports.delimiter=\":\";exports.dirname=function(path){if(typeof path!==\"string\")path=path+\"\";if(path.length===0)return\".\";var code=path.charCodeAt(0);var hasRoot=code===47;var end=-1;var matchedSlash=true;for(var i=path.length-1;i>=1;--i){code=path.charCodeAt(i);if(code===47){if(!matchedSlash){end=i;break}}else{matchedSlash=false;}}if(end===-1)return hasRoot?\"/\":\".\";if(hasRoot&&end===1){return\"/\"}return path.slice(0,end)};function basename(path){if(typeof path!==\"string\")path=path+\"\";var start=0;var end=-1;var matchedSlash=true;var i;for(i=path.length-1;i>=0;--i){if(path.charCodeAt(i)===47){if(!matchedSlash){start=i+1;break}}else if(end===-1){matchedSlash=false;end=i+1;}}if(end===-1)return\"\";return path.slice(start,end)}exports.basename=function(path,ext){var f=basename(path);if(ext&&f.substr(-1*ext.length)===ext){f=f.substr(0,f.length-ext.length);}return f};exports.extname=function(path){if(typeof path!==\"string\")path=path+\"\";var startDot=-1;var startPart=0;var end=-1;var matchedSlash=true;var preDotState=0;for(var i=path.length-1;i>=0;--i){var code=path.charCodeAt(i);if(code===47){if(!matchedSlash){startPart=i+1;break}continue}if(end===-1){matchedSlash=false;end=i+1;}if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){return\"\"}return path.slice(startDot,end)};function filter(xs,f){if(xs.filter)return xs.filter(f);var res=[];for(var i=0;i<xs.length;i++){if(f(xs[i],i,xs))res.push(xs[i]);}return res}var substr=\"ab\".substr(-1)===\"b\"?function(str,start,len){return str.substr(start,len)}:function(str,start,len){if(start<0)start=str.length+start;return str.substr(start,len)};}).call(this,require(\"_process\"));},{_process:5}],5:[function(require,module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout===\"function\"){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title=\"browser\";process.browser=true;process.env={};process.argv=[];process.version=\"\";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error(\"process.binding is not supported\")};process.cwd=function(){return\"/\"};process.chdir=function(dir){throw new Error(\"process.chdir is not supported\")};process.umask=function(){return 0};},{}],6:[function(require,module,exports){module.exports={name:\"ejs\",description:\"Embedded JavaScript templates\",keywords:[\"template\",\"engine\",\"ejs\"],version:\"3.1.8\",author:\"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)\",license:\"Apache-2.0\",bin:{ejs:\"./bin/cli.js\"},main:\"./lib/ejs.js\",jsdelivr:\"ejs.min.js\",unpkg:\"ejs.min.js\",repository:{type:\"git\",url:\"git://github.com/mde/ejs.git\"},bugs:\"https://github.com/mde/ejs/issues\",homepage:\"https://github.com/mde/ejs\",dependencies:{jake:\"^10.8.5\"},devDependencies:{browserify:\"^16.5.1\",eslint:\"^6.8.0\",\"git-directory-deploy\":\"^1.5.1\",jsdoc:\"^4.0.2\",\"lru-cache\":\"^4.0.1\",mocha:\"^10.2.0\",\"uglify-js\":\"^3.3.16\"},engines:{node:\">=0.10.0\"},scripts:{test:\"mocha -u tdd\"}};},{}]},{},[1])(1)});\n\nlet tpl = Object.create(null);\ntpl['form-error.html'] = '<div class=\"coreui-form__error alert alert-danger alert-dismissible fade show mb-3 <%= options.class %>\">\\n    <%- message %>\\n    <% if (options.dismiss) { %>\\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\\n    <% } %>\\n</div>';\ntpl['form-field-content.html'] = '<%- content %>';\ntpl['form-field-group.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__group_container mb-3\">\\n    <div class=\"coreui-form__group_label pe-2\">\\n        <h6 class=\"coreui-form__field_label_text col-form-label-sm\">\\n            <%- group.label %>\\n            <% if (group.showCollapsible) { %>\\n                <button type=\"button\" class=\"btn btn-sm btn-link btn-collapsible text-dark\">\\n                    <% if ( ! group.show) { %>\\n                    <i class=\"bi bi-chevron-right\"></i>\\n                    <% } else { %>\\n                    <i class=\"bi bi-chevron-down\"></i>\\n                    <% } %>\\n                </button>\\n            <% } %>\\n        </h6>\\n    </div>\\n    <div class=\"coreui-form__group_content\"<% if ( ! group.show) { %> style=\"display:none\"<% } %>>\\n        <%- content %>\\n    </div>\\n</div>';\ntpl['form-field-label.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__field_container d-flex flex-column flex-md-row mb-3\"\\n     <% if ( ! field.show) { %> style=\"display:none\"<% } %>>\\n    <% if (field.labelWidth !== 0 && field.labelWidth !== \\'0px\\') { %>\\n    <div class=\"coreui-form__field_label text-md-end text-sm-start pe-2\"<% if (field.labelWidth) { %> style=\"min-width:<%= field.labelWidth %>;width:<%= field.labelWidth %>\"<% } %>>\\n        <div class=\"coreui-form__field_label_content col-form-label-sm\">\\n            <% if (field.required) { %>\\n            <span class=\"coreui-form__field_label_req text-danger\">*</span>\\n            <% } %>\\n            <span class=\"coreui-form__field_label_text fw-medium\"><%- field.label %></span>\\n        </div>\\n\\n        <% if (field.description) { %>\\n        <div class=\"coreui-form__field_label_description text-muted\">\\n            <small><%- field.description %></small>\\n        </div>\\n        <% } %>\\n    </div>\\n    <% } %>\\n    <div class=\"coreui-form__field_content flex-fill pt-1\">\\n        <div class=\"d-inline-block content-<%= hash %>\">\\n            <%- content %>\\n        </div>\\n\\n        <% if (field.outContent) { %>\\n        <span class=\"coreui-form__field-content-out d-inline-block align-top pt-1 ps-1\">\\n            <%- field.outContent %>\\n        </span>\\n        <% } %>\\n\\n        <% if (attachFields && attachFields.length > 0) { %>\\n            <% $.each(attachFields, function(key, attachField) { %>\\n                <div class=\"<% if (attachField.hasOwnProperty(\\'direction\\') && attachField.direction === \\'column\\') { %>d-block mt-2<% } else { %>d-inline-block<% } %> content-<%= attachField.hash %>\">\\n                    <%- attachField.content %>\\n                </div>\\n            <% }); %>\\n        <% } %>\\n    </div>\\n</div>';\ntpl['form.html'] = '<div id=\"coreui-form-<%= form.id %>\" class=\"coreui-form mb-2\"\\n    <% if (widthSizes) { %>style=\"<%= widthSizes.join(\\';\\') %>\"<% } %>>\\n    <% if (form.title) { %>\\n    <h5 class=\"mb-4\"><%- form.title %></h5>\\n    <% } %>\\n\\n    <form action=\"<%= form.send.url %>\" method=\"<%= form.send.method %>\"<%- formAttr %>>\\n        <div class=\"coreui-form__fields d-flex justify-content-start flex-column flex-wrap\">\\n            <%- layout %>\\n        </div>\\n\\n        <% if (controls) { %>\\n        <div class=\"coreui-form__controls d-flex justify-content-start flex-sm-wrap flex-md-nowrap\">\\n            <% if (form.controlsOffset !== 0 && form.controlsOffset !== \\'0px\\') { %>\\n            <div class=\"d-none d-md-block\" style=\"width:<%= form.controlsOffset %>;min-width:<%= form.controlsOffset %>\"></div>\\n            <% } %>\\n\\n            <div class=\"d-flex justify-content-start flex-wrap gap-2\">\\n                <% $.each(controls, function(key, control) { %>\\n                <div id=\"coreui-form-<%= form.id %>-control-<%= control.index %>\" class=\"coreui-form__control_container\"\\n                     <% if ( ! control.show) { %>style=\"display:none\"<% } %>>\\n                    <%- control.content %>\\n                </div>\\n                <% }); %>\\n            </div>\\n        </div>\\n        <% } %>\\n    </form>\\n</div>';\ntpl['controls/button.html'] = '<button <%- render.attr %>><%- control.content %></button>';\ntpl['controls/link.html'] = '<a href=\"<%- control.href %>\"<%- render.attr %>><%- control.content %></a>';\ntpl['fields/checkbox.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItems.join(\\', \\') %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/color.html'] = '<% if (field.readonly) { %>\\n    <div class=\"rounded-1\" style=\"width: 14px;height: 14px;background-color: <%= value %>\"></div>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/custom.html'] = '<%- content %>';\ntpl['fields/dataset-row-readonly.html'] = '<tr class=\"coreui-form__field-dataset-item\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-2 pb-1\">\\n            <%- option.value %>\\n        </td>\\n    <% }); %>\\n</tr>';\ntpl['fields/dataset-row.html'] = '<tr class=\"coreui-form__field-dataset-item\" id=\"dataset-item-<%= hashItem %>\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-1 pb-1\">\\n        <% if (option.type === \\'select\\') { %>\\n            <select <%- option.attr %>>\\n                <% $.each(option.items, function(key, item) { %>\\n                <option <%- item.attr %>><%- item.title %></option>\\n                <% }); %>\\n            </select>\\n        <% } else if (option.type === \\'switch\\') { %>\\n            <div class=\"form-check form-switch\">\\n                <input <%- option.attr %>/>\\n            </div>\\n        <% } else { %>\\n            <input <%- option.attr %>>\\n        <% } %>\\n        </td>\\n    <% }); %>\\n\\n    <td class=\"pb-1\">\\n        <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-remove\" data-item-id=\"dataset-item-<%= hashItem %>\">\\n            <i class=\"bi bi-x text-muted\"></i>\\n        </button>\\n    </td>\\n</tr>';\ntpl['fields/dataset.html'] = '<% if (field.readonly) { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted pe-2\"><small><%= item.title %></small></td>\\n                <% }); %>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n            <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n<% } else { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted\"><small><%= item.title %></small></td>\\n                <% }); %>\\n                <td></td>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n                <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n    <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-add\"><%= lang.dataset_add %></button>\\n<% } %>';\ntpl['fields/hidden.html'] = '<% if ( ! field.readonly) { %>\\n    <input <%- render.attr %>/>\\n<% } %>';\ntpl['fields/input.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/modal-loading.html'] = '<div class=\"py-4 d-flex justify-content-center align-items-center gap-2\">\\n    <div class=\"spinner-border mr-2\"></div> <%= lang.modal_loading %>\\n</div>\\n';\ntpl['fields/modal.html'] = '<% if (field.readonly) { %>\\n    <%= text %>\\n<% } else { %>\\n    <div class=\"input-group\"<% if (render.width) { %> style=\"width:<%= render.width %>\"<% } %>>\\n        <input <%- render.attr %>/>\\n        <input type=\"hidden\" name=\"<%= field.name %>\" value=\"<%= value %>\" class=\"coreui-form-modal-value\"/>\\n        <% if ( ! field.required) { %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-clear border-secondary-subtle\" type=\"button\">\\n            <i class=\"bi bi-x\"></i>\\n        </button>\\n        <% } %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-select border-secondary-subtle\" type=\"button\"><%= lang.modal_select %></button>\\n    </div>\\n<% } %>';\ntpl['fields/passwordRepeat.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <div class=\"d-flex gap-1 align-items-center\">\\n        <input <%- render.attr %>/>\\n        <small class=\"password-text-repeat\"><%= lang.repeat %></small>\\n\\n        <% if (field.showBtn) { %>\\n            <div class=\"input-group flex-nowrap\">\\n                <input <%- render.attr2 %>/>\\n                <button class=\"btn btn-sm btn-outline-secondary border-secondary-subtle btn-password-change\" type=\"button\"\\n                        data-change=\"<%- lang.change %>\" data-cancel=\"<%- lang.cancel %>\"><%= btn_text %></button>\\n            </div>\\n        <% } else { %>\\n            <input <%- render.attr2 %>/>\\n        <% } %>\\n\\n    </div>\\n<% } %>';\ntpl['fields/radio.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItem %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/select.html'] = '<% if (field.readonly) { %>\\n    <%= render.selectedOptions.join(\\', \\') %>\\n<% } else { %>\\n    <select <%- render.attr %>>\\n        <% $.each(render.options, function(key, option) { %>\\n            <% if (option.type === \\'group\\') { %>\\n                <optgroup<%- option.attr %>/>\\n                <% $.each(option.options, function(key, groupOption) { %>\\n                    <option <%- groupOption.attr %>/><%= groupOption.text %></option>\\n                <% }); %>\\n                </optgroup>\\n            <% } else { %>\\n            <option <%- option.attr %>/><%= option.text %></option>\\n            <% } %>\\n        <% }); %>\\n    </select>\\n<% } %>';\ntpl['fields/switch.html'] = '<% if (field.readonly) { %>\\n    <%= field.valueY == value ? lang.switch_yes : lang.switch_no %>\\n<% } else { %>\\n    <div class=\"form-check form-switch\">\\n        <input <%- render.attr %>/>\\n    </div>\\n<% } %>';\ntpl['fields/textarea.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea <%- render.attr %>><%- value %></textarea>\\n<% } %>';\ntpl['fields/wysiwyg.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea name=\"<%= field.name %>\" id=\"editor-<%= editorHash %>\"><%- value %></textarea>\\n<% } %>';\n\nlet coreuiFormUtils$1 = {\r\n\r\n    /**\r\n     * Получение значения поля\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               fieldOptions\r\n     * @returns {string|number|null}\r\n     */\r\n    getFieldValue: function (form, fieldOptions) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        if (fieldOptions &&\r\n            formRecord &&\r\n            typeof fieldOptions.name === 'string' &&\r\n            typeof formRecord === 'object' &&\r\n            formRecord.hasOwnProperty(fieldOptions.name) &&\r\n            ['string', 'number', 'object'].indexOf(typeof formRecord[fieldOptions.name]) >= 0\r\n        ) {\r\n            return formRecord[fieldOptions.name];\r\n        }\r\n\r\n        return '';\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение функции из указанного текста\r\n     * @param functionName\r\n     * @param context\r\n     * @returns {null|Window}\r\n     * @private\r\n     */\r\n    getFunctionByName: function(functionName, context) {\r\n\r\n        let namespaces = functionName.split(\".\");\r\n        let func       = namespaces.pop();\r\n\r\n        context = context || window;\r\n\r\n        for (let i = 0; i < namespaces.length; i++) {\r\n            if (context.hasOwnProperty(namespaces[i])) {\r\n                context = context[namespaces[i]];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        if (typeof context[func] === 'function') {\r\n            return context[func];\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Обработка полей в полях\r\n     * @param form\r\n     * @param defaultOptions\r\n     * @param fieldOptions\r\n     */\r\n    mergeFieldOptions: function (form, defaultOptions, fieldOptions) {\r\n\r\n        let options = $.extend(true, {}, defaultOptions);\r\n\r\n        if (fieldOptions) {\r\n            if (options.hasOwnProperty('attr') && typeof options.attr === 'object' &&\r\n                fieldOptions.hasOwnProperty('attr') && typeof fieldOptions.attr === 'object'\r\n            ) {\r\n                fieldOptions.attr = this.mergeAttr(options.attr, fieldOptions.attr);\r\n            }\r\n\r\n            options = $.extend(true, {}, options, fieldOptions);\r\n        }\r\n\r\n        if (options.hasOwnProperty('width')) {\r\n            if (options.width) {\r\n                let unit = typeof options.width === 'number' ? 'px' : '';\r\n                options.width = options.width + unit;\r\n\r\n            } else if (form._options.fieldWidth && options.type !== 'color') {\r\n                let unit = typeof form._options.fieldWidth === 'number' ? 'px' : '';\r\n                options.width = form._options.fieldWidth + unit;\r\n            }\r\n        }\r\n\r\n        if (options.hasOwnProperty('labelWidth')) {\r\n            if (options.labelWidth >= 0 && options.labelWidth !== null) {\r\n                let unit = typeof options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = options.labelWidth + unit;\r\n\r\n            } else if (form._options.labelWidth) {\r\n                let unit = typeof form._options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = form._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        return options\r\n    },\r\n\r\n\r\n    /**\r\n     * Объединение атрибутов\r\n     * @param attr1\r\n     * @param attr2\r\n     * @returns {object}\r\n     */\r\n    mergeAttr: function (attr1, attr2) {\r\n\r\n        let mergeAttr = Object.assign({}, attr1);\r\n\r\n        if (typeof attr2 === 'object') {\r\n            $.each(attr2, function (name, value) {\r\n                if (mergeAttr.hasOwnProperty(name)) {\r\n                    if (name === 'class') {\r\n                        mergeAttr[name] += ' ' + value;\r\n\r\n                    } else if (name === 'style') {\r\n                        mergeAttr[name] += ';' + value;\r\n\r\n                    } else {\r\n                        mergeAttr[name] = value;\r\n                    }\r\n\r\n                } else {\r\n                    mergeAttr[name] = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return mergeAttr;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация и рендер дополнительных полей\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @returns {object}\r\n     * @private\r\n     */\r\n    getAttacheFields: function(form, options) {\r\n\r\n        let fields = [];\r\n\r\n        if (typeof options === 'object' &&\r\n            typeof(options.fields) === 'object' &&\r\n            Array.isArray(options.fields)\r\n        ) {\r\n            $.each(options.fields, function (key, field) {\r\n                let instance = form.initField(field);\r\n\r\n                if (typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                fields.push({\r\n                    hash: instance._hash,\r\n                    direction: options.hasOwnProperty('fieldsDirection') ? options.fieldsDirection : 'row',\r\n                    content: instance.renderContent()\r\n                });\r\n            });\r\n        }\r\n\r\n        return fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDate: function (value) {\r\n\r\n        if (value && value.length === 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDateTime: function (value) {\r\n\r\n        if (value && value.length >= 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n            let hour  = (\"00\" + date.getHours()).slice(-2);\r\n            let min   = (\"00\" + date.getMinutes()).slice(-2);\r\n            let sec   = (\"00\" + date.getSeconds()).slice(-2);\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year + ' ' + hour + ':' + min + ':' + sec;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateMonth: function (value, lang) {\r\n\r\n        if (value && value.length === 7) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth();\r\n\r\n            let monthLang = lang.date_months.hasOwnProperty(month) ? lang.date_months[month] : '';\r\n\r\n            value = monthLang + ' ' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateWeek: function (value, lang) {\r\n\r\n        if (value && value.length >= 7) {\r\n            let year = value.substring(0, 4);\r\n            let week = value.substring(6);\r\n\r\n            value = year + ' ' + lang.date_week + ' ' + week;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка на число\r\n     * @param num\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    isNumeric: function(num) {\r\n        return (typeof(num) === 'number' || typeof(num) === \"string\" && num.trim() !== '') && ! isNaN(num);\r\n    },\r\n\r\n\r\n    /**\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    hashCode: function() {\r\n        return this.crc32((new Date().getTime() + Math.random()).toString()).toString(16);\r\n    },\r\n\r\n\r\n    /**\r\n     * Hash crc32\r\n     * @param str\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    crc32: function (str) {\r\n\r\n        for (var a, o = [], c = 0; c < 256; c++) {\r\n            a = c;\r\n            for (var f = 0; f < 8; f++) {\r\n                a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;\r\n            }\r\n            o[c] = a;\r\n        }\r\n\r\n        for (var n = -1, t = 0; t < str.length; t++) {\r\n            n = n >>> 8 ^ o[255 & (n ^ str.charCodeAt(t))];\r\n        }\r\n\r\n        return (-1 ^ n) >>> 0;\r\n    },\r\n\r\n\r\n    /**\r\n     * Округление\r\n     * @param number\r\n     * @param precision\r\n     * @returns {number}\r\n     */\r\n    round: function (number, precision) {\r\n\r\n        precision = typeof precision !== 'undefined' ? parseInt(precision) : 0;\r\n\r\n        if (precision === 0) {\r\n            return Math.round(number);\r\n\r\n        } else if (precision > 0) {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number * pow) / pow;\r\n\r\n        } else {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number / pow) * pow;\r\n        }\r\n    }\r\n};\n\nlet coreuiFormInstance = {\r\n\r\n    _options: {\r\n        id: null,\r\n        title: '',\r\n        lang: 'en',\r\n        send: {\r\n            url: '',\r\n            method: 'POST',\r\n            format: 'form',\r\n        },\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        labelWidth: 200,\r\n        controlsOffset: null,\r\n        readonly: false,\r\n        validate: false,\r\n        errorClass: '',\r\n        layout: '[column_default]',\r\n        onSubmit: null,\r\n        record: {},\r\n        fields: [],\r\n        controls: []\r\n    },\r\n\r\n    _lock: false,\r\n    _fieldsIndex: 0,\r\n    _groupsIndex: 0,\r\n    _controlsIndex: 0,\r\n    _groups: [],\r\n    _fields: [],\r\n    _controls: [],\r\n    _events: {},\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {object} options\r\n     * @private\r\n     */\r\n    _init: function (options) {\r\n\r\n        this._options.labelWidth    = coreuiForm$1.getSetting('labelWidth');\r\n        this._options.lang          = coreuiForm$1.getSetting('lang');\r\n        this._options.errorClass    = coreuiForm$1.getSetting('errorClass');\r\n        this._options.send.format = coreuiForm$1.getSetting('sendDataFormat');\r\n\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        if ( ! this._options.id) {\r\n            this._options.id = coreuiFormUtils$1.hashCode();\r\n        }\r\n\r\n        if (this._options.hasOwnProperty('labelWidth')) {\r\n            if (this._options.labelWidth >= 0 && this._options.labelWidth !== null) {\r\n                let unit = typeof this._options.labelWidth === 'number' ? 'px' : '';\r\n                this._options.labelWidth = this._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        if ( ! this._options.hasOwnProperty('controlsOffset') || this._options.controlsOffset === null) {\r\n            this._options.controlsOffset = this._options.labelWidth;\r\n        } else {\r\n            if (this._options.controlsOffset >= 0) {\r\n                let unit = typeof this._options.controlsOffset === 'number' ? 'px' : '';\r\n                this._options.controlsOffset = this._options.controlsOffset + unit;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    initEvents: function () {\r\n\r\n        let that          = this;\r\n        let formContainer = '#coreui-form-' + this._options.id + ' > form';\r\n\r\n        $(formContainer).on('submit', function () {\r\n            that.send();\r\n\r\n            return false;\r\n        });\r\n\r\n        this._trigger('shown.coreui.form');\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение id формы\r\n     * @return {string|null}\r\n     */\r\n    getId: function () {\r\n\r\n        return this._options.hasOwnProperty('id') ? this._options.id : null;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    render: function(element) {\r\n\r\n        let that       = this;\r\n        let widthSizes = [];\r\n        let layout     = this._options.layout;\r\n        let controls   = [];\r\n        let formAttr   = [];\r\n\r\n\r\n\r\n        if (this._options.width) {\r\n            let unit = typeof this._options.width === 'number' ? 'px' : '';\r\n            widthSizes.push('width:' + this._options.width + unit);\r\n        }\r\n\r\n        if (this._options.minWidth) {\r\n            let unit = typeof this._options.minWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('min-width:' + this._options.minWidth + unit);\r\n        }\r\n\r\n        if (this._options.maxWidth) {\r\n            let unit = typeof this._options.maxWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('max-width:' + this._options.maxWidth + unit);\r\n        }\r\n\r\n\r\n\r\n        // Поля\r\n        if (typeof this._options.fields === 'object' &&\r\n            Array.isArray(this._options.fields) &&\r\n            this._options.fields.length > 0 &&\r\n            layout &&\r\n            typeof layout === 'string'\r\n        ) {\r\n            let matches        = Array.from(layout.matchAll(/\\[column_([\\w_\\d]+)\\]/g));\r\n            let columns        = [];\r\n            let columnsContent = {};\r\n\r\n            if (matches.length > 0) {\r\n                $.each(matches, function (key, match) {\r\n                    columns.push(match[1]);\r\n                });\r\n            }\r\n\r\n            if (columns.length > 0) {\r\n                $.each(this._options.fields, function (key, field) {\r\n                    let column = field.hasOwnProperty('column') && (typeof field.column === 'string' || typeof field.column === 'number')\r\n                        ? (columns.indexOf(field.column) >= 0 ? field.column : null)\r\n                        : 'default';\r\n\r\n                    if (typeof column !== 'string') {\r\n                        return;\r\n                    }\r\n\r\n                    let type     = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : '';\r\n                    let instance = null;\r\n\r\n                    if (type === 'group') {\r\n                        instance = that.initGroup(field);\r\n\r\n                    } else {\r\n                        instance = that.initField(field);\r\n                    }\r\n\r\n\r\n                    if ( ! instance || typeof instance !== 'object') {\r\n                        return;\r\n                    }\r\n\r\n                    if ( ! columnsContent.hasOwnProperty(column)) {\r\n                        columnsContent[column] = [];\r\n                    }\r\n                    columnsContent[column].push(instance.render());\r\n                });\r\n            }\r\n\r\n            if (Object.keys(columnsContent).length >= 0) {\r\n                $.each(columnsContent, function (name, fieldContents) {\r\n\r\n                    layout = layout.replace('[column_' + name + ']', fieldContents.join(''));\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        // Элементы управления\r\n        if (typeof this._options.controls === 'object' &&\r\n            Array.isArray(this._options.controls) &&\r\n            this._options.controls.length > 0\r\n        ) {\r\n            $.each(this._options.controls, function (key, control) {\r\n                let instance = that.initControl(control);\r\n\r\n                if ( ! instance || typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                controls.push({\r\n                    show: ! control.hasOwnProperty('show') || control.show,\r\n                    index: that._controlsIndex - 1,\r\n                    content: instance.render()\r\n                });\r\n            });\r\n        }\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            formAttr.push('novalidate');\r\n        }\r\n\r\n\r\n        let html = ejs.render(tpl['form.html'], {\r\n            form: this._options,\r\n            formAttr: formAttr ? ' ' + formAttr.join(' ') : '',\r\n            widthSizes: widthSizes,\r\n            layout: layout,\r\n            controls: controls,\r\n        });\r\n\r\n        if (element === undefined) {\r\n            return html;\r\n        }\r\n\r\n        // Dom element\r\n        let domElement = {};\r\n\r\n        if (typeof element === 'string') {\r\n            domElement = document.getElementById(element);\r\n\r\n            if ( ! domElement) {\r\n                return '';\r\n            }\r\n\r\n        } else if (element instanceof HTMLElement) {\r\n            domElement = element;\r\n        }\r\n\r\n\r\n        domElement.innerHTML = html;\r\n\r\n        this.initEvents();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        this._lock = true;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.lock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Разблокировка\r\n     */\r\n    unlock: function () {\r\n\r\n        this._lock = false;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.unlock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Отправка данных формы\r\n     */\r\n    send: function () {\r\n\r\n        if (this._lock) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            let isValid = this.validate();\r\n\r\n            if ( ! isValid) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let onsubmit = null;\r\n        let data     = this.getData();\r\n\r\n        if (typeof this._options.onSubmit === 'function') {\r\n            onsubmit = this._options.onSubmit;\r\n\r\n        } else if (typeof this._options.onSubmit === 'string') {\r\n            let func = coreuiFormUtils$1.getFunctionByName(this._options.onSubmit);\r\n            if (typeof func === 'function') {\r\n                onsubmit = func;\r\n            } else if (typeof func === 'string') {\r\n                eval(func);\r\n            }\r\n        }\r\n\r\n        if (typeof onsubmit === 'function') {\r\n            let onSubmitResult = onsubmit(this, data);\r\n\r\n            if (onSubmitResult === false) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let results    = this._trigger('send.coreui.form', this, [ this, data ]);\r\n        let isStopSend = false;\r\n\r\n        $.each(results, function(key, result) {\r\n            if (result === false) {\r\n                isStopSend = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        if (isStopSend) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.lock();\r\n\r\n        let that       = this;\r\n        let sendFormat = ['form', 'json'].indexOf(this._options.send.format) >= 0\r\n            ? this._options.send.format\r\n            : 'form';\r\n\r\n        let dataFormat  = null;\r\n        let contentType = null;\r\n\r\n        if (sendFormat === 'json') {\r\n            contentType = \"application/json; charset=utf-8\";\r\n            dataFormat  = JSON.stringify(data);\r\n\r\n        } else {\r\n            contentType = \"application/x-www-form-urlencoded; charset=UTF-8\";\r\n            dataFormat  = new FormData();\r\n\r\n            $.each(data, function (name, value) {\r\n                if (value instanceof File) {\r\n                    dataFormat.append(name, value, value.name);\r\n\r\n                } else if (value instanceof FileList) {\r\n                    $.each(value, function (key, file) {\r\n                        dataFormat.append(name, file, file.name);\r\n                    });\r\n\r\n                } else {\r\n                    dataFormat.append(name, value);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        $.ajax({\r\n            url: this._options.send.url,\r\n            method: this._options.send.method,\r\n            data: dataFormat,\r\n            contentType: contentType,\r\n            beforeSend: function(xhr) {\r\n                that._trigger('start-send.coreui.form', that, [ that, xhr ]);\r\n            },\r\n            success: function (result) {\r\n                that.hideError();\r\n\r\n                that._trigger('success-send.coreui.form', that, [ that, result ]);\r\n\r\n                let jsonResponse = null;\r\n\r\n                try {\r\n                    let parsedResponse = JSON.parse(result);\r\n                    if (typeof parsedResponse === 'object' &&\r\n                        parsedResponse !== null &&\r\n                        ! Array.isArray(parsedResponse)\r\n                    ) {\r\n                        jsonResponse = parsedResponse;\r\n                    }\r\n\r\n                } catch (e) {\r\n                    // ignore\r\n                }\r\n\r\n                if (jsonResponse !== null && typeof jsonResponse === 'object') {\r\n                    if (jsonResponse.hasOwnProperty('scripts') &&\r\n                        Array.isArray(jsonResponse.scripts)\r\n                    ) {\r\n                        $.each(jsonResponse.scripts, function (key, script) {\r\n                            if (typeof script === 'string') {\r\n                                let func = coreuiFormUtils$1.getFunctionByName(script);\r\n\r\n                                if (typeof func === 'function') {\r\n                                    func();\r\n                                } else {\r\n                                    eval(script);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (jsonResponse.hasOwnProperty('loadUrl') &&\r\n                        typeof jsonResponse.loadUrl === 'string'\r\n                    ) {\r\n                        location.href = jsonResponse.loadUrl;\r\n                    }\r\n                }\r\n            },\r\n            error: function(xhr, textStatus, errorThrown) {\r\n                let errorMessage = that.getLang().send_error || '';\r\n                let data         = {};\r\n\r\n                try {\r\n                    let parsedResponse = JSON.parse(xhr.responseText);\r\n                    if (typeof parsedResponse === 'object' &&\r\n                        parsedResponse !== null &&\r\n                        ! Array.isArray(parsedResponse)\r\n                    ) {\r\n                        data = parsedResponse;\r\n                    }\r\n\r\n                } catch (e) {\r\n                    // ignore\r\n                }\r\n\r\n                if (data.hasOwnProperty('error_message') &&\r\n                    typeof data.error_message === 'string' &&\r\n                    data.error_message !== ''\r\n                ) {\r\n                    errorMessage = data.error_message;\r\n                }\r\n\r\n                that.showError(errorMessage);\r\n                that._trigger('error-send.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n            },\r\n            complete: function(xhr, textStatus) {\r\n                that.unlock();\r\n                that._trigger('end-send.coreui.form', that, [ that, xhr, textStatus ]);\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return this._options;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение записи\r\n     * @returns {object}\r\n     */\r\n    getRecord: function () {\r\n\r\n        if (this._options.hasOwnProperty('record') && typeof this._options.record === 'object') {\r\n            return this._options.record;\r\n        }\r\n\r\n        return {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение данных с формы\r\n     * @returns {object}\r\n     */\r\n    getData: function () {\r\n\r\n        let data = {};\r\n\r\n        $.each(this._fields, function (key, field) {\r\n            let fieldOptions = field.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name) {\r\n                data[fieldOptions.name] = field.getValue();\r\n            }\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение полей\r\n     * @returns {object}\r\n     */\r\n    getFields: function () {\r\n        return this._fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение элементов управления\r\n     * @returns {object}\r\n     */\r\n    getControls: function () {\r\n        return this._controls;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение групп полей\r\n     * @returns {object}\r\n     */\r\n    getGroups: function () {\r\n        return this._groups;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение поля\r\n     * @param {string} name\r\n     * @returns {object}\r\n     */\r\n    getField: function (name) {\r\n\r\n        let field = {};\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            let fieldOptions = fieldInstance.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name === name) {\r\n                field = fieldInstance;\r\n            }\r\n        });\r\n\r\n        return field;\r\n    },\r\n\r\n\r\n    /**\r\n     * Смена состояний полей формы\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            fieldInstance.readonly(isReadonly);\r\n        });\r\n\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                if (isReadonly) {\r\n                    control.hide();\r\n                } else {\r\n                    control.show();\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ всех элементов управления\r\n     */\r\n    showControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.show();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие всех элементов управления\r\n     */\r\n    hideControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.hide();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Валидация полей\r\n     * @return {boolean}\r\n     */\r\n    validate: function () {\r\n\r\n        let isValid = true;\r\n\r\n        $.each(this._fields, function (key, field) {\r\n\r\n            if (field.isValid() === false) {\r\n                field.validate(false);\r\n                isValid = false;\r\n\r\n            } else {\r\n                field.validate(null);\r\n            }\r\n        });\r\n\r\n        return isValid;\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ сообщения с ошибкой\r\n     * @param {string} message\r\n     * @param {object} options\r\n     */\r\n    showError: function (message, options) {\r\n\r\n        let formContainer = $('#coreui-form-' + this._options.id + ' > form');\r\n        let formError     = formContainer.find('> .coreui-form__error');\r\n\r\n        if (formError[0]) {\r\n            formError.remove();\r\n        }\r\n\r\n        options = typeof options === 'object' && ! Array.isArray(options) && options !== null ? options : {};\r\n\r\n        if (typeof this._options.errorClass === 'string' && this._options.errorClass !== '') {\r\n            options.class = options.hasOwnProperty('class') ? options.class : '';\r\n            options.class += ' ' + this._options.errorClass;\r\n        }\r\n\r\n        let errorOptions = {\r\n            class:   options.hasOwnProperty('class') && typeof options.class === 'string' ? options.class : '',\r\n            dismiss: options.hasOwnProperty('dismiss') ? !! options.dismiss : true,\r\n        };\r\n\r\n        formContainer.prepend(\r\n            ejs.render(tpl['form-error.html'], {\r\n                message: message,\r\n                options: errorOptions,\r\n            })\r\n        );\r\n\r\n\r\n        if ( ! options.hasOwnProperty('scroll') || options.scroll) {\r\n            let scrollOffset = coreuiForm$1.getSetting('errorMessageScrollOffset');\r\n\r\n            $('html,body').animate({\r\n                scrollTop : formContainer.offset().top - scrollOffset\r\n            }, 'fast');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие сообщения с ошибкой\r\n     */\r\n    hideError: function () {\r\n\r\n        $('#coreui-form-' + this._options.id + ' > form > .coreui-form__error').remove();\r\n    },\r\n\r\n\r\n    /**\r\n     * @param eventName\r\n     * @param callback\r\n     * @param context\r\n     * @param singleExec\r\n     */\r\n    on: function(eventName, callback, context, singleExec) {\r\n        if (typeof this._events[eventName] !== 'object') {\r\n            this._events[eventName] = [];\r\n        }\r\n        this._events[eventName].push({\r\n            context : context || this,\r\n            callback: callback,\r\n            singleExec: !! singleExec,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление формы\r\n     */\r\n    destruct: function () {\r\n\r\n        $('#coreui-form-' + this._options.id).remove();\r\n        delete coreuiForm$1._instances[this.getId()];\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация поля\r\n     * @param field\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initField: function (field) {\r\n\r\n        if (typeof field !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : 'input';\r\n\r\n        if (type === 'group') {\r\n            return null;\r\n        }\r\n\r\n        if ( ! coreuiForm$1.fields.hasOwnProperty(type)) {\r\n            type = 'input';\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            field.readonly = true;\r\n        }\r\n\r\n\r\n        let fieldInstance = $.extend(true, {\r\n            render:        function () {},\r\n            renderContent: function () {},\r\n            init:          function () {},\r\n            getValue:      function () {},\r\n            setValue:      function () {},\r\n            getOptions:    function () {},\r\n            show:          function () {},\r\n            hide:          function () {},\r\n            readonly:      function () {},\r\n            validate:      function () {},\r\n            isValid:       function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        fieldInstance.init(this, field, this._fieldsIndex++);\r\n\r\n        this._fields.push(fieldInstance);\r\n\r\n        return fieldInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация группы\r\n     * @param group\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initGroup: function (group) {\r\n\r\n        if (typeof group !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = group.hasOwnProperty('type') && typeof group.type === 'string' ? group.type : '';\r\n\r\n        if (type !== 'group') {\r\n            return null;\r\n        }\r\n\r\n        let groupInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            expand:     function () {},\r\n            collapse:   function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        groupInstance.init(this, group, this._groupsIndex++);\r\n\r\n        this._groups.push(groupInstance);\r\n\r\n        return groupInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация контролов\r\n     * @param control\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initControl: function (control) {\r\n\r\n        if (typeof control !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : null;\r\n\r\n        if ( ! type || ! coreuiForm$1.controls.hasOwnProperty(type)) {\r\n            return null;\r\n        }\r\n\r\n        if (type === 'submit' && this._options.readonly) {\r\n            control.show = false;\r\n        }\r\n\r\n\r\n        let controlInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            show:       function () {},\r\n            hide:       function () {},\r\n        }, coreuiForm$1.controls[type]);\r\n\r\n        controlInstance.init(this, control, this._controlsIndex++);\r\n\r\n        this._controls.push(controlInstance);\r\n\r\n        return controlInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение настроек языка\r\n     * @private\r\n     */\r\n    getLang: function () {\r\n\r\n        return coreuiForm$1.lang.hasOwnProperty(this._options.lang)\r\n            ? coreuiForm$1.lang[this._options.lang]\r\n            : coreuiForm$1.lang['ru'];\r\n    },\r\n\r\n\r\n    /**\r\n     * @param name\r\n     * @param context\r\n     * @param params\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _trigger: function(name, context, params) {\r\n\r\n        params = params || [];\r\n        let results = [];\r\n\r\n        if (this._events[name] instanceof Object && this._events[name].length > 0) {\r\n            for (var i = 0; i < this._events[name].length; i++) {\r\n                let callback = this._events[name][i].callback;\r\n\r\n                context = context || this._events[name][i].context;\r\n\r\n                results.push(\r\n                    callback.apply(context, params)\r\n                );\r\n\r\n                if (this._events[name][i].singleExec) {\r\n                    this._events[name].splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n\r\n    /**\r\n     * @param {object} control\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderControl: function (control) {\r\n\r\n        let content = '';\r\n        let type    = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : 'text';\r\n\r\n        if (coreuiForm$1.control.hasOwnProperty(type)) {\r\n            content = coreuiForm$1.control[type].render(control);\r\n        }\r\n\r\n        return content;\r\n    }\r\n};\n\nvar coreuiForm$1 = {\r\n\r\n    lang: {},\r\n    fields: {},\r\n    controls: {},\r\n\r\n    _instances: {},\r\n    _settings: {\r\n        labelWidth: 200,\r\n        lang: 'en',\r\n        class: '',\r\n        sendDataFormat: 'form',\r\n        errorMessageScrollOffset: 70\r\n    },\r\n\r\n\r\n    /**\r\n     * Создание экземпляра формы\r\n     * @param {object} options\r\n     * @returns {coreuiFormInstance}\r\n     */\r\n    create: function (options) {\r\n\r\n        let instance = $.extend(true, {}, coreuiFormInstance);\r\n        instance._init(options instanceof Object ? options : {});\r\n\r\n        let formId = instance.getId();\r\n        this._instances[formId] = instance;\r\n\r\n        return instance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение экземпляра формы по id\r\n     * @param {string} id\r\n     * @returns {coreuiFormInstance|null}\r\n     */\r\n    get: function (id) {\r\n\r\n        if ( ! this._instances.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        if ($('#coreui-form-' + this._instances[id])[0]) {\r\n            delete this._instances[id];\r\n            return null;\r\n        }\r\n\r\n        return this._instances[id];\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка настроек\r\n     * @param {object} settings\r\n     */\r\n    setSettings: function(settings) {\r\n\r\n        this._settings = $.extend({}, this._settings, settings);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения настройки\r\n     * @param {string} name\r\n     */\r\n    getSetting: function(name) {\r\n\r\n        let value = null;\r\n\r\n        if (this._settings.hasOwnProperty(name)) {\r\n            value = this._settings[name];\r\n        }\r\n\r\n        return value;\r\n    }\r\n};\n\ncoreuiForm$1.lang.ru = {\r\n    \"modal_select\": \"Выбрать\",\r\n    \"modal_loading\": \"Загрузка...\",\r\n    \"switch_yes\": \"Да\",\r\n    \"switch_no\": \"Нет\",\r\n    \"dataset_add\": \"Добавить\",\r\n    \"date_months\": ['Январь','Февраль','Март','Апрель','Май','Июнь', 'Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\r\n    \"date_week\": \"неделя\",\r\n    \"send_error\": \"Произошла ошибка. Попробуйте снова или обратитесь к администратору\",\r\n    \"required_field\": \"Обязательное поле\",\r\n    \"repeat\": \"повторите\",\r\n    \"change\": \"изменить\",\r\n    \"cancel\": \"отмена\"\r\n};\n\ncoreuiForm$1.lang.en = {\r\n    \"modal_select\": \"Select\",\r\n    \"modal_loading\": \"Loading...\",\r\n    \"switch_yes\": \"Yes\",\r\n    \"switch_no\": \"No\",\r\n    \"dataset_add\": \"Add\",\r\n    \"date_months\": [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\r\n    \"date_week\": \"week\",\r\n    \"send_error\": \"An error has occurred. Please try again or contact your administrator\",\r\n    \"required_field\": \"Required field\",\r\n    \"repeat\": \"repeat\",\r\n    \"change\": \"change\",\r\n    \"cancel\": \"cancel\"\r\n};\n\ncoreuiForm$1.controls.button = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'button',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-secondary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'button';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils$1.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.custom = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'custom',\r\n        content: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form   = form;\r\n        this._index   = index;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return this._options.content;\r\n    }\r\n};\n\ncoreuiForm$1.controls.link = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'link',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-link'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/link.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > a')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.submit = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'submit',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        show: true,\r\n        attr: {\r\n            class: 'btn btn-sm btn-primary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    unlock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        button.find('.spinner-border').remove();\r\n        button.removeAttr('disabled');\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'submit';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.checkbox = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'checkbox',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: null,\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {object}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let values = [];\r\n\r\n            $('.content-' + this._hash + ' input[type=checkbox]:checked').each(function () {\r\n                values.push($(this).val());\r\n            });\r\n\r\n            return values;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значений в поле\r\n     * @param {object|null|string|number} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=radio]').prop('checked', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' input[type=radio]').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('checked', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that            = this;\r\n        let checkboxOptions = [];\r\n        let fieldOptions    = this.getOptions();\r\n        let selectedItems   = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'checkbox',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils$1.hashCode();\r\n\r\n                if (typeof(that._value) === 'object' &&\r\n                    Array.isArray(that._value)\r\n                ) {\r\n                    $.each(that._value, function (key, itemValue) {\r\n                        if (itemValue == option.value) {\r\n                            itemAttr.checked = 'checked';\r\n                            if (option.hasOwnProperty('text') && option.text) {\r\n                                selectedItems.push(option.text);\r\n                            }\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                } else if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItems.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                checkboxOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        let value = typeof this._value === 'object' && Array.isArray(this._value)\r\n            ? this._value.join(', ')\r\n            : this._value;\r\n\r\n        return ejs.render(tpl['fields/checkbox.html'], {\r\n            field: fieldOptions,\r\n            value: value,\r\n            render: {\r\n                options: checkboxOptions,\r\n                selectedItems: selectedItems\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.color = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'color',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-color d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            value: this._value\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.custom = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _options: {\r\n        type: 'custom',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        content: '',\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     */\r\n    getValue: function () {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options         = this.getOptions();\r\n        let content         = '';\r\n        let alloyComponents = [\r\n            'coreui.table',\r\n            'coreui.layout',\r\n            'coreui.panel',\r\n            'coreui.tabs',\r\n            'coreui.info',\r\n            'coreui.chart',\r\n        ];\r\n\r\n        if (typeof options.content === 'string') {\r\n            content = options.content;\r\n\r\n        } else if (options.content instanceof Object) {\r\n            if ( ! Array.isArray(options.content)) {\r\n                options.content = [ options.content ];\r\n            }\r\n\r\n            let components = [];\r\n\r\n            for (let i = 0; i < options.content.length; i++) {\r\n                if (typeof options.content[i] === 'string') {\r\n                    components.push(options.content[i]);\r\n\r\n                } else if ( ! Array.isArray(options.content[i]) &&\r\n                        options.content[i].hasOwnProperty('component') &&\r\n                        alloyComponents.indexOf(options.content[i].component) >= 0\r\n                ) {\r\n                    let name = options.content[i].component.split('.')[1];\r\n\r\n                    if (CoreUI.hasOwnProperty(name) &&\r\n                        typeof CoreUI[name] === \"object\" &&\r\n                        CoreUI[name] !== null &&\r\n                        ! Array.isArray(CoreUI[name])\r\n                    ) {\r\n                        let instance = CoreUI[name].create(options.content[i]);\r\n                        components.push(instance.render());\r\n\r\n                        this._form.on('shown.coreui.form', instance.initEvents, instance, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            content = components.join('');\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/custom.html'], {\r\n            content: content\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.dataset = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: [],\r\n    _renderOptions: [],\r\n    _options: {\r\n        type: 'dataset',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let name = option.hasOwnProperty('name') && ['string', 'number'].indexOf(typeof (option.name)) >= 0\r\n                    ? option.name\r\n                    : '';\r\n                let type = option.hasOwnProperty('type') && typeof (option.type) === 'string'\r\n                    ? option.type\r\n                    : 'text';\r\n                let attributes = option.hasOwnProperty('attr') && typeof (option.attr) === 'object' && ! Array.isArray(option.attr)\r\n                    ? option.attr\r\n                    : {};\r\n                let items = option.hasOwnProperty('items') && typeof (option.items) === 'object' && Array.isArray(option.items)\r\n                    ? option.items\r\n                    : [];\r\n                let valueY = option.hasOwnProperty('valueY') && ['string', 'numeric'].indexOf(typeof (option.valueY)) >= 0\r\n                    ? option.valueY\r\n                    : 'Y';\r\n                let valueN = option.hasOwnProperty('valueN') && ['string', 'numeric'].indexOf(typeof (option.valueN)) >= 0\r\n                    ? option.valueN\r\n                    : 'N';\r\n\r\n                if (name) {\r\n                    attributes.name = name;\r\n                }\r\n                if (options.required) {\r\n                    attributes.required = 'required';\r\n                }\r\n\r\n                if (type === 'select') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-select form-select-sm ' + attributes.class\r\n                        : 'form-select form-select-sm';\r\n\r\n                } else if (type === 'switch') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-check-input ' + attributes.class\r\n                        : 'form-check-input';\r\n\r\n                    attributes.type = 'checkbox';\r\n                    attributes.value = valueY;\r\n\r\n                } else {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-control form-control-sm ' + attributes.class\r\n                        : 'form-control form-control-sm';\r\n\r\n                    attributes.type = type;\r\n                }\r\n\r\n\r\n                that._renderOptions.push({\r\n                    type  : type,\r\n                    name  : name,\r\n                    attr  : attributes,\r\n                    items : items,\r\n                    valueY: valueY,\r\n                    valueN: valueN,\r\n                });\r\n            });\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {array}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let container = $('.content-' + this._hash);\r\n            let data      = [];\r\n\r\n            $('.coreui-form__field-dataset-list .coreui-form__field-dataset-item', container).each(function () {\r\n                let items = {};\r\n\r\n                $.each($(this).find('input, select').serializeArray(), function (key, item) {\r\n                    if (item.name) {\r\n                        items[item.name] = item.value;\r\n                    }\r\n                });\r\n\r\n                data.push(items);\r\n            });\r\n\r\n            return data;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (typeof value !== 'object' ||\r\n            Array.isArray(value) ||\r\n            value === null\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this._value.push(value);\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash + ' .coreui-form__field-dataset-list').append(\r\n                this._renderRowReadonly(value)\r\n            );\r\n        } else {\r\n            this._eventAdd(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление всех строк\r\n     */\r\n    removeItems: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' .coreui-form__field-dataset-list').empty();\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление строки по id\r\n     * @param {int} itemId\r\n     */\r\n    removeItem: function (itemId) {\r\n\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        $('#' + itemId).hide('fast', function () {\r\n            $('#' + itemId).remove();\r\n\r\n            if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n                $(element + ' .coreui-form__field-dataset-container').hide();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRow(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRowReadonly(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        // Кнопка удаления\r\n        $(element + ' .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n\r\n        // Кнопка добавления\r\n        $(element + ' .btn-dataset-add').click(function () {\r\n            that._eventAdd();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Событие добавления\r\n     */\r\n    _eventAdd: function (row) {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n        row = row || {};\r\n\r\n        if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n            $(element + ' .coreui-form__field-dataset-container').show();\r\n        }\r\n\r\n        $(element + ' .coreui-form__field-dataset-list').append(this._renderRow(row));\r\n        $(element + ' .coreui-form__field-dataset-item:last-child .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRow: function (row) {\r\n\r\n        let rowOptions  = [];\r\n        let itemOptions = [];\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let cellValue = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n                    let itemAttr = {};\r\n\r\n\r\n                    $.each(item, function (name, value) {\r\n                        if (name !== 'title') {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    });\r\n\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemAttr.selected = 'selected';\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemAttr.selected = 'selected';\r\n                    }\r\n\r\n                    let attributes = [];\r\n                    $.each(itemAttr, function (name, value) {\r\n                        attributes.push(name + '=\"' + value + '\"');\r\n                    });\r\n\r\n                    itemOptions.push({\r\n                        attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                        title: title\r\n                    });\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                if (cellValue == option.valueY) {\r\n                    option.attr.checked = 'checked';\r\n                }\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    option.attr.value = cellValue !== null ? cellValue : '';\r\n                }\r\n            }\r\n\r\n            let attributes = [];\r\n\r\n            $.each(option.attr, function (name, value) {\r\n                attributes.push(name + '=\"' + value + '\"');\r\n            });\r\n\r\n            rowOptions.push({\r\n                type: option.type,\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                items: itemOptions\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row.html'], {\r\n            hashItem: coreuiFormUtils$1.hashCode(),\r\n            options: rowOptions,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRowReadonly: function (row) {\r\n\r\n        let rowOptions = [];\r\n        let lang       = this._form.getLang();\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let optionValue = '';\r\n            let cellValue   = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                let itemOptions = [];\r\n\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemOptions.push(itemValue);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemOptions.push(cellValue);\r\n                    }\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                let valueY = 'Y';\r\n\r\n                if (option.hasOwnProperty('valueY')) {\r\n                    valueY = option.valueY;\r\n                }\r\n\r\n                optionValue = cellValue == valueY\r\n                    ? lang.switch_yes\r\n                    : lang.switch_no;\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    optionValue = cellValue;\r\n\r\n                    switch (option.type) {\r\n                        case 'date':           optionValue = coreuiFormUtils$1.formatDate(optionValue); break;\r\n                        case 'datetime-local': optionValue = coreuiFormUtils$1.formatDateTime(optionValue); break;\r\n                        case 'month':          optionValue = coreuiFormUtils$1.formatDateMonth(optionValue, lang); break;\r\n                        case 'week':           optionValue = coreuiFormUtils$1.formatDateWeek(optionValue, lang); break;\r\n                        default: optionValue = cellValue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            rowOptions.push({\r\n                value: optionValue\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row-readonly.html'], {\r\n            options: rowOptions,\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.group = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _options: {\r\n        type: 'group',\r\n        label: '',\r\n        show: true,\r\n        showCollapsible: true,\r\n        fields: [],\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-group-\" + index;\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие группы\r\n     * @param {int} duration\r\n     */\r\n    collapse: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-down');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-right');\r\n\r\n        $(container + ' .coreui-form__group_content').slideUp(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ группы\r\n     * @param {int} duration\r\n     */\r\n    expand: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-right');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-down');\r\n\r\n        $(container + ' .coreui-form__group_content').slideDown(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-group.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            group: this._options,\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {string}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fields = [];\r\n        let that   = this;\r\n\r\n        $.each(this._options.fields, function (key, field) {\r\n\r\n            let fieldInstance = that._form.initField(field);\r\n\r\n            if (typeof fieldInstance !== 'object') {\r\n                return;\r\n            }\r\n\r\n            fields.push(fieldInstance.render());\r\n        });\r\n\r\n        return fields.join('');\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.showCollapsible) {\r\n            let that      = this;\r\n            let container = '#coreui-form-' + this._id;\r\n\r\n            $(container + ' > .coreui-form__group_label .btn-collapsible').click(function () {\r\n\r\n                if ($(container + ' > .coreui-form__group_content').is(':visible')) {\r\n                    that.collapse(80);\r\n                } else {\r\n                    that.expand(80);\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.hidden = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'hidden',\r\n        name: null,\r\n        attr: {},\r\n        required: null,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('#coreui-form-' + this._id).val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if ( ! this._options.readonly) {\r\n            $('#coreui-form-' + this._id).val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-content.html'], {\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n\r\n        options.attr.id = 'coreui-form-' + this._id;\r\n\r\n        if (options.name) {\r\n            options.attr.name = options.name;\r\n        }\r\n\r\n        options.attr.type  = 'hidden';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/hidden.html'], {\r\n            value: this._value !== null ? this._value : '',\r\n            field: options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.input = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'text',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils$1.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils$1.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils$1.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils$1.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\n/**\n * jquery.mask.js\n * @version: v1.14.16\n * @author: Igor Escobar\n *\n * Created by Igor Escobar on 2012-03-10. Please report any bug at github.com/igorescobar/jQuery-Mask-Plugin\n *\n * Copyright (c) 2012 Igor Escobar http://igorescobar.com\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* jshint laxbreak: true */\n/* jshint maxcomplexity:17 */\n/* global define */\n\n// UMD (Universal Module Definition) patterns for JavaScript modules that work everywhere.\n// https://github.com/umdjs/umd/blob/master/templates/jqueryPlugin.js\n(function (factory, jQuery, Zepto) {\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object' && typeof Meteor === 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery || Zepto);\n    }\n\n}(function ($) {\n    'use strict';\n\n    var Mask = function (el, mask, options) {\n\n        var p = {\n            invalid: [],\n            getCaret: function () {\n                try {\n                    var sel,\n                        pos = 0,\n                        ctrl = el.get(0),\n                        dSel = document.selection,\n                        cSelStart = ctrl.selectionStart;\n\n                    // IE Support\n                    if (dSel && navigator.appVersion.indexOf('MSIE 10') === -1) {\n                        sel = dSel.createRange();\n                        sel.moveStart('character', -p.val().length);\n                        pos = sel.text.length;\n                    }\n                    // Firefox support\n                    else if (cSelStart || cSelStart === '0') {\n                        pos = cSelStart;\n                    }\n\n                    return pos;\n                } catch (e) {}\n            },\n            setCaret: function(pos) {\n                try {\n                    if (el.is(':focus')) {\n                        var range, ctrl = el.get(0);\n\n                        // Firefox, WebKit, etc..\n                        if (ctrl.setSelectionRange) {\n                            ctrl.setSelectionRange(pos, pos);\n                        } else { // IE\n                            range = ctrl.createTextRange();\n                            range.collapse(true);\n                            range.moveEnd('character', pos);\n                            range.moveStart('character', pos);\n                            range.select();\n                        }\n                    }\n                } catch (e) {}\n            },\n            events: function() {\n                el\n                .on('keydown.mask', function(e) {\n                    el.data('mask-keycode', e.keyCode || e.which);\n                    el.data('mask-previus-value', el.val());\n                    el.data('mask-previus-caret-pos', p.getCaret());\n                    p.maskDigitPosMapOld = p.maskDigitPosMap;\n                })\n                .on($.jMaskGlobals.useInput ? 'input.mask' : 'keyup.mask', p.behaviour)\n                .on('paste.mask drop.mask', function() {\n                    setTimeout(function() {\n                        el.keydown().keyup();\n                    }, 100);\n                })\n                .on('change.mask', function(){\n                    el.data('changed', true);\n                })\n                .on('blur.mask', function(){\n                    if (oldValue !== p.val() && !el.data('changed')) {\n                        el.trigger('change');\n                    }\n                    el.data('changed', false);\n                })\n                // it's very important that this callback remains in this position\n                // otherwhise oldValue it's going to work buggy\n                .on('blur.mask', function() {\n                    oldValue = p.val();\n                })\n                // select all text on focus\n                .on('focus.mask', function (e) {\n                    if (options.selectOnFocus === true) {\n                        $(e.target).select();\n                    }\n                })\n                // clear the value if it not complete the mask\n                .on('focusout.mask', function() {\n                    if (options.clearIfNotMatch && !regexMask.test(p.val())) {\n                       p.val('');\n                   }\n                });\n            },\n            getRegexMask: function() {\n                var maskChunks = [], translation, pattern, optional, recursive, oRecursive, r;\n\n                for (var i = 0; i < mask.length; i++) {\n                    translation = jMask.translation[mask.charAt(i)];\n\n                    if (translation) {\n\n                        pattern = translation.pattern.toString().replace(/.{1}$|^.{1}/g, '');\n                        optional = translation.optional;\n                        recursive = translation.recursive;\n\n                        if (recursive) {\n                            maskChunks.push(mask.charAt(i));\n                            oRecursive = {digit: mask.charAt(i), pattern: pattern};\n                        } else {\n                            maskChunks.push(!optional && !recursive ? pattern : (pattern + '?'));\n                        }\n\n                    } else {\n                        maskChunks.push(mask.charAt(i).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n                    }\n                }\n\n                r = maskChunks.join('');\n\n                if (oRecursive) {\n                    r = r.replace(new RegExp('(' + oRecursive.digit + '(.*' + oRecursive.digit + ')?)'), '($1)?')\n                         .replace(new RegExp(oRecursive.digit, 'g'), oRecursive.pattern);\n                }\n\n                return new RegExp(r);\n            },\n            destroyEvents: function() {\n                el.off(['input', 'keydown', 'keyup', 'paste', 'drop', 'blur', 'focusout', ''].join('.mask '));\n            },\n            val: function(v) {\n                var isInput = el.is('input'),\n                    method = isInput ? 'val' : 'text',\n                    r;\n\n                if (arguments.length > 0) {\n                    if (el[method]() !== v) {\n                        el[method](v);\n                    }\n                    r = el;\n                } else {\n                    r = el[method]();\n                }\n\n                return r;\n            },\n            calculateCaretPosition: function(oldVal) {\n                var newVal = p.getMasked(),\n                    caretPosNew = p.getCaret();\n                if (oldVal !== newVal) {\n                    var caretPosOld = el.data('mask-previus-caret-pos') || 0,\n                        newValL = newVal.length,\n                        oldValL = oldVal.length,\n                        maskDigitsBeforeCaret = 0,\n                        maskDigitsAfterCaret = 0,\n                        maskDigitsBeforeCaretAll = 0,\n                        maskDigitsBeforeCaretAllOld = 0,\n                        i = 0;\n\n                    for (i = caretPosNew; i < newValL; i++) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsAfterCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsBeforeCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMap[i]) {\n                            maskDigitsBeforeCaretAll++;\n                        }\n                    }\n\n                    for (i = caretPosOld - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMapOld[i]) {\n                            maskDigitsBeforeCaretAllOld++;\n                        }\n                    }\n\n                    // if the cursor is at the end keep it there\n                    if (caretPosNew > oldValL) {\n                      caretPosNew = newValL * 10;\n                    } else if (caretPosOld >= caretPosNew && caretPosOld !== oldValL) {\n                        if (!p.maskDigitPosMapOld[caretPosNew])  {\n                          var caretPos = caretPosNew;\n                          caretPosNew -= maskDigitsBeforeCaretAllOld - maskDigitsBeforeCaretAll;\n                          caretPosNew -= maskDigitsBeforeCaret;\n                          if (p.maskDigitPosMap[caretPosNew])  {\n                            caretPosNew = caretPos;\n                          }\n                        }\n                    }\n                    else if (caretPosNew > caretPosOld) {\n                        caretPosNew += maskDigitsBeforeCaretAll - maskDigitsBeforeCaretAllOld;\n                        caretPosNew += maskDigitsAfterCaret;\n                    }\n                }\n                return caretPosNew;\n            },\n            behaviour: function(e) {\n                e = e || window.event;\n                p.invalid = [];\n\n                var keyCode = el.data('mask-keycode');\n\n                if ($.inArray(keyCode, jMask.byPassKeys) === -1) {\n                    var newVal = p.getMasked(),\n                        caretPos = p.getCaret(),\n                        oldVal = el.data('mask-previus-value') || '';\n\n                    // this is a compensation to devices/browsers that don't compensate\n                    // caret positioning the right way\n                    setTimeout(function() {\n                      p.setCaret(p.calculateCaretPosition(oldVal));\n                    }, $.jMaskGlobals.keyStrokeCompensation);\n\n                    p.val(newVal);\n                    p.setCaret(caretPos);\n                    return p.callbacks(e);\n                }\n            },\n            getMasked: function(skipMaskChars, val) {\n                var buf = [],\n                    value = val === undefined ? p.val() : val + '',\n                    m = 0, maskLen = mask.length,\n                    v = 0, valLen = value.length,\n                    offset = 1, addMethod = 'push',\n                    resetPos = -1,\n                    maskDigitCount = 0,\n                    maskDigitPosArr = [],\n                    lastMaskChar,\n                    check;\n\n                if (options.reverse) {\n                    addMethod = 'unshift';\n                    offset = -1;\n                    lastMaskChar = 0;\n                    m = maskLen - 1;\n                    v = valLen - 1;\n                    check = function () {\n                        return m > -1 && v > -1;\n                    };\n                } else {\n                    lastMaskChar = maskLen - 1;\n                    check = function () {\n                        return m < maskLen && v < valLen;\n                    };\n                }\n\n                var lastUntranslatedMaskChar;\n                while (check()) {\n                    var maskDigit = mask.charAt(m),\n                        valDigit = value.charAt(v),\n                        translation = jMask.translation[maskDigit];\n\n                    if (translation) {\n                        if (valDigit.match(translation.pattern)) {\n                            buf[addMethod](valDigit);\n                             if (translation.recursive) {\n                                if (resetPos === -1) {\n                                    resetPos = m;\n                                } else if (m === lastMaskChar && m !== resetPos) {\n                                    m = resetPos - offset;\n                                }\n\n                                if (lastMaskChar === resetPos) {\n                                    m -= offset;\n                                }\n                            }\n                            m += offset;\n                        } else if (valDigit === lastUntranslatedMaskChar) {\n                            // matched the last untranslated (raw) mask character that we encountered\n                            // likely an insert offset the mask character from the last entry; fall\n                            // through and only increment v\n                            maskDigitCount--;\n                            lastUntranslatedMaskChar = undefined;\n                        } else if (translation.optional) {\n                            m += offset;\n                            v -= offset;\n                        } else if (translation.fallback) {\n                            buf[addMethod](translation.fallback);\n                            m += offset;\n                            v -= offset;\n                        } else {\n                          p.invalid.push({p: v, v: valDigit, e: translation.pattern});\n                        }\n                        v += offset;\n                    } else {\n                        if (!skipMaskChars) {\n                            buf[addMethod](maskDigit);\n                        }\n\n                        if (valDigit === maskDigit) {\n                            maskDigitPosArr.push(v);\n                            v += offset;\n                        } else {\n                            lastUntranslatedMaskChar = maskDigit;\n                            maskDigitPosArr.push(v + maskDigitCount);\n                            maskDigitCount++;\n                        }\n\n                        m += offset;\n                    }\n                }\n\n                var lastMaskCharDigit = mask.charAt(lastMaskChar);\n                if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {\n                    buf.push(lastMaskCharDigit);\n                }\n\n                var newVal = buf.join('');\n                p.mapMaskdigitPositions(newVal, maskDigitPosArr, valLen);\n                return newVal;\n            },\n            mapMaskdigitPositions: function(newVal, maskDigitPosArr, valLen) {\n              var maskDiff = options.reverse ? newVal.length - valLen : 0;\n              p.maskDigitPosMap = {};\n              for (var i = 0; i < maskDigitPosArr.length; i++) {\n                p.maskDigitPosMap[maskDigitPosArr[i] + maskDiff] = 1;\n              }\n            },\n            callbacks: function (e) {\n                var val = p.val(),\n                    changed = val !== oldValue,\n                    defaultArgs = [val, e, el, options],\n                    callback = function(name, criteria, args) {\n                        if (typeof options[name] === 'function' && criteria) {\n                            options[name].apply(this, args);\n                        }\n                    };\n\n                callback('onChange', changed === true, defaultArgs);\n                callback('onKeyPress', changed === true, defaultArgs);\n                callback('onComplete', val.length === mask.length, defaultArgs);\n                callback('onInvalid', p.invalid.length > 0, [val, e, el, p.invalid, options]);\n            }\n        };\n\n        el = $(el);\n        var jMask = this, oldValue = p.val(), regexMask;\n\n        mask = typeof mask === 'function' ? mask(p.val(), undefined, el,  options) : mask;\n\n        // public methods\n        jMask.mask = mask;\n        jMask.options = options;\n        jMask.remove = function() {\n            var caret = p.getCaret();\n            if (jMask.options.placeholder) {\n                el.removeAttr('placeholder');\n            }\n            if (el.data('mask-maxlength')) {\n                el.removeAttr('maxlength');\n            }\n            p.destroyEvents();\n            p.val(jMask.getCleanVal());\n            p.setCaret(caret);\n            return el;\n        };\n\n        // get value without mask\n        jMask.getCleanVal = function() {\n           return p.getMasked(true);\n        };\n\n        // get masked value without the value being in the input or element\n        jMask.getMaskedVal = function(val) {\n           return p.getMasked(false, val);\n        };\n\n       jMask.init = function(onlyMask) {\n            onlyMask = onlyMask || false;\n            options = options || {};\n\n            jMask.clearIfNotMatch  = $.jMaskGlobals.clearIfNotMatch;\n            jMask.byPassKeys       = $.jMaskGlobals.byPassKeys;\n            jMask.translation      = $.extend({}, $.jMaskGlobals.translation, options.translation);\n\n            jMask = $.extend(true, {}, jMask, options);\n\n            regexMask = p.getRegexMask();\n\n            if (onlyMask) {\n                p.events();\n                p.val(p.getMasked());\n            } else {\n                if (options.placeholder) {\n                    el.attr('placeholder' , options.placeholder);\n                }\n\n                // this is necessary, otherwise if the user submit the form\n                // and then press the \"back\" button, the autocomplete will erase\n                // the data. Works fine on IE9+, FF, Opera, Safari.\n                if (el.data('mask')) {\n                  el.attr('autocomplete', 'off');\n                }\n\n                // detect if is necessary let the user type freely.\n                // for is a lot faster than forEach.\n                for (var i = 0, maxlength = true; i < mask.length; i++) {\n                    var translation = jMask.translation[mask.charAt(i)];\n                    if (translation && translation.recursive) {\n                        maxlength = false;\n                        break;\n                    }\n                }\n\n                if (maxlength) {\n                    el.attr('maxlength', mask.length).data('mask-maxlength', true);\n                }\n\n                p.destroyEvents();\n                p.events();\n\n                var caret = p.getCaret();\n                p.val(p.getMasked());\n                p.setCaret(caret);\n            }\n        };\n\n        jMask.init(!el.is('input'));\n    };\n\n    $.maskWatchers = {};\n    var HTMLAttributes = function () {\n        var input = $(this),\n            options = {},\n            prefix = 'data-mask-',\n            mask = input.attr('data-mask');\n\n        if (input.attr(prefix + 'reverse')) {\n            options.reverse = true;\n        }\n\n        if (input.attr(prefix + 'clearifnotmatch')) {\n            options.clearIfNotMatch = true;\n        }\n\n        if (input.attr(prefix + 'selectonfocus') === 'true') {\n           options.selectOnFocus = true;\n        }\n\n        if (notSameMaskObject(input, mask, options)) {\n            return input.data('mask', new Mask(this, mask, options));\n        }\n    },\n    notSameMaskObject = function(field, mask, options) {\n        options = options || {};\n        var maskObject = $(field).data('mask'),\n            stringify = JSON.stringify,\n            value = $(field).val() || $(field).text();\n        try {\n            if (typeof mask === 'function') {\n                mask = mask(value);\n            }\n            return typeof maskObject !== 'object' || stringify(maskObject.options) !== stringify(options) || maskObject.mask !== mask;\n        } catch (e) {}\n    },\n    eventSupported = function(eventName) {\n        var el = document.createElement('div'), isSupported;\n\n        eventName = 'on' + eventName;\n        isSupported = (eventName in el);\n\n        if ( !isSupported ) {\n            el.setAttribute(eventName, 'return;');\n            isSupported = typeof el[eventName] === 'function';\n        }\n        el = null;\n\n        return isSupported;\n    };\n\n    $.fn.mask = function(mask, options) {\n        options = options || {};\n        var selector = this.selector,\n            globals = $.jMaskGlobals,\n            interval = globals.watchInterval,\n            watchInputs = options.watchInputs || globals.watchInputs,\n            maskFunction = function() {\n                if (notSameMaskObject(this, mask, options)) {\n                    return $(this).data('mask', new Mask(this, mask, options));\n                }\n            };\n\n        $(this).each(maskFunction);\n\n        if (selector && selector !== '' && watchInputs) {\n            clearInterval($.maskWatchers[selector]);\n            $.maskWatchers[selector] = setInterval(function(){\n                $(document).find(selector).each(maskFunction);\n            }, interval);\n        }\n        return this;\n    };\n\n    $.fn.masked = function(val) {\n        return this.data('mask').getMaskedVal(val);\n    };\n\n    $.fn.unmask = function() {\n        clearInterval($.maskWatchers[this.selector]);\n        delete $.maskWatchers[this.selector];\n        return this.each(function() {\n            var dataMask = $(this).data('mask');\n            if (dataMask) {\n                dataMask.remove().removeData('mask');\n            }\n        });\n    };\n\n    $.fn.cleanVal = function() {\n        return this.data('mask').getCleanVal();\n    };\n\n    $.applyDataMask = function(selector) {\n        selector = selector || $.jMaskGlobals.maskElements;\n        var $selector = (selector instanceof $) ? selector : $(selector);\n        $selector.filter($.jMaskGlobals.dataMaskAttr).each(HTMLAttributes);\n    };\n\n    var globals = {\n        maskElements: 'input,td,span,div',\n        dataMaskAttr: '*[data-mask]',\n        dataMask: true,\n        watchInterval: 300,\n        watchInputs: true,\n        keyStrokeCompensation: 10,\n        // old versions of chrome dont work great with input event\n        useInput: !/Chrome\\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && eventSupported('input'),\n        watchDataMask: false,\n        byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91],\n        translation: {\n            '0': {pattern: /\\d/},\n            '9': {pattern: /\\d/, optional: true},\n            '#': {pattern: /\\d/, recursive: true},\n            'A': {pattern: /[a-zA-Z0-9]/},\n            'S': {pattern: /[a-zA-Z]/}\n        }\n    };\n\n    $.jMaskGlobals = $.jMaskGlobals || {};\n    globals = $.jMaskGlobals = $.extend(true, {}, globals, $.jMaskGlobals);\n\n    // looking for inputs with data-mask attribute\n    if (globals.dataMask) {\n        $.applyDataMask();\n    }\n\n    setInterval(function() {\n        if ($.jMaskGlobals.watchDataMask) {\n            $.applyDataMask();\n        }\n    }, globals.watchInterval);\n}, window.jQuery, window.Zepto));\n\ncoreuiForm$1.fields.mask = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'mask',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        value = value.replace(/[^\\d\\w]/g, '');\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'text';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : ''\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' input')\r\n            .mask(this._options.mask, this._options.options);\r\n    }\r\n};\n\ncoreuiForm$1.fields.modal = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: '',\r\n    _text: '',\r\n    _options: {\r\n        type: 'modal',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        fields: [],\r\n        options: {\r\n            title: '',\r\n            size: 'lg',\r\n            url: '',\r\n            onHidden: null,\r\n            onClear: null,\r\n            onChange: null,\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n\r\n        if (typeof options.name === 'string' &&\r\n            formRecord.hasOwnProperty(options.name) &&\r\n            ['object'].indexOf(typeof formRecord[options.name]) >= 0\r\n        ) {\r\n            let record = formRecord[options.name];\r\n\r\n            this._value = record.hasOwnProperty('value') && ['number', 'string'].indexOf(typeof(record.value)) >= 0 ? record.value : '';\r\n            this._text  = record.hasOwnProperty('text') && ['number', 'string'].indexOf(typeof(record.text)) >= 0 ? record.text : '';\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input.coreui-form-modal-value').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     * @param {string} text\r\n     */\r\n    setValue: function (value, text) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(text);\r\n\r\n        } else {\r\n            let elementValue = $('.content-' + this._hash + ' .coreui-form-modal-value');\r\n            let elementText  = $('.content-' + this._hash + ' .coreui-form-modal-text');\r\n            let oldValue     = elementValue.val();\r\n\r\n            elementValue.val(value);\r\n            elementText.val(text);\r\n\r\n\r\n            if (oldValue != value) {\r\n                let modal = this._options.hasOwnProperty('options') && typeof (this._options.options) === 'object'\r\n                    ? this._options.options\r\n                    : {};\r\n\r\n                if (modal.hasOwnProperty('onChange')) {\r\n                    if (typeof(modal.onChange) === 'function') {\r\n                        modal.onChange(this);\r\n\r\n                    } else if (typeof(modal.onChange) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onChange);\r\n\r\n                        if (typeof func === 'function') {\r\n                            func(this);\r\n                        } else {\r\n                            eval(modal.onChange);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this._form._trigger('change-modal.coreui.form', this, [this]);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fieldOptions = this.getOptions();\r\n        let attributes   = [];\r\n        let textAttr     = {\r\n            type: 'text',\r\n            readonly: 'readonly',\r\n            class: 'form-control form-control-sm coreui-form-modal-text',\r\n            value: this._text !== null ? this._text : ''\r\n        };\r\n\r\n        if (fieldOptions.required) {\r\n            textAttr.required = 'required';\r\n        }\r\n\r\n        if (fieldOptions.hasOwnProperty('attr') &&\r\n            typeof fieldOptions.attr === 'object' &&\r\n            Array.isArray(fieldOptions.attr)\r\n        ) {\r\n            textAttr = coreuiFormUtils$1.mergeAttr(textAttr, fieldOptions.attr);\r\n        }\r\n\r\n        $.each(textAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/modal.html'], {\r\n            field: fieldOptions,\r\n            value: this._value !== null ? this._value : '',\r\n            text: this._text !== null ? this._text : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                width: this._options.width,\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that  = this;\r\n        let modal = this._options.hasOwnProperty('options') && typeof(this._options.options) === 'object'\r\n            ? this._options.options\r\n            : {};\r\n\r\n\r\n        // Очистка\r\n        $('.content-' + this._hash + ' .btn-modal-clear').click(function (e) {\r\n            if (modal.hasOwnProperty('onClear')) {\r\n                if (typeof(modal.onClear) === 'function') {\r\n                    modal.onClear(that);\r\n\r\n                } else if (typeof(modal.onClear) === 'string') {\r\n                    let func = coreuiFormUtils$1.getFunctionByName(modal.onClear);\r\n\r\n                    if (typeof func === 'function') {\r\n                        func(that);\r\n                    } else {\r\n                        eval(modal.onClear);\r\n                    }\r\n                }\r\n            }\r\n\r\n            that._form._trigger('clear-modal.coreui.form', that, [ that, e ]);\r\n\r\n            that.setValue('', '');\r\n        });\r\n\r\n        // Выбор\r\n        $('.content-' + this._hash + ' .btn-modal-select').click(function (e) {\r\n            let title = modal.hasOwnProperty('title') && typeof(modal.title) === 'string'\r\n                ? modal.title\r\n                : '';\r\n\r\n            let size = modal.hasOwnProperty('size') && typeof(modal.size) === 'string'\r\n                ? modal.size\r\n                : 'lg';\r\n\r\n            let url = modal.hasOwnProperty('url') && typeof(modal.url) === 'string'\r\n                ? modal.url\r\n                : '';\r\n\r\n            if ( ! url) {\r\n                return;\r\n            }\r\n\r\n\r\n            let modalId      = coreuiFormUtils$1.hashCode();\r\n            let modalLoading = ejs.render(tpl['fields/modal-loading.html'], {\r\n                lang: that._form.getLang(),\r\n            });\r\n\r\n\r\n            if (CoreUI.hasOwnProperty('modal')) {\r\n                let onShow   = null;\r\n                let onHidden = null;\r\n\r\n                if (modal.hasOwnProperty('onHidden')) {\r\n                    if (typeof(modal.onHidden) === 'function') {\r\n                        onHidden = modal.onHidden;\r\n\r\n                    } else if (typeof(modal.onHidden) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onHidden);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onHidden = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (modal.hasOwnProperty('onShow')) {\r\n                    if (typeof(modal.onShow) === 'function') {\r\n                        onShow = modal.onShow;\r\n\r\n                    } else if (typeof(modal.onShow) === 'string') {\r\n                        let func = coreuiFormUtils$1.getFunctionByName(modal.onShow);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onShow = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                CoreUI.modal.show(title, modalLoading, {\r\n                    id: modalId,\r\n                    size: size,\r\n                    onShow: onShow,\r\n                    onHidden: onHidden\r\n                });\r\n            }\r\n\r\n            $.ajax({\r\n                url: url,\r\n                method: 'GET',\r\n                beforeSend: function(xhr) {\r\n                    that._form._trigger('before-load-modal.coreui.form', that, [ that, xhr ]);\r\n                },\r\n                success: function (result) {\r\n                    $('#modal-' + modalId + ' .modal-body').html(result);\r\n                    that._form._trigger('success-load-modal.coreui.form', that, [ that, result ]);\r\n                },\r\n                error: function(xhr, textStatus, errorThrown) {\r\n                    that._form._trigger('error-load-modal.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n                },\r\n                complete: function(xhr, textStatus) {\r\n                    that._form._trigger('complete-load-modal.coreui.form', that, [ that, xhr, textStatus ]);\r\n                },\r\n            });\r\n\r\n\r\n            that._form._trigger('select-modal.coreui.form', that, [ that, e ]);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.number = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'number',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block',\r\n            step: 'any'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null,\r\n        precision: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        // Установка точности\r\n        if (this._options.precision === null) {\r\n            let precision = 0;\r\n\r\n            if (this._options.attr.hasOwnProperty('step') &&\r\n                this._options.attr.step !== 'any' &&\r\n                ['string', 'number'].indexOf(typeof this._options.attr.step) >= 0\r\n            ) {\r\n                let match = $.trim(this._options.attr.step.toString()).match(/\\.(\\d+)$/);\r\n\r\n                if (match && match.hasOwnProperty(1)) {\r\n                    precision = match ? match[1].length : precision;\r\n                }\r\n            }\r\n\r\n            this._options.precision = precision;\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0 ||\r\n            ! value.toString().match(/^\\-?\\d+\\.?\\d*$/)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.precision >= 0) {\r\n            value = coreuiFormUtils$1.round(value, this._options.precision);\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('min')) {\r\n            value = value < Number(this._options.attr.min)\r\n                ? Number(this._options.attr.min)\r\n                : value;\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('max')) {\r\n            value = value > Number(this._options.attr.max)\r\n                ? Number(this._options.attr.max)\r\n                : value;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = $.extend(true, {}, this._options);\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'number';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('.content-' + this._hash + ' input').keydown(function (e) {\r\n            let k = e.keyCode || e.which;\r\n            let ok = k >= 35 && k <= 40 ||      // arrows\r\n                k >= 96 && k <= 105 ||     // 0-9 numpad\r\n                k === 189 || k === 109 ||  // minus\r\n                k === 110 || k === 190 ||  // dot\r\n                k === 9 ||  //tab\r\n                k === 46 || //del\r\n                k === 8 ||  // backspaces\r\n                ( ! e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)\r\n\r\n            if ( ! ok || (e.ctrlKey && e.altKey)) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' input').blur(function (e) {\r\n            let value = $(this).val();\r\n\r\n            if (that._options.precision >= 0) {\r\n                value = coreuiFormUtils$1.round(value, that._options.precision);\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('min')) {\r\n                value = value < Number(that._options.attr.min)\r\n                    ? Number(that._options.attr.min)\r\n                    : value;\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('max')) {\r\n                value = value > Number(that._options.attr.max)\r\n                    ? Number(that._options.attr.max)\r\n                    : value;\r\n            }\r\n\r\n            $(this).val(value);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.radio = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'radio',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input[type=radio]:checked').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            let that         = this;\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options)\r\n            ) {\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value') && option.value == value) {\r\n                        let text = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                            ? option.text\r\n                            : '';\r\n\r\n                        $('.content-' + that._hash).text(text);\r\n                        that._value = value;\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n\r\n        } else {\r\n            let input = $('.content-' + this._hash + ' input[type=radio][value=\"' + value + '\"]');\r\n\r\n            if (input[0]) {\r\n                input.prop('checked', true);\r\n                this._value = value;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            let value = this.getValue();\r\n            return typeof value === 'string' && value !== '';\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that         = this;\r\n        let radioOptions = [];\r\n        let fieldOptions = this.getOptions();\r\n        let selectedItem = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'radio',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText   = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils$1.hashCode();\r\n\r\n                if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItem.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                radioOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        return ejs.render(tpl['fields/radio.html'], {\r\n            field: fieldOptions,\r\n            value: this._value,\r\n            render: {\r\n                options: radioOptions,\r\n                selectedItem: selectedItem\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.range = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'range',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-range d-inline-block pt-1'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'range';\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.select = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'select',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @returns {array|string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            if (this._options.hasOwnProperty('attr') &&\r\n                typeof this._options.attr === 'object' &&\r\n                this._options.attr !== null &&\r\n                ! Array.isArray(this._options.attr) &&\r\n                this._options.attr.hasOwnProperty('multiple')\r\n            ) {\r\n                let values = [];\r\n\r\n                $('.content-' + this._hash + ' select option:selected').each(function () {\r\n                    values.push($(this).val());\r\n                });\r\n\r\n                return values;\r\n\r\n            } else {\r\n                return $('.content-' + this._hash + ' select option:selected').val()\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' select > option').prop('selected', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' select > option').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('selected', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let select    = $('select', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            select.removeClass('is-invalid');\r\n            select.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            select.removeClass('is-invalid');\r\n            select.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            select.removeClass('is-valid');\r\n            select.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let select = $('.content-' + this._hash + ' select');\r\n\r\n        if (this._options.required && select.val() === '') {\r\n            return false;\r\n        }\r\n\r\n        if (select[0]) {\r\n            return select.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let that          = this;\r\n        let options       = this.getOptions();\r\n        let attributes    = [];\r\n        let selectOptions = [];\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            options.options !== null\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n\r\n                if (typeof option === 'string' || typeof option === 'number') {\r\n                    selectOptions.push(that._renderOption({\r\n                        type: 'option',\r\n                        value: key,\r\n                        text: option\r\n                    }));\r\n\r\n                } else if (typeof option === 'object') {\r\n                    let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                        ? option.type\r\n                        : 'option';\r\n\r\n                    if (type === 'group') {\r\n                        let renderAttr   = [];\r\n                        let groupAttr    = {};\r\n                        let groupOptions = [];\r\n\r\n                        if (option.hasOwnProperty('attr') &&\r\n                            typeof option.attr === 'object' &&\r\n                            option.attr !== null &&\r\n                            ! Array.isArray(option.attr)\r\n                        ) {\r\n                            groupAttr = option.attr;\r\n                        }\r\n\r\n                        if (option.hasOwnProperty('label') && ['string', 'number'].indexOf(typeof(option.label)) >= 0) {\r\n                            groupAttr.label = option.label;\r\n                        }\r\n\r\n                        $.each(groupAttr, function (name, value) {\r\n                            renderAttr.push(name + '=\"' + value + '\"');\r\n                        });\r\n\r\n                        if (Array.isArray(option.options)) {\r\n                            $.each(option.options, function (key, groupOption) {\r\n                                groupOptions.push(that._renderOption(groupOption));\r\n                            });\r\n                        }\r\n\r\n                        selectOptions.push({\r\n                            type: 'group',\r\n                            attr: renderAttr.length > 0 ? (' ' + renderAttr.join(' ')) : '',\r\n                            options: groupOptions,\r\n                        });\r\n\r\n                    } else {\r\n                        selectOptions.push(that._renderOption(option));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                options: selectOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let that            = this;\r\n        let options         = this.getOptions();\r\n        let selectedOptions = [];\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                    ? option.type\r\n                    : 'option';\r\n\r\n                if (type === 'group') {\r\n                    if (Array.isArray(option.options)) {\r\n                        $.each(option.options, function (key, groupOption) {\r\n                            let optionText = groupOption.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(groupOption.text)) >= 0\r\n                                ? groupOption.text\r\n                                : '';\r\n\r\n                            if ( ! optionText || optionText === '') {\r\n                                return;\r\n                            }\r\n\r\n                            if (Array.isArray(that._value)) {\r\n                                $.each(that._value, function (key, itemValue) {\r\n                                    if (itemValue == groupOption.value) {\r\n                                        selectedOptions.push(optionText);\r\n                                        return false;\r\n                                    }\r\n                                });\r\n\r\n                            } else if (that._value == groupOption.value) {\r\n                                selectedOptions.push(optionText);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                } else {\r\n                    let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                        ? option.text\r\n                        : '';\r\n\r\n                    if ( ! optionText || optionText === '') {\r\n                        return;\r\n                    }\r\n\r\n                    if (Array.isArray(that._value)) {\r\n                        $.each(that._value, function (key, itemValue) {\r\n                            if (itemValue == option.value) {\r\n                                selectedOptions.push(optionText);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (that._value == option.value) {\r\n                        selectedOptions.push(optionText);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            render: {\r\n                selectedOptions: selectedOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Сборка опции\r\n     * @param option\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _renderOption: function (option) {\r\n\r\n        let optionAttr = [];\r\n        let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n            ? option.text\r\n            : '';\r\n\r\n        $.each(option, function (name, value) {\r\n            if (name !== 'text') {\r\n                optionAttr.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n\r\n        if (Array.isArray(this._value)) {\r\n            $.each(this._value, function (key, itemValue) {\r\n                if (itemValue == option.value) {\r\n                    optionAttr.push('selected=\"selected\"');\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        } else if (this._value == option.value) {\r\n            optionAttr.push('selected=\"selected\"');\r\n        }\r\n\r\n        return {\r\n            type: 'option',\r\n            text: optionText,\r\n            attr: optionAttr.length > 0 ? (' ' + optionAttr.join(' ')) : ''\r\n        };\r\n    }\r\n};\n\ncoreuiForm$1.fields.switch = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'switch',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        valueY: 'Y',\r\n        valueN: 'N',\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=checkbox]').prop('checked', value === this._options.valueY);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container       = $('.content-' + this._hash);\r\n        let switchContainer = $('.form-switch', container);\r\n        let inputs          = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n        let itemAttr   = {\r\n            type: 'checkbox',\r\n            class: 'form-check-input',\r\n            value: options.valueY\r\n        };\r\n\r\n\r\n        if (options.name) {\r\n            itemAttr.name = this._options.name;\r\n        }\r\n\r\n        if (options.required) {\r\n            itemAttr.required = 'required';\r\n        }\r\n\r\n        if (options.hasOwnProperty('attr') &&\r\n            typeof options.attr === 'object' &&\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            itemAttr = coreuiFormUtils$1.mergeAttr(itemAttr, options.attr);\r\n        }\r\n\r\n        if (this._value === options.valueY) {\r\n            itemAttr.checked = 'checked';\r\n        }\r\n\r\n        $.each(itemAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/switch.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.textarea = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'textarea',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' textarea').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' textarea').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let textarea  = $('textarea', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            textarea.removeClass('is-valid');\r\n            textarea.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' textarea');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/textarea.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.wysiwyg = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _editor: null,\r\n    _editorHash: null,\r\n    _options: {\r\n        type: 'wysiwyg',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        height: null,\r\n        minHeight: null,\r\n        maxHeight: null,\r\n        options: {},\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        readonly: false,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form       = form;\r\n        this._index      = index;\r\n        this._id         = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash       = coreuiFormUtils$1.hashCode();\r\n        this._editorHash = coreuiFormUtils$1.hashCode();\r\n        this._value      = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options    = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @return {string|null}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        } else {\r\n            return this._editor ? this._editor.getContent() : this._value;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            if (this._editor) {\r\n                this._editor.setContent(value);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/wysiwyg.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            editorHash: this._editorHash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let tinyMceOptions = {};\r\n        let than           = this;\r\n        let textareaId     = 'editor-' + this._editorHash;\r\n\r\n        if (typeof this._options.options === 'object' &&\r\n            ! Array.isArray(this._options.options) &&\r\n            Object.keys(this._options.options).length > 0\r\n        ) {\r\n            tinyMceOptions = this._options.options;\r\n\r\n        } else if (this._options.options === 'simple') {\r\n            tinyMceOptions = {\r\n                plugins: 'image lists anchor charmap',\r\n                toolbar: 'blocks | bold italic underline | alignleft aligncenter ' +\r\n                         'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                         'forecolor backcolor removeformat',\r\n                menubar: false,\r\n                branding: false\r\n            };\r\n\r\n        } else {\r\n            tinyMceOptions = {\r\n                promotion: false,\r\n                branding: false,\r\n                plugins: 'preview importcss searchreplace autolink autosave save directionality code ' +\r\n                         'visualblocks visualchars fullscreen image link media template codesample table ' +\r\n                         'charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',\r\n                menubar: 'file edit view insert format tools table help',\r\n                toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | ' +\r\n                         'alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | ' +\r\n                         'forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen ' +\r\n                         'preview save print | insertfile image media template link anchor codesample | ltr rtl',\r\n            };\r\n        }\r\n\r\n        tinyMceOptions.selector = '#editor-' + this._editorHash;\r\n\r\n        if (['string', 'number'].indexOf(typeof this._options.width) >= 0) {\r\n            tinyMceOptions.width = this._options.width;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minWidth) >= 0) {\r\n            tinyMceOptions.min_width = this._options.minWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxWidth) >= 0) {\r\n            tinyMceOptions.max_width = this._options.maxWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.height) >= 0) {\r\n            tinyMceOptions.height = this._options.height;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minHeight) >= 0) {\r\n            tinyMceOptions.min_height = this._options.minHeight;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxHeight) >= 0) {\r\n            tinyMceOptions.max_height = this._options.maxHeight;\r\n        }\r\n\r\n        tinymce.init(tinyMceOptions).then(function () {\r\n            than._editor = tinymce.get(textareaId);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.passwordRepeat = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _isChangeState: true,\r\n    _value: '',\r\n    _options: {\r\n        type: 'password',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            type: 'password',\r\n            class: 'form-control form-control-sm d-inline-block flex-shrink-0'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        showBtn: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input[type=\"password\"]').eq(0).val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value ? '******' : '');\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=\"password\"]').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input[type=\"password\"]', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        if ( ! this._isChangeState || this._options.readonly) {\r\n            return true;\r\n        }\r\n\r\n        let input = $('.content-' + this._hash + ' input[type=\"password\"]');\r\n\r\n        if (input.eq(0).val() !== input.eq(1).val()) {\r\n            return false;\r\n        }\r\n\r\n        if (input[0]) {\r\n            return input.eq(0).is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes  = [];\r\n        let attributes2 = [];\r\n        let datalist    = [];\r\n        let options     = this.getOptions();\r\n\r\n        this._isChangeState = ! options.showBtn\r\n            ? true\r\n            : ! this._value;\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if ( ! this._isChangeState) {\r\n            options.attr.disabled = '';\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.value = this._value ? '******' : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n        $.each(options.attr, function (name, value) {\r\n            if (['name', 'value'].indexOf(name) < 0) {\r\n                attributes2.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n        let lang = this._form.getLang();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: lang,\r\n            btn_text: this._isChangeState ? lang.cancel : lang.change,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                attr2: attributes2.length > 0 ? (' ' + attributes2.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value ? '******' : '',\r\n            hash: this._hash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' .btn-password-change').click(function (e) {\r\n            let textChange = $(this).data('change');\r\n            let textCancel = $(this).data('cancel');\r\n\r\n            if (that._isChangeState) {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').attr('disabled', 'disabled');\r\n                $(this).text(textChange);\r\n                that._isChangeState = false;\r\n\r\n            } else {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').removeAttr('disabled');\r\n                $(this).text(textCancel);\r\n                that._isChangeState = true;\r\n            }\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.file = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'file',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils$1.hashCode();\r\n        this._value   = coreuiFormUtils$1.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils$1.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {File[]}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input')[0].files;\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {File|File[]} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if ( ! (value instanceof File) &&  ! (value instanceof FileList)) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text('');\r\n        } else {\r\n            let container = new DataTransfer();\r\n\r\n            if (value instanceof File) {\r\n                container.items.add(value);\r\n\r\n            } else {\r\n                $.each(value, function (key, file) {\r\n                    if (value instanceof File) {\r\n                        container.items.add(file);\r\n                    }\r\n                });\r\n            }\r\n\r\n            $('.content-' + this._hash + ' input')[0].files = container.files;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils$1.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils$1.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils$1.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils$1.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils$1.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils$1.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils$1.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\nreturn coreuiForm$1;\n\n})));\n"]}