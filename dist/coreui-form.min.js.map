{"version":3,"sources":["coreui-form.min.js"],"names":["global","factory","exports","module","define","amd","CoreUI","form","this","f","window","self","ejs","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","fs","path","utils","scopeOptionWarned","_VERSION_STRING","version","_DEFAULT_LOCALS_NAME","_OPTS_PASSABLE_WITH_DATA","_OPTS_PASSABLE_WITH_DATA_EXPRESS","concat","_BOM","_JS_IDENTIFIER","resolvePaths","name","paths","filePath","some","v","resolveInclude","existsSync","handleCache","options","template","func","filename","hasTemplate","arguments","cache","get","fileLoader","toString","replace","compile","set","includeFile","opts","shallowCopy","createNullProtoObjWherePossible","includePath","views","match","exec","Array","isArray","root","includer","escapeFunction","includerResult","rethrow","err","str","flnm","lineno","esc","lines","split","start","Math","max","end","min","context","slice","map","line","curr","join","message","stripSemi","Template","text","templateText","mode","truncate","currentLine","source","client","escape","escapeXML","compileDebug","debug","openDelimiter","closeDelimiter","delimiter","strict","rmWhitespace","outputFunctionName","localsName","async","destructuredLocals","legacyInclude","_with","regex","createRegex","readFileSync","promiseImpl","Function","Promise","isDir","dirname","extname","resolve","scope","console","warn","render","d","data","shallowCopyFromList","renderFile","cb","result","args","prototype","shift","pop","settings","viewOpts","reject","clearCache","reset","modes","EVAL","ESCAPED","RAW","COMMENT","LITERAL","delim","escapeRegExpChars","open","close","RegExp","fn","prepended","appended","escapeFn","sanitizedFilename","JSON","stringify","generateSource","test","destructuring","src","log","ctor","SyntaxError","returnedFn","apply","includeData","Object","defineProperty","basename","value","writable","enumerable","configurable","matches","parseTemplateText","forEach","index","indexOf","closing","scanLine","firstPos","pat","arr","push","substring","_addOutput","newLineCount","lastIndexOf","__express","VERSION","../package.json","./utils","2","hasOwn","obj","key","hasOwnProperty","regExpChars","_ENCODE_HTML_RULES","string","String","&","<",">","\"","'","_MATCH_HTML","encode_char","escapeXMLToString","markup","undefined","to","from","list","_data","val","remove","hyphenToCamel","toUpperCase","create","__proto__","3","4","process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","resolvedPath","resolvedAbsolute","cwd","TypeError","charAt","normalize","isAbsolute","trailingSlash","substr","relative","trim","fromParts","toParts","samePartsLength","outputParts","sep","hasRoot","charCodeAt","matchedSlash","ext","startDot","startPart","preDotState","len","_process","5","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","marker","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","6","description","keywords","author","license","bin","main","jsdelivr","unpkg","repository","type","url","bugs","homepage","dependencies","jake","devDependencies","browserify","eslint","git-directory-deploy","jsdoc","lru-cache","mocha","uglify-js","engines","node","scripts","let","tpl","coreuiFormUtils","getFieldValue","formRecord","getRecord","fieldOptions","getFunctionByName","functionName","namespaces","eval","getIncludePath","mergeFieldOptions","defaultOptions","attr","$","extend","width","unit","_options","fieldWidth","labelWidth","mergeAttr","attr1","attr2","each","getAttacheFields","fields","field","instance","hash","_hash","fieldsDirection","content","renderContent","formatDate","day","month","Date","date","year","formatDateTime","getFullYear","getMinutes","getSeconds","formatDateMonth","lang","getMonth","date_months","formatDateWeek","date_week","getObjValue","isNumeric","num","isNaN","hashCode","crc32","getTime","random","round","pow","precision","parseInt","number","coreuiFormInstance","id","send","method","format","minWidth","maxWidth","controlsOffset","readonly","validate","successLoadUrl","errorClass","layout","onSubmit","onSubmitSuccess","record","controls","_lock","_fieldsIndex","_groupsIndex","_controlsIndex","_groups","_fields","_controls","_events","_init","coreuiForm$1","getSetting","initEvents","that","formContainer","_trigger","getId","element","widthSizes","matchAll","columns","columnsContent","column","keys","_NAME","fieldContents","control","show","formAttr","html","escapeFuncStr","domElement","document","getElementById","innerHTML","lock","controlOptions","getOptions","unlock","onsubmit","getData","onSubmitText","results","isStopSend","sendFormat","dataFormat","contentType","FormData","File","FileList","file","append","ajax","processData","beforeSend","xhr","success","parsedResponse","parse","jsonResponse","script","loadUrl","href","regx","urlParams","param","equalHash","location","onhashchange","error","textStatus","errorThrown","send_error","responseText","error_message","showError","errorMessage","complete","getValue","getFields","getControls","getGroups","getField","fieldInstance","isReadonly","hide","showControls","hideControls","isValid","find","errorOptions","formError","class","dismiss","prepend","scroll","scrollOffset","animate","scrollTop","offset","top","hideError","eventName","callback","singleExec","destruct","_instances","initField","init","initGroup","group","groupInstance","expand","initControl","controlInstance","getDate","getLang","params","_renderControl","sendDataFormat","errorMessageScrollOffset","formId","setSettings","_settings","modal_select","modal_loading","switch_yes","switch_no","dataset_add","required_field","repeat","change","cancel","button","_form","_index","onClick","attributes","duration","_initEvents","event","custom","link","click","removeAttr","checkbox","_id","label","inline","outContent","errorText","required","_value","setValue","values","empty","selectedItems","option","prop","itemValue","container","lastInput","inputs","removeClass","addClass","validText","invalidText","ru","attachFields","checkboxOptions","itemAttr","optionText","checked","color","attach","datalist","input","is","_renderContentReadonly","_renderContent","datalistId","style","itemAttributes","datalistAttr","alloyComponents","component","components","dataset","_renderOptions","items","valueY","valueN","serializeArray","item","removeItem","itemId","row","rows","_renderRow","headers","_eventAdd","rowOptions","itemOptions","cellValue","cellItemValue","selected","hashItem","_renderRowReadonly","optionValue","collapse","slideUp","slideDown","hidden","showCollapsible","jQuery","Zepto","Meteor","Mask","el","mask","regexMask","invalid","getCaret","sel","pos","ctrl","dSel","selection","cSelStart","selectionStart","navigator","appVersion","createRange","moveStart","setCaret","range","setSelectionRange","createTextRange","moveEnd","select","events","keyCode","which","maskDigitPosMapOld","maskDigitPosMap","jMaskGlobals","useInput","behaviour","keydown","keyup","oldValue","selectOnFocus","target","clearIfNotMatch","getRegexMask","pattern","optional","recursive","oRecursive","maskChunks","translation","trigger","digit","oldVal","newVal","getMasked","caretPosOld","newValL","oldValL","maskDigitsBeforeCaretAll","maskDigitsBeforeCaretAllOld","caretPosNew","maskDigitsAfterCaret","maskDigitsBeforeCaret","caretPos","jMask","byPassKeys","keyStrokeCompensation","skipMaskChars","lastUntranslatedMaskChar","buf","maskLen","reverse","addMethod","m","valLen","lastMaskChar","check","maskDigit","valDigit","calculateCaretPosition","callbacks","resetPos","fallback","maskDigitCount","lastMaskCharDigit","mapMaskdigitPositions","maskDigitPosArr","maskDiff","criteria","changed","defaultArgs","caret","getCleanVal","getMaskedVal","onlyMask","placeholder","maxlength","HTMLAttributes","prefix","notSameMaskObject","maskWatchers","maskObject","maskFunction","isSupported","selector","interval","globals","watchInterval","watchInputs","setAttribute","setInterval","unmask","clearInterval","cleanVal","applyDataMask","maskElements","dataMask","dataMaskAttr","userAgent","$selector","0","watchDataMask","onClear","_text","size","onHidden","onChange","elementValue","elementText","modal","textAttr","modalLoading","onShow","modalId","Number","step","k","radioOptions","selectedItem","shiftKey","ctrlKey","altKey","preventDefault","blur","radio","groupOptions","selectOptions","selectedOptions","optionAttr","switchContainer","textarea","_renderOption","renderAttr","groupAttr","groupOption","_editor","tinyMceOptions","plugins","toolbar","menubar","branding","promotion","min_height","max_height","tinymce","than","textareaId","_isChangeState","pass","attributes2","showBtn","btn_text","add","_editorHash","height","minHeight","maxHeight","getContent","setContent","editorHash","min_width","max_width","then","passwordRepeat","eq","disabled","textChange","textCancel","files","DataTransfer"],"mappings":"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","file":"coreui-form.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.CoreUI = global.CoreUI || {}, global.CoreUI.form = factory());\n}(this, (function () { 'use strict';\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f();}else if(typeof define===\"function\"&&define.amd){define([],f);}else{var g;if(typeof window!==\"undefined\"){g=window;}else if(typeof global!==\"undefined\"){g=global;}else if(typeof self!==\"undefined\"){g=self;}else{g=this;}g.ejs=f();}})(function(){return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t);}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){\"use strict\";var fs=require(\"fs\");var path=require(\"path\");var utils=require(\"./utils\");var scopeOptionWarned=false;var _VERSION_STRING=require(\"../package.json\").version;var _DEFAULT_OPEN_DELIMITER=\"<\";var _DEFAULT_CLOSE_DELIMITER=\">\";var _DEFAULT_DELIMITER=\"%\";var _DEFAULT_LOCALS_NAME=\"locals\";var _NAME=\"ejs\";var _REGEX_STRING=\"(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)\";var _OPTS_PASSABLE_WITH_DATA=[\"delimiter\",\"scope\",\"context\",\"debug\",\"compileDebug\",\"client\",\"_with\",\"rmWhitespace\",\"strict\",\"filename\",\"async\"];var _OPTS_PASSABLE_WITH_DATA_EXPRESS=_OPTS_PASSABLE_WITH_DATA.concat(\"cache\");var _BOM=/^\\uFEFF/;var _JS_IDENTIFIER=/^[a-zA-Z_$][0-9a-zA-Z_$]*$/;exports.cache=utils.cache;exports.fileLoader=fs.readFileSync;exports.localsName=_DEFAULT_LOCALS_NAME;exports.promiseImpl=new Function(\"return this;\")().Promise;exports.resolveInclude=function(name,filename,isDir){var dirname=path.dirname;var extname=path.extname;var resolve=path.resolve;var includePath=resolve(isDir?filename:dirname(filename),name);var ext=extname(name);if(!ext){includePath+=\".ejs\";}return includePath};function resolvePaths(name,paths){var filePath;if(paths.some(function(v){filePath=exports.resolveInclude(name,v,true);return fs.existsSync(filePath)})){return filePath}}function getIncludePath(path,options){var includePath;var filePath;var views=options.views;var match=/^[A-Za-z]+:\\\\|^\\//.exec(path);if(match&&match.length){path=path.replace(/^\\/*/,\"\");if(Array.isArray(options.root)){includePath=resolvePaths(path,options.root);}else{includePath=exports.resolveInclude(path,options.root||\"/\",true);}}else{if(options.filename){filePath=exports.resolveInclude(path,options.filename);if(fs.existsSync(filePath)){includePath=filePath;}}if(!includePath&&Array.isArray(views)){includePath=resolvePaths(path,views);}if(!includePath&&typeof options.includer!==\"function\"){throw new Error('Could not find the include file \"'+options.escapeFunction(path)+'\"')}}return includePath}function handleCache(options,template){var func;var filename=options.filename;var hasTemplate=arguments.length>1;if(options.cache){if(!filename){throw new Error(\"cache option requires a filename\")}func=exports.cache.get(filename);if(func){return func}if(!hasTemplate){template=fileLoader(filename).toString().replace(_BOM,\"\");}}else if(!hasTemplate){if(!filename){throw new Error(\"Internal EJS error: no file name or template \"+\"provided\")}template=fileLoader(filename).toString().replace(_BOM,\"\");}func=exports.compile(template,options);if(options.cache){exports.cache.set(filename,func);}return func}function tryHandleCache(options,data,cb){var result;if(!cb){if(typeof exports.promiseImpl==\"function\"){return new exports.promiseImpl(function(resolve,reject){try{result=handleCache(options)(data);resolve(result);}catch(err){reject(err);}})}else{throw new Error(\"Please provide a callback function\")}}else{try{result=handleCache(options)(data);}catch(err){return cb(err)}cb(null,result);}}function fileLoader(filePath){return exports.fileLoader(filePath)}function includeFile(path,options){var opts=utils.shallowCopy(utils.createNullProtoObjWherePossible(),options);opts.filename=getIncludePath(path,opts);if(typeof options.includer===\"function\"){var includerResult=options.includer(path,opts.filename);if(includerResult){if(includerResult.filename){opts.filename=includerResult.filename;}if(includerResult.template){return handleCache(opts,includerResult.template)}}}return handleCache(opts)}function rethrow(err,str,flnm,lineno,esc){var lines=str.split(\"\\n\");var start=Math.max(lineno-3,0);var end=Math.min(lines.length,lineno+3);var filename=esc(flnm);var context=lines.slice(start,end).map(function(line,i){var curr=i+start+1;return(curr==lineno?\" >> \":\"    \")+curr+\"| \"+line}).join(\"\\n\");err.path=filename;err.message=(filename||\"ejs\")+\":\"+lineno+\"\\n\"+context+\"\\n\\n\"+err.message;throw err}function stripSemi(str){return str.replace(/;(\\s*$)/,\"$1\")}exports.compile=function compile(template,opts){var templ;if(opts&&opts.scope){if(!scopeOptionWarned){console.warn(\"`scope` option is deprecated and will be removed in EJS 3\");scopeOptionWarned=true;}if(!opts.context){opts.context=opts.scope;}delete opts.scope;}templ=new Template(template,opts);return templ.compile()};exports.render=function(template,d,o){var data=d||utils.createNullProtoObjWherePossible();var opts=o||utils.createNullProtoObjWherePossible();if(arguments.length==2){utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA);}return handleCache(opts,template)(data)};exports.renderFile=function(){var args=Array.prototype.slice.call(arguments);var filename=args.shift();var cb;var opts={filename:filename};var data;var viewOpts;if(typeof arguments[arguments.length-1]==\"function\"){cb=args.pop();}if(args.length){data=args.shift();if(args.length){utils.shallowCopy(opts,args.pop());}else{if(data.settings){if(data.settings.views){opts.views=data.settings.views;}if(data.settings[\"view cache\"]){opts.cache=true;}viewOpts=data.settings[\"view options\"];if(viewOpts){utils.shallowCopy(opts,viewOpts);}}utils.shallowCopyFromList(opts,data,_OPTS_PASSABLE_WITH_DATA_EXPRESS);}opts.filename=filename;}else{data=utils.createNullProtoObjWherePossible();}return tryHandleCache(opts,data,cb)};exports.Template=Template;exports.clearCache=function(){exports.cache.reset();};function Template(text,opts){opts=opts||utils.createNullProtoObjWherePossible();var options=utils.createNullProtoObjWherePossible();this.templateText=text;this.mode=null;this.truncate=false;this.currentLine=1;this.source=\"\";options.client=opts.client||false;options.escapeFunction=opts.escape||opts.escapeFunction||utils.escapeXML;options.compileDebug=opts.compileDebug!==false;options.debug=!!opts.debug;options.filename=opts.filename;options.openDelimiter=opts.openDelimiter||exports.openDelimiter||_DEFAULT_OPEN_DELIMITER;options.closeDelimiter=opts.closeDelimiter||exports.closeDelimiter||_DEFAULT_CLOSE_DELIMITER;options.delimiter=opts.delimiter||exports.delimiter||_DEFAULT_DELIMITER;options.strict=opts.strict||false;options.context=opts.context;options.cache=opts.cache||false;options.rmWhitespace=opts.rmWhitespace;options.root=opts.root;options.includer=opts.includer;options.outputFunctionName=opts.outputFunctionName;options.localsName=opts.localsName||exports.localsName||_DEFAULT_LOCALS_NAME;options.views=opts.views;options.async=opts.async;options.destructuredLocals=opts.destructuredLocals;options.legacyInclude=typeof opts.legacyInclude!=\"undefined\"?!!opts.legacyInclude:true;if(options.strict){options._with=false;}else{options._with=typeof opts._with!=\"undefined\"?opts._with:true;}this.opts=options;this.regex=this.createRegex();}Template.modes={EVAL:\"eval\",ESCAPED:\"escaped\",RAW:\"raw\",COMMENT:\"comment\",LITERAL:\"literal\"};Template.prototype={createRegex:function(){var str=_REGEX_STRING;var delim=utils.escapeRegExpChars(this.opts.delimiter);var open=utils.escapeRegExpChars(this.opts.openDelimiter);var close=utils.escapeRegExpChars(this.opts.closeDelimiter);str=str.replace(/%/g,delim).replace(/</g,open).replace(/>/g,close);return new RegExp(str)},compile:function(){var src;var fn;var opts=this.opts;var prepended=\"\";var appended=\"\";var escapeFn=opts.escapeFunction;var ctor;var sanitizedFilename=opts.filename?JSON.stringify(opts.filename):\"undefined\";if(!this.source){this.generateSource();prepended+='  var __output = \"\";\\n'+\"  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n\";if(opts.outputFunctionName){if(!_JS_IDENTIFIER.test(opts.outputFunctionName)){throw new Error(\"outputFunctionName is not a valid JS identifier.\")}prepended+=\"  var \"+opts.outputFunctionName+\" = __append;\"+\"\\n\";}if(opts.localsName&&!_JS_IDENTIFIER.test(opts.localsName)){throw new Error(\"localsName is not a valid JS identifier.\")}if(opts.destructuredLocals&&opts.destructuredLocals.length){var destructuring=\"  var __locals = (\"+opts.localsName+\" || {}),\\n\";for(var i=0;i<opts.destructuredLocals.length;i++){var name=opts.destructuredLocals[i];if(!_JS_IDENTIFIER.test(name)){throw new Error(\"destructuredLocals[\"+i+\"] is not a valid JS identifier.\")}if(i>0){destructuring+=\",\\n  \";}destructuring+=name+\" = __locals.\"+name;}prepended+=destructuring+\";\\n\";}if(opts._with!==false){prepended+=\"  with (\"+opts.localsName+\" || {}) {\"+\"\\n\";appended+=\"  }\"+\"\\n\";}appended+=\"  return __output;\"+\"\\n\";this.source=prepended+this.source+appended;}if(opts.compileDebug){src=\"var __line = 1\"+\"\\n\"+\"  , __lines = \"+JSON.stringify(this.templateText)+\"\\n\"+\"  , __filename = \"+sanitizedFilename+\";\"+\"\\n\"+\"try {\"+\"\\n\"+this.source+\"} catch (e) {\"+\"\\n\"+\"  rethrow(e, __lines, __filename, __line, escapeFn);\"+\"\\n\"+\"}\"+\"\\n\";}else{src=this.source;}if(opts.client){src=\"escapeFn = escapeFn || \"+escapeFn.toString()+\";\"+\"\\n\"+src;if(opts.compileDebug){src=\"rethrow = rethrow || \"+rethrow.toString()+\";\"+\"\\n\"+src;}}if(opts.strict){src='\"use strict\";\\n'+src;}if(opts.debug){console.log(src);}if(opts.compileDebug&&opts.filename){src=src+\"\\n\"+\"//# sourceURL=\"+sanitizedFilename+\"\\n\";}try{if(opts.async){try{ctor=new Function(\"return (async function(){}).constructor;\")();}catch(e){if(e instanceof SyntaxError){throw new Error(\"This environment does not support async/await\")}else{throw e}}}else{ctor=Function;}fn=new ctor(opts.localsName+\", escapeFn, include, rethrow\",src);}catch(e){if(e instanceof SyntaxError){if(opts.filename){e.message+=\" in \"+opts.filename;}e.message+=\" while compiling ejs\\n\\n\";e.message+=\"If the above error is not helpful, you may want to try EJS-Lint:\\n\";e.message+=\"https://github.com/RyanZim/EJS-Lint\";if(!opts.async){e.message+=\"\\n\";e.message+=\"Or, if you meant to create an async function, pass `async: true` as an option.\";}}throw e}var returnedFn=opts.client?fn:function anonymous(data){var include=function(path,includeData){var d=utils.shallowCopy(utils.createNullProtoObjWherePossible(),data);if(includeData){d=utils.shallowCopy(d,includeData);}return includeFile(path,opts)(d)};return fn.apply(opts.context,[data||utils.createNullProtoObjWherePossible(),escapeFn,include,rethrow])};if(opts.filename&&typeof Object.defineProperty===\"function\"){var filename=opts.filename;var basename=path.basename(filename,path.extname(filename));try{Object.defineProperty(returnedFn,\"name\",{value:basename,writable:false,enumerable:false,configurable:true});}catch(e){}}return returnedFn},generateSource:function(){var opts=this.opts;if(opts.rmWhitespace){this.templateText=this.templateText.replace(/[\\r\\n]+/g,\"\\n\").replace(/^\\s+|\\s+$/gm,\"\");}this.templateText=this.templateText.replace(/[ \\t]*<%_/gm,\"<%_\").replace(/_%>[ \\t]*/gm,\"_%>\");var self=this;var matches=this.parseTemplateText();var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;if(matches&&matches.length){matches.forEach(function(line,index){var closing;if(line.indexOf(o+d)===0&&line.indexOf(o+d+d)!==0){closing=matches[index+2];if(!(closing==d+c||closing==\"-\"+d+c||closing==\"_\"+d+c)){throw new Error('Could not find matching close tag for \"'+line+'\".')}}self.scanLine(line);});}},parseTemplateText:function(){var str=this.templateText;var pat=this.regex;var result=pat.exec(str);var arr=[];var firstPos;while(result){firstPos=result.index;if(firstPos!==0){arr.push(str.substring(0,firstPos));str=str.slice(firstPos);}arr.push(result[0]);str=str.slice(result[0].length);result=pat.exec(str);}if(str){arr.push(str);}return arr},_addOutput:function(line){if(this.truncate){line=line.replace(/^(?:\\r\\n|\\r|\\n)/,\"\");this.truncate=false;}if(!line){return line}line=line.replace(/\\\\/g,\"\\\\\\\\\");line=line.replace(/\\n/g,\"\\\\n\");line=line.replace(/\\r/g,\"\\\\r\");line=line.replace(/\"/g,'\\\\\"');this.source+='    ; __append(\"'+line+'\")'+\"\\n\";},scanLine:function(line){var self=this;var d=this.opts.delimiter;var o=this.opts.openDelimiter;var c=this.opts.closeDelimiter;var newLineCount=0;newLineCount=line.split(\"\\n\").length-1;switch(line){case o+d:case o+d+\"_\":this.mode=Template.modes.EVAL;break;case o+d+\"=\":this.mode=Template.modes.ESCAPED;break;case o+d+\"-\":this.mode=Template.modes.RAW;break;case o+d+\"#\":this.mode=Template.modes.COMMENT;break;case o+d+d:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(o+d+d,o+d)+'\")'+\"\\n\";break;case d+d+c:this.mode=Template.modes.LITERAL;this.source+='    ; __append(\"'+line.replace(d+d+c,d+c)+'\")'+\"\\n\";break;case d+c:case\"-\"+d+c:case\"_\"+d+c:if(this.mode==Template.modes.LITERAL){this._addOutput(line);}this.mode=null;this.truncate=line.indexOf(\"-\")===0||line.indexOf(\"_\")===0;break;default:if(this.mode){switch(this.mode){case Template.modes.EVAL:case Template.modes.ESCAPED:case Template.modes.RAW:if(line.lastIndexOf(\"//\")>line.lastIndexOf(\"\\n\")){line+=\"\\n\";}}switch(this.mode){case Template.modes.EVAL:this.source+=\"    ; \"+line+\"\\n\";break;case Template.modes.ESCAPED:this.source+=\"    ; __append(escapeFn(\"+stripSemi(line)+\"))\"+\"\\n\";break;case Template.modes.RAW:this.source+=\"    ; __append(\"+stripSemi(line)+\")\"+\"\\n\";break;case Template.modes.COMMENT:break;case Template.modes.LITERAL:this._addOutput(line);break}}else{this._addOutput(line);}}if(self.opts.compileDebug&&newLineCount){this.currentLine+=newLineCount;this.source+=\"    ; __line = \"+this.currentLine+\"\\n\";}}};exports.escapeXML=utils.escapeXML;exports.__express=exports.renderFile;exports.VERSION=_VERSION_STRING;exports.name=_NAME;if(typeof window!=\"undefined\"){window.ejs=exports;}},{\"../package.json\":6,\"./utils\":2,fs:3,path:4}],2:[function(require,module,exports){\"use strict\";var regExpChars=/[|\\\\{}()[\\]^$+*?.]/g;var hasOwnProperty=Object.prototype.hasOwnProperty;var hasOwn=function(obj,key){return hasOwnProperty.apply(obj,[key])};exports.escapeRegExpChars=function(string){if(!string){return\"\"}return String(string).replace(regExpChars,\"\\\\$&\")};var _ENCODE_HTML_RULES={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&#34;\",\"'\":\"&#39;\"};var _MATCH_HTML=/[&<>'\"]/g;function encode_char(c){return _ENCODE_HTML_RULES[c]||c}var escapeFuncStr=\"var _ENCODE_HTML_RULES = {\\n\"+'      \"&\": \"&amp;\"\\n'+'    , \"<\": \"&lt;\"\\n'+'    , \">\": \"&gt;\"\\n'+'    , \\'\"\\': \"&#34;\"\\n'+'    , \"\\'\": \"&#39;\"\\n'+\"    }\\n\"+\"  , _MATCH_HTML = /[&<>'\\\"]/g;\\n\"+\"function encode_char(c) {\\n\"+\"  return _ENCODE_HTML_RULES[c] || c;\\n\"+\"};\\n\";exports.escapeXML=function(markup){return markup==undefined?\"\":String(markup).replace(_MATCH_HTML,encode_char)};function escapeXMLToString(){return Function.prototype.toString.call(this)+\";\\n\"+escapeFuncStr}try{if(typeof Object.defineProperty===\"function\"){Object.defineProperty(exports.escapeXML,\"toString\",{value:escapeXMLToString});}else{exports.escapeXML.toString=escapeXMLToString;}}catch(err){console.warn(\"Unable to set escapeXML.toString (is the Function prototype frozen?)\");}exports.shallowCopy=function(to,from){from=from||{};if(to!==null&&to!==undefined){for(var p in from){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}return to};exports.shallowCopyFromList=function(to,from,list){list=list||[];from=from||{};if(to!==null&&to!==undefined){for(var i=0;i<list.length;i++){var p=list[i];if(typeof from[p]!=\"undefined\"){if(!hasOwn(from,p)){continue}if(p===\"__proto__\"||p===\"constructor\"){continue}to[p]=from[p];}}}return to};exports.cache={_data:{},set:function(key,val){this._data[key]=val;},get:function(key){return this._data[key]},remove:function(key){delete this._data[key];},reset:function(){this._data={};}};exports.hyphenToCamel=function(str){return str.replace(/-[a-z]/g,function(match){return match[1].toUpperCase()})};exports.createNullProtoObjWherePossible=function(){if(typeof Object.create==\"function\"){return function(){return Object.create(null)}}if(!({__proto__:null}instanceof Object)){return function(){return{__proto__:null}}}return function(){return{}}}();},{}],3:[function(require,module,exports){},{}],4:[function(require,module,exports){(function(process){function normalizeArray(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1);}else if(last===\"..\"){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}if(allowAboveRoot){for(;up--;up){parts.unshift(\"..\");}}return parts}exports.resolve=function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){continue}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\";}resolvedPath=normalizeArray(filter(resolvedPath.split(\"/\"),function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"};exports.normalize=function(path){var isAbsolute=exports.isAbsolute(path),trailingSlash=substr(path,-1)===\"/\";path=normalizeArray(filter(path.split(\"/\"),function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\";}if(path&&trailingSlash){path+=\"/\";}return(isAbsolute?\"/\":\"\")+path};exports.isAbsolute=function(path){return path.charAt(0)===\"/\"};exports.join=function(){var paths=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(paths,function(p,index){if(typeof p!==\"string\"){throw new TypeError(\"Arguments to path.join must be strings\")}return p}).join(\"/\"))};exports.relative=function(from,to){from=exports.resolve(from).substr(1);to=exports.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\");}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")};exports.sep=\"/\";exports.delimiter=\":\";exports.dirname=function(path){if(typeof path!==\"string\")path=path+\"\";if(path.length===0)return\".\";var code=path.charCodeAt(0);var hasRoot=code===47;var end=-1;var matchedSlash=true;for(var i=path.length-1;i>=1;--i){code=path.charCodeAt(i);if(code===47){if(!matchedSlash){end=i;break}}else{matchedSlash=false;}}if(end===-1)return hasRoot?\"/\":\".\";if(hasRoot&&end===1){return\"/\"}return path.slice(0,end)};function basename(path){if(typeof path!==\"string\")path=path+\"\";var start=0;var end=-1;var matchedSlash=true;var i;for(i=path.length-1;i>=0;--i){if(path.charCodeAt(i)===47){if(!matchedSlash){start=i+1;break}}else if(end===-1){matchedSlash=false;end=i+1;}}if(end===-1)return\"\";return path.slice(start,end)}exports.basename=function(path,ext){var f=basename(path);if(ext&&f.substr(-1*ext.length)===ext){f=f.substr(0,f.length-ext.length);}return f};exports.extname=function(path){if(typeof path!==\"string\")path=path+\"\";var startDot=-1;var startPart=0;var end=-1;var matchedSlash=true;var preDotState=0;for(var i=path.length-1;i>=0;--i){var code=path.charCodeAt(i);if(code===47){if(!matchedSlash){startPart=i+1;break}continue}if(end===-1){matchedSlash=false;end=i+1;}if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1;}else if(startDot!==-1){preDotState=-1;}}if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){return\"\"}return path.slice(startDot,end)};function filter(xs,f){if(xs.filter)return xs.filter(f);var res=[];for(var i=0;i<xs.length;i++){if(f(xs[i],i,xs))res.push(xs[i]);}return res}var substr=\"ab\".substr(-1)===\"b\"?function(str,start,len){return str.substr(start,len)}:function(str,start,len){if(start<0)start=str.length+start;return str.substr(start,len)};}).call(this,require(\"_process\"));},{_process:5}],5:[function(require,module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout===\"function\"){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title=\"browser\";process.browser=true;process.env={};process.argv=[];process.version=\"\";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error(\"process.binding is not supported\")};process.cwd=function(){return\"/\"};process.chdir=function(dir){throw new Error(\"process.chdir is not supported\")};process.umask=function(){return 0};},{}],6:[function(require,module,exports){module.exports={name:\"ejs\",description:\"Embedded JavaScript templates\",keywords:[\"template\",\"engine\",\"ejs\"],version:\"3.1.8\",author:\"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)\",license:\"Apache-2.0\",bin:{ejs:\"./bin/cli.js\"},main:\"./lib/ejs.js\",jsdelivr:\"ejs.min.js\",unpkg:\"ejs.min.js\",repository:{type:\"git\",url:\"git://github.com/mde/ejs.git\"},bugs:\"https://github.com/mde/ejs/issues\",homepage:\"https://github.com/mde/ejs\",dependencies:{jake:\"^10.8.5\"},devDependencies:{browserify:\"^16.5.1\",eslint:\"^6.8.0\",\"git-directory-deploy\":\"^1.5.1\",jsdoc:\"^4.0.2\",\"lru-cache\":\"^4.0.1\",mocha:\"^10.2.0\",\"uglify-js\":\"^3.3.16\"},engines:{node:\">=0.10.0\"},scripts:{test:\"mocha -u tdd\"}};},{}]},{},[1])(1)});\n\nlet tpl = Object.create(null);\ntpl['form-error.html'] = '<div class=\"coreui-form__error alert alert-danger alert-dismissible fade show mb-3 <%= options.class %>\">\\n    <%- message %>\\n    <% if (options.dismiss) { %>\\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\\n    <% } %>\\n</div>';\ntpl['form-field-content.html'] = '<%- content %>';\ntpl['form-field-group.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__group_container mb-3\">\\n    <div class=\"coreui-form__group_label pe-2\">\\n        <h6 class=\"coreui-form__field_label_text col-form-label-sm\">\\n            <%- group.label %>\\n            <% if (group.showCollapsible) { %>\\n                <button type=\"button\" class=\"btn btn-sm btn-link btn-collapsible text-dark\">\\n                    <% if ( ! group.show) { %>\\n                    <i class=\"bi bi-chevron-right\"></i>\\n                    <% } else { %>\\n                    <i class=\"bi bi-chevron-down\"></i>\\n                    <% } %>\\n                </button>\\n            <% } %>\\n        </h6>\\n    </div>\\n    <div class=\"coreui-form__group_content\"<% if ( ! group.show) { %> style=\"display:none\"<% } %>>\\n        <%- content %>\\n    </div>\\n</div>';\ntpl['form-field-label.html'] = '<div id=\"coreui-form-<%= id %>\" class=\"coreui-form__field_container d-flex flex-column flex-md-row mb-3\"\\n     <% if ( ! field.show) { %> style=\"display:none\"<% } %>>\\n    <% if (field.labelWidth !== 0 && field.labelWidth !== \\'0px\\') { %>\\n    <div class=\"coreui-form__field_label text-md-end text-sm-start pe-2\"<% if (field.labelWidth) { %> style=\"min-width:<%= field.labelWidth %>;width:<%= field.labelWidth %>\"<% } %>>\\n        <div class=\"coreui-form__field_label_content col-form-label-sm\">\\n            <% if (field.required) { %>\\n            <span class=\"coreui-form__field_label_req text-danger\">*</span>\\n            <% } %>\\n            <span class=\"coreui-form__field_label_text fw-medium\"><%- field.label %></span>\\n        </div>\\n\\n        <% if (field.description) { %>\\n        <div class=\"coreui-form__field_label_description text-muted\">\\n            <small><%- field.description %></small>\\n        </div>\\n        <% } %>\\n    </div>\\n    <% } %>\\n    <div class=\"coreui-form__field_content flex-fill pt-1\">\\n        <div class=\"d-inline-block content-<%= hash %>\">\\n            <%- content %>\\n        </div>\\n\\n        <% if (field.outContent) { %>\\n        <span class=\"coreui-form__field-content-out d-inline-block align-top pt-1 ps-1\">\\n            <%- field.outContent %>\\n        </span>\\n        <% } %>\\n\\n        <% if (attachFields && attachFields.length > 0) { %>\\n            <% $.each(attachFields, function(key, attachField) { %>\\n                <div class=\"<% if (attachField.hasOwnProperty(\\'direction\\') && attachField.direction === \\'column\\') { %>d-block mt-2<% } else { %>d-inline-block<% } %> content-<%= attachField.hash %>\">\\n                    <%- attachField.content %>\\n                </div>\\n            <% }); %>\\n        <% } %>\\n    </div>\\n</div>';\ntpl['form.html'] = '<div id=\"coreui-form-<%= form.id %>\" class=\"coreui-form mb-2\"\\n    <% if (widthSizes) { %>style=\"<%= widthSizes.join(\\';\\') %>\"<% } %>>\\n    <% if (form.title) { %>\\n    <h5 class=\"mb-4\"><%- form.title %></h5>\\n    <% } %>\\n\\n    <form action=\"<%= form.send.url %>\" method=\"<%= form.send.method %>\"<%- formAttr %>>\\n        <div class=\"coreui-form__fields d-flex justify-content-start flex-column flex-wrap\">\\n            <%- layout %>\\n        </div>\\n\\n        <% if (controls) { %>\\n        <div class=\"coreui-form__controls d-flex justify-content-start flex-sm-wrap flex-md-nowrap\">\\n            <% if (form.controlsOffset !== 0 && form.controlsOffset !== \\'0px\\') { %>\\n            <div class=\"d-none d-md-block\" style=\"width:<%= form.controlsOffset %>;min-width:<%= form.controlsOffset %>\"></div>\\n            <% } %>\\n\\n            <div class=\"d-flex justify-content-start flex-wrap gap-2\">\\n                <% $.each(controls, function(key, control) { %>\\n                <div id=\"coreui-form-<%= form.id %>-control-<%= control.index %>\" class=\"coreui-form__control_container\"\\n                     <% if ( ! control.show) { %>style=\"display:none\"<% } %>>\\n                    <%- control.content %>\\n                </div>\\n                <% }); %>\\n            </div>\\n        </div>\\n        <% } %>\\n    </form>\\n</div>';\ntpl['controls/button.html'] = '<button <%- render.attr %>><%- control.content %></button>';\ntpl['controls/link.html'] = '<a href=\"<%- control.href %>\"<%- render.attr %>><%- control.content %></a>';\ntpl['fields/checkbox.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItems.join(\\', \\') %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/color.html'] = '<% if (field.readonly) { %>\\n    <div class=\"rounded-1\" style=\"width: 14px;height: 14px;background-color: <%= value %>\"></div>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/custom.html'] = '<%- content %>';\ntpl['fields/dataset-row-readonly.html'] = '<tr class=\"coreui-form__field-dataset-item\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-2 pb-1\">\\n            <%- option.value %>\\n        </td>\\n    <% }); %>\\n</tr>';\ntpl['fields/dataset-row.html'] = '<tr class=\"coreui-form__field-dataset-item\" id=\"dataset-item-<%= hashItem %>\">\\n    <% $.each(options, function(key, option) { %>\\n        <td class=\"pe-1 pb-1\">\\n        <% if (option.type === \\'select\\') { %>\\n            <select <%- option.attr %>>\\n                <% $.each(option.items, function(key, item) { %>\\n                <option <%- item.attr %>><%- item.title %></option>\\n                <% }); %>\\n            </select>\\n        <% } else if (option.type === \\'switch\\') { %>\\n            <div class=\"form-check form-switch\">\\n                <input <%- option.attr %>/>\\n            </div>\\n        <% } else { %>\\n            <input <%- option.attr %>>\\n        <% } %>\\n        </td>\\n    <% }); %>\\n\\n    <td class=\"pb-1\">\\n        <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-remove\" data-item-id=\"dataset-item-<%= hashItem %>\">\\n            <i class=\"bi bi-x text-muted\"></i>\\n        </button>\\n    </td>\\n</tr>';\ntpl['fields/dataset.html'] = '<% if (field.readonly) { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted pe-2\"><small><%= item.title %></small></td>\\n                <% }); %>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n            <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n<% } else { %>\\n    <table class=\"coreui-form__field-dataset-container\" <% if (render.rows.length == 0) { %> style=\"display:none\"<% } %>>\\n        <thead>\\n            <tr>\\n                <% $.each(render.headers, function(key, item) { %>\\n                <td class=\"text-muted\"><small><%= item.title %></small></td>\\n                <% }); %>\\n                <td></td>\\n            </tr>\\n        </thead>\\n        <tbody class=\"coreui-form__field-dataset-list\">\\n            <% $.each(render.rows, function(key, row) { %>\\n                <%- row %>\\n            <% }); %>\\n        </tbody>\\n    </table>\\n\\n    <button type=\"button\" class=\"btn btn-sm btn-link btn-dataset-add\"><%= lang.dataset_add %></button>\\n<% } %>';\ntpl['fields/hidden.html'] = '<% if ( ! field.readonly) { %>\\n    <input <%- render.attr %>/>\\n<% } %>';\ntpl['fields/input.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <input <%- render.attr %>/>\\n\\n    <% if (render.datalist.length > 0) { %>\\n    <datalist id=\"<%= datalistId %>\">\\n        <% $.each(render.datalist, function(key, item) { %>\\n        <option <%- item.attr %>/>\\n        <% }); %>\\n    </datalist>\\n    <% } %>\\n<% } %>';\ntpl['fields/modal-loading.html'] = '<div class=\"py-4 d-flex justify-content-center align-items-center gap-2\">\\n    <div class=\"spinner-border mr-2\"></div> <%= lang.modal_loading %>\\n</div>\\n';\ntpl['fields/modal.html'] = '<% if (field.readonly) { %>\\n    <%= text %>\\n<% } else { %>\\n    <div class=\"input-group\"<% if (render.width) { %> style=\"width:<%= render.width %>\"<% } %>>\\n        <input <%- render.attr %>/>\\n        <input type=\"hidden\" name=\"<%= field.name %>\" value=\"<%= value %>\" class=\"coreui-form-modal-value\"/>\\n        <% if ( ! field.required) { %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-clear border-secondary-subtle\" type=\"button\">\\n            <i class=\"bi bi-x\"></i>\\n        </button>\\n        <% } %>\\n        <button class=\"btn btn-sm btn-outline-secondary btn-modal-select border-secondary-subtle\" type=\"button\"><%= lang.modal_select %></button>\\n    </div>\\n<% } %>';\ntpl['fields/passwordRepeat.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <div class=\"d-flex gap-1 align-items-center\">\\n        <input <%- render.attr %>/>\\n        <small class=\"password-text-repeat\"><%= lang.repeat %></small>\\n\\n        <% if (field.showBtn) { %>\\n            <div class=\"input-group flex-nowrap\">\\n                <input <%- render.attr2 %>/>\\n                <button class=\"btn btn-sm btn-outline-secondary border-secondary-subtle btn-password-change\" type=\"button\"\\n                        data-change=\"<%- lang.change %>\" data-cancel=\"<%- lang.cancel %>\"><%= btn_text %></button>\\n            </div>\\n        <% } else { %>\\n            <input <%- render.attr2 %>/>\\n        <% } %>\\n\\n    </div>\\n<% } %>';\ntpl['fields/radio.html'] = '<% if (field.readonly) { %>\\n    <%- render.selectedItem %>\\n<% } else { %>\\n    <% $.each(render.options, function(key, option) { %>\\n    <div class=\"form-check<% if (field.inline) { %> form-check-inline<% } %>\">\\n        <input <%- option.attr %>/>\\n        <label class=\"form-check-label\" for=\"<%= option.id %>\"><%= option.text %></label>\\n    </div>\\n    <% }); %>\\n<% } %>';\ntpl['fields/select.html'] = '<% if (field.readonly) { %>\\n    <%= render.selectedOptions.join(\\', \\') %>\\n<% } else { %>\\n    <select <%- render.attr %>>\\n        <% $.each(render.options, function(key, option) { %>\\n            <% if (option.type === \\'group\\') { %>\\n                <optgroup<%- option.attr %>/>\\n                <% $.each(option.options, function(key, groupOption) { %>\\n                    <option <%- groupOption.attr %>/><%= groupOption.text %></option>\\n                <% }); %>\\n                </optgroup>\\n            <% } else { %>\\n            <option <%- option.attr %>/><%= option.text %></option>\\n            <% } %>\\n        <% }); %>\\n    </select>\\n<% } %>';\ntpl['fields/switch.html'] = '<% if (field.readonly) { %>\\n    <%= field.valueY == value ? lang.switch_yes : lang.switch_no %>\\n<% } else { %>\\n    <div class=\"form-check form-switch\">\\n        <input <%- render.attr %>/>\\n    </div>\\n<% } %>';\ntpl['fields/textarea.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea <%- render.attr %>><%- value %></textarea>\\n<% } %>';\ntpl['fields/wysiwyg.html'] = '<% if (field.readonly) { %>\\n    <%- value %>\\n<% } else { %>\\n    <textarea name=\"<%= field.name %>\" id=\"editor-<%= editorHash %>\"><%- value %></textarea>\\n<% } %>';\n\nlet coreuiFormUtils = {\r\n\r\n    /**\r\n     * Получение значения поля\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               fieldOptions\r\n     * @returns {string|number|null}\r\n     */\r\n    getFieldValue: function (form, fieldOptions) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        if (fieldOptions &&\r\n            formRecord &&\r\n            typeof fieldOptions.name === 'string' &&\r\n            typeof formRecord === 'object' &&\r\n            formRecord.hasOwnProperty(fieldOptions.name) &&\r\n            ['string', 'number', 'object'].indexOf(typeof formRecord[fieldOptions.name]) >= 0\r\n        ) {\r\n            return formRecord[fieldOptions.name];\r\n        }\r\n\r\n        return '';\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение функции из указанного текста\r\n     * @param functionName\r\n     * @param context\r\n     * @returns {null|Window}\r\n     * @private\r\n     */\r\n    getFunctionByName: function(functionName, context) {\r\n\r\n        let namespaces = functionName.split(\".\");\r\n        let func       = namespaces.pop();\r\n\r\n        context = context || window;\r\n\r\n        for (let i = 0; i < namespaces.length; i++) {\r\n            if (context.hasOwnProperty(namespaces[i])) {\r\n                context = context[namespaces[i]];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        if (typeof context[func] === 'function') {\r\n            return context[func];\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    eval: function (code) {\r\n\r\n        (function(){\r\n            eval(code);\r\n        })();\r\n    },\r\n\r\n\r\n    /**\r\n     * Обработка полей в полях\r\n     * @param form\r\n     * @param defaultOptions\r\n     * @param fieldOptions\r\n     */\r\n    mergeFieldOptions: function (form, defaultOptions, fieldOptions) {\r\n\r\n        let options = $.extend(true, {}, defaultOptions);\r\n\r\n        if (fieldOptions) {\r\n            if (options.hasOwnProperty('attr') && typeof options.attr === 'object' &&\r\n                fieldOptions.hasOwnProperty('attr') && typeof fieldOptions.attr === 'object'\r\n            ) {\r\n                fieldOptions.attr = this.mergeAttr(options.attr, fieldOptions.attr);\r\n            }\r\n\r\n            options = $.extend(true, {}, options, fieldOptions);\r\n        }\r\n\r\n        if (options.hasOwnProperty('width')) {\r\n            if (options.width) {\r\n                let unit = typeof options.width === 'number' ? 'px' : '';\r\n                options.width = options.width + unit;\r\n\r\n            } else if (form._options.fieldWidth && options.type !== 'color') {\r\n                let unit = typeof form._options.fieldWidth === 'number' ? 'px' : '';\r\n                options.width = form._options.fieldWidth + unit;\r\n            }\r\n        }\r\n\r\n        if (options.hasOwnProperty('labelWidth')) {\r\n            if (options.labelWidth >= 0 && options.labelWidth !== null) {\r\n                let unit = typeof options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = options.labelWidth + unit;\r\n\r\n            } else if (form._options.labelWidth) {\r\n                let unit = typeof form._options.labelWidth === 'number' ? 'px' : '';\r\n                options.labelWidth = form._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        return options\r\n    },\r\n\r\n\r\n    /**\r\n     * Объединение атрибутов\r\n     * @param attr1\r\n     * @param attr2\r\n     * @returns {object}\r\n     */\r\n    mergeAttr: function (attr1, attr2) {\r\n\r\n        let mergeAttr = Object.assign({}, attr1);\r\n\r\n        if (typeof attr2 === 'object') {\r\n            $.each(attr2, function (name, value) {\r\n                if (mergeAttr.hasOwnProperty(name)) {\r\n                    if (name === 'class') {\r\n                        mergeAttr[name] += ' ' + value;\r\n\r\n                    } else if (name === 'style') {\r\n                        mergeAttr[name] += ';' + value;\r\n\r\n                    } else {\r\n                        mergeAttr[name] = value;\r\n                    }\r\n\r\n                } else {\r\n                    mergeAttr[name] = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return mergeAttr;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация и рендер дополнительных полей\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @returns {object}\r\n     * @private\r\n     */\r\n    getAttacheFields: function(form, options) {\r\n\r\n        let fields = [];\r\n\r\n        if (typeof options === 'object' &&\r\n            typeof(options.fields) === 'object' &&\r\n            Array.isArray(options.fields)\r\n        ) {\r\n            $.each(options.fields, function (key, field) {\r\n                let instance = form.initField(field);\r\n\r\n                if (typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                fields.push({\r\n                    hash: instance._hash,\r\n                    direction: options.hasOwnProperty('fieldsDirection') ? options.fieldsDirection : 'row',\r\n                    content: instance.renderContent()\r\n                });\r\n            });\r\n        }\r\n\r\n        return fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDate: function (value) {\r\n\r\n        if (value && value.length === 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @return {string}\r\n     */\r\n    formatDateTime: function (value) {\r\n\r\n        if (value && value.length >= 10) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day   = date.getDate();\r\n            let hour  = (\"00\" + date.getHours()).slice(-2);\r\n            let min   = (\"00\" + date.getMinutes()).slice(-2);\r\n            let sec   = (\"00\" + date.getSeconds()).slice(-2);\r\n\r\n            day   = day < 10 ? '0' + day : day;\r\n            month = month < 10 ? '0' + month : month;\r\n\r\n            value = day + '.' + month + '.' + year + ' ' + hour + ':' + min + ':' + sec;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateMonth: function (value, lang) {\r\n\r\n        if (value && value.length === 7) {\r\n            let date  = new Date(value);\r\n            let year  = date.getFullYear();\r\n            let month = date.getMonth();\r\n\r\n            let monthLang = lang.date_months.hasOwnProperty(month) ? lang.date_months[month] : '';\r\n\r\n            value = monthLang + ' ' + year;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Форматирование даты со временем\r\n     * @param {string} value\r\n     * @param {object} lang\r\n     * @return {string}\r\n     */\r\n    formatDateWeek: function (value, lang) {\r\n\r\n        if (value && value.length >= 7) {\r\n            let year = value.substring(0, 4);\r\n            let week = value.substring(6);\r\n\r\n            value = year + ' ' + lang.date_week + ' ' + week;\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из объекта по указанному пути\r\n     * @param {object} obj\r\n     * @param {string} path\r\n     * @return {*}\r\n     */\r\n    getObjValue: function(obj, path) {\r\n\r\n        path = path.split('.');\r\n\r\n        for (let i = 0, len = path.length; i < len; i++){\r\n            obj = obj[path[i]];\r\n        }\r\n\r\n        return obj;\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка на число\r\n     * @param num\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    isNumeric: function(num) {\r\n        return (typeof(num) === 'number' || typeof(num) === \"string\" && num.trim() !== '') && ! isNaN(num);\r\n    },\r\n\r\n\r\n    /**\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    hashCode: function() {\r\n        return this.crc32((new Date().getTime() + Math.random()).toString()).toString(16);\r\n    },\r\n\r\n\r\n    /**\r\n     * Hash crc32\r\n     * @param str\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    crc32: function (str) {\r\n\r\n        for (var a, o = [], c = 0; c < 256; c++) {\r\n            a = c;\r\n            for (var f = 0; f < 8; f++) {\r\n                a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;\r\n            }\r\n            o[c] = a;\r\n        }\r\n\r\n        for (var n = -1, t = 0; t < str.length; t++) {\r\n            n = n >>> 8 ^ o[255 & (n ^ str.charCodeAt(t))];\r\n        }\r\n\r\n        return (-1 ^ n) >>> 0;\r\n    },\r\n\r\n\r\n    /**\r\n     * Округление\r\n     * @param number\r\n     * @param precision\r\n     * @returns {number}\r\n     */\r\n    round: function (number, precision) {\r\n\r\n        precision = typeof precision !== 'undefined' ? parseInt(precision) : 0;\r\n\r\n        if (precision === 0) {\r\n            return Math.round(number);\r\n\r\n        } else if (precision > 0) {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number * pow) / pow;\r\n\r\n        } else {\r\n            let pow = Math.pow(10, precision);\r\n            return Math.round(number / pow) * pow;\r\n        }\r\n    }\r\n};\n\nlet coreuiFormInstance = {\r\n\r\n    _options: {\r\n        id: null,\r\n        title: '',\r\n        lang: 'en',\r\n        send: {\r\n            url: '',\r\n            method: 'POST',\r\n            format: 'form',\r\n        },\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        labelWidth: 200,\r\n        controlsOffset: null,\r\n        readonly: false,\r\n        validate: false,\r\n        successLoadUrl: '',\r\n        errorClass: '',\r\n        layout: '[column_default]',\r\n        onSubmit: null,\r\n        onSubmitSuccess: null,\r\n        record: {},\r\n        fields: [],\r\n        controls: []\r\n    },\r\n\r\n    _lock: false,\r\n    _fieldsIndex: 0,\r\n    _groupsIndex: 0,\r\n    _controlsIndex: 0,\r\n    _groups: [],\r\n    _fields: [],\r\n    _controls: [],\r\n    _events: {},\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {object} options\r\n     * @private\r\n     */\r\n    _init: function (options) {\r\n\r\n        this._options.labelWidth    = coreuiForm$1.getSetting('labelWidth');\r\n        this._options.lang          = coreuiForm$1.getSetting('lang');\r\n        this._options.errorClass    = coreuiForm$1.getSetting('errorClass');\r\n        this._options.send.format = coreuiForm$1.getSetting('sendDataFormat');\r\n\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        if ( ! this._options.id) {\r\n            this._options.id = coreuiFormUtils.hashCode();\r\n        }\r\n\r\n        if (this._options.hasOwnProperty('labelWidth')) {\r\n            if (this._options.labelWidth >= 0 && this._options.labelWidth !== null) {\r\n                let unit = typeof this._options.labelWidth === 'number' ? 'px' : '';\r\n                this._options.labelWidth = this._options.labelWidth + unit;\r\n            }\r\n        }\r\n\r\n        if ( ! this._options.hasOwnProperty('controlsOffset') || this._options.controlsOffset === null) {\r\n            this._options.controlsOffset = this._options.labelWidth;\r\n        } else {\r\n            if (this._options.controlsOffset >= 0) {\r\n                let unit = typeof this._options.controlsOffset === 'number' ? 'px' : '';\r\n                this._options.controlsOffset = this._options.controlsOffset + unit;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    initEvents: function () {\r\n\r\n        let that          = this;\r\n        let formContainer = '#coreui-form-' + this._options.id + ' > form';\r\n\r\n        $(formContainer).on('submit', function () {\r\n            setTimeout(function () {\r\n                that.send.apply(that);\r\n            }, 0);\r\n            return false;\r\n        });\r\n\r\n        this._trigger('shown.coreui.form');\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение id формы\r\n     * @return {string|null}\r\n     */\r\n    getId: function () {\r\n\r\n        return this._options.hasOwnProperty('id') ? this._options.id : null;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    render: function(element) {\r\n\r\n        let that       = this;\r\n        let widthSizes = [];\r\n        let layout     = this._options.layout;\r\n        let controls   = [];\r\n        let formAttr   = [];\r\n\r\n\r\n\r\n        if (this._options.width) {\r\n            let unit = typeof this._options.width === 'number' ? 'px' : '';\r\n            widthSizes.push('width:' + this._options.width + unit);\r\n        }\r\n\r\n        if (this._options.minWidth) {\r\n            let unit = typeof this._options.minWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('min-width:' + this._options.minWidth + unit);\r\n        }\r\n\r\n        if (this._options.maxWidth) {\r\n            let unit = typeof this._options.maxWidth === 'number' ? 'px' : '';\r\n            widthSizes.push('max-width:' + this._options.maxWidth + unit);\r\n        }\r\n\r\n\r\n\r\n        // Поля\r\n        if (typeof this._options.fields === 'object' &&\r\n            Array.isArray(this._options.fields) &&\r\n            this._options.fields.length > 0 &&\r\n            layout &&\r\n            typeof layout === 'string'\r\n        ) {\r\n            let matches        = Array.from(layout.matchAll(/\\[column_([\\w_\\d]+)\\]/g));\r\n            let columns        = [];\r\n            let columnsContent = {};\r\n\r\n            if (matches.length > 0) {\r\n                $.each(matches, function (key, match) {\r\n                    columns.push(match[1]);\r\n                });\r\n            }\r\n\r\n            if (columns.length > 0) {\r\n                $.each(this._options.fields, function (key, field) {\r\n                    let column = field.hasOwnProperty('column') && (typeof field.column === 'string' || typeof field.column === 'number')\r\n                        ? (columns.indexOf(field.column) >= 0 ? field.column : null)\r\n                        : 'default';\r\n\r\n                    if (typeof column !== 'string') {\r\n                        return;\r\n                    }\r\n\r\n                    let type     = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : '';\r\n                    let instance = null;\r\n\r\n                    if (type === 'group') {\r\n                        instance = that.initGroup(field);\r\n\r\n                    } else {\r\n                        instance = that.initField(field);\r\n                    }\r\n\r\n\r\n                    if ( ! instance || typeof instance !== 'object') {\r\n                        return;\r\n                    }\r\n\r\n                    if ( ! columnsContent.hasOwnProperty(column)) {\r\n                        columnsContent[column] = [];\r\n                    }\r\n                    columnsContent[column].push(instance.render());\r\n                });\r\n            }\r\n\r\n            if (Object.keys(columnsContent).length >= 0) {\r\n                $.each(columnsContent, function (name, fieldContents) {\r\n\r\n                    layout = layout.replace('[column_' + name + ']', fieldContents.join(''));\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        // Элементы управления\r\n        if (typeof this._options.controls === 'object' &&\r\n            Array.isArray(this._options.controls) &&\r\n            this._options.controls.length > 0\r\n        ) {\r\n            $.each(this._options.controls, function (key, control) {\r\n                let instance = that.initControl(control);\r\n\r\n                if ( ! instance || typeof instance !== 'object') {\r\n                    return;\r\n                }\r\n\r\n                controls.push({\r\n                    show: ! control.hasOwnProperty('show') || control.show,\r\n                    index: that._controlsIndex - 1,\r\n                    content: instance.render()\r\n                });\r\n            });\r\n        }\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            formAttr.push('novalidate');\r\n        }\r\n\r\n\r\n        let html = ejs.render(tpl['form.html'], {\r\n            form: this._options,\r\n            formAttr: formAttr ? ' ' + formAttr.join(' ') : '',\r\n            widthSizes: widthSizes,\r\n            layout: layout,\r\n            controls: controls,\r\n        });\r\n\r\n        if (element === undefined) {\r\n            return html;\r\n        }\r\n\r\n        // Dom element\r\n        let domElement = {};\r\n\r\n        if (typeof element === 'string') {\r\n            domElement = document.getElementById(element);\r\n\r\n            if ( ! domElement) {\r\n                return '';\r\n            }\r\n\r\n        } else if (element instanceof HTMLElement) {\r\n            domElement = element;\r\n        }\r\n\r\n\r\n        domElement.innerHTML = html;\r\n\r\n        this.initEvents();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        this._lock = true;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.lock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Разблокировка\r\n     */\r\n    unlock: function () {\r\n\r\n        this._lock = false;\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                control.unlock();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Отправка данных формы\r\n     */\r\n    send: function () {\r\n\r\n        if (this._lock) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (typeof this._options.validate === 'boolean' && this._options.validate) {\r\n            let isValid = this.validate();\r\n\r\n            if ( ! isValid) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let onsubmit = null;\r\n        let data     = this.getData();\r\n\r\n        if (typeof this._options.onSubmit === 'function') {\r\n            onsubmit = this._options.onSubmit;\r\n\r\n        } else if (typeof this._options.onSubmit === 'string' && this._options.onSubmit) {\r\n            let func = coreuiFormUtils.getFunctionByName(this._options.onSubmit);\r\n\r\n            if (typeof func === 'function') {\r\n                onsubmit = func;\r\n            } else if (typeof this._options.onSubmit === 'string') {\r\n                let onSubmitText = this._options.onSubmit;\r\n\r\n                onsubmit = function(form, data) {\r\n                    try {\r\n                        coreuiFormUtils.eval(onSubmitText);\r\n                    } catch (e) {\r\n                        throw Error('Incorrect onSubmit param: ' + e.message)\r\n                    }\r\n                };\r\n            }\r\n        }\r\n\r\n        if (typeof onsubmit === 'function') {\r\n            let onSubmitResult = onsubmit(this, data);\r\n\r\n            if (onSubmitResult === false) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let results    = this._trigger('send.coreui.form', this, [ this, data ]);\r\n        let isStopSend = false;\r\n\r\n        $.each(results, function(key, result) {\r\n            if (result === false) {\r\n                isStopSend = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        if (isStopSend) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.lock();\r\n\r\n        let that       = this;\r\n        let sendFormat = ['form', 'json'].indexOf(this._options.send.format) >= 0\r\n            ? this._options.send.format\r\n            : 'form';\r\n\r\n        let dataFormat  = null;\r\n        let contentType = null;\r\n\r\n        if (sendFormat === 'json') {\r\n            contentType = \"application/json; charset=utf-8\";\r\n            dataFormat  = JSON.stringify(data);\r\n\r\n        } else {\r\n            contentType = false;\r\n            dataFormat  = new FormData();\r\n\r\n            $.each(data, function (name, value) {\r\n                if (value instanceof File) {\r\n                    dataFormat.append(name, value, value.name);\r\n\r\n                } else if (value instanceof FileList) {\r\n                    $.each(value, function (key, file) {\r\n                        dataFormat.append(name, file, file.name);\r\n                    });\r\n\r\n                } else {\r\n                    dataFormat.append(name, value);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        $.ajax({\r\n            url: this._options.send.url,\r\n            method: this._options.send.method,\r\n            data: dataFormat,\r\n            contentType: contentType,\r\n            processData: false,\r\n            beforeSend: function(xhr) {\r\n                that._trigger('start-send.coreui.form', that, [ that, xhr ]);\r\n            },\r\n            success: function (result) {\r\n                that.hideError();\r\n\r\n                that._trigger('success-send.coreui.form', that, [ that, result ]);\r\n\r\n                let jsonResponse = null;\r\n\r\n                if (typeof result === 'string') {\r\n                    try {\r\n                        let parsedResponse = JSON.parse(result);\r\n                        if (typeof parsedResponse === 'object' &&\r\n                            parsedResponse !== null &&\r\n                            ! Array.isArray(parsedResponse)\r\n                        ) {\r\n                            jsonResponse = parsedResponse;\r\n                        }\r\n\r\n                    } catch (e) {\r\n                        // ignore\r\n                    }\r\n                } else {\r\n                    jsonResponse = result;\r\n                }\r\n\r\n                if (jsonResponse !== null && typeof jsonResponse === 'object') {\r\n                    if (jsonResponse.hasOwnProperty('scripts') &&\r\n                        Array.isArray(jsonResponse.scripts)\r\n                    ) {\r\n                        $.each(jsonResponse.scripts, function (key, script) {\r\n                            if (typeof script === 'string') {\r\n                                let func = coreuiFormUtils.getFunctionByName(script);\r\n\r\n                                if (typeof func === 'function') {\r\n                                    func();\r\n                                } else {\r\n                                    coreuiFormUtils.eval(script);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (jsonResponse.hasOwnProperty('loadUrl') &&\r\n                        typeof jsonResponse.loadUrl === 'string'\r\n                    ) {\r\n                        location.href = jsonResponse.loadUrl;\r\n                    }\r\n                }\r\n\r\n                if (that._options.hasOwnProperty('onSubmitSuccess')) {\r\n                    if (typeof that._options.onSubmitSuccess === 'function') {\r\n                        that._options.onSubmitSuccess();\r\n\r\n                    } else if (typeof that._options.onSubmitSuccess === 'string') {\r\n                        let func = coreuiFormUtils.getFunctionByName(that._options.onSubmitSuccess);\r\n\r\n                        if (typeof func === 'function') {\r\n                            func();\r\n                        } else {\r\n                            coreuiFormUtils.eval(that._options.onSubmitSuccess);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (that._options.hasOwnProperty('successLoadUrl') &&\r\n                    typeof that._options.successLoadUrl === 'string' &&\r\n                    that._options.successLoadUrl !== ''\r\n                ) {\r\n                    let successLoadUrl = that._options.successLoadUrl;\r\n\r\n                    // Замена параметров\r\n                    if (jsonResponse !== null && typeof jsonResponse === 'object') {\r\n                        const regx      = new RegExp('\\\\[response\\\\.([\\\\d\\\\w\\\\.]+)\\\\]', 'uig');\r\n                        let   urlParams = {};\r\n\r\n                        while (result = regx.exec(successLoadUrl)) {\r\n                            urlParams[result[0]] = result[1];\r\n                        }\r\n\r\n                        if (Object.keys(urlParams).length > 0) {\r\n                            $.each(urlParams, function (param, path) {\r\n                                let value = coreuiFormUtils.getObjValue(jsonResponse, path);\r\n                                value = typeof value !== 'undefined' ? value : '';\r\n\r\n                                successLoadUrl = successLoadUrl.replace(\r\n                                    new RegExp(param.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'g'),\r\n                                    value\r\n                                );\r\n                            });\r\n                        }\r\n                    }\r\n\r\n\r\n                    let equalHash = location.hash === successLoadUrl;\r\n\r\n                    location.href = successLoadUrl;\r\n\r\n                    if (equalHash) {\r\n                        window.onhashchange();\r\n                    }\r\n                }\r\n            },\r\n            error: function(xhr, textStatus, errorThrown) {\r\n                let errorMessage = that.getLang().send_error || '';\r\n                let data         = {};\r\n\r\n                try {\r\n                    let parsedResponse = JSON.parse(xhr.responseText);\r\n                    if (typeof parsedResponse === 'object' &&\r\n                        parsedResponse !== null &&\r\n                        ! Array.isArray(parsedResponse)\r\n                    ) {\r\n                        data = parsedResponse;\r\n                    }\r\n\r\n                } catch (e) {\r\n                    // ignore\r\n                }\r\n\r\n                if (data.hasOwnProperty('error_message') &&\r\n                    typeof data.error_message === 'string' &&\r\n                    data.error_message !== ''\r\n                ) {\r\n                    errorMessage = data.error_message;\r\n                }\r\n\r\n                that.showError(errorMessage);\r\n                that._trigger('error-send.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n            },\r\n            complete: function(xhr, textStatus) {\r\n                that.unlock();\r\n                that._trigger('end-send.coreui.form', that, [ that, xhr, textStatus ]);\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return this._options;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение записи\r\n     * @returns {object}\r\n     */\r\n    getRecord: function () {\r\n\r\n        if (this._options.hasOwnProperty('record') && typeof this._options.record === 'object') {\r\n            return this._options.record;\r\n        }\r\n\r\n        return {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение данных с формы\r\n     * @returns {object}\r\n     */\r\n    getData: function () {\r\n\r\n        let data = {};\r\n\r\n        $.each(this._fields, function (key, field) {\r\n            let fieldOptions = field.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name) {\r\n                let value = field.getValue();\r\n\r\n                if (value !== null) {\r\n                    data[fieldOptions.name] = value;\r\n                }\r\n            }\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение полей\r\n     * @returns {object}\r\n     */\r\n    getFields: function () {\r\n        return this._fields;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение элементов управления\r\n     * @returns {object}\r\n     */\r\n    getControls: function () {\r\n        return this._controls;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение групп полей\r\n     * @returns {object}\r\n     */\r\n    getGroups: function () {\r\n        return this._groups;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение поля\r\n     * @param {string} name\r\n     * @returns {object}\r\n     */\r\n    getField: function (name) {\r\n\r\n        let field = {};\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            let fieldOptions = fieldInstance.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('name') && fieldOptions.name === name) {\r\n                field = fieldInstance;\r\n            }\r\n        });\r\n\r\n        return field;\r\n    },\r\n\r\n\r\n    /**\r\n     * Смена состояний полей формы\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        $.each(this._fields, function (key, fieldInstance) {\r\n            fieldInstance.readonly(isReadonly);\r\n        });\r\n\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            let controlOptions = control.getOptions();\r\n\r\n            if (controlOptions.hasOwnProperty('type') && controlOptions.type === 'submit') {\r\n                if (isReadonly) {\r\n                    control.hide();\r\n                } else {\r\n                    control.show();\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ всех элементов управления\r\n     */\r\n    showControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.show();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие всех элементов управления\r\n     */\r\n    hideControls: function () {\r\n\r\n        $.each(this._controls, function (key, control) {\r\n            control.hide();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Валидация полей\r\n     * @return {boolean}\r\n     */\r\n    validate: function () {\r\n\r\n        let isValid = true;\r\n\r\n        $.each(this._fields, function (key, field) {\r\n\r\n            if (field.isValid() === false) {\r\n                field.validate(false);\r\n                isValid = false;\r\n\r\n            } else {\r\n                field.validate(null);\r\n            }\r\n        });\r\n\r\n        return isValid;\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ сообщения с ошибкой\r\n     * @param {string} message\r\n     * @param {object} options\r\n     */\r\n    showError: function (message, options) {\r\n\r\n        let formContainer = $('#coreui-form-' + this._options.id + ' > form');\r\n        let formError     = formContainer.find('> .coreui-form__error');\r\n\r\n        if (formError[0]) {\r\n            formError.remove();\r\n        }\r\n\r\n        options = typeof options === 'object' && ! Array.isArray(options) && options !== null ? options : {};\r\n\r\n        if (typeof this._options.errorClass === 'string' && this._options.errorClass !== '') {\r\n            options.class = options.hasOwnProperty('class') ? options.class : '';\r\n            options.class += ' ' + this._options.errorClass;\r\n        }\r\n\r\n        let errorOptions = {\r\n            class:   options.hasOwnProperty('class') && typeof options.class === 'string' ? options.class : '',\r\n            dismiss: options.hasOwnProperty('dismiss') ? !! options.dismiss : true,\r\n        };\r\n\r\n        formContainer.prepend(\r\n            ejs.render(tpl['form-error.html'], {\r\n                message: message,\r\n                options: errorOptions,\r\n            })\r\n        );\r\n\r\n\r\n        if ( ! options.hasOwnProperty('scroll') || options.scroll) {\r\n            let scrollOffset = coreuiForm$1.getSetting('errorMessageScrollOffset');\r\n\r\n            $('html,body').animate({\r\n                scrollTop : formContainer.offset().top - scrollOffset\r\n            }, 'fast');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие сообщения с ошибкой\r\n     */\r\n    hideError: function () {\r\n\r\n        $('#coreui-form-' + this._options.id + ' > form > .coreui-form__error').remove();\r\n    },\r\n\r\n\r\n    /**\r\n     * @param eventName\r\n     * @param callback\r\n     * @param context\r\n     * @param singleExec\r\n     */\r\n    on: function(eventName, callback, context, singleExec) {\r\n        if (typeof this._events[eventName] !== 'object') {\r\n            this._events[eventName] = [];\r\n        }\r\n        this._events[eventName].push({\r\n            context : context || this,\r\n            callback: callback,\r\n            singleExec: !! singleExec,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление формы\r\n     */\r\n    destruct: function () {\r\n\r\n        $('#coreui-form-' + this._options.id).remove();\r\n        delete coreuiForm$1._instances[this.getId()];\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация поля\r\n     * @param field\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initField: function (field) {\r\n\r\n        if (typeof field !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = field.hasOwnProperty('type') && typeof field.type === 'string' ? field.type : 'input';\r\n\r\n        if (type === 'group') {\r\n            return null;\r\n        }\r\n\r\n        if ( ! coreuiForm$1.fields.hasOwnProperty(type)) {\r\n            type = 'input';\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            field.readonly = true;\r\n        }\r\n\r\n\r\n        let fieldInstance = $.extend(true, {\r\n            render:        function () {},\r\n            renderContent: function () {},\r\n            init:          function () {},\r\n            getValue:      function () {},\r\n            setValue:      function () {},\r\n            getOptions:    function () {},\r\n            show:          function () {},\r\n            hide:          function () {},\r\n            readonly:      function () {},\r\n            validate:      function () {},\r\n            isValid:       function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        fieldInstance.init(this, field, this._fieldsIndex++);\r\n\r\n        this._fields.push(fieldInstance);\r\n\r\n        return fieldInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация группы\r\n     * @param group\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initGroup: function (group) {\r\n\r\n        if (typeof group !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = group.hasOwnProperty('type') && typeof group.type === 'string' ? group.type : '';\r\n\r\n        if (type !== 'group') {\r\n            return null;\r\n        }\r\n\r\n        let groupInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            expand:     function () {},\r\n            collapse:   function () {},\r\n        }, coreuiForm$1.fields[type]);\r\n\r\n        groupInstance.init(this, group, this._groupsIndex++);\r\n\r\n        this._groups.push(groupInstance);\r\n\r\n        return groupInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация контролов\r\n     * @param control\r\n     * @return {object|null}\r\n     * @private\r\n     */\r\n    initControl: function (control) {\r\n\r\n        if (typeof control !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        let type = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : null;\r\n\r\n        if ( ! type || ! coreuiForm$1.controls.hasOwnProperty(type)) {\r\n            return null;\r\n        }\r\n\r\n        if (type === 'submit' && this._options.readonly) {\r\n            control.show = false;\r\n        }\r\n\r\n\r\n        let controlInstance = $.extend(true, {\r\n            render:     function () {},\r\n            init:       function () {},\r\n            getOptions: function () {},\r\n            show:       function () {},\r\n            hide:       function () {},\r\n        }, coreuiForm$1.controls[type]);\r\n\r\n        controlInstance.init(this, control, this._controlsIndex++);\r\n\r\n        this._controls.push(controlInstance);\r\n\r\n        return controlInstance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение настроек языка\r\n     * @private\r\n     */\r\n    getLang: function () {\r\n\r\n        return coreuiForm$1.lang.hasOwnProperty(this._options.lang)\r\n            ? coreuiForm$1.lang[this._options.lang]\r\n            : coreuiForm$1.lang['ru'];\r\n    },\r\n\r\n\r\n    /**\r\n     * @param name\r\n     * @param context\r\n     * @param params\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _trigger: function(name, context, params) {\r\n\r\n        params = params || [];\r\n        let results = [];\r\n\r\n        if (this._events[name] instanceof Object && this._events[name].length > 0) {\r\n            for (var i = 0; i < this._events[name].length; i++) {\r\n                let callback = this._events[name][i].callback;\r\n\r\n                context = context || this._events[name][i].context;\r\n\r\n                results.push(\r\n                    callback.apply(context, params)\r\n                );\r\n\r\n                if (this._events[name][i].singleExec) {\r\n                    this._events[name].splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n\r\n    /**\r\n     * @param {object} control\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderControl: function (control) {\r\n\r\n        let content = '';\r\n        let type    = control.hasOwnProperty('type') && typeof control.type === 'string' ? control.type : 'text';\r\n\r\n        if (coreuiForm$1.control.hasOwnProperty(type)) {\r\n            content = coreuiForm$1.control[type].render(control);\r\n        }\r\n\r\n        return content;\r\n    }\r\n};\n\nvar coreuiForm$1 = {\r\n\r\n    lang: {},\r\n    fields: {},\r\n    controls: {},\r\n\r\n    _instances: {},\r\n    _settings: {\r\n        labelWidth: 200,\r\n        lang: 'en',\r\n        class: '',\r\n        sendDataFormat: 'form',\r\n        errorMessageScrollOffset: 70\r\n    },\r\n\r\n\r\n    /**\r\n     * Создание экземпляра формы\r\n     * @param {object} options\r\n     * @returns {coreuiFormInstance}\r\n     */\r\n    create: function (options) {\r\n\r\n        let instance = $.extend(true, {}, coreuiFormInstance);\r\n        instance._init(options instanceof Object ? options : {});\r\n\r\n        let formId = instance.getId();\r\n        this._instances[formId] = instance;\r\n\r\n        return instance;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение экземпляра формы по id\r\n     * @param {string} id\r\n     * @returns {coreuiFormInstance|null}\r\n     */\r\n    get: function (id) {\r\n\r\n        if ( ! this._instances.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        if ($('#coreui-form-' + this._instances[id])[0]) {\r\n            delete this._instances[id];\r\n            return null;\r\n        }\r\n\r\n        return this._instances[id];\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка настроек\r\n     * @param {object} settings\r\n     */\r\n    setSettings: function(settings) {\r\n\r\n        this._settings = $.extend({}, this._settings, settings);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения настройки\r\n     * @param {string} name\r\n     */\r\n    getSetting: function(name) {\r\n\r\n        let value = null;\r\n\r\n        if (this._settings.hasOwnProperty(name)) {\r\n            value = this._settings[name];\r\n        }\r\n\r\n        return value;\r\n    }\r\n};\n\ncoreuiForm$1.lang.ru = {\r\n    \"modal_select\": \"Выбрать\",\r\n    \"modal_loading\": \"Загрузка...\",\r\n    \"switch_yes\": \"Да\",\r\n    \"switch_no\": \"Нет\",\r\n    \"dataset_add\": \"Добавить\",\r\n    \"date_months\": ['Январь','Февраль','Март','Апрель','Май','Июнь', 'Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\r\n    \"date_week\": \"неделя\",\r\n    \"send_error\": \"Произошла ошибка. Попробуйте снова или обратитесь к администратору\",\r\n    \"required_field\": \"Обязательное поле\",\r\n    \"repeat\": \"повторите\",\r\n    \"change\": \"изменить\",\r\n    \"cancel\": \"отмена\"\r\n};\n\ncoreuiForm$1.lang.en = {\r\n    \"modal_select\": \"Select\",\r\n    \"modal_loading\": \"Loading...\",\r\n    \"switch_yes\": \"Yes\",\r\n    \"switch_no\": \"No\",\r\n    \"dataset_add\": \"Add\",\r\n    \"date_months\": [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\r\n    \"date_week\": \"week\",\r\n    \"send_error\": \"An error has occurred. Please try again or contact your administrator\",\r\n    \"required_field\": \"Required field\",\r\n    \"repeat\": \"repeat\",\r\n    \"change\": \"change\",\r\n    \"cancel\": \"cancel\"\r\n};\n\ncoreuiForm$1.controls.button = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'button',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-secondary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'button';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            coreuiFormUtils.eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.custom = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'custom',\r\n        content: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form   = form;\r\n        this._index   = index;\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return this._options.content;\r\n    }\r\n};\n\ncoreuiForm$1.controls.link = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'link',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        attr: {\r\n            class: 'btn btn-sm btn-link'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/link.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > a')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            coreuiFormUtils.eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.controls.submit = {\r\n\r\n    _form: null,\r\n    _index: null,\r\n    _options: {\r\n        type: 'submit',\r\n        href: null,\r\n        content: null,\r\n        onClick: null,\r\n        show: true,\r\n        attr: {\r\n            class: 'btn btn-sm btn-primary'\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object} options\r\n     * @param {int} index\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._options = $.extend({}, this._options, options);\r\n        this._form    = form;\r\n        this._index   = index;\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ контрола\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие контрола\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._form.getId() + '-control-' + this._index).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    lock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        if ( ! button.find('.spinner-border')[0]) {\r\n            button.prepend('<span class=\"spinner-border spinner-border-sm\"></span> ');\r\n        }\r\n        if ( ! button.attr('disabled')) {\r\n            button.attr('disabled', 'disabled');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    unlock: function () {\r\n\r\n        let button = $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button');\r\n\r\n        button.find('.spinner-border').remove();\r\n        button.removeAttr('disabled');\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента для размещения на странице\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        options.attr.type = 'submit';\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['controls/button.html'], {\r\n            control: this._options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий связанных с элементом управления\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        if (['function', 'string'].indexOf(typeof this._options.onClick) >= 0) {\r\n            $('#coreui-form-' + this._form.getId() + '-control-' + this._index + ' > button')\r\n                .click(function (event) {\r\n\r\n                    if (typeof that._options.onClick === 'function') {\r\n                        that._options.onClick(that._form, event);\r\n                    } else {\r\n                        let callback = coreuiFormUtils.getFunctionByName(that._options.onClick);\r\n\r\n                        if (typeof callback === 'function') {\r\n                            callback(that._form, event);\r\n                        } else {\r\n                            coreuiFormUtils.eval(that._options.onClick);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.checkbox = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'checkbox',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: null,\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {object}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let values = [];\r\n\r\n            $('.content-' + this._hash + ' input[type=checkbox]:checked').each(function () {\r\n                values.push($(this).val());\r\n            });\r\n\r\n            return values;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значений в поле\r\n     * @param {object|null|string|number} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=radio]').prop('checked', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' input[type=radio]').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('checked', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that            = this;\r\n        let checkboxOptions = [];\r\n        let fieldOptions    = this.getOptions();\r\n        let selectedItems   = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'checkbox',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils.hashCode();\r\n\r\n                if (typeof(that._value) === 'object' &&\r\n                    Array.isArray(that._value)\r\n                ) {\r\n                    $.each(that._value, function (key, itemValue) {\r\n                        if (itemValue == option.value) {\r\n                            itemAttr.checked = 'checked';\r\n                            if (option.hasOwnProperty('text') && option.text) {\r\n                                selectedItems.push(option.text);\r\n                            }\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                } else if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItems.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                checkboxOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        let value = typeof this._value === 'object' && Array.isArray(this._value)\r\n            ? this._value.join(', ')\r\n            : this._value;\r\n\r\n        return ejs.render(tpl['fields/checkbox.html'], {\r\n            field: fieldOptions,\r\n            value: value,\r\n            render: {\r\n                options: checkboxOptions,\r\n                selectedItems: selectedItems\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.color = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'color',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-color d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/color.html'], {\r\n            field: options,\r\n            value: this._value\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.custom = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _options: {\r\n        type: 'custom',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        content: '',\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     */\r\n    getValue: function () {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options         = this.getOptions();\r\n        let content         = '';\r\n        let alloyComponents = [\r\n            'coreui.table',\r\n            'coreui.layout',\r\n            'coreui.panel',\r\n            'coreui.tabs',\r\n            'coreui.info',\r\n            'coreui.chart',\r\n        ];\r\n\r\n        if (typeof options.content === 'string') {\r\n            content = options.content;\r\n\r\n        } else if (options.content instanceof Object) {\r\n            if ( ! Array.isArray(options.content)) {\r\n                options.content = [ options.content ];\r\n            }\r\n\r\n            let components = [];\r\n\r\n            for (let i = 0; i < options.content.length; i++) {\r\n                if (typeof options.content[i] === 'string') {\r\n                    components.push(options.content[i]);\r\n\r\n                } else if ( ! Array.isArray(options.content[i]) &&\r\n                        options.content[i].hasOwnProperty('component') &&\r\n                        alloyComponents.indexOf(options.content[i].component) >= 0\r\n                ) {\r\n                    let name = options.content[i].component.split('.')[1];\r\n\r\n                    if (CoreUI.hasOwnProperty(name) &&\r\n                        typeof CoreUI[name] === \"object\" &&\r\n                        CoreUI[name] !== null &&\r\n                        ! Array.isArray(CoreUI[name])\r\n                    ) {\r\n                        let instance = CoreUI[name].create(options.content[i]);\r\n                        components.push(instance.render());\r\n\r\n                        this._form.on('shown.coreui.form', instance.initEvents, instance, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            content = components.join('');\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/custom.html'], {\r\n            content: content\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.dataset = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: [],\r\n    _renderOptions: [],\r\n    _options: {\r\n        type: 'dataset',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let name = option.hasOwnProperty('name') && ['string', 'number'].indexOf(typeof (option.name)) >= 0\r\n                    ? option.name\r\n                    : '';\r\n                let type = option.hasOwnProperty('type') && typeof (option.type) === 'string'\r\n                    ? option.type\r\n                    : 'text';\r\n                let attributes = option.hasOwnProperty('attr') && typeof (option.attr) === 'object' && ! Array.isArray(option.attr)\r\n                    ? option.attr\r\n                    : {};\r\n                let items = option.hasOwnProperty('items') && typeof (option.items) === 'object' && Array.isArray(option.items)\r\n                    ? option.items\r\n                    : [];\r\n                let valueY = option.hasOwnProperty('valueY') && ['string', 'numeric'].indexOf(typeof (option.valueY)) >= 0\r\n                    ? option.valueY\r\n                    : 'Y';\r\n                let valueN = option.hasOwnProperty('valueN') && ['string', 'numeric'].indexOf(typeof (option.valueN)) >= 0\r\n                    ? option.valueN\r\n                    : 'N';\r\n\r\n                if (name) {\r\n                    attributes.name = name;\r\n                }\r\n                if (options.required) {\r\n                    attributes.required = 'required';\r\n                }\r\n\r\n                if (type === 'select') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-select form-select-sm ' + attributes.class\r\n                        : 'form-select form-select-sm';\r\n\r\n                } else if (type === 'switch') {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-check-input ' + attributes.class\r\n                        : 'form-check-input';\r\n\r\n                    attributes.type = 'checkbox';\r\n                    attributes.value = valueY;\r\n\r\n                } else {\r\n                    attributes.class = attributes.hasOwnProperty('class')\r\n                        ? 'form-control form-control-sm ' + attributes.class\r\n                        : 'form-control form-control-sm';\r\n\r\n                    attributes.type = type;\r\n                }\r\n\r\n\r\n                that._renderOptions.push({\r\n                    type  : type,\r\n                    name  : name,\r\n                    attr  : attributes,\r\n                    items : items,\r\n                    valueY: valueY,\r\n                    valueN: valueN,\r\n                });\r\n            });\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {array}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            let container = $('.content-' + this._hash);\r\n            let data      = [];\r\n\r\n            $('.coreui-form__field-dataset-list .coreui-form__field-dataset-item', container).each(function () {\r\n                let items = {};\r\n\r\n                $.each($(this).find('input, select').serializeArray(), function (key, item) {\r\n                    if (item.name) {\r\n                        items[item.name] = item.value;\r\n                    }\r\n                });\r\n\r\n                data.push(items);\r\n            });\r\n\r\n            return data;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {object} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (typeof value !== 'object' ||\r\n            Array.isArray(value) ||\r\n            value === null\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this._value.push(value);\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash + ' .coreui-form__field-dataset-list').append(\r\n                this._renderRowReadonly(value)\r\n            );\r\n        } else {\r\n            this._eventAdd(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return this.getValue().length > 0;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление всех строк\r\n     */\r\n    removeItems: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' .coreui-form__field-dataset-list').empty();\r\n    },\r\n\r\n\r\n    /**\r\n     * Удаление строки по id\r\n     * @param {int} itemId\r\n     */\r\n    removeItem: function (itemId) {\r\n\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        $('#' + itemId).hide('fast', function () {\r\n            $('#' + itemId).remove();\r\n\r\n            if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n                $(element + ' .coreui-form__field-dataset-container').hide();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRow(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let rows    = [];\r\n        let headers = [];\r\n        let that    = this;\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            // Заголовок\r\n            $.each(options.options, function (key, option) {\r\n                let title = option.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(option.title)) >= 0\r\n                    ? option.title\r\n                    : '';\r\n\r\n                headers.push({\r\n                    title: title\r\n                });\r\n            });\r\n\r\n            // Строки\r\n            if (typeof this._value === 'object' && Array.isArray(this._value)) {\r\n                $.each(this._value, function (key, row) {\r\n                    if (typeof row !== 'object' || Array.isArray(row)) {\r\n                        return;\r\n                    }\r\n\r\n                    rows.push(that._renderRowReadonly(row));\r\n                });\r\n            }\r\n        }\r\n\r\n        return ejs.render(tpl['fields/dataset.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                headers: headers,\r\n                rows: rows,\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n\r\n        // Кнопка удаления\r\n        $(element + ' .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n\r\n        // Кнопка добавления\r\n        $(element + ' .btn-dataset-add').click(function () {\r\n            that._eventAdd();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Событие добавления\r\n     */\r\n    _eventAdd: function (row) {\r\n\r\n        let that    = this;\r\n        let element = '#coreui-form-' + this._id + ' .content-' + this._hash;\r\n        row = row || {};\r\n\r\n        if ($(element + ' .coreui-form__field-dataset-item').length === 0) {\r\n            $(element + ' .coreui-form__field-dataset-container').show();\r\n        }\r\n\r\n        $(element + ' .coreui-form__field-dataset-list').append(this._renderRow(row));\r\n        $(element + ' .coreui-form__field-dataset-item:last-child .btn-dataset-remove').click(function () {\r\n            that.removeItem($(this).data('item-id'));\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRow: function (row) {\r\n\r\n        let rowOptions  = [];\r\n        let itemOptions = [];\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let cellValue = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n                    let itemAttr = {};\r\n\r\n\r\n                    $.each(item, function (name, value) {\r\n                        if (name !== 'title') {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    });\r\n\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemAttr.selected = 'selected';\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemAttr.selected = 'selected';\r\n                    }\r\n\r\n                    let attributes = [];\r\n                    $.each(itemAttr, function (name, value) {\r\n                        attributes.push(name + '=\"' + value + '\"');\r\n                    });\r\n\r\n                    itemOptions.push({\r\n                        attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                        title: title\r\n                    });\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                if (cellValue == option.valueY) {\r\n                    option.attr.checked = 'checked';\r\n                }\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    option.attr.value = cellValue !== null ? cellValue : '';\r\n                }\r\n            }\r\n\r\n            let attributes = [];\r\n\r\n            $.each(option.attr, function (name, value) {\r\n                attributes.push(name + '=\"' + value + '\"');\r\n            });\r\n\r\n            rowOptions.push({\r\n                type: option.type,\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                items: itemOptions\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row.html'], {\r\n            hashItem: coreuiFormUtils.hashCode(),\r\n            options: rowOptions,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование строки\r\n     * @param {object} row\r\n     * @private\r\n     */\r\n    _renderRowReadonly: function (row) {\r\n\r\n        let rowOptions = [];\r\n        let lang       = this._form.getLang();\r\n\r\n        $.each(this._renderOptions, function (key, option) {\r\n\r\n            let optionValue = '';\r\n            let cellValue   = row.hasOwnProperty(option.name) ? row[option.name] : '';\r\n\r\n            if (option.type === 'select') {\r\n                let itemOptions = [];\r\n\r\n                $.each(option.items, function (key, item) {\r\n                    let title = item.hasOwnProperty('title') && ['string', 'numeric'].indexOf(typeof(item.title)) >= 0\r\n                        ? item.title\r\n                        : '';\r\n                    let itemValue = item.hasOwnProperty('value') && ['string', 'numeric'].indexOf(typeof(item.value)) >= 0\r\n                        ? item.value\r\n                        : '';\r\n\r\n                    if (typeof(cellValue) === 'object' && Array.isArray(cellValue)) {\r\n                        $.each(cellValue, function (key, cellItemValue) {\r\n                            if (cellItemValue == itemValue) {\r\n                                itemOptions.push(itemValue);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (cellValue == item.value) {\r\n                        itemOptions.push(cellValue);\r\n                    }\r\n                });\r\n\r\n            } else if (option.type === 'switch') {\r\n                let valueY = 'Y';\r\n\r\n                if (option.hasOwnProperty('valueY')) {\r\n                    valueY = option.valueY;\r\n                }\r\n\r\n                optionValue = cellValue == valueY\r\n                    ? lang.switch_yes\r\n                    : lang.switch_no;\r\n\r\n            } else {\r\n                if (['string', 'number'].indexOf(typeof(cellValue)) >= 0) {\r\n                    optionValue = cellValue;\r\n\r\n                    switch (option.type) {\r\n                        case 'date':           optionValue = coreuiFormUtils.formatDate(optionValue); break;\r\n                        case 'datetime-local': optionValue = coreuiFormUtils.formatDateTime(optionValue); break;\r\n                        case 'month':          optionValue = coreuiFormUtils.formatDateMonth(optionValue, lang); break;\r\n                        case 'week':           optionValue = coreuiFormUtils.formatDateWeek(optionValue, lang); break;\r\n                        default: optionValue = cellValue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            rowOptions.push({\r\n                value: optionValue\r\n            });\r\n        });\r\n\r\n        return ejs.render(tpl['fields/dataset-row-readonly.html'], {\r\n            options: rowOptions,\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.group = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _options: {\r\n        type: 'group',\r\n        label: '',\r\n        show: true,\r\n        showCollapsible: true,\r\n        fields: [],\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-group-\" + index;\r\n        this._options = $.extend(true, {}, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие группы\r\n     * @param {int} duration\r\n     */\r\n    collapse: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-down');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-right');\r\n\r\n        $(container + ' .coreui-form__group_content').slideUp(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ группы\r\n     * @param {int} duration\r\n     */\r\n    expand: function (duration) {\r\n\r\n        let container = '#coreui-form-' + this._id;\r\n\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').removeClass('bi-chevron-right');\r\n        $(container + ' > .coreui-form__group_label .btn-collapsible .bi').addClass('bi-chevron-down');\r\n\r\n        $(container + ' .coreui-form__group_content').slideDown(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-group.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            group: this._options,\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {string}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fields = [];\r\n        let that   = this;\r\n\r\n        $.each(this._options.fields, function (key, field) {\r\n\r\n            let fieldInstance = that._form.initField(field);\r\n\r\n            if (typeof fieldInstance !== 'object') {\r\n                return;\r\n            }\r\n\r\n            fields.push(fieldInstance.render());\r\n        });\r\n\r\n        return fields.join('');\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.showCollapsible) {\r\n            let that      = this;\r\n            let container = '#coreui-form-' + this._id;\r\n\r\n            $(container + ' > .coreui-form__group_label .btn-collapsible').click(function () {\r\n\r\n                if ($(container + ' > .coreui-form__group_content').is(':visible')) {\r\n                    that.collapse(80);\r\n                } else {\r\n                    that.expand(80);\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\n\ncoreuiForm$1.fields.hidden = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'hidden',\r\n        name: null,\r\n        attr: {},\r\n        required: null,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('#coreui-form-' + this._id).val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if ( ! this._options.readonly) {\r\n            $('#coreui-form-' + this._id).val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        return ejs.render(tpl['form-field-content.html'], {\r\n            content: this.renderContent(),\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n\r\n        options.attr.id = 'coreui-form-' + this._id;\r\n\r\n        if (options.name) {\r\n            options.attr.name = options.name;\r\n        }\r\n\r\n        options.attr.type  = 'hidden';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/hidden.html'], {\r\n            value: this._value !== null ? this._value : '',\r\n            field: options,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.input = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'text',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\n/**\n * jquery.mask.js\n * @version: v1.14.16\n * @author: Igor Escobar\n *\n * Created by Igor Escobar on 2012-03-10. Please report any bug at github.com/igorescobar/jQuery-Mask-Plugin\n *\n * Copyright (c) 2012 Igor Escobar http://igorescobar.com\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* jshint laxbreak: true */\n/* jshint maxcomplexity:17 */\n/* global define */\n\n// UMD (Universal Module Definition) patterns for JavaScript modules that work everywhere.\n// https://github.com/umdjs/umd/blob/master/templates/jqueryPlugin.js\n(function (factory, jQuery, Zepto) {\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object' && typeof Meteor === 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery || Zepto);\n    }\n\n}(function ($) {\n    'use strict';\n\n    var Mask = function (el, mask, options) {\n\n        var p = {\n            invalid: [],\n            getCaret: function () {\n                try {\n                    var sel,\n                        pos = 0,\n                        ctrl = el.get(0),\n                        dSel = document.selection,\n                        cSelStart = ctrl.selectionStart;\n\n                    // IE Support\n                    if (dSel && navigator.appVersion.indexOf('MSIE 10') === -1) {\n                        sel = dSel.createRange();\n                        sel.moveStart('character', -p.val().length);\n                        pos = sel.text.length;\n                    }\n                    // Firefox support\n                    else if (cSelStart || cSelStart === '0') {\n                        pos = cSelStart;\n                    }\n\n                    return pos;\n                } catch (e) {}\n            },\n            setCaret: function(pos) {\n                try {\n                    if (el.is(':focus')) {\n                        var range, ctrl = el.get(0);\n\n                        // Firefox, WebKit, etc..\n                        if (ctrl.setSelectionRange) {\n                            ctrl.setSelectionRange(pos, pos);\n                        } else { // IE\n                            range = ctrl.createTextRange();\n                            range.collapse(true);\n                            range.moveEnd('character', pos);\n                            range.moveStart('character', pos);\n                            range.select();\n                        }\n                    }\n                } catch (e) {}\n            },\n            events: function() {\n                el\n                .on('keydown.mask', function(e) {\n                    el.data('mask-keycode', e.keyCode || e.which);\n                    el.data('mask-previus-value', el.val());\n                    el.data('mask-previus-caret-pos', p.getCaret());\n                    p.maskDigitPosMapOld = p.maskDigitPosMap;\n                })\n                .on($.jMaskGlobals.useInput ? 'input.mask' : 'keyup.mask', p.behaviour)\n                .on('paste.mask drop.mask', function() {\n                    setTimeout(function() {\n                        el.keydown().keyup();\n                    }, 100);\n                })\n                .on('change.mask', function(){\n                    el.data('changed', true);\n                })\n                .on('blur.mask', function(){\n                    if (oldValue !== p.val() && !el.data('changed')) {\n                        el.trigger('change');\n                    }\n                    el.data('changed', false);\n                })\n                // it's very important that this callback remains in this position\n                // otherwhise oldValue it's going to work buggy\n                .on('blur.mask', function() {\n                    oldValue = p.val();\n                })\n                // select all text on focus\n                .on('focus.mask', function (e) {\n                    if (options.selectOnFocus === true) {\n                        $(e.target).select();\n                    }\n                })\n                // clear the value if it not complete the mask\n                .on('focusout.mask', function() {\n                    if (options.clearIfNotMatch && !regexMask.test(p.val())) {\n                       p.val('');\n                   }\n                });\n            },\n            getRegexMask: function() {\n                var maskChunks = [], translation, pattern, optional, recursive, oRecursive, r;\n\n                for (var i = 0; i < mask.length; i++) {\n                    translation = jMask.translation[mask.charAt(i)];\n\n                    if (translation) {\n\n                        pattern = translation.pattern.toString().replace(/.{1}$|^.{1}/g, '');\n                        optional = translation.optional;\n                        recursive = translation.recursive;\n\n                        if (recursive) {\n                            maskChunks.push(mask.charAt(i));\n                            oRecursive = {digit: mask.charAt(i), pattern: pattern};\n                        } else {\n                            maskChunks.push(!optional && !recursive ? pattern : (pattern + '?'));\n                        }\n\n                    } else {\n                        maskChunks.push(mask.charAt(i).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n                    }\n                }\n\n                r = maskChunks.join('');\n\n                if (oRecursive) {\n                    r = r.replace(new RegExp('(' + oRecursive.digit + '(.*' + oRecursive.digit + ')?)'), '($1)?')\n                         .replace(new RegExp(oRecursive.digit, 'g'), oRecursive.pattern);\n                }\n\n                return new RegExp(r);\n            },\n            destroyEvents: function() {\n                el.off(['input', 'keydown', 'keyup', 'paste', 'drop', 'blur', 'focusout', ''].join('.mask '));\n            },\n            val: function(v) {\n                var isInput = el.is('input'),\n                    method = isInput ? 'val' : 'text',\n                    r;\n\n                if (arguments.length > 0) {\n                    if (el[method]() !== v) {\n                        el[method](v);\n                    }\n                    r = el;\n                } else {\n                    r = el[method]();\n                }\n\n                return r;\n            },\n            calculateCaretPosition: function(oldVal) {\n                var newVal = p.getMasked(),\n                    caretPosNew = p.getCaret();\n                if (oldVal !== newVal) {\n                    var caretPosOld = el.data('mask-previus-caret-pos') || 0,\n                        newValL = newVal.length,\n                        oldValL = oldVal.length,\n                        maskDigitsBeforeCaret = 0,\n                        maskDigitsAfterCaret = 0,\n                        maskDigitsBeforeCaretAll = 0,\n                        maskDigitsBeforeCaretAllOld = 0,\n                        i = 0;\n\n                    for (i = caretPosNew; i < newValL; i++) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsAfterCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (!p.maskDigitPosMap[i]) {\n                            break;\n                        }\n                        maskDigitsBeforeCaret++;\n                    }\n\n                    for (i = caretPosNew - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMap[i]) {\n                            maskDigitsBeforeCaretAll++;\n                        }\n                    }\n\n                    for (i = caretPosOld - 1; i >= 0; i--) {\n                        if (p.maskDigitPosMapOld[i]) {\n                            maskDigitsBeforeCaretAllOld++;\n                        }\n                    }\n\n                    // if the cursor is at the end keep it there\n                    if (caretPosNew > oldValL) {\n                      caretPosNew = newValL * 10;\n                    } else if (caretPosOld >= caretPosNew && caretPosOld !== oldValL) {\n                        if (!p.maskDigitPosMapOld[caretPosNew])  {\n                          var caretPos = caretPosNew;\n                          caretPosNew -= maskDigitsBeforeCaretAllOld - maskDigitsBeforeCaretAll;\n                          caretPosNew -= maskDigitsBeforeCaret;\n                          if (p.maskDigitPosMap[caretPosNew])  {\n                            caretPosNew = caretPos;\n                          }\n                        }\n                    }\n                    else if (caretPosNew > caretPosOld) {\n                        caretPosNew += maskDigitsBeforeCaretAll - maskDigitsBeforeCaretAllOld;\n                        caretPosNew += maskDigitsAfterCaret;\n                    }\n                }\n                return caretPosNew;\n            },\n            behaviour: function(e) {\n                e = e || window.event;\n                p.invalid = [];\n\n                var keyCode = el.data('mask-keycode');\n\n                if ($.inArray(keyCode, jMask.byPassKeys) === -1) {\n                    var newVal = p.getMasked(),\n                        caretPos = p.getCaret(),\n                        oldVal = el.data('mask-previus-value') || '';\n\n                    // this is a compensation to devices/browsers that don't compensate\n                    // caret positioning the right way\n                    setTimeout(function() {\n                      p.setCaret(p.calculateCaretPosition(oldVal));\n                    }, $.jMaskGlobals.keyStrokeCompensation);\n\n                    p.val(newVal);\n                    p.setCaret(caretPos);\n                    return p.callbacks(e);\n                }\n            },\n            getMasked: function(skipMaskChars, val) {\n                var buf = [],\n                    value = val === undefined ? p.val() : val + '',\n                    m = 0, maskLen = mask.length,\n                    v = 0, valLen = value.length,\n                    offset = 1, addMethod = 'push',\n                    resetPos = -1,\n                    maskDigitCount = 0,\n                    maskDigitPosArr = [],\n                    lastMaskChar,\n                    check;\n\n                if (options.reverse) {\n                    addMethod = 'unshift';\n                    offset = -1;\n                    lastMaskChar = 0;\n                    m = maskLen - 1;\n                    v = valLen - 1;\n                    check = function () {\n                        return m > -1 && v > -1;\n                    };\n                } else {\n                    lastMaskChar = maskLen - 1;\n                    check = function () {\n                        return m < maskLen && v < valLen;\n                    };\n                }\n\n                var lastUntranslatedMaskChar;\n                while (check()) {\n                    var maskDigit = mask.charAt(m),\n                        valDigit = value.charAt(v),\n                        translation = jMask.translation[maskDigit];\n\n                    if (translation) {\n                        if (valDigit.match(translation.pattern)) {\n                            buf[addMethod](valDigit);\n                             if (translation.recursive) {\n                                if (resetPos === -1) {\n                                    resetPos = m;\n                                } else if (m === lastMaskChar && m !== resetPos) {\n                                    m = resetPos - offset;\n                                }\n\n                                if (lastMaskChar === resetPos) {\n                                    m -= offset;\n                                }\n                            }\n                            m += offset;\n                        } else if (valDigit === lastUntranslatedMaskChar) {\n                            // matched the last untranslated (raw) mask character that we encountered\n                            // likely an insert offset the mask character from the last entry; fall\n                            // through and only increment v\n                            maskDigitCount--;\n                            lastUntranslatedMaskChar = undefined;\n                        } else if (translation.optional) {\n                            m += offset;\n                            v -= offset;\n                        } else if (translation.fallback) {\n                            buf[addMethod](translation.fallback);\n                            m += offset;\n                            v -= offset;\n                        } else {\n                          p.invalid.push({p: v, v: valDigit, e: translation.pattern});\n                        }\n                        v += offset;\n                    } else {\n                        if (!skipMaskChars) {\n                            buf[addMethod](maskDigit);\n                        }\n\n                        if (valDigit === maskDigit) {\n                            maskDigitPosArr.push(v);\n                            v += offset;\n                        } else {\n                            lastUntranslatedMaskChar = maskDigit;\n                            maskDigitPosArr.push(v + maskDigitCount);\n                            maskDigitCount++;\n                        }\n\n                        m += offset;\n                    }\n                }\n\n                var lastMaskCharDigit = mask.charAt(lastMaskChar);\n                if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {\n                    buf.push(lastMaskCharDigit);\n                }\n\n                var newVal = buf.join('');\n                p.mapMaskdigitPositions(newVal, maskDigitPosArr, valLen);\n                return newVal;\n            },\n            mapMaskdigitPositions: function(newVal, maskDigitPosArr, valLen) {\n              var maskDiff = options.reverse ? newVal.length - valLen : 0;\n              p.maskDigitPosMap = {};\n              for (var i = 0; i < maskDigitPosArr.length; i++) {\n                p.maskDigitPosMap[maskDigitPosArr[i] + maskDiff] = 1;\n              }\n            },\n            callbacks: function (e) {\n                var val = p.val(),\n                    changed = val !== oldValue,\n                    defaultArgs = [val, e, el, options],\n                    callback = function(name, criteria, args) {\n                        if (typeof options[name] === 'function' && criteria) {\n                            options[name].apply(this, args);\n                        }\n                    };\n\n                callback('onChange', changed === true, defaultArgs);\n                callback('onKeyPress', changed === true, defaultArgs);\n                callback('onComplete', val.length === mask.length, defaultArgs);\n                callback('onInvalid', p.invalid.length > 0, [val, e, el, p.invalid, options]);\n            }\n        };\n\n        el = $(el);\n        var jMask = this, oldValue = p.val(), regexMask;\n\n        mask = typeof mask === 'function' ? mask(p.val(), undefined, el,  options) : mask;\n\n        // public methods\n        jMask.mask = mask;\n        jMask.options = options;\n        jMask.remove = function() {\n            var caret = p.getCaret();\n            if (jMask.options.placeholder) {\n                el.removeAttr('placeholder');\n            }\n            if (el.data('mask-maxlength')) {\n                el.removeAttr('maxlength');\n            }\n            p.destroyEvents();\n            p.val(jMask.getCleanVal());\n            p.setCaret(caret);\n            return el;\n        };\n\n        // get value without mask\n        jMask.getCleanVal = function() {\n           return p.getMasked(true);\n        };\n\n        // get masked value without the value being in the input or element\n        jMask.getMaskedVal = function(val) {\n           return p.getMasked(false, val);\n        };\n\n       jMask.init = function(onlyMask) {\n            onlyMask = onlyMask || false;\n            options = options || {};\n\n            jMask.clearIfNotMatch  = $.jMaskGlobals.clearIfNotMatch;\n            jMask.byPassKeys       = $.jMaskGlobals.byPassKeys;\n            jMask.translation      = $.extend({}, $.jMaskGlobals.translation, options.translation);\n\n            jMask = $.extend(true, {}, jMask, options);\n\n            regexMask = p.getRegexMask();\n\n            if (onlyMask) {\n                p.events();\n                p.val(p.getMasked());\n            } else {\n                if (options.placeholder) {\n                    el.attr('placeholder' , options.placeholder);\n                }\n\n                // this is necessary, otherwise if the user submit the form\n                // and then press the \"back\" button, the autocomplete will erase\n                // the data. Works fine on IE9+, FF, Opera, Safari.\n                if (el.data('mask')) {\n                  el.attr('autocomplete', 'off');\n                }\n\n                // detect if is necessary let the user type freely.\n                // for is a lot faster than forEach.\n                for (var i = 0, maxlength = true; i < mask.length; i++) {\n                    var translation = jMask.translation[mask.charAt(i)];\n                    if (translation && translation.recursive) {\n                        maxlength = false;\n                        break;\n                    }\n                }\n\n                if (maxlength) {\n                    el.attr('maxlength', mask.length).data('mask-maxlength', true);\n                }\n\n                p.destroyEvents();\n                p.events();\n\n                var caret = p.getCaret();\n                p.val(p.getMasked());\n                p.setCaret(caret);\n            }\n        };\n\n        jMask.init(!el.is('input'));\n    };\n\n    $.maskWatchers = {};\n    var HTMLAttributes = function () {\n        var input = $(this),\n            options = {},\n            prefix = 'data-mask-',\n            mask = input.attr('data-mask');\n\n        if (input.attr(prefix + 'reverse')) {\n            options.reverse = true;\n        }\n\n        if (input.attr(prefix + 'clearifnotmatch')) {\n            options.clearIfNotMatch = true;\n        }\n\n        if (input.attr(prefix + 'selectonfocus') === 'true') {\n           options.selectOnFocus = true;\n        }\n\n        if (notSameMaskObject(input, mask, options)) {\n            return input.data('mask', new Mask(this, mask, options));\n        }\n    },\n    notSameMaskObject = function(field, mask, options) {\n        options = options || {};\n        var maskObject = $(field).data('mask'),\n            stringify = JSON.stringify,\n            value = $(field).val() || $(field).text();\n        try {\n            if (typeof mask === 'function') {\n                mask = mask(value);\n            }\n            return typeof maskObject !== 'object' || stringify(maskObject.options) !== stringify(options) || maskObject.mask !== mask;\n        } catch (e) {}\n    },\n    eventSupported = function(eventName) {\n        var el = document.createElement('div'), isSupported;\n\n        eventName = 'on' + eventName;\n        isSupported = (eventName in el);\n\n        if ( !isSupported ) {\n            el.setAttribute(eventName, 'return;');\n            isSupported = typeof el[eventName] === 'function';\n        }\n        el = null;\n\n        return isSupported;\n    };\n\n    $.fn.mask = function(mask, options) {\n        options = options || {};\n        var selector = this.selector,\n            globals = $.jMaskGlobals,\n            interval = globals.watchInterval,\n            watchInputs = options.watchInputs || globals.watchInputs,\n            maskFunction = function() {\n                if (notSameMaskObject(this, mask, options)) {\n                    return $(this).data('mask', new Mask(this, mask, options));\n                }\n            };\n\n        $(this).each(maskFunction);\n\n        if (selector && selector !== '' && watchInputs) {\n            clearInterval($.maskWatchers[selector]);\n            $.maskWatchers[selector] = setInterval(function(){\n                $(document).find(selector).each(maskFunction);\n            }, interval);\n        }\n        return this;\n    };\n\n    $.fn.masked = function(val) {\n        return this.data('mask').getMaskedVal(val);\n    };\n\n    $.fn.unmask = function() {\n        clearInterval($.maskWatchers[this.selector]);\n        delete $.maskWatchers[this.selector];\n        return this.each(function() {\n            var dataMask = $(this).data('mask');\n            if (dataMask) {\n                dataMask.remove().removeData('mask');\n            }\n        });\n    };\n\n    $.fn.cleanVal = function() {\n        return this.data('mask').getCleanVal();\n    };\n\n    $.applyDataMask = function(selector) {\n        selector = selector || $.jMaskGlobals.maskElements;\n        var $selector = (selector instanceof $) ? selector : $(selector);\n        $selector.filter($.jMaskGlobals.dataMaskAttr).each(HTMLAttributes);\n    };\n\n    var globals = {\n        maskElements: 'input,td,span,div',\n        dataMaskAttr: '*[data-mask]',\n        dataMask: true,\n        watchInterval: 300,\n        watchInputs: true,\n        keyStrokeCompensation: 10,\n        // old versions of chrome dont work great with input event\n        useInput: !/Chrome\\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && eventSupported('input'),\n        watchDataMask: false,\n        byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91],\n        translation: {\n            '0': {pattern: /\\d/},\n            '9': {pattern: /\\d/, optional: true},\n            '#': {pattern: /\\d/, recursive: true},\n            'A': {pattern: /[a-zA-Z0-9]/},\n            'S': {pattern: /[a-zA-Z]/}\n        }\n    };\n\n    $.jMaskGlobals = $.jMaskGlobals || {};\n    globals = $.jMaskGlobals = $.extend(true, {}, globals, $.jMaskGlobals);\n\n    // looking for inputs with data-mask attribute\n    if (globals.dataMask) {\n        $.applyDataMask();\n    }\n\n    setInterval(function() {\n        if ($.jMaskGlobals.watchDataMask) {\n            $.applyDataMask();\n        }\n    }, globals.watchInterval);\n}, window.jQuery, window.Zepto));\n\ncoreuiForm$1.fields.mask = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'mask',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        let that      = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        value = value.replace(/[^\\d\\w]/g, '');\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'text';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : ''\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('#coreui-form-' + this._id + ' .content-' + this._hash + ' input')\r\n            .mask(this._options.mask, this._options.options);\r\n    }\r\n};\n\ncoreuiForm$1.fields.modal = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: '',\r\n    _text: '',\r\n    _options: {\r\n        type: 'modal',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        fields: [],\r\n        options: {\r\n            title: '',\r\n            size: 'lg',\r\n            url: '',\r\n            onHidden: null,\r\n            onClear: null,\r\n            onChange: null,\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        let formRecord = form.getRecord();\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n\r\n        if (typeof options.name === 'string' &&\r\n            formRecord.hasOwnProperty(options.name) &&\r\n            ['object'].indexOf(typeof formRecord[options.name]) >= 0\r\n        ) {\r\n            let record = formRecord[options.name];\r\n\r\n            this._value = record.hasOwnProperty('value') && ['number', 'string'].indexOf(typeof(record.value)) >= 0 ? record.value : '';\r\n            this._text  = record.hasOwnProperty('text') && ['number', 'string'].indexOf(typeof(record.text)) >= 0 ? record.text : '';\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input.coreui-form-modal-value').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     * @param {string} text\r\n     */\r\n    setValue: function (value, text) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(text);\r\n\r\n        } else {\r\n            let elementValue = $('.content-' + this._hash + ' .coreui-form-modal-value');\r\n            let elementText  = $('.content-' + this._hash + ' .coreui-form-modal-text');\r\n            let oldValue     = elementValue.val();\r\n\r\n            elementValue.val(value);\r\n            elementText.val(text);\r\n\r\n\r\n            if (oldValue != value) {\r\n                let modal = this._options.hasOwnProperty('options') && typeof (this._options.options) === 'object'\r\n                    ? this._options.options\r\n                    : {};\r\n\r\n                if (modal.hasOwnProperty('onChange')) {\r\n                    if (typeof(modal.onChange) === 'function') {\r\n                        modal.onChange(this);\r\n\r\n                    } else if (typeof(modal.onChange) === 'string') {\r\n                        let func = coreuiFormUtils.getFunctionByName(modal.onChange);\r\n\r\n                        if (typeof func === 'function') {\r\n                            func(this);\r\n                        } else {\r\n                            coreuiFormUtils.eval(modal.onChange);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this._form._trigger('change-modal.coreui.form', this, [this]);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let fieldOptions = this.getOptions();\r\n        let attributes   = [];\r\n        let textAttr     = {\r\n            type: 'text',\r\n            readonly: 'readonly',\r\n            class: 'form-control form-control-sm coreui-form-modal-text',\r\n            value: this._text !== null ? this._text : ''\r\n        };\r\n\r\n        if (fieldOptions.required) {\r\n            textAttr.required = 'required';\r\n        }\r\n\r\n        if (fieldOptions.hasOwnProperty('attr') &&\r\n            typeof fieldOptions.attr === 'object' &&\r\n            Array.isArray(fieldOptions.attr)\r\n        ) {\r\n            textAttr = coreuiFormUtils.mergeAttr(textAttr, fieldOptions.attr);\r\n        }\r\n\r\n        $.each(textAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/modal.html'], {\r\n            field: fieldOptions,\r\n            value: this._value !== null ? this._value : '',\r\n            text: this._text !== null ? this._text : '',\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                width: this._options.width,\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that  = this;\r\n        let modal = this._options.hasOwnProperty('options') && typeof(this._options.options) === 'object'\r\n            ? this._options.options\r\n            : {};\r\n\r\n\r\n        // Очистка\r\n        $('.content-' + this._hash + ' .btn-modal-clear').click(function (e) {\r\n            if (modal.hasOwnProperty('onClear')) {\r\n                if (typeof(modal.onClear) === 'function') {\r\n                    modal.onClear(that);\r\n\r\n                } else if (typeof(modal.onClear) === 'string') {\r\n                    let func = coreuiFormUtils.getFunctionByName(modal.onClear);\r\n\r\n                    if (typeof func === 'function') {\r\n                        func(that);\r\n                    } else {\r\n                        coreuiFormUtils.eval(modal.onClear);\r\n                    }\r\n                }\r\n            }\r\n\r\n            that._form._trigger('clear-modal.coreui.form', that, [ that, e ]);\r\n\r\n            that.setValue('', '');\r\n        });\r\n\r\n        // Выбор\r\n        $('.content-' + this._hash + ' .btn-modal-select').click(function (e) {\r\n            let title = modal.hasOwnProperty('title') && typeof(modal.title) === 'string'\r\n                ? modal.title\r\n                : '';\r\n\r\n            let size = modal.hasOwnProperty('size') && typeof(modal.size) === 'string'\r\n                ? modal.size\r\n                : 'lg';\r\n\r\n            let url = modal.hasOwnProperty('url') && typeof(modal.url) === 'string'\r\n                ? modal.url\r\n                : '';\r\n\r\n            if ( ! url) {\r\n                return;\r\n            }\r\n\r\n\r\n            let modalId      = coreuiFormUtils.hashCode();\r\n            let modalLoading = ejs.render(tpl['fields/modal-loading.html'], {\r\n                lang: that._form.getLang(),\r\n            });\r\n\r\n\r\n            if (CoreUI.hasOwnProperty('modal')) {\r\n                let onShow   = null;\r\n                let onHidden = null;\r\n\r\n                if (modal.hasOwnProperty('onHidden')) {\r\n                    if (typeof(modal.onHidden) === 'function') {\r\n                        onHidden = modal.onHidden;\r\n\r\n                    } else if (typeof(modal.onHidden) === 'string') {\r\n                        let func = coreuiFormUtils.getFunctionByName(modal.onHidden);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onHidden = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (modal.hasOwnProperty('onShow')) {\r\n                    if (typeof(modal.onShow) === 'function') {\r\n                        onShow = modal.onShow;\r\n\r\n                    } else if (typeof(modal.onShow) === 'string') {\r\n                        let func = coreuiFormUtils.getFunctionByName(modal.onShow);\r\n\r\n                        if (typeof func === 'function') {\r\n                            onShow = func;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                CoreUI.modal.show(title, modalLoading, {\r\n                    id: modalId,\r\n                    size: size,\r\n                    onShow: onShow,\r\n                    onHidden: onHidden\r\n                });\r\n            }\r\n\r\n            $.ajax({\r\n                url: url,\r\n                method: 'GET',\r\n                beforeSend: function(xhr) {\r\n                    that._form._trigger('before-load-modal.coreui.form', that, [ that, xhr ]);\r\n                },\r\n                success: function (result) {\r\n                    $('#modal-' + modalId + ' .modal-body').html(result);\r\n                    that._form._trigger('success-load-modal.coreui.form', that, [ that, result ]);\r\n                },\r\n                error: function(xhr, textStatus, errorThrown) {\r\n                    that._form._trigger('error-load-modal.coreui.form', that, [ that, xhr, textStatus, errorThrown ]);\r\n                },\r\n                complete: function(xhr, textStatus) {\r\n                    that._form._trigger('complete-load-modal.coreui.form', that, [ that, xhr, textStatus ]);\r\n                },\r\n            });\r\n\r\n\r\n            that._form._trigger('select-modal.coreui.form', that, [ that, e ]);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.number = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'number',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block',\r\n            step: 'any'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null,\r\n        precision: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        // Установка точности\r\n        if (this._options.precision === null) {\r\n            let precision = 0;\r\n\r\n            if (this._options.attr.hasOwnProperty('step') &&\r\n                this._options.attr.step !== 'any' &&\r\n                ['string', 'number'].indexOf(typeof this._options.attr.step) >= 0\r\n            ) {\r\n                let match = $.trim(this._options.attr.step.toString()).match(/\\.(\\d+)$/);\r\n\r\n                if (match && match.hasOwnProperty(1)) {\r\n                    precision = match ? match[1].length : precision;\r\n                }\r\n            }\r\n\r\n            this._options.precision = precision;\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0 ||\r\n            ! value.toString().match(/^\\-?\\d+\\.?\\d*$/)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.precision >= 0) {\r\n            value = coreuiFormUtils.round(value, this._options.precision);\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('min')) {\r\n            value = value < Number(this._options.attr.min)\r\n                ? Number(this._options.attr.min)\r\n                : value;\r\n        }\r\n\r\n        if (this._options.attr.hasOwnProperty('max')) {\r\n            value = value > Number(this._options.attr.max)\r\n                ? Number(this._options.attr.max)\r\n                : value;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = $.extend(true, {}, this._options);\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils.hashCode();\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'number';\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        $('.content-' + this._hash + ' input').keydown(function (e) {\r\n            let k = e.keyCode || e.which;\r\n            let ok = k >= 35 && k <= 40 ||      // arrows\r\n                k >= 96 && k <= 105 ||     // 0-9 numpad\r\n                k === 189 || k === 109 ||  // minus\r\n                k === 110 || k === 190 ||  // dot\r\n                k === 9 ||  //tab\r\n                k === 46 || //del\r\n                k === 8 ||  // backspaces\r\n                ( ! e.shiftKey && k >= 48 && k <= 57); // only 0-9 (ignore SHIFT options)\r\n\r\n            if ( ! ok || (e.ctrlKey && e.altKey)) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' input').blur(function (e) {\r\n            let value = $(this).val();\r\n\r\n            if (that._options.precision >= 0) {\r\n                value = coreuiFormUtils.round(value, that._options.precision);\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('min')) {\r\n                value = value < Number(that._options.attr.min)\r\n                    ? Number(that._options.attr.min)\r\n                    : value;\r\n            }\r\n\r\n            if (that._options.attr.hasOwnProperty('max')) {\r\n                value = value > Number(that._options.attr.max)\r\n                    ? Number(that._options.attr.max)\r\n                    : value;\r\n            }\r\n\r\n            $(this).val(value);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.radio = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'radio',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        inline: false,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        options: [],\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input[type=radio]:checked').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._options.readonly) {\r\n            let that         = this;\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options)\r\n            ) {\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value') && option.value == value) {\r\n                        let text = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                            ? option.text\r\n                            : '';\r\n\r\n                        $('.content-' + that._hash).text(text);\r\n                        that._value = value;\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n\r\n        } else {\r\n            let input = $('.content-' + this._hash + ' input[type=radio][value=\"' + value + '\"]');\r\n\r\n            if (input[0]) {\r\n                input.prop('checked', true);\r\n                this._value = value;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let lastInput = $('.form-check:last-child', container);\r\n        let inputs    = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                lastInput.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            let value = this.getValue();\r\n            return typeof value === 'string' && value !== '';\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: this._options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let that         = this;\r\n        let radioOptions = [];\r\n        let fieldOptions = this.getOptions();\r\n        let selectedItem = [];\r\n\r\n        if (fieldOptions.hasOwnProperty('options') &&\r\n            typeof fieldOptions.options === 'object' &&\r\n            Array.isArray(fieldOptions.options)\r\n        ) {\r\n            $.each(fieldOptions.options, function (key, option) {\r\n                let attributes = [];\r\n                let itemAttr = {\r\n                    type: 'radio',\r\n                    class: 'form-check-input'\r\n                };\r\n                let optionText   = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                    ? option.text\r\n                    : '';\r\n\r\n                if (fieldOptions.name) {\r\n                    itemAttr.name = that._options.name;\r\n                }\r\n\r\n                if (fieldOptions.required) {\r\n                    itemAttr.required = 'required';\r\n                }\r\n\r\n                $.each(option, function (name, value) {\r\n                    if (name !== 'text') {\r\n                        if (name === 'class') {\r\n                            itemAttr[name] = itemAttr[name] + ' ' + value;\r\n                        } else {\r\n                            itemAttr[name] = value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                itemAttr.id = coreuiFormUtils.hashCode();\r\n\r\n                if (that._value == option.value) {\r\n                    if (option.hasOwnProperty('text') && option.text) {\r\n                        selectedItem.push(option.text);\r\n                    }\r\n                    itemAttr.checked = 'checked';\r\n                }\r\n\r\n                $.each(itemAttr, function (name, value) {\r\n                    attributes.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n\r\n                radioOptions.push({\r\n                    id: itemAttr.id,\r\n                    text: optionText,\r\n                    attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        return ejs.render(tpl['fields/radio.html'], {\r\n            field: fieldOptions,\r\n            value: this._value,\r\n            render: {\r\n                options: radioOptions,\r\n                selectedItem: selectedItem\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.range = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'range',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-range d-inline-block pt-1'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields,\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let datalist   = [];\r\n        let options    = this.getOptions();\r\n        let datalistId = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = 'range';\r\n        options.attr.value = this._value;\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.select = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: [],\r\n    _options: {\r\n        type: 'select',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-select form-select-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @returns {array|string}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n\r\n        } else {\r\n            if (this._options.hasOwnProperty('attr') &&\r\n                typeof this._options.attr === 'object' &&\r\n                this._options.attr !== null &&\r\n                ! Array.isArray(this._options.attr) &&\r\n                this._options.attr.hasOwnProperty('multiple')\r\n            ) {\r\n                let values = [];\r\n\r\n                $('.content-' + this._hash + ' select option:selected').each(function () {\r\n                    values.push($(this).val());\r\n                });\r\n\r\n                return values;\r\n\r\n            } else {\r\n                return $('.content-' + this._hash + ' select option:selected').val()\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number', 'object'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            if (value !== null && ! Array.isArray(value)) {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            value = [ value ];\r\n        }\r\n\r\n        let that    = this;\r\n        this._value = [];\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + that._hash).empty();\r\n\r\n            let fieldOptions = this.getOptions();\r\n\r\n            if (fieldOptions.hasOwnProperty('options') &&\r\n                typeof fieldOptions.options === 'object' &&\r\n                Array.isArray(fieldOptions.options) &&\r\n                Array.isArray(value)\r\n            ) {\r\n                let selectedItems = [];\r\n\r\n                $.each(fieldOptions.options, function (key, option) {\r\n\r\n                    if (option.hasOwnProperty('value')) {\r\n                        $.each(value, function (key, val) {\r\n\r\n                            if (option.value == val) {\r\n                                if (option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0) {\r\n                                    selectedItems.push(option.text);\r\n                                }\r\n\r\n                                that._value.push(val);\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n\r\n                $('.content-' + that._hash).text(selectedItems.join(', '));\r\n            }\r\n\r\n        } else {\r\n            $('.content-' + this._hash + ' select > option').prop('selected', false);\r\n\r\n            if (Array.isArray(value)) {\r\n                $('.content-' + this._hash + ' select > option').each(function (key, itemValue) {\r\n                    $.each(value, function (key, val) {\r\n                        if (val == $(itemValue).val()) {\r\n                            $(itemValue).prop('selected', true);\r\n                            that._value.push(val);\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let select    = $('select', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            select.removeClass('is-invalid');\r\n            select.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            select.removeClass('is-invalid');\r\n            select.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            select.removeClass('is-valid');\r\n            select.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let select = $('.content-' + this._hash + ' select');\r\n\r\n        if (this._options.required && select.val() === '') {\r\n            return false;\r\n        }\r\n\r\n        if (select[0]) {\r\n            return select.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let that          = this;\r\n        let options       = this.getOptions();\r\n        let attributes    = [];\r\n        let selectOptions = [];\r\n\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            options.options !== null\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n\r\n                if (typeof option === 'string' || typeof option === 'number') {\r\n                    selectOptions.push(that._renderOption({\r\n                        type: 'option',\r\n                        value: key,\r\n                        text: option\r\n                    }));\r\n\r\n                } else if (typeof option === 'object') {\r\n                    let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                        ? option.type\r\n                        : 'option';\r\n\r\n                    if (type === 'group') {\r\n                        let renderAttr   = [];\r\n                        let groupAttr    = {};\r\n                        let groupOptions = [];\r\n\r\n                        if (option.hasOwnProperty('attr') &&\r\n                            typeof option.attr === 'object' &&\r\n                            option.attr !== null &&\r\n                            ! Array.isArray(option.attr)\r\n                        ) {\r\n                            groupAttr = option.attr;\r\n                        }\r\n\r\n                        if (option.hasOwnProperty('label') && ['string', 'number'].indexOf(typeof(option.label)) >= 0) {\r\n                            groupAttr.label = option.label;\r\n                        }\r\n\r\n                        $.each(groupAttr, function (name, value) {\r\n                            renderAttr.push(name + '=\"' + value + '\"');\r\n                        });\r\n\r\n                        if (Array.isArray(option.options)) {\r\n                            $.each(option.options, function (key, groupOption) {\r\n                                groupOptions.push(that._renderOption(groupOption));\r\n                            });\r\n                        }\r\n\r\n                        selectOptions.push({\r\n                            type: 'group',\r\n                            attr: renderAttr.length > 0 ? (' ' + renderAttr.join(' ')) : '',\r\n                            options: groupOptions,\r\n                        });\r\n\r\n                    } else {\r\n                        selectOptions.push(that._renderOption(option));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                options: selectOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let that            = this;\r\n        let options         = this.getOptions();\r\n        let selectedOptions = [];\r\n\r\n        if (options.hasOwnProperty('options') &&\r\n            typeof options.options === 'object' &&\r\n            Array.isArray(options.options)\r\n        ) {\r\n            $.each(options.options, function (key, option) {\r\n                let type = option.hasOwnProperty('type') && typeof option.type === 'string'\r\n                    ? option.type\r\n                    : 'option';\r\n\r\n                if (type === 'group') {\r\n                    if (Array.isArray(option.options)) {\r\n                        $.each(option.options, function (key, groupOption) {\r\n                            let optionText = groupOption.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(groupOption.text)) >= 0\r\n                                ? groupOption.text\r\n                                : '';\r\n\r\n                            if ( ! optionText || optionText === '') {\r\n                                return;\r\n                            }\r\n\r\n                            if (Array.isArray(that._value)) {\r\n                                $.each(that._value, function (key, itemValue) {\r\n                                    if (itemValue == groupOption.value) {\r\n                                        selectedOptions.push(optionText);\r\n                                        return false;\r\n                                    }\r\n                                });\r\n\r\n                            } else if (that._value == groupOption.value) {\r\n                                selectedOptions.push(optionText);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                } else {\r\n                    let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n                        ? option.text\r\n                        : '';\r\n\r\n                    if ( ! optionText || optionText === '') {\r\n                        return;\r\n                    }\r\n\r\n                    if (Array.isArray(that._value)) {\r\n                        $.each(that._value, function (key, itemValue) {\r\n                            if (itemValue == option.value) {\r\n                                selectedOptions.push(optionText);\r\n                                return false;\r\n                            }\r\n                        });\r\n\r\n                    } else if (that._value == option.value) {\r\n                        selectedOptions.push(optionText);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        return ejs.render(tpl['fields/select.html'], {\r\n            field: options,\r\n            render: {\r\n                selectedOptions: selectedOptions\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Сборка опции\r\n     * @param option\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    _renderOption: function (option) {\r\n\r\n        let optionAttr = [];\r\n        let optionText = option.hasOwnProperty('text') && ['string', 'number'].indexOf(typeof(option.text)) >= 0\r\n            ? option.text\r\n            : '';\r\n\r\n        $.each(option, function (name, value) {\r\n            if (name !== 'text') {\r\n                optionAttr.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n\r\n        if (Array.isArray(this._value)) {\r\n            $.each(this._value, function (key, itemValue) {\r\n                if (itemValue == option.value) {\r\n                    optionAttr.push('selected=\"selected\"');\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        } else if (this._value == option.value) {\r\n            optionAttr.push('selected=\"selected\"');\r\n        }\r\n\r\n        return {\r\n            type: 'option',\r\n            text: optionText,\r\n            attr: optionAttr.length > 0 ? (' ' + optionAttr.join(' ')) : ''\r\n        };\r\n    }\r\n};\n\ncoreuiForm$1.fields.switch = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'switch',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        valueY: 'Y',\r\n        valueN: 'N',\r\n        fields: [],\r\n        required: null,\r\n        readonly: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        let result;\r\n\r\n        if (this._options.readonly) {\r\n            result = this._value;\r\n        } else {\r\n            result = $('.content-' + this._hash + ' input').prop('checked')\r\n                ? this._options.valueY\r\n                : this._options.valueN;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=checkbox]').prop('checked', value === this._options.valueY);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container       = $('.content-' + this._hash);\r\n        let switchContainer = $('.form-switch', container);\r\n        let inputs          = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            inputs.removeClass('is-invalid');\r\n            inputs.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            inputs.removeClass('is-valid');\r\n            inputs.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                switchContainer.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n        let itemAttr   = {\r\n            type: 'checkbox',\r\n            class: 'form-check-input',\r\n            value: options.valueY\r\n        };\r\n\r\n\r\n        if (options.name) {\r\n            itemAttr.name = this._options.name;\r\n        }\r\n\r\n        if (options.required) {\r\n            itemAttr.required = 'required';\r\n        }\r\n\r\n        if (options.hasOwnProperty('attr') &&\r\n            typeof options.attr === 'object' &&\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            itemAttr = coreuiFormUtils.mergeAttr(itemAttr, options.attr);\r\n        }\r\n\r\n        if (this._value === options.valueY) {\r\n            itemAttr.checked = 'checked';\r\n        }\r\n\r\n        $.each(itemAttr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/switch.html'], {\r\n            field: options,\r\n            value: this._value,\r\n            lang: this._form.getLang(),\r\n            render: {\r\n                attr: attributes.length > 0 ? attributes.join(' ') : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.textarea = {\r\n\r\n    _id: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'textarea',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' textarea').val();\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            $('.content-' + this._hash + ' textarea').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let textarea  = $('textarea', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            textarea.removeClass('is-invalid');\r\n            textarea.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            textarea.removeClass('is-valid');\r\n            textarea.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' textarea');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let attributes = [];\r\n        let options    = this.getOptions();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/textarea.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : ''\r\n            },\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.wysiwyg = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _value: null,\r\n    _editor: null,\r\n    _editorHash: null,\r\n    _options: {\r\n        type: 'wysiwyg',\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        minWidth: null,\r\n        maxWidth: null,\r\n        height: null,\r\n        minHeight: null,\r\n        maxHeight: null,\r\n        options: {},\r\n        outContent: null,\r\n        description: null,\r\n        required: null,\r\n        readonly: false,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}               options\r\n     * @param {int}                  index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form       = form;\r\n        this._index      = index;\r\n        this._id         = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash       = coreuiFormUtils.hashCode();\r\n        this._editorHash = coreuiFormUtils.hashCode();\r\n        this._value      = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options    = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            if ( ! that._options.readonly) {\r\n                that._initEvents();\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration || 0);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения из поля\r\n     * @return {string|null}\r\n     */\r\n    getValue: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return this._value;\r\n        } else {\r\n            return this._editor ? this._editor.getContent() : this._value;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value);\r\n        } else {\r\n            if (this._editor) {\r\n                this._editor.setContent(value);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n\r\n        container.find('.text-success').remove();\r\n        container.find('.text-danger').remove();\r\n\r\n        if (isValid === null) {\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-success\">' + text + '</div>');\r\n            }\r\n\r\n        } else {\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"ps-2 text-danger\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean}\r\n     */\r\n    isValid: function () {\r\n\r\n        if (this._options.required && ! this._options.readonly) {\r\n            return !! this.getValue();\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form:  this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/wysiwyg.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            editorHash: this._editorHash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let tinyMceOptions = {};\r\n        let than           = this;\r\n        let textareaId     = 'editor-' + this._editorHash;\r\n\r\n        if (typeof this._options.options === 'object' &&\r\n            ! Array.isArray(this._options.options) &&\r\n            Object.keys(this._options.options).length > 0\r\n        ) {\r\n            tinyMceOptions = this._options.options;\r\n\r\n        } else if (this._options.options === 'simple') {\r\n            tinyMceOptions = {\r\n                plugins: 'image lists anchor charmap',\r\n                toolbar: 'blocks | bold italic underline | alignleft aligncenter ' +\r\n                         'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                         'forecolor backcolor removeformat',\r\n                menubar: false,\r\n                branding: false\r\n            };\r\n\r\n        } else {\r\n            tinyMceOptions = {\r\n                promotion: false,\r\n                branding: false,\r\n                plugins: 'preview importcss searchreplace autolink autosave save directionality code ' +\r\n                         'visualblocks visualchars fullscreen image link media template codesample table ' +\r\n                         'charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',\r\n                menubar: 'file edit view insert format tools table help',\r\n                toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | ' +\r\n                         'alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | ' +\r\n                         'forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen ' +\r\n                         'preview save print | insertfile image media template link anchor codesample | ltr rtl',\r\n            };\r\n        }\r\n\r\n        tinyMceOptions.selector = '#editor-' + this._editorHash;\r\n\r\n        if (['string', 'number'].indexOf(typeof this._options.width) >= 0) {\r\n            tinyMceOptions.width = this._options.width;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minWidth) >= 0) {\r\n            tinyMceOptions.min_width = this._options.minWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxWidth) >= 0) {\r\n            tinyMceOptions.max_width = this._options.maxWidth;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.height) >= 0) {\r\n            tinyMceOptions.height = this._options.height;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.minHeight) >= 0) {\r\n            tinyMceOptions.min_height = this._options.minHeight;\r\n        }\r\n        if (['string', 'number'].indexOf(typeof this._options.maxHeight) >= 0) {\r\n            tinyMceOptions.max_height = this._options.maxHeight;\r\n        }\r\n\r\n        tinymce.init(tinyMceOptions).then(function () {\r\n            than._editor = tinymce.get(textareaId);\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.passwordRepeat = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _isChangeState: true,\r\n    _value: '',\r\n    _options: {\r\n        type: 'password',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            type: 'password',\r\n            class: 'form-control form-control-sm d-inline-block flex-shrink-0'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        showBtn: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n\r\n\r\n        let that = this;\r\n\r\n        form.on('shown.coreui.form', function () {\r\n            that._initEvents();\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n\r\n        if ( ! this._options.readonly) {\r\n            this._initEvents();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {string}\r\n     */\r\n    getValue: function () {\r\n\r\n        let result;\r\n\r\n        if (this._options.readonly) {\r\n            result = this._value;\r\n\r\n        } else {\r\n            let pass = $('.content-' + this._hash + ' input[type=\"password\"]').eq(0);\r\n\r\n            if (typeof pass.attr('disabled') !== 'undefined' && pass.attr('disabled') !== false) {\r\n                result = null;\r\n            } else {\r\n                result = pass.val();\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {string} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if (['string', 'number'].indexOf(typeof value) < 0) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text(value ? '******' : '');\r\n        } else {\r\n            $('.content-' + this._hash + ' input[type=\"password\"]').val(value);\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input[type=\"password\"]', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback d-block\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        if ( ! this._isChangeState || this._options.readonly) {\r\n            return true;\r\n        }\r\n\r\n        let input = $('.content-' + this._hash + ' input[type=\"password\"]');\r\n\r\n        if (input.eq(0).val() !== input.eq(1).val()) {\r\n            return false;\r\n        }\r\n\r\n        if (input[0]) {\r\n            return input.eq(0).is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes  = [];\r\n        let attributes2 = [];\r\n        let datalist    = [];\r\n        let options     = this.getOptions();\r\n\r\n        this._isChangeState = ! options.showBtn\r\n            ? true\r\n            : ! this._value;\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if ( ! this._isChangeState) {\r\n            options.attr.disabled = '';\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.value = this._value ? '******' : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n        $.each(options.attr, function (name, value) {\r\n            if (['name', 'value'].indexOf(name) < 0) {\r\n                attributes2.push(name + '=\"' + value + '\"');\r\n            }\r\n        });\r\n\r\n        let lang = this._form.getLang();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value !== null ? this._value : '',\r\n            lang: lang,\r\n            btn_text: this._isChangeState ? lang.cancel : lang.change,\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                attr2: attributes2.length > 0 ? (' ' + attributes2.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n\r\n        return ejs.render(tpl['fields/passwordRepeat.html'], {\r\n            field: options,\r\n            value: this._value ? '******' : '',\r\n            hash: this._hash\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация событий\r\n     * @private\r\n     */\r\n    _initEvents: function () {\r\n\r\n        let that = this;\r\n\r\n        $('.content-' + this._hash + ' .btn-password-change').click(function (e) {\r\n            let textChange = $(this).data('change');\r\n            let textCancel = $(this).data('cancel');\r\n\r\n            if (that._isChangeState) {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').attr('disabled', 'disabled');\r\n                $(this).text(textChange);\r\n                that._isChangeState = false;\r\n\r\n            } else {\r\n                $('.content-' + that._hash + ' [type=\"password\"]').removeAttr('disabled');\r\n                $(this).text(textCancel);\r\n                that._isChangeState = true;\r\n            }\r\n        });\r\n    }\r\n};\n\ncoreuiForm$1.fields.file = {\r\n\r\n    _id: '',\r\n    _hash: '',\r\n    _form: null,\r\n    _index: 0,\r\n    _value: '',\r\n    _options: {\r\n        type: 'file',\r\n        name: null,\r\n        label: null,\r\n        labelWidth: null,\r\n        width: null,\r\n        outContent: null,\r\n        description: null,\r\n        errorText: null,\r\n        attach: null,\r\n        attr: {\r\n            class: 'form-control form-control-sm d-inline-block'\r\n        },\r\n        required: null,\r\n        invalidText: null,\r\n        validText: null,\r\n        readonly: null,\r\n        datalist: null,\r\n        show: true,\r\n        column: null\r\n    },\r\n\r\n\r\n    /**\r\n     * Инициализация\r\n     * @param {coreuiFormInstance} form\r\n     * @param {object}             options\r\n     * @param {int}                index Порядковый номер на форме\r\n     */\r\n    init: function (form, options, index) {\r\n\r\n        this._form    = form;\r\n        this._index   = index;\r\n        this._id      = form.getId() + \"-field-\" + (options.hasOwnProperty('name') ? options.name : index);\r\n        this._hash    = coreuiFormUtils.hashCode();\r\n        this._value   = coreuiFormUtils.getFieldValue(form, options);\r\n        this._options = coreuiFormUtils.mergeFieldOptions(form, this._options, options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение параметров\r\n     * @returns {object}\r\n     */\r\n    getOptions: function () {\r\n        return $.extend(true, {}, this._options);\r\n    },\r\n\r\n\r\n    /**\r\n     * Изменение режима поля только для чтения\r\n     * @param {bool} isReadonly\r\n     */\r\n    readonly: function (isReadonly) {\r\n\r\n        this._value            = this.getValue();\r\n        this._options.readonly = !! isReadonly;\r\n\r\n        $('.content-' + this._hash).html(\r\n            this.renderContent()\r\n        );\r\n    },\r\n\r\n\r\n    /**\r\n     * Скрытие поля\r\n     * @param {int} duration\r\n     */\r\n    hide: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).hide(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Показ поля\r\n     * @param {int} duration\r\n     */\r\n    show: function (duration) {\r\n\r\n        $('#coreui-form-' + this._id).show(duration);\r\n    },\r\n\r\n\r\n    /**\r\n     * Получение значения в поле\r\n     * @returns {File[]}\r\n     */\r\n    getValue: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._value\r\n            : $('.content-' + this._hash + ' input')[0].files;\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка значения в поле\r\n     * @param {File|File[]} value\r\n     */\r\n    setValue: function (value) {\r\n\r\n        if ( ! (value instanceof File) &&  ! (value instanceof FileList)) {\r\n            return;\r\n        }\r\n\r\n        this._value = value;\r\n\r\n\r\n        if (this._options.readonly) {\r\n            $('.content-' + this._hash).text('');\r\n        } else {\r\n            let container = new DataTransfer();\r\n\r\n            if (value instanceof File) {\r\n                container.items.add(value);\r\n\r\n            } else {\r\n                $.each(value, function (key, file) {\r\n                    if (value instanceof File) {\r\n                        container.items.add(file);\r\n                    }\r\n                });\r\n            }\r\n\r\n            $('.content-' + this._hash + ' input')[0].files = container.files;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Установка валидности поля\r\n     * @param {bool|null} isValid\r\n     * @param {text} text\r\n     */\r\n    validate: function (isValid, text) {\r\n\r\n        if (this._options.readonly) {\r\n            return;\r\n        }\r\n\r\n        let container = $('.content-' + this._hash);\r\n        let input     = $('input', container);\r\n\r\n        container.find('.valid-feedback').remove();\r\n        container.find('.invalid-feedback').remove();\r\n\r\n        if (isValid === null) {\r\n            input.removeClass('is-invalid');\r\n            input.removeClass('is-valid');\r\n\r\n        } else if (isValid) {\r\n            input.removeClass('is-invalid');\r\n            input.addClass('is-valid');\r\n\r\n            if (typeof text === 'undefined' && typeof this._options.validText === 'string') {\r\n                text = this._options.validText;\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"valid-feedback\">' + text + '</div>');\r\n            }\r\n        } else {\r\n            input.removeClass('is-valid');\r\n            input.addClass('is-invalid');\r\n\r\n            if (typeof text === 'undefined') {\r\n                if (typeof this._options.invalidText === 'string') {\r\n                    text = this._options.invalidText;\r\n\r\n                } else if ( ! text && this._options.required) {\r\n                    text = this._form.getLang().required_field;\r\n                }\r\n            }\r\n\r\n            if (typeof text === 'string') {\r\n                container.append('<div class=\"invalid-feedback\">' + text + '</div>');\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Проверка валидности поля\r\n     * @return {boolean|null}\r\n     */\r\n    isValid: function () {\r\n\r\n        let input = $('.content-' + this._hash + ' input');\r\n\r\n        if (input[0]) {\r\n            return input.is(':valid');\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование поля\r\n     * @returns {string}\r\n     */\r\n    render: function() {\r\n\r\n        let options      = this.getOptions();\r\n        let attachFields = coreuiFormUtils.getAttacheFields(this._form, options);\r\n\r\n        return ejs.render(tpl['form-field-label.html'], {\r\n            id: this._id,\r\n            form: this._form,\r\n            hash: this._hash,\r\n            field: options,\r\n            content: this.renderContent(),\r\n            attachFields: attachFields\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Формирование контента поля\r\n     * @return {*}\r\n     */\r\n    renderContent: function () {\r\n\r\n        return this._options.readonly\r\n            ? this._renderContentReadonly()\r\n            : this._renderContent();\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContent: function () {\r\n\r\n        let attributes   = [];\r\n        let datalist     = [];\r\n        let options      = this.getOptions();\r\n        let datalistId   = coreuiFormUtils.hashCode();\r\n\r\n        if ( ! options.hasOwnProperty('attr') ||\r\n            typeof options.attr !== 'object' ||\r\n            options.attr === null ||\r\n            Array.isArray(options.attr)\r\n        ) {\r\n            options.attr = {};\r\n        }\r\n\r\n        if (options.name) {\r\n            options.attr.name = this._options.name;\r\n        }\r\n\r\n        options.attr.type  = options.type;\r\n        options.attr.value = this._value !== null ? this._value : '';\r\n\r\n        if (options.width) {\r\n            options.attr = coreuiFormUtils.mergeAttr(\r\n                { style: 'width:' + options.width },\r\n                options.attr\r\n            );\r\n        }\r\n\r\n        if (options.required) {\r\n            options.attr.required = 'required';\r\n        }\r\n\r\n\r\n        if (options.hasOwnProperty('datalist') &&\r\n            typeof options.datalist === 'object' &&\r\n            Array.isArray(options.datalist)\r\n        ) {\r\n            options.attr.list = datalistId;\r\n\r\n            $.each(options.datalist, function (key, itemAttributes) {\r\n                let datalistAttr = [];\r\n\r\n                $.each(itemAttributes, function (name, value) {\r\n                    datalistAttr.push(name + '=\"' + value + '\"');\r\n                });\r\n\r\n                datalist.push({\r\n                    attr: datalistAttr.length > 0 ? (' ' + datalistAttr.join(' ')) : ''\r\n                });\r\n            });\r\n        }\r\n\r\n        $.each(options.attr, function (name, value) {\r\n            attributes.push(name + '=\"' + value + '\"');\r\n        });\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            datalistId: datalistId,\r\n            value: this._value !== null ? this._value : '',\r\n            render: {\r\n                attr: attributes.length > 0 ? (' ' + attributes.join(' ')) : '',\r\n                datalist: datalist\r\n            },\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _renderContentReadonly: function () {\r\n\r\n        let options = this.getOptions();\r\n        let type    = 'text';\r\n        let value   = this._value;\r\n        let lang    = this._form.getLang();\r\n\r\n        if (options.hasOwnProperty('type') && typeof options.type === 'string') {\r\n            type = options.type;\r\n        }\r\n\r\n        try {\r\n            switch (type) {\r\n                case 'date':           value = coreuiFormUtils.formatDate(value); break;\r\n                case 'datetime-local': value = coreuiFormUtils.formatDateTime(value); break;\r\n                case 'month':          value = coreuiFormUtils.formatDateMonth(value, lang); break;\r\n                case 'week':           value = coreuiFormUtils.formatDateWeek(value, lang); break;\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n            // ignore\r\n        }\r\n\r\n        return ejs.render(tpl['fields/input.html'], {\r\n            field: options,\r\n            value: value,\r\n            hash: this._hash\r\n        });\r\n    }\r\n};\n\nreturn coreuiForm$1;\n\n})));\n"]}